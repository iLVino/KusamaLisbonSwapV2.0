{
  "id": "778d10f2bd4cb05dcaecf94b8e5bee95",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/MockERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract MockERC20 {\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) {\n        name = _name;\n        symbol = _symbol;\n        totalSupply = _initialSupply;\n        balanceOf[msg.sender] = _initialSupply;\n        emit Transfer(address(0), msg.sender, _initialSupply);\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        require(balanceOf[msg.sender] >= value, \"Insufficient balance\");\n        balanceOf[msg.sender] -= value;\n        balanceOf[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(balanceOf[from] >= value, \"Insufficient balance\");\n        require(allowance[from][msg.sender] >= value, \"Insufficient allowance\");\n        balanceOf[from] -= value;\n        balanceOf[to] += value;\n        allowance[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n}"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        _mint(msg.sender, initialSupply);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function _update(address from, address to, uint256 amount)\n        internal\n        override\n        whenNotPaused\n    {\n        super._update(from, to, amount);\n    }\n}"
      },
      "contracts/UniswapV2Pair.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n}\n\ncontract UniswapV2Pair {\n    address public token0; // KSM\n    address public token1; // USDT\n    uint112 private reserve0;\n    uint112 private reserve1;\n\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    uint256 private constant MINIMUM_LIQUIDITY = 10**3;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n\n    constructor(address _token0, address _token1) {\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n    }\n\n    function mint(address to) public returns (uint256 liquidity) {\n        (uint112 _reserve0, uint112 _reserve1) = getReserves();\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\n        uint256 amount0 = balance0 - _reserve0;\n        uint256 amount1 = balance1 - _reserve1;\n\n        if (totalSupply == 0) {\n            uint256 product = amount0 * amount1;\n            uint256 z = product;\n            if (product > 3) {\n                uint256 x = product / 2 + 1;\n                while (x < z) {\n                    z = x;\n                    x = (product / x + x) / 2;\n                }\n            } else if (product != 0) {\n                z = 1;\n            }\n            liquidity = z - MINIMUM_LIQUIDITY;\n            balanceOf[address(0)] = MINIMUM_LIQUIDITY;\n        } else {\n            uint256 liquidity0 = (amount0 * totalSupply) / _reserve0;\n            uint256 liquidity1 = (amount1 * totalSupply) / _reserve1;\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\n        }\n        require(liquidity > 0, \"INSUFFICIENT_LIQUIDITY\");\n        balanceOf[to] += liquidity;\n        totalSupply += liquidity;\n\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        emit Mint(msg.sender, amount0, amount1);\n    }\n    event Swap(\n    address indexed sender,\n    uint256 amount0In,\n    uint256 amount1In,\n    uint256 amount0Out,\n    uint256 amount1Out,\n    address indexed to\n);\n\nfunction swap(uint256 amount0Out, uint256 amount1Out, address to) public {\n    require(amount0Out > 0 || amount1Out > 0, \"INSUFFICIENT_OUTPUT_AMOUNT\");\n    (uint112 _reserve0, uint112 _reserve1) = getReserves();\n    require(amount0Out < _reserve0 && amount1Out < _reserve1, \"INSUFFICIENT_LIQUIDITY\");\n\n    require(to != token0 && to != token1, \"INVALID_TO\");\n    if (amount0Out > 0) {\n        (bool success,) = token0.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out));\n        require(success, \"TRANSFER_FAILED_TOKEN0\");\n    }\n    if (amount1Out > 0) {\n        (bool success,) = token1.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out));\n        require(success, \"TRANSFER_FAILED_TOKEN1\");\n    }\n\n    uint256 balance0 = IERC20(token0).balanceOf(address(this));\n    uint256 balance1 = IERC20(token1).balanceOf(address(this));\n    uint256 amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n    uint256 amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n    require(amount0In > 0 || amount1In > 0, \"INSUFFICIENT_INPUT_AMOUNT\");\n\n    require(\n        (balance0 * 1000) * (balance1 * 1000) >= uint256(_reserve0) * uint256(_reserve1) * (1000**2),\n        \"K\"\n    );\n\n    reserve0 = uint112(balance0);\n    reserve1 = uint112(balance1);\n    emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n}\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "parameters": "z"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1211,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1343,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1342,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1342,
                1354,
                378,
                1210
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1341
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967269,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967271,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1341,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              515
            ],
            "IERC20Errors": [
              420
            ],
            "IERC721Errors": [
              468
            ]
          },
          "id": 516,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 381,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 390,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 395,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 396,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 400,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 409,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 414,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 419,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 516,
              "src": "280:1764:2",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 421,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 468,
              "linearizedBaseContracts": [
                468
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 426,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 431,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 440,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 445,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 450,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 457,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 462,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 467,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 516,
              "src": "2190:2092:2",
              "usedErrors": [
                426,
                431,
                440,
                445,
                450,
                457,
                462,
                467
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 469,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 515,
              "linearizedBaseContracts": [
                515
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 480,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 485,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 490,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 497,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 502,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 507,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 514,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 516,
              "src": "4430:2107:2",
              "usedErrors": [
                480,
                485,
                490,
                497,
                502,
                507,
                514
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1031,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 517,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 519,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1109,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 518,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 521,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1181,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 520,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 523,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1211,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 522,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 525,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 516,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 524,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 527,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1133:7:3"
                  },
                  "id": 528,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 529,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "1142:6:3"
                  },
                  "id": 530,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 531,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1180,
                    "src": "1150:14:3"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 533,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 420,
                    "src": "1166:12:3"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 537,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 543,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 542,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 558,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 559,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 1030,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1167
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 1030,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1173
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 581,
                        "id": 583,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 1030,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1179
                  ],
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 590,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 1030,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1057
                  ],
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 601,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 1030,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 611,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 613,
                          "indexExpression": {
                            "id": 612,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 610,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 604,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 1030,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 632,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 633,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 631,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 625,
                        "id": 638,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 640,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 1030,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 649,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 1030,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1095
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 680,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 669,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 672,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 921,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 666,
                        "id": 679,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 1030,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1107
                  ],
                  "body": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 712,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 695,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 701,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 692,
                        "id": 711,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 713,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 1030,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 723,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 736,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 729,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 735,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 745,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 744,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 750,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 756,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 753,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 1030,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                782
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 782,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 807,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 781,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 786,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 783,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 785,
                                "indexExpression": {
                                  "id": 784,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 787,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 788,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 797,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 796,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 791,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 763,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 792,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 782,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 767,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 790,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 806,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 798,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 800,
                                      "indexExpression": {
                                        "id": 799,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 801,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 802,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 805,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 808,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 780,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 776,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 777,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 779,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 827,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 824,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 819,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 815,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 816,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 818,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 831,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 833,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 830,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 1030,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 859,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 858,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 857,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 1030,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 892,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 891,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 885,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 884,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 890,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 899,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 1030,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 915,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 913,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 981,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 1030,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 933,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 946,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 940,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 945,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 962,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 961,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 955,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 954,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 960,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 963,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 964,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 967,
                            "indexExpression": {
                              "id": 965,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 968,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 971,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 973,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 924,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 974,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 975,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 972,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 977,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 1030,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          992
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 992,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1028,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 993,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 998,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 999,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1027,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 1026,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1005,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1006,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1015,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 1014,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1009,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 986,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1010,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1011,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1013,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1025,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1017,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1018,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 986,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1019,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1020,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1022,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1016,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        921,
                                        981
                                      ],
                                      "referencedDeclaration": 981,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1023,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1024,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1029,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 1030,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1031,
              "src": "1106:9768:3",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "105:10770:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ]
          },
          "id": 1109,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1033,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1108,
              "linearizedBaseContracts": [
                1108
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1042,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1051,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 1108,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 1108,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 1108,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 1108,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 1108,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 1108,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1109,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "106:2674:4"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ]
          },
          "id": 1155,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1110,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1031,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1111,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1211,
              "src": "186:51:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1113,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "194:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1116,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "483:7:5"
                  },
                  "id": 1117,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:5"
                },
                {
                  "baseName": {
                    "id": 1118,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "492:5:5"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:5"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1115,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:5",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1154,
              "linearizedBaseContracts": [
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "662:43:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1126,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "678:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "672:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:5",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "632:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:5"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:5"
                  },
                  "scope": 1154,
                  "src": "618:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1086:93:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1112:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1142,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "1121:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1135:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1140,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "1096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1149,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1166:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "1151:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1039:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:5"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:5"
                  },
                  "scope": 1154,
                  "src": "1021:158:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1155,
              "src": "448:733:5",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "124:1058:5"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1181,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1156,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1181,
              "sourceUnit": 1109,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1160,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "306:6:6"
                  },
                  "id": 1161,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1159,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1180,
              "linearizedBaseContracts": [
                1180,
                1108
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1162,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 1180,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1168,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 1180,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1174,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1179,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1179,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 1180,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1181,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "125:559:6"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ]
          },
          "id": 1211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1182,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1183,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1210,
              "linearizedBaseContracts": [
                1210
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1187,
                        "id": 1190,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 1192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 1210,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1196,
                        "id": 1199,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 1201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 1210,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1205,
                        "id": 1207,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 1210,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1211,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1319,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1212,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1214,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1319,
              "sourceUnit": 1211,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1213,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1216,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "645:7:8"
                  },
                  "id": 1217,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1215,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1318,
              "linearizedBaseContracts": [
                1318,
                1210
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1224,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1224,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1225,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1229,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1232,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1235,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1238,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 1241,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1243,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1246,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 1249,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1251,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1257,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1256,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 1318,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1264,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1270,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 1269,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1266,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1268,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1261,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 1318,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1276,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1283,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 1282,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1279,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1235,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1281,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 1318,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1291,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1296,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1295,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1289,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1288,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 1318,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1307,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1310,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1312,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1311,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1315,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1305,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1304,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1251,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 1318,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1319,
              "src": "615:2090:8",
              "usedErrors": [
                1232,
                1235
              ],
              "usedEvents": [
                1224,
                1229
              ]
            }
          ],
          "src": "102:2604:8"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1342
            ],
            "IERC165": [
              1354
            ]
          },
          "id": 1343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1343,
              "sourceUnit": 1355,
              "src": "140:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1321,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1354,
                    "src": "148:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1324,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1354,
                    "src": "688:7:9"
                  },
                  "id": 1325,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:9"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1323,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:9",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1342,
              "linearizedBaseContracts": [
                1342,
                1354
              ],
              "name": "ERC165",
              "nameLocation": "678:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1353
                  ],
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "845:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1333,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "862:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "882:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1334,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "877:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1354",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:9",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1332,
                        "id": 1339,
                        "nodeType": "Return",
                        "src": "855:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1326,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:9",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "790:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:9"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "839:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:9"
                  },
                  "scope": 1342,
                  "src": "763:146:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1343,
              "src": "660:251:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:9"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1354
            ]
          },
          "id": 1355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1345,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1354,
              "linearizedBaseContracts": [
                1354
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 1354,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1355,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        }
      },
      "contracts/MockERC20.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "contracts/MockERC20.sol",
          "exportedSymbols": {
            "MockERC20": [
              1563
            ]
          },
          "id": 1564,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "MockERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1563,
              "linearizedBaseContracts": [
                1563
              ],
              "name": "MockERC20",
              "nameLocation": "67:9:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "06fdde03",
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "97:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "83:18:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "83:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95d89b41",
                  "id": 1360,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "121:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "107:20:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1359,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "107:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "313ce567",
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "146:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "133:26:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "133:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "157:2:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 1365,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "180:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "165:26:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "165:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "232:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "197:44:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1368,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1366,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "205:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "197:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1367,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "216:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dd62ed3e",
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "302:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "247:64:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1374,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1370,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "255:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "247:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1373,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1371,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "274:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "266:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "285:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1383,
                  "name": "Transfer",
                  "nameLocation": "324:8:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "349:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "333:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "333:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "371:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "355:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "355:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "383:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "375:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "332:57:11"
                  },
                  "src": "318:72:11"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1391,
                  "name": "Approval",
                  "nameLocation": "401:8:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1385,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "426:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "410:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "410:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1387,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "449:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "433:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1386,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1389,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "466:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "458:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "409:63:11"
                  },
                  "src": "395:78:11"
                },
                {
                  "body": {
                    "id": 1429,
                    "nodeType": "Block",
                    "src": "559:204:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1400,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "569:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1401,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1393,
                            "src": "576:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "569:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1403,
                        "nodeType": "ExpressionStatement",
                        "src": "569:12:11"
                      },
                      {
                        "expression": {
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1404,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1360,
                            "src": "591:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1405,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "600:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "591:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1407,
                        "nodeType": "ExpressionStatement",
                        "src": "591:16:11"
                      },
                      {
                        "expression": {
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1408,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "617:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1409,
                            "name": "_initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "631:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "617:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1411,
                        "nodeType": "ExpressionStatement",
                        "src": "617:28:11"
                      },
                      {
                        "expression": {
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1412,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "655:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1415,
                            "indexExpression": {
                              "expression": {
                                "id": 1413,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "665:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "669:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "665:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "655:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1416,
                            "name": "_initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "679:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "655:38:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1418,
                        "nodeType": "ExpressionStatement",
                        "src": "655:38:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "725:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "717:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1420,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "717:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "717:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "733:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1426,
                              "name": "_initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "741:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1419,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "708:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "708:48:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1428,
                        "nodeType": "EmitStatement",
                        "src": "703:53:11"
                      }
                    ]
                  },
                  "id": 1430,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "505:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1430,
                        "src": "491:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "491:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1395,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "526:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1430,
                        "src": "512:21:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "512:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "_initialSupply",
                        "nameLocation": "543:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1430,
                        "src": "535:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "535:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "490:68:11"
                  },
                  "returnParameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "559:0:11"
                  },
                  "scope": 1563,
                  "src": "479:284:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1471,
                    "nodeType": "Block",
                    "src": "836:219:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1440,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "854:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1443,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1441,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "864:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "868:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "864:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "854:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1444,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "879:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "854:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "886:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 1439,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "846:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:63:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "846:63:11"
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1449,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "919:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1452,
                            "indexExpression": {
                              "expression": {
                                "id": 1450,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "929:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "933:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "929:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "919:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1453,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "944:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "919:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "919:30:11"
                      },
                      {
                        "expression": {
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1456,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "959:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1458,
                            "indexExpression": {
                              "id": 1457,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "969:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "959:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1459,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "976:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "959:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1461,
                        "nodeType": "ExpressionStatement",
                        "src": "959:22:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1463,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1005:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1009:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1005:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1465,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "1017:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1466,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "1021:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1462,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "996:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "996:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1468,
                        "nodeType": "EmitStatement",
                        "src": "991:36:11"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1044:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1438,
                        "id": 1470,
                        "nodeType": "Return",
                        "src": "1037:11:11"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1472,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "778:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "795:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "787:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1434,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "807:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "799:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "786:27:11"
                  },
                  "returnParameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "830:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "830:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "829:6:11"
                  },
                  "scope": 1563,
                  "src": "769:286:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1499,
                    "nodeType": "Block",
                    "src": "1132:127:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1481,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "1142:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1485,
                              "indexExpression": {
                                "expression": {
                                  "id": 1482,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1152:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1156:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1152:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1142:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1486,
                            "indexExpression": {
                              "id": 1484,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1164:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1142:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1487,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "1175:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1142:38:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1489,
                        "nodeType": "ExpressionStatement",
                        "src": "1142:38:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1491,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1204:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1208:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1204:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1493,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1216:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1494,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1476,
                              "src": "1225:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1490,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "1195:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1195:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1496,
                        "nodeType": "EmitStatement",
                        "src": "1190:41:11"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1248:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1480,
                        "id": 1498,
                        "nodeType": "Return",
                        "src": "1241:11:11"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1070:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1474,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1086:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "1078:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1103:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "1095:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1095:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1077:32:11"
                  },
                  "returnParameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "1126:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1126:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1125:6:11"
                  },
                  "scope": 1563,
                  "src": "1061:198:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1561,
                    "nodeType": "Block",
                    "src": "1350:328:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1512,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1369,
                                  "src": "1368:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1514,
                                "indexExpression": {
                                  "id": 1513,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1502,
                                  "src": "1378:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1368:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1515,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1506,
                                "src": "1387:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1368:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 1517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1394:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 1511,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1360:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1360:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1519,
                        "nodeType": "ExpressionStatement",
                        "src": "1360:57:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1521,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "1435:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1523,
                                  "indexExpression": {
                                    "id": 1522,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1502,
                                    "src": "1445:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1435:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1526,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1524,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1451:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1455:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1451:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1435:27:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1527,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1506,
                                "src": "1466:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1435:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                              "id": 1529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1473:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                                "typeString": "literal_string \"Insufficient allowance\""
                              },
                              "value": "Insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                                "typeString": "literal_string \"Insufficient allowance\""
                              }
                            ],
                            "id": 1520,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1427:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:71:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1531,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:71:11"
                      },
                      {
                        "expression": {
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1532,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "1508:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1534,
                            "indexExpression": {
                              "id": 1533,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "1518:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1508:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1535,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1527:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1508:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1537,
                        "nodeType": "ExpressionStatement",
                        "src": "1508:24:11"
                      },
                      {
                        "expression": {
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1538,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "1542:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1540,
                            "indexExpression": {
                              "id": 1539,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "1552:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1542:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1541,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1559:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1542:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1543,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:22:11"
                      },
                      {
                        "expression": {
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1544,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "1574:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1548,
                              "indexExpression": {
                                "id": 1545,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1502,
                                "src": "1584:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1574:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1549,
                            "indexExpression": {
                              "expression": {
                                "id": 1546,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1590:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1594:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1590:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1574:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1550,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1605:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1574:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1552,
                        "nodeType": "ExpressionStatement",
                        "src": "1574:36:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1554,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "1634:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1555,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "1640:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1556,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "1644:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1553,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "1625:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1625:25:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1558,
                        "nodeType": "EmitStatement",
                        "src": "1620:30:11"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1667:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1510,
                        "id": 1560,
                        "nodeType": "Return",
                        "src": "1660:11:11"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 1562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "1274:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1502,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1295:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1562,
                        "src": "1287:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1287:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1309:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1562,
                        "src": "1301:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1301:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1321:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1562,
                        "src": "1313:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1313:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1286:41:11"
                  },
                  "returnParameters": {
                    "id": 1510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1562,
                        "src": "1344:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1508,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1344:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1343:6:11"
                  },
                  "scope": 1563,
                  "src": "1265:413:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1564,
              "src": "58:1622:11",
              "usedErrors": [],
              "usedEvents": [
                1383,
                1391
              ]
            }
          ],
          "src": "32:1648:11"
        }
      },
      "contracts/MyToken.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ],
            "MyToken": [
              1679
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1680,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1565,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1566,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1680,
              "sourceUnit": 1031,
              "src": "58:55:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1567,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1680,
              "sourceUnit": 1155,
              "src": "114:74:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1568,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1680,
              "sourceUnit": 1319,
              "src": "189:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 1569,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1680,
              "sourceUnit": 296,
              "src": "242:58:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1570,
                    "name": "ERC20",
                    "nameLocations": [
                      "322:5:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "322:5:12"
                  },
                  "id": 1571,
                  "nodeType": "InheritanceSpecifier",
                  "src": "322:5:12"
                },
                {
                  "baseName": {
                    "id": 1572,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "329:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1154,
                    "src": "329:13:12"
                  },
                  "id": 1573,
                  "nodeType": "InheritanceSpecifier",
                  "src": "329:13:12"
                },
                {
                  "baseName": {
                    "id": 1574,
                    "name": "Pausable",
                    "nameLocations": [
                      "344:8:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1318,
                    "src": "344:8:12"
                  },
                  "id": 1575,
                  "nodeType": "InheritanceSpecifier",
                  "src": "344:8:12"
                },
                {
                  "baseName": {
                    "id": 1576,
                    "name": "AccessControl",
                    "nameLocations": [
                      "354:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "354:13:12"
                  },
                  "id": 1577,
                  "nodeType": "InheritanceSpecifier",
                  "src": "354:13:12"
                }
              ],
              "canonicalName": "MyToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1679,
              "linearizedBaseContracts": [
                1679,
                295,
                1342,
                1354,
                378,
                1318,
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "MyToken",
              "nameLocation": "311:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 1582,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "398:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "374:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1578,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 1579,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "412:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 1587,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "466:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "442:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1584,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "480:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1620,
                    "nodeType": "Block",
                    "src": "570:192:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1597,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "591:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1598,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "611:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "615:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "611:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1596,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "580:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1601,
                        "nodeType": "ExpressionStatement",
                        "src": "580:42:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1603,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1582,
                              "src": "643:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1604,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "656:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "660:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "656:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "632:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "632:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1609,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "688:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1610,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "701:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "705:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "701:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1608,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "677:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "677:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1615,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "733:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1617,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1589,
                              "src": "741:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1614,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "723:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "723:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1619,
                        "nodeType": "ExpressionStatement",
                        "src": "723:32:12"
                      }
                    ]
                  },
                  "id": 1621,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4d79546f6b656e",
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          "value": "MyToken"
                        },
                        {
                          "hexValue": "4d544b",
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "563:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          "value": "MTK"
                        }
                      ],
                      "id": 1594,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1591,
                        "name": "ERC20",
                        "nameLocations": [
                          "546:5:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "546:5:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "546:23:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1589,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "531:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "523:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:23:12"
                  },
                  "returnParameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "570:0:12"
                  },
                  "scope": 1679,
                  "src": "511:251:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1630,
                    "nodeType": "Block",
                    "src": "814:25:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1627,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "824:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "824:8:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "824:8:12"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1624,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "801:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1625,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1623,
                        "name": "onlyRole",
                        "nameLocations": [
                          "792:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "792:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "792:21:12"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "777:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1622,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "782:2:12"
                  },
                  "returnParameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:0:12"
                  },
                  "scope": 1679,
                  "src": "768:71:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "893:27:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1637,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "903:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "903:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1639,
                        "nodeType": "ExpressionStatement",
                        "src": "903:10:12"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1634,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "880:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1635,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1633,
                        "name": "onlyRole",
                        "nameLocations": [
                          "871:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "871:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "871:21:12"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "854:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "861:2:12"
                  },
                  "returnParameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "893:0:12"
                  },
                  "scope": 1679,
                  "src": "845:75:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1656,
                    "nodeType": "Block",
                    "src": "997:34:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1652,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1643,
                              "src": "1013:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1653,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1645,
                              "src": "1017:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1651,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "1007:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1007:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1655,
                        "nodeType": "ExpressionStatement",
                        "src": "1007:17:12"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1648,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "984:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1649,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1647,
                        "name": "onlyRole",
                        "nameLocations": [
                          "975:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "975:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "975:21:12"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "935:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1643,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "948:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "940:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1645,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "960:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "952:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:28:12"
                  },
                  "returnParameters": {
                    "id": 1650,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "997:0:12"
                  },
                  "scope": 1679,
                  "src": "926:105:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    837
                  ],
                  "body": {
                    "id": 1677,
                    "nodeType": "Block",
                    "src": "1156:48:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1672,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1659,
                              "src": "1180:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1673,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1661,
                              "src": "1186:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1674,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1663,
                              "src": "1190:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1669,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1166:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_MyToken_$1679_$",
                                "typeString": "type(contract super MyToken)"
                              }
                            },
                            "id": 1671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1172:7:12",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "1166:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1676,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:31:12"
                      }
                    ]
                  },
                  "id": 1678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1667,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1666,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1138:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "1138:13:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1138:13:12"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1046:7:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1665,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1121:8:12"
                  },
                  "parameters": {
                    "id": 1664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1659,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1062:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "1054:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1054:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1661,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1076:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "1068:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1663,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1088:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "1080:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1053:42:12"
                  },
                  "returnParameters": {
                    "id": 1668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1156:0:12"
                  },
                  "scope": 1679,
                  "src": "1037:167:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1680,
              "src": "302:904:12",
              "usedErrors": [
                305,
                308,
                390,
                395,
                400,
                409,
                414,
                419,
                1232,
                1235
              ],
              "usedEvents": [
                317,
                326,
                335,
                1042,
                1051,
                1224,
                1229
              ]
            }
          ],
          "src": "32:1174:12"
        }
      },
      "contracts/UniswapV2Pair.sol": {
        "id": 13,
        "ast": {
          "absolutePath": "contracts/UniswapV2Pair.sol",
          "exportedSymbols": {
            "IERC20": [
              1709
            ],
            "UniswapV2Pair": [
              2189
            ]
          },
          "id": 2190,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1681,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1709,
              "linearizedBaseContracts": [
                1709
              ],
              "name": "IERC20",
              "nameLocation": "68:6:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "70a08231",
                  "id": 1688,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "90:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1683,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "108:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1688,
                        "src": "100:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "100:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "99:17:13"
                  },
                  "returnParameters": {
                    "id": 1687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1688,
                        "src": "140:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "139:9:13"
                  },
                  "scope": 1709,
                  "src": "81:68:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1697,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "163:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "180:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "172:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "199:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "191:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "191:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:35:13"
                  },
                  "returnParameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1695,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "225:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1694,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "225:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "224:6:13"
                  },
                  "scope": 1709,
                  "src": "154:77:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1708,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "245:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "266:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1708,
                        "src": "258:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "258:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "282:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1708,
                        "src": "274:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "301:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1708,
                        "src": "293:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "293:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "257:51:13"
                  },
                  "returnParameters": {
                    "id": 1707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1706,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1708,
                        "src": "327:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1705,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "327:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "326:6:13"
                  },
                  "scope": 1709,
                  "src": "236:97:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2190,
              "src": "58:277:13",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "UniswapV2Pair",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2189,
              "linearizedBaseContracts": [
                2189
              ],
              "name": "UniswapV2Pair",
              "nameLocation": "346:13:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "0dfe1681",
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "381:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "366:21:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d21220a7",
                  "id": 1713,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "415:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "400:21:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "451:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "435:24:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1714,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "481:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "465:24:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 1719,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "511:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "496:26:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "563:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "528:44:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1722,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1720,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "536:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "528:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1721,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "547:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 1728,
                  "mutability": "constant",
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "603:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "578:50:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "623:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 1726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "627:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "623:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
                  "id": 1736,
                  "name": "Mint",
                  "nameLocation": "641:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1730,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1736,
                        "src": "646:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1732,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "678:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1736,
                        "src": "670:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1731,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1734,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "695:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1736,
                        "src": "687:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "645:58:13"
                  },
                  "src": "635:69:13"
                },
                {
                  "body": {
                    "id": 1751,
                    "nodeType": "Block",
                    "src": "756:59:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1743,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1711,
                            "src": "766:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1744,
                            "name": "_token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "775:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "766:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1746,
                        "nodeType": "ExpressionStatement",
                        "src": "766:16:13"
                      },
                      {
                        "expression": {
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1747,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "792:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1748,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "801:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "792:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1750,
                        "nodeType": "ExpressionStatement",
                        "src": "792:16:13"
                      }
                    ]
                  },
                  "id": 1752,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1738,
                        "mutability": "mutable",
                        "name": "_token0",
                        "nameLocation": "730:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1752,
                        "src": "722:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1740,
                        "mutability": "mutable",
                        "name": "_token1",
                        "nameLocation": "747:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1752,
                        "src": "739:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "721:34:13"
                  },
                  "returnParameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "756:0:13"
                  },
                  "scope": 2189,
                  "src": "710:105:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1767,
                    "nodeType": "Block",
                    "src": "903:67:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1759,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1755,
                            "src": "913:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1760,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "925:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "913:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1762,
                        "nodeType": "ExpressionStatement",
                        "src": "913:20:13"
                      },
                      {
                        "expression": {
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1763,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1757,
                            "src": "943:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1764,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1717,
                            "src": "955:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "943:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1766,
                        "nodeType": "ExpressionStatement",
                        "src": "943:20:13"
                      }
                    ]
                  },
                  "functionSelector": "0902f1ac",
                  "id": 1768,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "830:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1753,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "841:2:13"
                  },
                  "returnParameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1755,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "873:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "865:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1754,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "865:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "892:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "884:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "864:38:13"
                  },
                  "scope": 2189,
                  "src": "821:149:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1956,
                    "nodeType": "Block",
                    "src": "1037:1292:13",
                    "statements": [
                      {
                        "assignments": [
                          1776,
                          1778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1776,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "1056:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1048:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1775,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1048:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1778,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "1075:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1067:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1777,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1067:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1781,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1779,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "1088:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$",
                              "typeString": "function () view returns (uint112,uint112)"
                            }
                          },
                          "id": 1780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1088:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1047:54:13"
                      },
                      {
                        "assignments": [
                          1783
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1783,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "1119:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1111:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1782,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1111:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1793,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1790,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1163:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1155:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1788,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1155:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1155:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1785,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1711,
                                  "src": "1137:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1784,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "1130:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1130:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1709",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1145:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "1130:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1130:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1111:58:13"
                      },
                      {
                        "assignments": [
                          1795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1795,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "1187:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1179:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1794,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1179:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1805,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1802,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1231:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1223:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1800,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1223:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1223:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1797,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1713,
                                  "src": "1205:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1796,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "1198:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1198:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1709",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1213:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "1198:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1198:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1179:58:13"
                      },
                      {
                        "assignments": [
                          1807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1807,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "1255:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1247:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1806,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1247:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1811,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1808,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1783,
                            "src": "1265:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1809,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1776,
                            "src": "1276:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "1265:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1247:38:13"
                      },
                      {
                        "assignments": [
                          1813
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1813,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "1303:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1956,
                            "src": "1295:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1812,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1295:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1817,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1814,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1795,
                            "src": "1313:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1815,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1778,
                            "src": "1324:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "1313:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1295:38:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1818,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1719,
                            "src": "1348:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1363:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1348:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1916,
                          "nodeType": "Block",
                          "src": "1843:226:13",
                          "statements": [
                            {
                              "assignments": [
                                1890
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1890,
                                  "mutability": "mutable",
                                  "name": "liquidity0",
                                  "nameLocation": "1865:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1916,
                                  "src": "1857:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1889,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1857:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1897,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1893,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1891,
                                        "name": "amount0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1807,
                                        "src": "1879:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1892,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1719,
                                        "src": "1889:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1879:21:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1894,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1878:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1895,
                                  "name": "_reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1776,
                                  "src": "1904:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "1878:35:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1857:56:13"
                            },
                            {
                              "assignments": [
                                1899
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1899,
                                  "mutability": "mutable",
                                  "name": "liquidity1",
                                  "nameLocation": "1935:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1916,
                                  "src": "1927:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1898,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1927:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1906,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1902,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1900,
                                        "name": "amount1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1813,
                                        "src": "1949:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1901,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1719,
                                        "src": "1959:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1949:21:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1903,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1948:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1904,
                                  "name": "_reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1778,
                                  "src": "1974:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "1948:35:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1927:56:13"
                            },
                            {
                              "expression": {
                                "id": 1914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1907,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1773,
                                  "src": "1997:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1908,
                                      "name": "liquidity0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1890,
                                      "src": "2009:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "id": 1909,
                                      "name": "liquidity1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1899,
                                      "src": "2022:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2009:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 1912,
                                    "name": "liquidity1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1899,
                                    "src": "2048:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "2009:49:13",
                                  "trueExpression": {
                                    "id": 1911,
                                    "name": "liquidity0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1890,
                                    "src": "2035:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1997:61:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1915,
                              "nodeType": "ExpressionStatement",
                              "src": "1997:61:13"
                            }
                          ]
                        },
                        "id": 1917,
                        "nodeType": "IfStatement",
                        "src": "1344:725:13",
                        "trueBody": {
                          "id": 1888,
                          "nodeType": "Block",
                          "src": "1366:471:13",
                          "statements": [
                            {
                              "assignments": [
                                1822
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1822,
                                  "mutability": "mutable",
                                  "name": "product",
                                  "nameLocation": "1388:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1888,
                                  "src": "1380:15:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1821,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1380:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1826,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1823,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1807,
                                  "src": "1398:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1824,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1813,
                                  "src": "1408:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1398:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1380:35:13"
                            },
                            {
                              "assignments": [
                                1828
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1828,
                                  "mutability": "mutable",
                                  "name": "z",
                                  "nameLocation": "1437:1:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1888,
                                  "src": "1429:9:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1827,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1429:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1830,
                              "initialValue": {
                                "id": 1829,
                                "name": "product",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1822,
                                "src": "1441:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1429:19:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1831,
                                  "name": "product",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1822,
                                  "src": "1466:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 1832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1476:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "1466:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1863,
                                    "name": "product",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1822,
                                    "src": "1673:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1684:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1673:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1871,
                                "nodeType": "IfStatement",
                                "src": "1669:56:13",
                                "trueBody": {
                                  "id": 1870,
                                  "nodeType": "Block",
                                  "src": "1687:38:13",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1868,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1866,
                                          "name": "z",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1828,
                                          "src": "1705:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "31",
                                          "id": 1867,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1709:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1705:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1869,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1705:5:13"
                                    }
                                  ]
                                }
                              },
                              "id": 1872,
                              "nodeType": "IfStatement",
                              "src": "1462:263:13",
                              "trueBody": {
                                "id": 1862,
                                "nodeType": "Block",
                                "src": "1479:184:13",
                                "statements": [
                                  {
                                    "assignments": [
                                      1835
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1835,
                                        "mutability": "mutable",
                                        "name": "x",
                                        "nameLocation": "1505:1:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1862,
                                        "src": "1497:9:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 1834,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1497:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1841,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1838,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1836,
                                          "name": "product",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1822,
                                          "src": "1509:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1837,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1519:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "1509:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1839,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1523:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "1509:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1497:27:13"
                                  },
                                  {
                                    "body": {
                                      "id": 1860,
                                      "nodeType": "Block",
                                      "src": "1556:93:13",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1847,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1845,
                                              "name": "z",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1828,
                                              "src": "1578:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 1846,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1835,
                                              "src": "1582:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "1578:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1848,
                                          "nodeType": "ExpressionStatement",
                                          "src": "1578:5:13"
                                        },
                                        {
                                          "expression": {
                                            "id": 1858,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1849,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1835,
                                              "src": "1605:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1857,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1854,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1852,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1850,
                                                        "name": "product",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1822,
                                                        "src": "1610:7:13",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "/",
                                                      "rightExpression": {
                                                        "id": 1851,
                                                        "name": "x",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1835,
                                                        "src": "1620:1:13",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "1610:11:13",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                      "id": 1853,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1835,
                                                      "src": "1624:1:13",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "1610:15:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1855,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "1609:17:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "hexValue": "32",
                                                "id": 1856,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1629:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                              },
                                              "src": "1609:21:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "1605:25:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1859,
                                          "nodeType": "ExpressionStatement",
                                          "src": "1605:25:13"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1844,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1842,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1835,
                                        "src": "1549:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "id": 1843,
                                        "name": "z",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1828,
                                        "src": "1553:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1549:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1861,
                                    "nodeType": "WhileStatement",
                                    "src": "1542:107:13"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1873,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1773,
                                  "src": "1738:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1874,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1828,
                                    "src": "1750:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1875,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1728,
                                    "src": "1754:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1750:21:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1738:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1878,
                              "nodeType": "ExpressionStatement",
                              "src": "1738:33:13"
                            },
                            {
                              "expression": {
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1879,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1723,
                                    "src": "1785:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1884,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1882,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1803:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1881,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1795:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1880,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1795:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1883,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1795:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1785:21:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1885,
                                  "name": "MINIMUM_LIQUIDITY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1728,
                                  "src": "1809:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1785:41:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1887,
                              "nodeType": "ExpressionStatement",
                              "src": "1785:41:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1919,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1773,
                                "src": "2086:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2098:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2086:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e545f4c4951554944495459",
                              "id": 1922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2101:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
                                "typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
                              },
                              "value": "INSUFFICIENT_LIQUIDITY"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
                                "typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
                              }
                            ],
                            "id": 1918,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2078:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2078:48:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1924,
                        "nodeType": "ExpressionStatement",
                        "src": "2078:48:13"
                      },
                      {
                        "expression": {
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1925,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1723,
                              "src": "2136:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1927,
                            "indexExpression": {
                              "id": 1926,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1770,
                              "src": "2146:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2136:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1928,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "2153:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2136:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1930,
                        "nodeType": "ExpressionStatement",
                        "src": "2136:26:13"
                      },
                      {
                        "expression": {
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1931,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1719,
                            "src": "2172:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1932,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "2187:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2172:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1934,
                        "nodeType": "ExpressionStatement",
                        "src": "2172:24:13"
                      },
                      {
                        "expression": {
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1935,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "2207:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1938,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1783,
                                "src": "2226:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2218:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 1936,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "2218:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2218:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "2207:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1941,
                        "nodeType": "ExpressionStatement",
                        "src": "2207:28:13"
                      },
                      {
                        "expression": {
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1942,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1717,
                            "src": "2245:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1945,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1795,
                                "src": "2264:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2256:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 1943,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "2256:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2256:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "2245:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1948,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:28:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1950,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2293:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2297:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2293:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1952,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1807,
                              "src": "2305:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1953,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1813,
                              "src": "2314:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1949,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1736,
                            "src": "2288:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2288:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1955,
                        "nodeType": "EmitStatement",
                        "src": "2283:39:13"
                      }
                    ]
                  },
                  "functionSelector": "6a627842",
                  "id": 1957,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "985:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1770,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "998:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1957,
                        "src": "990:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "990:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "989:12:13"
                  },
                  "returnParameters": {
                    "id": 1774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1773,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "1026:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1957,
                        "src": "1018:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:19:13"
                  },
                  "scope": 2189,
                  "src": "976:1353:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
                  "id": 1971,
                  "name": "Swap",
                  "nameLocation": "2340:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1959,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2366:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2350:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1961,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "2386:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2378:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2378:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1963,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "2409:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2401:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2401:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1965,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2432:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2424:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2424:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1967,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2456:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2448:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2448:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1969,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2488:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2472:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2472:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2344:148:13"
                  },
                  "src": "2334:159:13"
                },
                {
                  "body": {
                    "id": 2187,
                    "nodeType": "Block",
                    "src": "2568:1351:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1981,
                                  "name": "amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1973,
                                  "src": "2582:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2595:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2582:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1984,
                                  "name": "amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1975,
                                  "src": "2600:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2613:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2600:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2582:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
                              "id": 1988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2616:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
                                "typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
                              },
                              "value": "INSUFFICIENT_OUTPUT_AMOUNT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
                                "typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
                              }
                            ],
                            "id": 1980,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2574:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2574:71:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1990,
                        "nodeType": "ExpressionStatement",
                        "src": "2574:71:13"
                      },
                      {
                        "assignments": [
                          1992,
                          1994
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1992,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "2660:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "2652:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1991,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "2652:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1994,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "2679:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "2671:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1993,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "2671:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1997,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1995,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "2692:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$",
                              "typeString": "function () view returns (uint112,uint112)"
                            }
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2692:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2651:54:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1999,
                                  "name": "amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1973,
                                  "src": "2719:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2000,
                                  "name": "_reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1992,
                                  "src": "2732:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "2719:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2002,
                                  "name": "amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1975,
                                  "src": "2745:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2003,
                                  "name": "_reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "2758:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "2745:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2719:48:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e545f4c4951554944495459",
                              "id": 2006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2769:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
                                "typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
                              },
                              "value": "INSUFFICIENT_LIQUIDITY"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
                                "typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
                              }
                            ],
                            "id": 1998,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2711:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2711:83:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2008,
                        "nodeType": "ExpressionStatement",
                        "src": "2711:83:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2010,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1977,
                                  "src": "2809:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2011,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1711,
                                  "src": "2815:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2809:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2013,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1977,
                                  "src": "2825:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2014,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1713,
                                  "src": "2831:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2825:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2809:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f544f",
                              "id": 2017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2839:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_75e8b38167806e66c7ac03ef7d9ba732d816e42ebb914717b20fba66d02e9528",
                                "typeString": "literal_string \"INVALID_TO\""
                              },
                              "value": "INVALID_TO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_75e8b38167806e66c7ac03ef7d9ba732d816e42ebb914717b20fba66d02e9528",
                                "typeString": "literal_string \"INVALID_TO\""
                              }
                            ],
                            "id": 2009,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2801:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2801:51:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2019,
                        "nodeType": "ExpressionStatement",
                        "src": "2801:51:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2020,
                            "name": "amount0Out",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1973,
                            "src": "2862:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2875:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2862:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2043,
                        "nodeType": "IfStatement",
                        "src": "2858:184:13",
                        "trueBody": {
                          "id": 2042,
                          "nodeType": "Block",
                          "src": "2878:164:13",
                          "statements": [
                            {
                              "assignments": [
                                2024,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2024,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "2894:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2042,
                                  "src": "2889:12:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2023,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2889:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 2036,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 2029,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1709,
                                            "src": "2941:6:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2030,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "2948:8:13",
                                          "memberName": "transfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1697,
                                          "src": "2941:15:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function IERC20.transfer(address,uint256) returns (bool)"
                                          }
                                        },
                                        "id": 2031,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2957:8:13",
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "2941:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "id": 2032,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1977,
                                        "src": "2967:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2033,
                                        "name": "amount0Out",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1973,
                                        "src": "2971:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2027,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2918:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2028,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2922:18:13",
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "src": "2918:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2918:64:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2025,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1711,
                                    "src": "2906:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2913:4:13",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "2906:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2906:77:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2888:95:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2038,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2024,
                                    "src": "3001:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5452414e534645525f4641494c45445f544f4b454e30",
                                    "id": 2039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3010:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_73e6db6de61d4a800dc6ca9226d80c9fb609861fe24544127cfcbb5aaca17982",
                                      "typeString": "literal_string \"TRANSFER_FAILED_TOKEN0\""
                                    },
                                    "value": "TRANSFER_FAILED_TOKEN0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_73e6db6de61d4a800dc6ca9226d80c9fb609861fe24544127cfcbb5aaca17982",
                                      "typeString": "literal_string \"TRANSFER_FAILED_TOKEN0\""
                                    }
                                  ],
                                  "id": 2037,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "2993:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2993:42:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2041,
                              "nodeType": "ExpressionStatement",
                              "src": "2993:42:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2044,
                            "name": "amount1Out",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "3051:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3064:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3051:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2067,
                        "nodeType": "IfStatement",
                        "src": "3047:184:13",
                        "trueBody": {
                          "id": 2066,
                          "nodeType": "Block",
                          "src": "3067:164:13",
                          "statements": [
                            {
                              "assignments": [
                                2048,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2048,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "3083:7:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2066,
                                  "src": "3078:12:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2047,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3078:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 2060,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 2053,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1709,
                                            "src": "3130:6:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 2054,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3137:8:13",
                                          "memberName": "transfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1697,
                                          "src": "3130:15:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function IERC20.transfer(address,uint256) returns (bool)"
                                          }
                                        },
                                        "id": 2055,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3146:8:13",
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "3130:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "id": 2056,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1977,
                                        "src": "3156:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2057,
                                        "name": "amount1Out",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1975,
                                        "src": "3160:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2051,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "3107:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2052,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3111:18:13",
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "src": "3107:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3107:64:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2049,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1713,
                                    "src": "3095:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 2050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3102:4:13",
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "3095:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3095:77:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3077:95:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2062,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2048,
                                    "src": "3190:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5452414e534645525f4641494c45445f544f4b454e31",
                                    "id": 2063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3199:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cc0482a2bcaea7f72a596d360da3c0b23353d3d0405462b3510936118c6b8408",
                                      "typeString": "literal_string \"TRANSFER_FAILED_TOKEN1\""
                                    },
                                    "value": "TRANSFER_FAILED_TOKEN1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_cc0482a2bcaea7f72a596d360da3c0b23353d3d0405462b3510936118c6b8408",
                                      "typeString": "literal_string \"TRANSFER_FAILED_TOKEN1\""
                                    }
                                  ],
                                  "id": 2061,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "3182:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3182:42:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2065,
                              "nodeType": "ExpressionStatement",
                              "src": "3182:42:13"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2069
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2069,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "3245:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "3237:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2068,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3237:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2079,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2076,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3289:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 2075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2074,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2071,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1711,
                                  "src": "3263:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2070,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "3256:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3256:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1709",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "3256:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3256:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3237:58:13"
                      },
                      {
                        "assignments": [
                          2081
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2081,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "3309:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "3301:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2080,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3301:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2091,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2088,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3353:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$2189",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 2087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3345:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2086,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3345:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3345:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2083,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1713,
                                  "src": "3327:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2082,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "3320:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1709_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3320:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1709",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3335:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "3320:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3320:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3301:58:13"
                      },
                      {
                        "assignments": [
                          2093
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2093,
                            "mutability": "mutable",
                            "name": "amount0In",
                            "nameLocation": "3373:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "3365:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2092,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3365:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2107,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2094,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "3385:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2095,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "3396:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2096,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1973,
                                "src": "3408:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3396:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3385:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3459:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3385:75:13",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2099,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "3421:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2100,
                                    "name": "_reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1992,
                                    "src": "3433:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2101,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1973,
                                    "src": "3445:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3433:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2103,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3432:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3421:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3365:95:13"
                      },
                      {
                        "assignments": [
                          2109
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2109,
                            "mutability": "mutable",
                            "name": "amount1In",
                            "nameLocation": "3474:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2187,
                            "src": "3466:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2108,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3466:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2123,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2110,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2081,
                              "src": "3486:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2111,
                                "name": "_reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1994,
                                "src": "3497:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2112,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "3509:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3497:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3486:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3560:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3486:75:13",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2115,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2081,
                              "src": "3522:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2116,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1994,
                                    "src": "3534:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2117,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "3546:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3534:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2119,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3533:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3522:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3466:95:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2125,
                                  "name": "amount0In",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2093,
                                  "src": "3575:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3587:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3575:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2128,
                                  "name": "amount1In",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2109,
                                  "src": "3592:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3604:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3592:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3575:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e53554646494349454e545f494e5055545f414d4f554e54",
                              "id": 2132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3607:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9d0db5a8336d3a6beda7b5366eec56090619c00ecb7cb918d965197949f0508c",
                                "typeString": "literal_string \"INSUFFICIENT_INPUT_AMOUNT\""
                              },
                              "value": "INSUFFICIENT_INPUT_AMOUNT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9d0db5a8336d3a6beda7b5366eec56090619c00ecb7cb918d965197949f0508c",
                                "typeString": "literal_string \"INSUFFICIENT_INPUT_AMOUNT\""
                              }
                            ],
                            "id": 2124,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3567:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3567:68:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2134,
                        "nodeType": "ExpressionStatement",
                        "src": "3567:68:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2136,
                                        "name": "balance0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2069,
                                        "src": "3660:8:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "31303030",
                                        "id": 2137,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3671:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        },
                                        "value": "1000"
                                      },
                                      "src": "3660:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2139,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3659:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2142,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2140,
                                        "name": "balance1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2081,
                                        "src": "3680:8:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "31303030",
                                        "id": 2141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3691:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        },
                                        "value": "1000"
                                      },
                                      "src": "3680:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2143,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3679:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3659:37:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 2147,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "3708:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      ],
                                      "id": 2146,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3700:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2145,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3700:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3700:18:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 2151,
                                        "name": "_reserve1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1994,
                                        "src": "3729:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      ],
                                      "id": 2150,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3721:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2149,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3721:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2152,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3721:18:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3700:39:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      },
                                      "id": 2156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "31303030",
                                        "id": 2154,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3743:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        },
                                        "value": "1000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 2155,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3749:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "3743:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                      }
                                    }
                                  ],
                                  "id": 2157,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3742:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                },
                                "src": "3700:51:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3659:92:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4b",
                              "id": 2160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3761:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91cb023ee03dcff3e185aa303e77c329b6b62e0a68a590039a476bc8cb48d055",
                                "typeString": "literal_string \"K\""
                              },
                              "value": "K"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91cb023ee03dcff3e185aa303e77c329b6b62e0a68a590039a476bc8cb48d055",
                                "typeString": "literal_string \"K\""
                              }
                            ],
                            "id": 2135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3642:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3642:128:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2162,
                        "nodeType": "ExpressionStatement",
                        "src": "3642:128:13"
                      },
                      {
                        "expression": {
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2163,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "3777:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2166,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2069,
                                "src": "3796:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3788:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2164,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "3788:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3788:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "3777:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2169,
                        "nodeType": "ExpressionStatement",
                        "src": "3777:28:13"
                      },
                      {
                        "expression": {
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2170,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1717,
                            "src": "3811:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2173,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2081,
                                "src": "3830:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3822:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2171,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "3822:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3822:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "3811:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2176,
                        "nodeType": "ExpressionStatement",
                        "src": "3811:28:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3855:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3859:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3855:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2180,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "3867:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2181,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2109,
                              "src": "3878:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2182,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1973,
                              "src": "3889:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2183,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1975,
                              "src": "3901:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2184,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1977,
                              "src": "3913:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2177,
                            "name": "Swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1971,
                            "src": "3850:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256,address)"
                            }
                          },
                          "id": 2185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3850:66:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2186,
                        "nodeType": "EmitStatement",
                        "src": "3845:71:13"
                      }
                    ]
                  },
                  "functionSelector": "6d9a640a",
                  "id": 2188,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "2504:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1973,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2517:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2188,
                        "src": "2509:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2509:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1975,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2537:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2188,
                        "src": "2529:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1974,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2529:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1977,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2557:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2188,
                        "src": "2549:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1976,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2549:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2508:52:13"
                  },
                  "returnParameters": {
                    "id": 1979,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2568:0:13"
                  },
                  "scope": 2189,
                  "src": "2495:1424:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2190,
              "src": "337:3584:13",
              "usedErrors": [],
              "usedEvents": [
                1736,
                1971
              ]
            }
          ],
          "src": "32:3889:13"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/MockERC20.sol": {
        "MockERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockERC20.sol\":{\"keccak256\":\"0xd422592b16b8ff2c67d223001544ac4940b0dcc1cbba3e3363b9b1ec53e1f0ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8762d5b713bf636f44ec33dbe9188c31b0ac01af569edaa501f659b08556ccc\",\"dweb:/ipfs/QmW7ynPnsRJigXp3JQBEUM8wgN19qthNyrYz2LK5sqL3gd\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 136/65728 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6341\n// Code size = 21862 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20090]\n   117: jump @216 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x300c0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @216\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 9 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 56] = 0x20\n  1018: ra = 0x8\n  1021: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1024: u64 [sp + 0x38] = a1\n  1027: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1032: a1 = reverse s1\n  1034: u64 [sp + 0x78] = a1\n  1037: a1 = u64 [sp]\n  1039: a1 = reverse a1\n  1041: u64 [sp + 0x70] = a1\n  1044: a1 = u64 [sp + 0x8]\n  1047: a1 = reverse a1\n  1049: u64 [sp + 0x68] = a1\n  1052: a1 = u64 [sp + 0x10]\n  1055: a1 = reverse a1\n  1057: u64 [sp + 0x60] = a1\n  1060: a1 = u64 [sp + 0x18]\n  1063: a1 = reverse a1\n  1065: u64 [sp + 0x98] = a1\n  1069: a1 = u64 [sp + 0x20]\n  1072: a1 = reverse a1\n  1074: u64 [sp + 0x90] = a1\n  1078: a1 = u64 [sp + 0x28]\n  1081: a1 = reverse a1\n  1083: u64 [sp + 0x88] = a1\n  1087: a1 = u64 [sp + 0x30]\n  1090: a1 = reverse a1\n  1092: u64 [sp + 0x80] = a1\n  1096: a1 = u64 [sp + 0x40]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0xb8] = a1\n  1105: a1 = u64 [sp + 0x48]\n  1108: a1 = reverse a1\n  1110: u64 [sp + 0xb0] = a1\n  1114: a1 = u64 [sp + 0x50]\n  1117: a1 = reverse a1\n  1119: u64 [sp + 0xa8] = a1\n  1123: a1 = u64 [sp + 0x58]\n  1126: a1 = reverse a1\n  1128: u64 [sp + 0xa0] = a1\n  1132: i32 a2 = a0 + 0\n  1134: a3 = i32 [sp + 0x38]\n  1137: i32 a0 = sp + 0x60\n  1140: a1 = 0x3\n  1143: ecalli 4 // 'deposit_event'\n  1145: sp = s0 + 0xffffffffffffff20\n  1149: ra = u64 [sp + 0xd8]\n  1153: s0 = u64 [sp + 0xd0]\n  1157: s1 = u64 [sp + 0xc8]\n  1161: sp = sp + 0xe0\n  1165: ret\n      : @26 (gas: 2)\n  1167: i32 a2 = a0 >> 0x10\n  1170: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1173: a1 = a1 + a0\n  1176: i32 a1 = a1 + 0x1f\n  1179: a1 = a1 & 0xffffffffffffffe0\n  1182: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1188: a2 = 0x2008c\n  1193: a3 = i32 [0x2008c]\n  1198: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1201: u32 [0x2008c] = a1\n  1206: fallthrough\n      : @30 (gas: 4)\n  1207: a1 = 0x200a0\n  1212: i32 a0 = a0 + 0\n  1214: a0 = a0 + a1\n  1217: ret\n      : @31 (gas: 1)\n  1219: trap\n      : @32 (gas: 6)\n  1220: sp = sp + 0xfffffffffffffff0\n  1223: u64 [sp + 0x8] = ra\n  1226: u64 [sp] = s0\n  1228: s0 = a0 & 0x1\n  1231: ecalli 2 // 'call_data_size'\n  1233: fallthrough\n      : @33 (gas: 2)\n  1234: u32 [0x20088] = a0\n  1239: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1242: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 20)\n  1246: ra = 0xc\n  1249: sp = sp + 0xfffffffffffff808\n  1253: a0 = sp + 0x700\n  1257: u64 [a0 + 0xf0] = ra\n  1261: u64 [a0 + 0xe8] = s0\n  1265: u64 [a0 + 0xe0] = s1\n  1269: s0 = sp + 0x7f8\n  1273: sp = sp + 0xfffffffffffff800\n  1277: sp = sp + 0xfffffffffffffb58\n  1281: sp = sp & 0xffffffffffffffe0\n  1284: s1 = sp\n  1286: a2 = s1 + 0x1030\n  1290: u64 [a2 + 296] = 0\n  1294: u64 [a2 + 288] = 0\n  1298: u64 [a2 + 272] = 0x80\n  1304: a0 = 0x40\n  1307: a1 = s1 + 0x1140\n  1311: u64 [a2 + 280] = 0\n  1315: ra = 0xca\n  1319: jump @19\n      : @36 [@dyn 6] (gas: 15)\n  1322: sp = sp + 0xfffffffffffffe10\n  1326: u64 [sp + 0x1e8] = ra\n  1330: u64 [sp + 0x1e0] = s0\n  1334: u64 [sp + 0x1d8] = s1\n  1338: s0 = sp + 0x1f0\n  1342: sp = sp + 0xfffffffffffff870\n  1346: sp = sp & 0xffffffffffffffe0\n  1349: s1 = sp\n  1351: u64 [s1 + 1688] = 0\n  1355: u64 [s1 + 1680] = 0\n  1359: u64 [s1 + 1664] = 0x80\n  1365: a0 = 0x40\n  1368: a1 = s1 + 0x680\n  1372: u64 [s1 + 1672] = 0\n  1376: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1381: u64 [s1 + 1720] = 0\n  1385: u64 [s1 + 1712] = 0\n  1389: u64 [s1 + 1704] = 0\n  1393: u64 [s1 + 1696] = 0\n  1397: i32 a0 = s1 + 0x6a0\n  1401: ecalli 10 // 'value_transferred'\n  1403: fallthrough\n      : @38 (gas: 9)\n  1404: a4 = s1 + 0x600\n  1408: a0 = u64 [a4 + 0xb0]\n  1412: a1 = u64 [a4 + 0xb8]\n  1416: a2 = u64 [a4 + 0xa8]\n  1420: a3 = u64 [a4 + 0xa0]\n  1424: a1 = a1 | a2\n  1427: a0 = a0 | a3\n  1430: a0 = a0 | a1\n  1433: jump @40 if a0 == 0\n      : @39 (gas: 1)\n  1436: jump @185\n      : @40 (gas: 9)\n  1439: a2 = u32 [0x20088]\n  1444: u64 [s1 + 1624] = 0\n  1448: u64 [s1 + 1616] = 0\n  1452: u64 [s1 + 1608] = 0\n  1456: a0 = s1 + 0x660\n  1460: a1 = s1 + 0x640\n  1464: u64 [s1 + 0x130] = a2\n  1468: u64 [s1 + 0x640] = a2\n  1472: ra = 16, jump @596\n      : @41 [@dyn 8] (gas: 18)\n  1477: a4 = s1 + 0x600\n  1481: a3 = u64 [a4 + 0x78]\n  1484: a2 = u64 [a4 + 0x70]\n  1487: a0 = u64 [a4 + 0x68]\n  1490: a1 = u64 [a4 + 0x60]\n  1493: a4 = s1 + 0x100\n  1497: u64 [a4 + 0x28] = a0\n  1500: u64 [a4 + 0x18] = a3\n  1503: a0 = a0 | a3\n  1506: u64 [a4 + 0x38] = a1\n  1509: a1 = a1 | a2\n  1512: a1 = a1 | a0\n  1515: a1 = a1 >> 0x20\n  1518: u64 [a4 + 0x20] = a2\n  1521: a0 = a0 | a2\n  1524: a0 = a0 << 0x20\n  1527: a0 = a0 | a1\n  1530: jump @43 if a0 == 0\n      : @42 (gas: 1)\n  1533: jump @184\n      : @43 (gas: 3)\n  1536: a0 = u64 [s1 + 0x138]\n  1540: a1 = u64 [s1 + 0x130]\n  1544: ra = 18, jump @26\n      : @44 [@dyn 9] (gas: 5)\n  1549: i32 a0 = a0 + 0\n  1551: a1 = i32 [s1 + 0x130]\n  1555: a2 = 0\n  1557: ecalli 0 // 'call_data_copy'\n  1558: fallthrough\n      : @45 (gas: 2)\n  1559: a1 = u64 [s1 + 0x130]\n  1563: jump @47 if a1 >u 95\n      : @46 (gas: 1)\n  1567: jump @186\n      : @47 (gas: 3)\n  1570: a0 = s1 + 0x620\n  1574: a1 = u64 [s1 + 0x138]\n  1578: ra = 20, jump @17\n      : @48 [@dyn 10] (gas: 8)\n  1583: a0 = u64 [s1 + 0x638]\n  1587: t0 = u64 [s1 + 0x630]\n  1591: a4 = u64 [s1 + 0x628]\n  1595: u64 [s1 + 0x110] = a0\n  1599: a2 = t0 | a0\n  1602: a3 = a4 <u 0x1\n  1605: a3 = 0 if a2 != 0\n  1607: jump @50 if a3 != 0\n      : @49 (gas: 1)\n  1610: jump @187\n      : @50 (gas: 50)\n  1613: a3 = u64 [s1 + 0x620]\n  1617: t1 = u64 [s1 + 0x138]\n  1621: t2 = u64 [s1 + 0x130]\n  1625: t2 = t2 + t1\n  1628: a1 = t2 <u t1\n  1631: t1 = t1 + a3\n  1634: u64 [s1 + 0x130] = t1\n  1638: a3 = t1 <u a3\n  1641: a2 = u64 [s1 + 0x128]\n  1645: a0 = a4 + a2\n  1648: a5 = a2\n  1650: t1 = a0 + a3\n  1653: a2 = t1 ^ a4\n  1656: a4 = t1 <u a4\n  1659: a4 = a3 if a2 == 0\n  1662: a2 = a5\n  1664: a5 = a5 + a1\n  1667: a2 = a5 <u a2\n  1670: a2 = a1 if a1 == 0\n  1673: a1 = u64 [s1 + 0x120]\n  1677: a3 = t0 + a1\n  1680: ra = a3 <u t0\n  1683: a0 = u64 [s1 + 0x118]\n  1687: t0 = u64 [s1 + 0x110]\n  1691: t0 = t0 + a0\n  1694: ra = ra + t0\n  1697: t0 = a1 + a2\n  1700: a4 = a4 + a3\n  1703: a2 = a4 <u a3\n  1706: a3 = ra + a2\n  1709: a1 = t0 <u a1\n  1712: a1 = a1 + a0\n  1715: u64 [s1 + 0x110] = t2\n  1719: u64 [s1 + 0x5c0] = t2\n  1723: u64 [s1 + 0x108] = a5\n  1727: u64 [s1 + 0x5c8] = a5\n  1731: a0 = u64 [s1 + 0x130]\n  1735: a5 = s1 + 0x500\n  1739: u64 [a5 + 0xe0] = a0\n  1743: u64 [s1 + 0x130] = t0\n  1747: u64 [s1 + 0x5d0] = t0\n  1751: u64 [s1 + 0x100] = a1\n  1755: u64 [a5 + 0xd8] = a1\n  1759: u64 [s1 + 0x5e8] = t1\n  1763: u64 [a5 + 0xf0] = a4\n  1767: a0 = s1 + 0x600\n  1771: a1 = s1 + 0x5e0\n  1775: a2 = s1 + 0x5c0\n  1779: u64 [a5 + 0xf8] = a3\n  1783: ra = 22, jump @607\n      : @51 [@dyn 11] (gas: 11)\n  1788: a3 = s1 + 0x100\n  1792: a0 = u64 [a3 + 0x20]\n  1795: a1 = u64 [a3 + 0x18]\n  1798: a1 = a1 | a0\n  1801: a0 = 0xffffffe0\n  1811: a2 = u64 [a3 + 0x38]\n  1814: a0 = a2 <u a0\n  1817: a2 = u64 [a3 + 0x28]\n  1820: a0 = 0 if a2 != 0\n  1822: a0 = 0 if a1 != 0\n  1824: jump @53 if a0 != 0\n      : @52 (gas: 1)\n  1827: jump @184\n      : @53 (gas: 14)\n  1830: u64 [s1 + 0xf8] = a1\n  1834: a1 = s1 + 0x600\n  1838: a0 = u64 [a1 + 0x18]\n  1841: u64 [s1 + 0xc0] = a0\n  1845: a0 = u64 [a1 + 0x10]\n  1848: u64 [s1 + 0xb8] = a0\n  1852: a0 = u64 [a1 + 0x8]\n  1855: u64 [s1 + 0xc8] = a0\n  1859: a0 = u64 [a1]\n  1861: u64 [s1 + 0xd0] = a0\n  1865: a0 = u64 [s1 + 0x138]\n  1869: i32 a1 = a0 + 0x20\n  1872: a0 = s1 + 0x5a0\n  1876: ra = 24, jump @17\n      : @54 [@dyn 12] (gas: 7)\n  1881: t0 = u64 [s1 + 0x5b8]\n  1885: a0 = u64 [s1 + 0x5b0]\n  1889: a4 = u64 [s1 + 0x5a8]\n  1893: a2 = a0 | t0\n  1896: a3 = a4 <u 0x1\n  1899: a3 = 0 if a2 != 0\n  1901: jump @56 if a3 != 0\n      : @55 (gas: 1)\n  1904: jump @188\n      : @56 (gas: 35)\n  1907: a3 = u64 [s1 + 0x5a0]\n  1911: a2 = u64 [s1 + 0x138]\n  1915: a2 = a2 + a3\n  1918: a5 = a2 <u a3\n  1921: a3 = u64 [s1 + 0x128]\n  1925: a3 = a3 + a4\n  1928: a3 = a3 + a5\n  1931: a1 = a3 ^ a4\n  1934: a4 = a3 <u a4\n  1937: a4 = a5 if a1 == 0\n  1940: a1 = u64 [s1 + 0x118]\n  1944: t0 = t0 + a1\n  1947: a1 = u64 [s1 + 0x120]\n  1951: a1 = a1 + a0\n  1954: a0 = a1 <u a0\n  1957: a0 = a0 + t0\n  1960: a4 = a4 + a1\n  1963: a1 = a4 <u a1\n  1966: a5 = a0 + a1\n  1969: a0 = u64 [s1 + 0x110]\n  1973: u64 [s1 + 0x540] = a0\n  1977: a0 = u64 [s1 + 0x108]\n  1981: u64 [s1 + 0x548] = a0\n  1985: u64 [s1 + 0x560] = a2\n  1989: a0 = u64 [s1 + 0x130]\n  1993: u64 [s1 + 0x550] = a0\n  1997: a0 = u64 [s1 + 0x100]\n  2001: u64 [s1 + 0x558] = a0\n  2005: u64 [s1 + 0x568] = a3\n  2009: u64 [s1 + 0x570] = a4\n  2013: a0 = s1 + 0x580\n  2017: a1 = s1 + 0x560\n  2021: a2 = s1 + 0x540\n  2025: u64 [s1 + 0x578] = a5\n  2029: ra = 26, jump @607\n      : @57 [@dyn 13] (gas: 11)\n  2034: a0 = sp + 0xffffffffffffffe0\n  2037: a1 = a0 & 0xffffffffffffffe0\n  2040: sp = a1\n  2042: a0 = 0xffffffc0\n  2052: a2 = u64 [s1 + 0x138]\n  2056: a0 = a2 <u a0\n  2059: a2 = u64 [s1 + 0x128]\n  2063: a0 = 0 if a2 != 0\n  2065: a2 = u64 [s1 + 0xf8]\n  2069: a0 = 0 if a2 != 0\n  2071: jump @59 if a0 != 0\n      : @58 (gas: 1)\n  2074: jump @184\n      : @59 (gas: 13)\n  2077: a0 = u64 [s1 + 0x598]\n  2081: u64 [s1 + 0x90] = a0\n  2085: a0 = u64 [s1 + 0x590]\n  2089: u64 [s1 + 0x98] = a0\n  2093: a0 = u64 [s1 + 0x588]\n  2097: u64 [s1 + 0xa0] = a0\n  2101: a0 = u64 [s1 + 0x580]\n  2105: u64 [s1 + 0xa8] = a0\n  2109: u64 [s1 + 0x88] = a1\n  2113: a0 = u64 [s1 + 0x138]\n  2117: i32 a1 = a0 + 0x40\n  2120: a0 = s1 + 0x520\n  2124: ra = 28, jump @17\n      : @60 [@dyn 14] (gas: 20)\n  2129: a1 = u64 [s1 + 0x530]\n  2133: a0 = u64 [s1 + 0x538]\n  2137: a2 = u64 [s1 + 0x520]\n  2141: a3 = u64 [s1 + 0x528]\n  2145: u64 [s1 + 0x68] = a1\n  2148: a4 = u64 [s1 + 0x88]\n  2152: u64 [a4 + 0x10] = a1\n  2155: u64 [s1 + 0x70] = a0\n  2158: u64 [a4 + 0x18] = a0\n  2161: u64 [s1 + 0x60] = a2\n  2164: u64 [a4] = a2\n  2166: u64 [s1 + 0x58] = a3\n  2169: u64 [a4 + 0x8] = a3\n  2172: u64 [s1 + 1752] = 0\n  2176: u64 [s1 + 1744] = 0\n  2180: u64 [s1 + 1736] = 0\n  2184: u64 [s1 + 1728] = 0x2\n  2189: a0 = s1 + 0x500\n  2193: a1 = s1 + 0x6c0\n  2197: ra = 30, jump @21\n      : @61 [@dyn 15] (gas: 19)\n  2202: a4 = s1 + 0x500\n  2206: a0 = u64 [a4]\n  2208: a1 = u64 [a4 + 0x8]\n  2211: a2 = u64 [a4 + 0x10]\n  2214: a3 = u64 [a4 + 0x18]\n  2217: a0 = a0 & 0xffffffffffffff00\n  2221: a0 = a0 | 0x12\n  2224: u64 [s1 + 1784] = 0\n  2228: u64 [s1 + 1776] = 0\n  2232: u64 [s1 + 1768] = 0\n  2236: u64 [s1 + 1760] = 0x2\n  2241: a4 = s1 + 0x700\n  2245: u64 [a4 + 0x18] = a3\n  2248: u64 [a4 + 0x10] = a2\n  2251: u64 [a4 + 0x8] = a1\n  2254: u64 [a4] = a0\n  2256: a0 = s1 + 0x6e0\n  2260: a1 = s1 + 0x700\n  2264: ra = 32, jump @22\n      : @62 [@dyn 16] (gas: 12)\n  2269: a1 = u64 [s1 + 0xd0]\n  2273: a4 = u64 [s1 + 0xb8]\n  2277: a0 = a1 | a4\n  2280: a2 = u64 [s1 + 0xc8]\n  2284: a3 = u64 [s1 + 0xc0]\n  2288: a2 = a2 | a3\n  2291: a0 = a0 | a2\n  2294: a0 = a0 >> 0x20\n  2297: a2 = a2 | a4\n  2300: a2 = a2 << 0x20\n  2303: a0 = a0 | a2\n  2306: jump @64 if a0 == 0\n      : @63 (gas: 1)\n  2309: jump @184\n      : @64 (gas: 2)\n  2312: a0 = s1 + 0x4e0\n  2316: ra = 34, jump @17\n      : @65 [@dyn 17] (gas: 17)\n  2321: a0 = s1 + 0x400\n  2325: a3 = u64 [a0 + 0xf8]\n  2329: a1 = u64 [a0 + 0xf0]\n  2333: a2 = u64 [a0 + 0xe8]\n  2337: a0 = a3 >u 0\n  2339: a4 = a1 >u 0\n  2341: a4 = a0 if a3 != 0\n  2344: u64 [s1 + 0xf0] = a2\n  2348: a0 = a2 >u 0\n  2350: u64 [s1 + 0x78] = a1\n  2353: u64 [s1 + 0xe8] = a3\n  2357: a1 = a1 | a3\n  2360: u64 [s1 + 0x50] = a0\n  2363: u64 [s1 + 0xb0] = a4\n  2367: u64 [s1 + 0xe0] = a1\n  2371: a0 = a4 if a1 != 0\n  2374: jump @67 if a0 == 0\n      : @66 (gas: 1)\n  2377: jump @189\n      : @67 (gas: 9)\n  2380: a0 = u64 [s1 + 0x4e0]\n  2384: u64 [s1 + 0x80] = a0\n  2388: u64 [s1 + 1848] = 0\n  2392: u64 [s1 + 1840] = 0\n  2396: u64 [s1 + 1832] = 0\n  2400: u64 [s1 + 1824] = 0\n  2404: a0 = s1 + 0x4c0\n  2408: a1 = s1 + 0x720\n  2412: ra = 36, jump @21\n      : @68 [@dyn 18] (gas: 6)\n  2417: a4 = s1 + 0x400\n  2421: a0 = u64 [a4 + 0xd0]\n  2425: a1 = u64 [a4 + 0xc8]\n  2429: a2 = u64 [a4 + 0xc0]\n  2433: a3 = u64 [a4 + 0xd8]\n  2437: t0 = 38, jump @705\n      : @69 [@dyn 19] (gas: 12)\n  2442: t0 = a2 <u 0x1\n  2445: ra = a1 & 0x7f\n  2448: t2 = a5 & a0\n  2451: a4 = a5 & t1\n  2454: ra = a1 if a2 != 0\n  2457: a1 = ra <u 0x20\n  2460: a5 = a5 & a3\n  2463: a2 = a1\n  2465: a2 = 0 if a4 != 0\n  2467: a0 = t2 | a5\n  2470: a2 = 0 if a0 != 0\n  2472: jump @71 if t0 == a2\n      : @70 (gas: 1)\n  2475: jump @195\n      : @71 (gas: 1)\n  2478: t0 = 40, jump @712\n      : @72 [@dyn 20] (gas: 4)\n  2483: a0 = u64 [s1 + 0x80]\n  2487: a0 = a0 <u 0x20\n  2490: u64 [s1 + 0xd8] = a0\n  2494: jump @81 if a3 == 0\n      : @73 (gas: 11)\n  2498: u64 [s1 + 0x110] = a4\n  2502: u64 [s1 + 0x118] = ra\n  2506: u64 [s1 + 0x120] = a5\n  2510: u64 [s1 + 0x130] = t2\n  2514: u64 [s1 + 1208] = 0\n  2518: u64 [s1 + 1200] = 0\n  2522: u64 [s1 + 1192] = 0\n  2526: a1 = s1 + 0x4a0\n  2530: u64 [s1 + 1184] = 0\n  2534: a0 = 0\n  2536: ra = 42, jump @19\n      : @74 [@dyn 21] (gas: 2)\n  2541: a1 = i32 [0x2008c]\n  2546: jump @76 if a1 >u 31\n      : @75 (gas: 2)\n  2550: u32 [0x2008c] = 0x20\n  2556: fallthrough\n      : @76 (gas: 87)\n  2557: a0 = sp + 0xffffffffffffffe0\n  2560: a2 = a0 & 0xffffffffffffffe0\n  2563: u64 [s1 + 0x128] = a2\n  2567: sp = a2\n  2569: a0 = 0x200a0\n  2574: i32 a0 = a0 + 0\n  2576: i32 a2 = a2 + 0\n  2578: a1 = 0x20\n  2581: ecalli 6 // 'hash_keccak_256'\n  2583: a0 = u64 [s1 + 0x80]\n  2587: a1 = a0 + 0x1f\n  2590: a0 = a1 <u a0\n  2593: a5 = u64 [s1 + 0xf0]\n  2597: a2 = a5 + a0\n  2600: a3 = a2 <u a5\n  2603: a3 = a0 if a0 == 0\n  2606: a4 = u64 [s1 + 0x78]\n  2609: a3 = a3 + a4\n  2612: u64 [s1 + 0x108] = a3\n  2616: a3 = a3 << 0x3b\n  2619: a4 = a2 >> 0x5\n  2622: a4 = a4 | a3\n  2625: a0 = u64 [s1 + 0x128]\n  2629: t1 = u64 [a0 + 0x18]\n  2632: a2 = a2 << 0x3b\n  2635: a3 = u64 [a0 + 0x10]\n  2638: a1 = a1 >> 0x5\n  2641: a0 = a1 | a2\n  2644: t2 = reverse t1\n  2646: a2 = reverse a3\n  2648: a1 = u64 [s1 + 0xd8]\n  2652: a1 = 0 if a5 != 0\n  2654: a3 = u64 [s1 + 0xe0]\n  2658: a1 = 0 if a3 != 0\n  2660: a4 = 0 if a1 != 0\n  2662: a0 = 0 if a1 != 0\n  2664: t0 = t2 + a0\n  2667: a0 = t0 <u t2\n  2670: a5 = a2 + a0\n  2673: a4 = a4 + a5\n  2676: u64 [s1 + 0x138] = a4\n  2680: a5 = a4 ^ a2\n  2683: a3 = a4 <u a2\n  2686: a3 = a0 if a5 == 0\n  2689: u64 [s1 + 0x100] = a3\n  2693: a0 = u64 [s1 + 0x118]\n  2697: ra = a0 + 0x1f\n  2700: a4 = ra <u a0\n  2703: a3 = u64 [s1 + 0x110]\n  2707: a0 = a3 + a4\n  2710: a5 = a0 <u a3\n  2713: a5 = a4 if a4 == 0\n  2716: t1 = u64 [s1 + 0x130]\n  2720: t1 = t1 + a5\n  2723: a4 = t1 << 0x3b\n  2726: a3 = a0 >> 0x5\n  2729: a3 = a3 | a4\n  2732: a0 = a0 << 0x3b\n  2735: a4 = ra >> 0x5\n  2738: a0 = a0 | a4\n  2741: a0 = a0 + t2\n  2744: u64 [s1 + 0x118] = a0\n  2748: a0 = a0 <u t2\n  2751: t2 = t0\n  2753: a4 = a2 + a0\n  2756: a4 = a4 + a3\n  2759: a3 = a4 ^ a2\n  2762: u64 [s1 + 0x110] = a4\n  2766: a2 = a4 <u a2\n  2769: a2 = a0 if a3 == 0\n  2772: a4 = u64 [s1 + 0x108]\n  2776: a0 = u64 [s1 + 0x78]\n  2779: a0 = a4 <u a0\n  2782: a3 = u64 [s1 + 0xe8]\n  2786: a0 = a0 + a3\n  2789: a3 = a4 >> 0x5\n  2792: a4 = a0 << 0x3b\n  2795: a3 = a3 | a4\n  2798: a4 = u64 [s1 + 0x128]\n  2802: t0 = u64 [a4]\n  2804: a4 = u64 [a4 + 0x8]\n  2807: a0 = a0 >> 0x5\n  2810: a3 = 0 if a1 != 0\n  2812: a0 = 0 if a1 != 0\n  2814: a1 = reverse a4\n  2816: a4 = reverse t0\n  2818: t0 = 44, jump @727\n      : @77 [@dyn 22] (gas: 25)\n  2823: t0 = a0 + a3\n  2826: a0 = u64 [s1 + 0x130]\n  2830: a0 = t1 <u a0\n  2833: a3 = u64 [s1 + 0x120]\n  2837: a0 = a0 + a3\n  2840: a3 = t1 >> 0x5\n  2843: a5 = a0 << 0x3b\n  2846: a3 = a3 | a5\n  2849: a0 = a0 >> 0x5\n  2852: a0 = a0 + a4\n  2855: a5 = s1 + 0x100\n  2859: a4 = u64 [a5 + 0x38]\n  2862: a3 = a3 + a1\n  2865: a1 = a3 <u a1\n  2868: a0 = a0 + a1\n  2871: a2 = a2 + a3\n  2874: u64 [a5 + 0x8] = a2\n  2877: a1 = a2 <u a3\n  2880: a0 = a0 + a1\n  2883: u64 [a5] = a0\n  2885: a0 = sp + 0xffffffffffffffe0\n  2888: t1 = a0 & 0xffffffffffffffe0\n  2891: sp = t1\n  2893: u64 [s1 + 0xf8] = t1\n  2897: fallthrough\n      : @78 (gas: 20)\n  2898: a0 = u64 [s1 + 0x118]\n  2902: a0 = t2 <u a0\n  2905: a2 = u64 [s1 + 0x110]\n  2909: a1 = a4 ^ a2\n  2912: a2 = a4 <u a2\n  2915: a2 = a0 if a1 == 0\n  2918: a5 = u64 [s1 + 0x108]\n  2922: a0 = ra <u a5\n  2925: a3 = u64 [s1 + 0x100]\n  2929: a1 = t0 ^ a3\n  2932: a3 = t0 <u a3\n  2935: a3 = a0 if a1 == 0\n  2938: a0 = ra ^ a5\n  2941: a0 = a0 | a1\n  2944: a3 = a2 if a0 == 0\n  2947: u64 [t1] = t2\n  2949: u64 [t1 + 0x8] = a4\n  2952: u64 [t1 + 0x10] = ra\n  2955: u64 [t1 + 0x18] = t0\n  2958: jump @81 if a3 == 0\n      : @79 (gas: 11)\n  2961: u64 [s1 + 1880] = 0\n  2965: u64 [s1 + 1872] = 0\n  2969: u64 [s1 + 1864] = 0\n  2973: u64 [s1 + 1856] = 0\n  2977: a1 = s1 + 0x740\n  2981: a0 = t1\n  2983: u64 [s1 + 0x130] = t2\n  2987: u64 [s1 + 0x138] = a4\n  2991: u64 [s1 + 0x128] = t0\n  2995: u64 [s1 + 0x120] = ra\n  2999: ra = 46, jump @22\n      : @80 [@dyn 23] (gas: 15)\n  3004: t1 = u64 [s1 + 0xf8]\n  3008: t0 = u64 [s1 + 0x128]\n  3012: a4 = u64 [s1 + 0x138]\n  3016: t2 = u64 [s1 + 0x130]\n  3020: t2 = t2 + 0x1\n  3023: a0 = t2 <u 0x1\n  3026: a4 = a4 + a0\n  3029: a0 = t2 | a4\n  3032: a0 = a0 <u 0x1\n  3035: a1 = u64 [s1 + 0x120]\n  3039: a0 = a0 + a1\n  3042: a1 = a0 <u a1\n  3045: t0 = t0 + a1\n  3048: ra = a0\n  3050: jump @78\n      : @81 (gas: 21)\n  3053: a0 = u64 [s1 + 0xd8]\n  3057: a0 = a0 ^ 0x1\n  3060: a5 = u64 [s1 + 0xf0]\n  3064: a1 = u64 [s1 + 0x50]\n  3067: a0 = a1 if a5 != 0\n  3070: a1 = u64 [s1 + 0xb0]\n  3074: a2 = u64 [s1 + 0xe0]\n  3078: a0 = a1 if a2 != 0\n  3081: t2 = u64 [s1 + 0xe8]\n  3085: a2 = a5 | t2\n  3088: a1 = u64 [s1 + 0x78]\n  3091: t1 = a1 >> 0x3f\n  3094: t2 = t2 << 0x1\n  3097: t0 = a5 >> 0x3f\n  3100: a3 = a1 << 0x1\n  3103: u64 [s1 + 0x50] = a3\n  3106: a3 = u64 [s1 + 0x80]\n  3110: ra = a3 >> 0x3f\n  3113: a5 = a5 << 0x1\n  3116: a4 = a3 << 0x1\n  3119: jump @91 if a0 == 0\n      : @82 (gas: 16)\n  3123: u64 [s1 + 0x18] = a2\n  3126: u64 [s1 + 0x38] = a5\n  3129: u64 [s1 + 0x40] = t0\n  3132: u64 [s1 + 0x20] = ra\n  3135: u64 [s1 + 0x28] = t2\n  3138: u64 [s1 + 0x30] = t1\n  3141: u64 [s1 + 0x48] = a4\n  3144: a3 = a3 & 0xffffffffffffffe0\n  3147: u64 [s1 + 0xb0] = a3\n  3151: u64 [s1 + 1144] = 0\n  3155: u64 [s1 + 1136] = 0\n  3159: u64 [s1 + 1128] = 0\n  3163: a1 = s1 + 0x460\n  3167: u64 [s1 + 1120] = 0\n  3171: a0 = 0\n  3173: ra = 48, jump @19\n      : @83 [@dyn 24] (gas: 7)\n  3178: a0 = sp + 0xffffffffffffffe0\n  3181: a0 = a0 & 0xffffffffffffffe0\n  3184: u64 [s1 + 0x110] = a0\n  3188: sp = a0\n  3190: a1 = 0x20\n  3193: a0 = 0\n  3195: ra = 50, jump @26\n      : @84 [@dyn 25] (gas: 35)\n  3200: a1 = sp + 0xffffffffffffffe0\n  3203: a1 = a1 & 0xffffffffffffffe0\n  3206: u64 [s1 + 0x108] = a1\n  3210: sp = a1\n  3212: i32 a0 = a0 + 0\n  3214: i32 a2 = a1 + 0\n  3216: a1 = 0x20\n  3219: ecalli 6 // 'hash_keccak_256'\n  3221: u64 [s1 + 312] = 0x20\n  3226: a5 = 0\n  3228: u64 [s1 + 304] = 0\n  3232: u64 [s1 + 296] = 0\n  3236: a4 = 0\n  3238: ra = 0\n  3240: u64 [s1 + 280] = 0\n  3244: u64 [s1 + 288] = 0\n  3248: a3 = u64 [s1 + 0x108]\n  3252: a0 = u64 [a3 + 0x18]\n  3255: a1 = u64 [a3 + 0x10]\n  3258: a2 = u64 [a3 + 0x8]\n  3261: t0 = u64 [a3]\n  3263: t1 = reverse a0\n  3265: a1 = reverse a1\n  3267: a3 = reverse a2\n  3269: a2 = reverse t0\n  3271: t0 = a2\n  3273: a0 = u64 [s1 + 0x110]\n  3277: u64 [a0 + 0x18] = a2\n  3280: u64 [s1 + 0xf0] = a3\n  3284: u64 [a0 + 0x10] = a3\n  3287: u64 [s1 + 0x108] = a1\n  3291: u64 [a0 + 0x8] = a1\n  3294: a3 = t1\n  3296: u64 [a0] = t1\n  3298: fallthrough\n      : @85 (gas: 25)\n  3299: t2 = t0\n  3301: t1 = a3\n  3303: a0 = u64 [s1 + 0xb0]\n  3307: u64 [s1 + 0x100] = a4\n  3311: a0 = a4 <u a0\n  3314: a4 = a0 ^ 0x1\n  3317: u64 [s1 + 0xf8] = ra\n  3321: a4 = 0x1 if ra != 0\n  3324: a0 = u64 [s1 + 0x120]\n  3328: a2 = u64 [s1 + 0x118]\n  3332: a0 = a0 | a2\n  3335: a4 = 0x1 if a0 != 0\n  3338: a1 = u64 [s1 + 0xd0]\n  3342: a0 = u64 [s1 + 0x138]\n  3346: a1 = a1 + a0\n  3349: a3 = u64 [s1 + 0xc8]\n  3353: t0 = a5\n  3355: a3 = a3 + a5\n  3358: a2 = u64 [s1 + 0xb8]\n  3362: a0 = u64 [s1 + 0x130]\n  3366: a2 = a2 + a0\n  3369: a0 = u64 [s1 + 0xc0]\n  3373: a5 = u64 [s1 + 0x128]\n  3377: a0 = a0 + a5\n  3380: jump @93 if a4 != 0\n      : @86 (gas: 23)\n  3384: a4 = u64 [s1 + 0x138]\n  3388: a4 = a1 <u a4\n  3391: ra = a3 + a4\n  3394: a3 = t0\n  3396: t0 = ra ^ t0\n  3399: a5 = ra <u a3\n  3402: a5 = a4 if t0 == 0\n  3405: a5 = a5 + a2\n  3408: t0 = a5 <u a2\n  3411: a4 = u64 [s1 + 0x130]\n  3415: a2 = a2 <u a4\n  3418: a0 = a0 + a2\n  3421: a0 = a0 + t0\n  3424: a2 = a1 | a5\n  3427: a0 = ra | a0\n  3430: a2 = a2 | a0\n  3433: a2 = a2 >> 0x20\n  3436: a0 = a0 | a5\n  3439: a0 = a0 << 0x20\n  3442: a0 = a0 | a2\n  3445: u64 [s1 + 0xe8] = t1\n  3449: u64 [s1 + 0xe0] = t2\n  3453: jump @88 if a0 == 0\n      : @87 (gas: 1)\n  3456: jump @184\n      : @88 (gas: 3)\n  3459: a0 = s1 + 0x1c0\n  3463: u64 [s1 + 0xd8] = a3\n  3467: ra = 52, jump @17\n      : @89 [@dyn 26] (gas: 12)\n  3472: a0 = u64 [s1 + 0x1d8]\n  3476: a1 = u64 [s1 + 0x1d0]\n  3480: a2 = u64 [s1 + 0x1c8]\n  3484: a3 = u64 [s1 + 0x1c0]\n  3488: a4 = s1 + 0x700\n  3492: u64 [a4 + 0x78] = a0\n  3495: u64 [a4 + 0x70] = a1\n  3498: u64 [a4 + 0x68] = a2\n  3501: u64 [a4 + 0x60] = a3\n  3504: a1 = s1 + 0x760\n  3508: a0 = u64 [s1 + 0x110]\n  3512: ra = 54, jump @22\n      : @90 [@dyn 27] (gas: 56)\n  3517: ra = u64 [s1 + 0xe8]\n  3521: ra = ra + 0x1\n  3524: a0 = ra <u 0x1\n  3527: t0 = u64 [s1 + 0x108]\n  3531: t0 = t0 + a0\n  3534: a0 = ra | t0\n  3537: a0 = a0 <u 0x1\n  3540: a1 = u64 [s1 + 0xf0]\n  3544: t1 = a1 + a0\n  3547: a1 = t1 <u a1\n  3550: a0 = u64 [s1 + 0xe0]\n  3554: a0 = a0 + a1\n  3557: a1 = u64 [s1 + 0x138]\n  3561: a2 = a1 + 0x20\n  3564: u64 [s1 + 0xe8] = a2\n  3568: a3 = a2 <u a1\n  3571: a1 = u64 [s1 + 0xd8]\n  3575: a2 = a1 + a3\n  3578: u64 [s1 + 0xe0] = a2\n  3582: a4 = a2 <u a1\n  3585: a4 = a3 if a3 == 0\n  3588: a1 = u64 [s1 + 0x130]\n  3592: t2 = a1 + a4\n  3595: a4 = t2 <u a1\n  3598: a1 = u64 [s1 + 0x128]\n  3602: a1 = a1 + a4\n  3605: u64 [s1 + 0x128] = a1\n  3609: a1 = u64 [s1 + 0x100]\n  3613: a4 = a1 + 0x20\n  3616: a5 = a4 <u a1\n  3619: a2 = u64 [s1 + 0xf8]\n  3623: a1 = a2 + a5\n  3626: a2 = a1 <u a2\n  3629: a2 = a5 if a5 == 0\n  3632: a3 = u64 [s1 + 0x118]\n  3636: a2 = a2 + a3\n  3639: a5 = a2 <u a3\n  3642: a3 = u64 [s1 + 0x120]\n  3646: a3 = a3 + a5\n  3649: u64 [s1 + 0x120] = a3\n  3653: u64 [s1 + 0x108] = t0\n  3657: a5 = u64 [s1 + 0x110]\n  3661: u64 [a5 + 0x8] = t0\n  3664: a3 = ra\n  3666: u64 [a5] = ra\n  3668: u64 [a5 + 0x10] = t1\n  3671: t0 = a0\n  3673: u64 [a5 + 0x18] = a0\n  3676: u64 [s1 + 0xf0] = t1\n  3680: a0 = u64 [s1 + 0xe8]\n  3684: u64 [s1 + 0x138] = a0\n  3688: a5 = u64 [s1 + 0xe0]\n  3692: u64 [s1 + 0x130] = t2\n  3696: ra = a1\n  3698: u64 [s1 + 0x118] = a2\n  3702: jump @85\n      : @91 (gas: 4)\n  3705: a0 = a3 | a1\n  3708: a0 = a0 | a2\n  3711: a2 = u64 [s1 + 0xd0]\n  3715: jump @106 if a0 != 0\n      : @92 (gas: 6)\n  3719: u64 [s1 + 0x48] = a4\n  3722: u64 [s1 + 288] = 0\n  3726: u64 [s1 + 280] = 0\n  3730: u64 [s1 + 296] = 0\n  3734: u64 [s1 + 304] = 0\n  3738: jump @109\n      : @93 (gas: 11)\n  3741: ra = t0\n  3743: t1 = u64 [s1 + 0x80]\n  3747: a4 = u64 [s1 + 0xb0]\n  3751: a4 = a4 ^ t1\n  3754: a5 = u64 [s1 + 0x78]\n  3757: a4 = a4 | a5\n  3760: a5 = u64 [s1 + 0x18]\n  3763: a4 = a4 | a5\n  3766: a5 = u64 [s1 + 0x40]\n  3769: t0 = u64 [s1 + 0x38]\n  3772: jump @105 if a4 == 0\n      : @94 (gas: 20)\n  3776: a4 = u64 [s1 + 0x138]\n  3780: a4 = a1 <u a4\n  3783: a3 = a3 + a4\n  3786: t0 = a3 ^ ra\n  3789: a5 = a3 <u ra\n  3792: a5 = a4 if t0 == 0\n  3795: a5 = a5 + a2\n  3798: t0 = a5 <u a2\n  3801: a4 = u64 [s1 + 0x130]\n  3805: a2 = a2 <u a4\n  3808: a0 = a0 + a2\n  3811: a0 = a0 + t0\n  3814: a2 = a1 | a5\n  3817: a0 = a0 | a3\n  3820: a2 = a2 | a0\n  3823: a2 = a2 >> 0x20\n  3826: a0 = a0 | a5\n  3829: a0 = a0 << 0x20\n  3832: a0 = a0 | a2\n  3835: jump @184 if a0 != 0\n      : @95 (gas: 2)\n  3839: a0 = s1 + 0x440\n  3843: ra = 56, jump @17\n      : @96 [@dyn 28] (gas: 11)\n  3848: a1 = s1 + 0x400\n  3852: a0 = u64 [a1 + 0x58]\n  3855: u64 [s1 + 0x130] = a0\n  3859: a0 = u64 [a1 + 0x50]\n  3862: u64 [s1 + 0x128] = a0\n  3866: a0 = u64 [a1 + 0x48]\n  3869: u64 [s1 + 0x120] = a0\n  3873: a0 = u64 [a1 + 0x40]\n  3876: u64 [s1 + 0x118] = a0\n  3880: a0 = u64 [s1 + 0x80]\n  3884: t0 = 58, jump @721\n      : @97 [@dyn 29] (gas: 1)\n  3889: ra = 60, jump @734\n      : @98 [@dyn 30] (gas: 6)\n  3894: u64 [s1 + 0x108] = a0\n  3898: u64 [s1 + 0xf0] = a1\n  3902: a0 = 0xffffffffffffffff\n  3905: a1 = 0xffffffffffffffff\n  3908: a2 = u64 [s1 + 0x138]\n  3912: ra = 62, jump @729\n      : @99 [@dyn 31] (gas: 1)\n  3917: t0 = 64, jump @715\n      : @100 [@dyn 32] (gas: 1)\n  3922: ra = 66, jump @729\n      : @101 [@dyn 33] (gas: 1)\n  3927: t0 = 68, jump @700\n      : @102 [@dyn 34] (gas: 4)\n  3932: a0 = u64 [s1 + 0x118]\n  3936: a0 = a0 & ~a3\n  3939: a2 = u64 [s1 + 0x120]\n  3943: t0 = 70, jump @728\n      : @103 [@dyn 35] (gas: 8)\n  3948: a4 = s1 + 0x700\n  3952: u64 [a4 + 0x98] = a3\n  3956: u64 [a4 + 0x90] = a2\n  3960: u64 [a4 + 0x88] = a1\n  3964: u64 [a4 + 0x80] = a0\n  3968: a1 = s1 + 0x780\n  3972: a0 = u64 [s1 + 0x110]\n  3976: ra = 72, jump @22\n      : @104 [@dyn 36] (gas: 3)\n  3981: t0 = u64 [s1 + 0x38]\n  3984: a5 = u64 [s1 + 0x40]\n  3987: fallthrough\n      : @105 (gas: 22)\n  3988: a0 = u64 [s1 + 0x30]\n  3991: a1 = u64 [s1 + 0x28]\n  3994: a0 = a0 | a1\n  3997: a1 = u64 [s1 + 0x50]\n  4000: a1 = a1 | a5\n  4003: a2 = u64 [s1 + 0x20]\n  4006: a2 = t0 | a2\n  4009: a3 = u64 [s1 + 0x48]\n  4012: a3 = a3 + 0x1\n  4015: u64 [s1 + 1976] = 0\n  4019: u64 [s1 + 1968] = 0\n  4023: u64 [s1 + 1960] = 0\n  4027: u64 [s1 + 1952] = 0\n  4031: a4 = s1 + 0x700\n  4035: u64 [a4 + 0xc0] = a3\n  4039: u64 [a4 + 0xc8] = a2\n  4043: u64 [a4 + 0xd0] = a1\n  4047: u64 [a4 + 0xd8] = a0\n  4051: a0 = s1 + 0x7a0\n  4055: a1 = s1 + 0x7c0\n  4059: ra = 0x56\n  4062: jump @22\n      : @106 (gas: 9)\n  4065: a0 = u64 [s1 + 0xc0]\n  4069: a1 = u64 [s1 + 0xb8]\n  4073: a0 = a0 | a1\n  4076: a1 = 0xffffffe0\n  4086: a1 = a2 <u a1\n  4089: a3 = u64 [s1 + 0xc8]\n  4093: a1 = 0 if a3 != 0\n  4095: a1 = 0 if a0 != 0\n  4097: jump @184 if a1 == 0\n      : @107 (gas: 9)\n  4101: u64 [s1 + 0x48] = a4\n  4104: i32 a1 = a2 + 0x20\n  4107: a0 = s1 + 0x480\n  4111: u64 [s1 + 0x30] = t1\n  4114: u64 [s1 + 0x28] = t2\n  4117: u64 [s1 + 0x20] = ra\n  4120: u64 [s1 + 0x40] = t0\n  4123: u64 [s1 + 0x38] = a5\n  4126: ra = 74, jump @17\n      : @108 [@dyn 37] (gas: 17)\n  4131: a5 = u64 [s1 + 0x38]\n  4134: t0 = u64 [s1 + 0x40]\n  4137: ra = u64 [s1 + 0x20]\n  4140: t2 = u64 [s1 + 0x28]\n  4143: t1 = u64 [s1 + 0x30]\n  4146: a3 = u64 [s1 + 0x80]\n  4150: a1 = s1 + 0x400\n  4154: a0 = u64 [a1 + 0x98]\n  4158: a2 = s1 + 0x100\n  4162: u64 [a2 + 0x30] = a0\n  4165: a0 = u64 [a1 + 0x90]\n  4169: u64 [a2 + 0x28] = a0\n  4172: a0 = u64 [a1 + 0x88]\n  4176: u64 [a2 + 0x18] = a0\n  4179: a0 = u64 [a1 + 0x80]\n  4183: u64 [a2 + 0x20] = a0\n  4186: fallthrough\n      : @109 (gas: 13)\n  4187: a0 = u64 [s1 + 0x50]\n  4190: a0 = a0 | t0\n  4193: u64 [s1 + 0x110] = a0\n  4197: a0 = t2 | t1\n  4200: u64 [s1 + 0x108] = a0\n  4204: a0 = a5 | ra\n  4207: u64 [s1 + 0x100] = a0\n  4211: a1 = a3 << 0x3\n  4214: u64 [s1 + 0x138] = a1\n  4218: i32 a2 = 0x80 - a1\n  4222: a0 = 0xffffffffffffffff\n  4225: a1 = 0xffffffffffffffff\n  4228: ra = 76, jump @734\n      : @110 [@dyn 38] (gas: 7)\n  4233: u64 [s1 + 0xe0] = a0\n  4237: u64 [s1 + 0xf8] = a1\n  4241: a0 = u64 [s1 + 0x80]\n  4245: i32 a2 = a0 << 0x3\n  4248: a0 = 0xffffffffffffffff\n  4251: a1 = 0xffffffffffffffff\n  4254: ra = 78, jump @729\n      : @111 [@dyn 39] (gas: 10)\n  4259: u64 [s1 + 0xf0] = a0\n  4263: u64 [s1 + 0xe8] = a1\n  4267: a1 = u64 [s1 + 0xe0]\n  4271: a0 = a0 | a1\n  4274: u64 [s1 + 0xe0] = a0\n  4278: a0 = u64 [s1 + 0x138]\n  4282: i32 a2 = a0 + 0xffffffffffffff80\n  4285: a0 = 0xffffffffffffffff\n  4288: a1 = 0xffffffffffffffff\n  4291: ra = 80, jump @729\n      : @112 [@dyn 40] (gas: 7)\n  4296: a4 = u64 [s1 + 0x138]\n  4300: a2 = a4 <u 0x80\n  4304: a3 = u64 [s1 + 0xe0]\n  4308: a0 = a3 if a2 != 0\n  4311: a5 = u64 [s1 + 0xe8]\n  4315: a3 = u64 [s1 + 0xf8]\n  4319: t0 = 82, jump @722\n      : @113 [@dyn 41] (gas: 2)\n  4324: a4 = u64 [s1 + 0xf0]\n  4328: t0 = 84, jump @704\n      : @114 [@dyn 42] (gas: 25)\n  4333: a4 = u64 [s1 + 0x48]\n  4336: a0 = a0 | a4\n  4339: a5 = s1 + 0x100\n  4343: a4 = u64 [a5]\n  4345: a1 = a1 | a4\n  4348: a4 = u64 [a5 + 0x8]\n  4351: a3 = a3 | a4\n  4354: a4 = u64 [a5 + 0x10]\n  4357: a2 = a2 | a4\n  4360: a4 = s1 + 0x1000\n  4364: u64 [a4 + 0xfffffffffffff810] = a2\n  4368: a2 = s1 + 0x1000\n  4372: u64 [a2 + 0xfffffffffffff818] = a3\n  4376: a2 = s1 + 0x1000\n  4380: u64 [a2 + 0xfffffffffffff808] = a1\n  4384: a1 = s1 + 0x1000\n  4388: u64 [a1 + 0xfffffffffffff800] = a0\n  4392: u64 [s1 + 2040] = 0\n  4396: u64 [s1 + 2032] = 0\n  4400: u64 [s1 + 2024] = 0\n  4404: u64 [s1 + 2016] = 0\n  4408: a0 = s1 + 0x7e0\n  4412: a1 = s1 + 0x7ff\n  4416: a1 = a1 + 0x1\n  4419: ra = 86, jump @22\n      : @115 [@dyn 43] (gas: 12)\n  4424: a1 = u64 [s1 + 0xa8]\n  4428: a3 = u64 [s1 + 0x98]\n  4432: a0 = a1 | a3\n  4435: a2 = u64 [s1 + 0xa0]\n  4439: a4 = u64 [s1 + 0x90]\n  4443: a2 = a2 | a4\n  4446: a0 = a0 | a2\n  4449: a0 = a0 >> 0x20\n  4452: a2 = a2 | a3\n  4455: a2 = a2 << 0x20\n  4458: a0 = a0 | a2\n  4461: jump @184 if a0 != 0\n      : @116 (gas: 2)\n  4465: a0 = s1 + 0x420\n  4469: ra = 88, jump @17\n      : @117 [@dyn 44] (gas: 17)\n  4474: a0 = s1 + 0x400\n  4478: a3 = u64 [a0 + 0x38]\n  4481: a2 = u64 [a0 + 0x30]\n  4484: a1 = u64 [a0 + 0x28]\n  4487: a0 = a3 >u 0\n  4489: a4 = a2 >u 0\n  4491: a4 = a0 if a3 != 0\n  4494: u64 [s1 + 0xb8] = a1\n  4498: a0 = a1 >u 0\n  4500: u64 [s1 + 0xb0] = a2\n  4504: u64 [s1 + 0x80] = a3\n  4508: a2 = a2 | a3\n  4511: u64 [s1 + 0xd8] = a0\n  4515: u64 [s1 + 0xe0] = a4\n  4519: u64 [s1 + 0xf0] = a2\n  4523: a0 = a4 if a2 != 0\n  4526: jump @201 if a0 != 0\n      : @118 (gas: 14)\n  4530: a0 = u64 [s1 + 0x420]\n  4534: u64 [s1 + 0xc0] = a0\n  4538: a0 = s1 + 0x1000\n  4542: u64 [a0 + 4294965304] = 0\n  4546: a0 = s1 + 0x1000\n  4550: u64 [a0 + 4294965296] = 0\n  4554: a0 = s1 + 0x1000\n  4558: u64 [a0 + 4294965288] = 0\n  4562: a1 = s1 + 0x1000\n  4566: u64 [a1 + 4294965280] = 0x1\n  4571: a0 = s1 + 0x400\n  4575: a1 = s1 + 0x7ff\n  4579: a1 = a1 + 0x21\n  4582: ra = 90, jump @21\n      : @119 [@dyn 45] (gas: 6)\n  4587: a4 = s1 + 0x400\n  4591: a0 = u64 [a4 + 0x10]\n  4594: a1 = u64 [a4 + 0x8]\n  4597: a2 = u64 [a4]\n  4599: a3 = u64 [a4 + 0x18]\n  4602: t0 = 92, jump @705\n      : @120 [@dyn 46] (gas: 12)\n  4607: t0 = a2 <u 0x1\n  4610: ra = a1 & 0x7f\n  4613: t2 = a5 & a0\n  4616: a4 = a5 & t1\n  4619: ra = a1 if a2 != 0\n  4622: a1 = ra <u 0x20\n  4625: a5 = a5 & a3\n  4628: a2 = a1\n  4630: a2 = 0 if a4 != 0\n  4632: a0 = t2 | a5\n  4635: a2 = 0 if a0 != 0\n  4637: jump @207 if t0 != a2\n      : @121 (gas: 1)\n  4641: t0 = 94, jump @712\n      : @122 [@dyn 47] (gas: 4)\n  4646: a0 = u64 [s1 + 0xc0]\n  4650: a0 = a0 <u 0x20\n  4653: u64 [s1 + 0xe8] = a0\n  4657: jump @131 if a3 == 0\n      : @123 (gas: 11)\n  4661: u64 [s1 + 0x110] = a4\n  4665: u64 [s1 + 0x118] = ra\n  4669: u64 [s1 + 0x120] = a5\n  4673: u64 [s1 + 0x130] = t2\n  4677: u64 [s1 + 1016] = 0\n  4681: u64 [s1 + 1008] = 0\n  4685: u64 [s1 + 1000] = 0\n  4689: a1 = s1 + 0x3e0\n  4693: u64 [s1 + 992] = 0x1\n  4698: a0 = 0\n  4700: ra = 96, jump @19\n      : @124 [@dyn 48] (gas: 2)\n  4705: a1 = i32 [0x2008c]\n  4710: jump @126 if a1 >u 31\n      : @125 (gas: 2)\n  4714: u32 [0x2008c] = 0x20\n  4720: fallthrough\n      : @126 (gas: 87)\n  4721: a0 = sp + 0xffffffffffffffe0\n  4724: a2 = a0 & 0xffffffffffffffe0\n  4727: u64 [s1 + 0x128] = a2\n  4731: sp = a2\n  4733: a0 = 0x200a0\n  4738: i32 a0 = a0 + 0\n  4740: i32 a2 = a2 + 0\n  4742: a1 = 0x20\n  4745: ecalli 6 // 'hash_keccak_256'\n  4747: a0 = u64 [s1 + 0xc0]\n  4751: a1 = a0 + 0x1f\n  4754: a0 = a1 <u a0\n  4757: a5 = u64 [s1 + 0xb8]\n  4761: a2 = a5 + a0\n  4764: a3 = a2 <u a5\n  4767: a3 = a0 if a0 == 0\n  4770: a4 = u64 [s1 + 0xb0]\n  4774: a3 = a3 + a4\n  4777: u64 [s1 + 0x108] = a3\n  4781: a3 = a3 << 0x3b\n  4784: a4 = a2 >> 0x5\n  4787: a4 = a4 | a3\n  4790: a0 = u64 [s1 + 0x128]\n  4794: t0 = u64 [a0 + 0x18]\n  4797: a2 = a2 << 0x3b\n  4800: a0 = u64 [a0 + 0x10]\n  4803: a1 = a1 >> 0x5\n  4806: a2 = a2 | a1\n  4809: t2 = reverse t0\n  4811: a0 = reverse a0\n  4813: a1 = u64 [s1 + 0xe8]\n  4817: a1 = 0 if a5 != 0\n  4819: a3 = u64 [s1 + 0xf0]\n  4823: a1 = 0 if a3 != 0\n  4825: a4 = 0 if a1 != 0\n  4827: a2 = 0 if a1 != 0\n  4829: t0 = t2 + a2\n  4832: a2 = t0 <u t2\n  4835: a5 = a0 + a2\n  4838: a4 = a4 + a5\n  4841: u64 [s1 + 0x138] = a4\n  4845: a5 = a4 ^ a0\n  4848: a3 = a4 <u a0\n  4851: a3 = a2 if a5 == 0\n  4854: u64 [s1 + 0x100] = a3\n  4858: a2 = u64 [s1 + 0x118]\n  4862: ra = a2 + 0x1f\n  4865: a4 = ra <u a2\n  4868: a3 = u64 [s1 + 0x110]\n  4872: a2 = a3 + a4\n  4875: a5 = a2 <u a3\n  4878: a5 = a4 if a4 == 0\n  4881: t1 = u64 [s1 + 0x130]\n  4885: t1 = t1 + a5\n  4888: a4 = t1 << 0x3b\n  4891: a3 = a2 >> 0x5\n  4894: a3 = a3 | a4\n  4897: a2 = a2 << 0x3b\n  4900: a4 = ra >> 0x5\n  4903: a2 = a2 | a4\n  4906: a2 = a2 + t2\n  4909: u64 [s1 + 0x118] = a2\n  4913: a4 = a2 <u t2\n  4916: t2 = t0\n  4918: a2 = a0 + a4\n  4921: a2 = a2 + a3\n  4924: a3 = a2 ^ a0\n  4927: u64 [s1 + 0x110] = a2\n  4931: a2 = a2 <u a0\n  4934: a2 = a4 if a3 == 0\n  4937: a4 = u64 [s1 + 0x108]\n  4941: a0 = u64 [s1 + 0xb0]\n  4945: a0 = a4 <u a0\n  4948: a3 = u64 [s1 + 0x80]\n  4952: a0 = a0 + a3\n  4955: a3 = a4 >> 0x5\n  4958: a4 = a0 << 0x3b\n  4961: a3 = a3 | a4\n  4964: a4 = u64 [s1 + 0x128]\n  4968: t0 = u64 [a4]\n  4970: a4 = u64 [a4 + 0x8]\n  4973: a0 = a0 >> 0x5\n  4976: a3 = 0 if a1 != 0\n  4978: a0 = 0 if a1 != 0\n  4980: a1 = reverse a4\n  4982: a4 = reverse t0\n  4984: t0 = 98, jump @727\n      : @127 [@dyn 49] (gas: 25)\n  4989: t0 = a0 + a3\n  4992: a0 = u64 [s1 + 0x130]\n  4996: a0 = t1 <u a0\n  4999: a3 = u64 [s1 + 0x120]\n  5003: a0 = a0 + a3\n  5006: a3 = t1 >> 0x5\n  5009: a5 = a0 << 0x3b\n  5012: a3 = a3 | a5\n  5015: a0 = a0 >> 0x5\n  5018: a0 = a0 + a4\n  5021: a5 = s1 + 0x100\n  5025: a4 = u64 [a5 + 0x38]\n  5028: a3 = a3 + a1\n  5031: a1 = a3 <u a1\n  5034: a0 = a0 + a1\n  5037: a2 = a2 + a3\n  5040: u64 [a5 + 0x8] = a2\n  5043: a1 = a2 <u a3\n  5046: a0 = a0 + a1\n  5049: u64 [a5] = a0\n  5051: a0 = sp + 0xffffffffffffffe0\n  5054: t1 = a0 & 0xffffffffffffffe0\n  5057: sp = t1\n  5059: u64 [s1 + 0xf8] = t1\n  5063: fallthrough\n      : @128 (gas: 20)\n  5064: a0 = u64 [s1 + 0x118]\n  5068: a0 = t2 <u a0\n  5071: a2 = u64 [s1 + 0x110]\n  5075: a1 = a4 ^ a2\n  5078: a2 = a4 <u a2\n  5081: a2 = a0 if a1 == 0\n  5084: a5 = u64 [s1 + 0x108]\n  5088: a0 = ra <u a5\n  5091: a3 = u64 [s1 + 0x100]\n  5095: a1 = t0 ^ a3\n  5098: a3 = t0 <u a3\n  5101: a3 = a0 if a1 == 0\n  5104: a0 = ra ^ a5\n  5107: a0 = a0 | a1\n  5110: a3 = a2 if a0 == 0\n  5113: u64 [t1] = t2\n  5115: u64 [t1 + 0x8] = a4\n  5118: u64 [t1 + 0x10] = ra\n  5121: u64 [t1 + 0x18] = t0\n  5124: jump @131 if a3 == 0\n      : @129 (gas: 16)\n  5127: a0 = s1 + 0x1000\n  5131: u64 [a0 + 4294965336] = 0\n  5135: a0 = s1 + 0x1000\n  5139: u64 [a0 + 4294965328] = 0\n  5143: a0 = s1 + 0x1000\n  5147: u64 [a0 + 4294965320] = 0\n  5151: a0 = s1 + 0x1000\n  5155: u64 [a0 + 4294965312] = 0\n  5159: a1 = s1 + 0x7ff\n  5163: a1 = a1 + 0x41\n  5166: a0 = t1\n  5168: u64 [s1 + 0x130] = t2\n  5172: u64 [s1 + 0x138] = a4\n  5176: u64 [s1 + 0x128] = t0\n  5180: u64 [s1 + 0x120] = ra\n  5184: ra = 100, jump @22\n      : @130 [@dyn 50] (gas: 15)\n  5189: t1 = u64 [s1 + 0xf8]\n  5193: t0 = u64 [s1 + 0x128]\n  5197: a4 = u64 [s1 + 0x138]\n  5201: t2 = u64 [s1 + 0x130]\n  5205: t2 = t2 + 0x1\n  5208: a0 = t2 <u 0x1\n  5211: a4 = a4 + a0\n  5214: a0 = t2 | a4\n  5217: a0 = a0 <u 0x1\n  5220: a1 = u64 [s1 + 0x120]\n  5224: a0 = a0 + a1\n  5227: a1 = a0 <u a1\n  5230: t0 = t0 + a1\n  5233: ra = a0\n  5235: jump @128\n      : @131 (gas: 9)\n  5238: a0 = u64 [s1 + 0xe8]\n  5242: a0 = a0 ^ 0x1\n  5245: a5 = u64 [s1 + 0xb8]\n  5249: a1 = u64 [s1 + 0xd8]\n  5253: a0 = a1 if a5 != 0\n  5256: a1 = u64 [s1 + 0xe0]\n  5260: a2 = u64 [s1 + 0xf0]\n  5264: a0 = a1 if a2 != 0\n  5267: jump @141 if a0 == 0\n      : @132 (gas: 10)\n  5271: a0 = u64 [s1 + 0xc0]\n  5275: a0 = a0 & 0xffffffffffffffe0\n  5278: u64 [s1 + 0xc8] = a0\n  5282: u64 [s1 + 952] = 0\n  5286: u64 [s1 + 944] = 0\n  5290: u64 [s1 + 936] = 0\n  5294: a1 = s1 + 0x3a0\n  5298: u64 [s1 + 928] = 0x1\n  5303: a0 = 0\n  5305: ra = 102, jump @19\n      : @133 [@dyn 51] (gas: 7)\n  5310: a0 = sp + 0xffffffffffffffe0\n  5313: a0 = a0 & 0xffffffffffffffe0\n  5316: u64 [s1 + 0x120] = a0\n  5320: sp = a0\n  5322: a1 = 0x20\n  5325: a0 = 0\n  5327: ra = 104, jump @26\n      : @134 [@dyn 52] (gas: 35)\n  5332: a1 = sp + 0xffffffffffffffe0\n  5335: a1 = a1 & 0xffffffffffffffe0\n  5338: u64 [s1 + 0x118] = a1\n  5342: sp = a1\n  5344: i32 a0 = a0 + 0\n  5346: i32 a2 = a1 + 0\n  5348: a1 = 0x20\n  5351: ecalli 6 // 'hash_keccak_256'\n  5353: u64 [s1 + 304] = 0x20\n  5358: u64 [s1 + 296] = 0\n  5362: t1 = 0\n  5364: u64 [s1 + 312] = 0\n  5368: a4 = 0\n  5370: a5 = 0\n  5372: a2 = 0\n  5374: a3 = 0\n  5376: a0 = u64 [s1 + 0x118]\n  5380: t2 = u64 [a0 + 0x18]\n  5383: a1 = u64 [a0 + 0x10]\n  5386: ra = u64 [a0 + 0x8]\n  5389: t0 = u64 [a0]\n  5391: t2 = reverse t2\n  5393: a1 = reverse a1\n  5395: ra = reverse ra\n  5397: t0 = reverse t0\n  5399: u64 [s1 + 0x108] = t0\n  5403: a0 = u64 [s1 + 0x120]\n  5407: u64 [a0 + 0x18] = t0\n  5410: u64 [s1 + 0xe0] = ra\n  5414: u64 [a0 + 0x10] = ra\n  5417: u64 [s1 + 0x110] = a1\n  5421: u64 [a0 + 0x8] = a1\n  5424: t0 = t2\n  5426: u64 [a0] = t2\n  5428: fallthrough\n      : @135 (gas: 24)\n  5429: ra = t0\n  5431: a0 = u64 [s1 + 0xc8]\n  5435: u64 [s1 + 0xf0] = a4\n  5439: a0 = a4 <u a0\n  5442: a4 = a0 ^ 0x1\n  5445: u64 [s1 + 0xe8] = a5\n  5449: a4 = 0x1 if a5 != 0\n  5452: u64 [s1 + 0x118] = a3\n  5456: u64 [s1 + 0x100] = a2\n  5460: a0 = a2 | a3\n  5463: a4 = 0x1 if a0 != 0\n  5466: a0 = u64 [s1 + 0xa8]\n  5470: a1 = u64 [s1 + 0x130]\n  5474: a1 = a1 + a0\n  5477: a3 = u64 [s1 + 0xa0]\n  5481: t0 = u64 [s1 + 0x128]\n  5485: t0 = t0 + a3\n  5488: t2 = u64 [s1 + 0x98]\n  5492: u64 [s1 + 0xf8] = t1\n  5496: a2 = t2 + t1\n  5499: t1 = u64 [s1 + 0x90]\n  5503: a5 = u64 [s1 + 0x138]\n  5507: t1 = t1 + a5\n  5510: jump @143 if a4 != 0\n      : @136 (gas: 6)\n  5514: a0 = a1 <u a0\n  5517: a4 = t0 + a0\n  5520: t0 = a4 ^ a3\n  5523: a5 = a4 <u a3\n  5526: a5 = a0 if t0 == 0\n  5529: t0 = 106, jump @708\n      : @137 [@dyn 53] (gas: 2)\n  5534: u64 [s1 + 0xd8] = ra\n  5538: jump @184 if a0 != 0\n      : @138 (gas: 2)\n  5542: a0 = s1 + 0x260\n  5546: ra = 108, jump @17\n      : @139 [@dyn 54] (gas: 17)\n  5551: a4 = s1 + 0x200\n  5555: a0 = u64 [a4 + 0x78]\n  5558: a1 = u64 [a4 + 0x70]\n  5561: a2 = u64 [a4 + 0x68]\n  5564: a3 = u64 [a4 + 0x60]\n  5567: a4 = s1 + 0x1000\n  5571: u64 [a4 + 0xfffffffffffff878] = a0\n  5575: a0 = s1 + 0x1000\n  5579: u64 [a0 + 0xfffffffffffff870] = a1\n  5583: a0 = s1 + 0x1000\n  5587: u64 [a0 + 0xfffffffffffff868] = a2\n  5591: a0 = s1 + 0x1000\n  5595: u64 [a0 + 0xfffffffffffff860] = a3\n  5599: a1 = s1 + 0x7ff\n  5603: a1 = a1 + 0x61\n  5606: a0 = u64 [s1 + 0x120]\n  5610: ra = 110, jump @22\n      : @140 [@dyn 55] (gas: 57)\n  5615: a3 = u64 [s1 + 0xd8]\n  5619: a3 = a3 + 0x1\n  5622: a0 = a3 <u 0x1\n  5625: t0 = u64 [s1 + 0x110]\n  5629: t0 = t0 + a0\n  5632: a0 = a3 | t0\n  5635: a0 = a0 <u 0x1\n  5638: a1 = u64 [s1 + 0xe0]\n  5642: t1 = a1 + a0\n  5645: a1 = t1 <u a1\n  5648: a0 = u64 [s1 + 0x108]\n  5652: a0 = a0 + a1\n  5655: a1 = u64 [s1 + 0x130]\n  5659: a2 = a1 + 0x20\n  5662: u64 [s1 + 0xd8] = a2\n  5666: a1 = a2 <u a1\n  5669: a2 = u64 [s1 + 0x128]\n  5673: a4 = a2 + a1\n  5676: u64 [s1 + 0xd0] = a4\n  5680: a4 = a4 <u a2\n  5683: a4 = a1 if a1 == 0\n  5686: a1 = u64 [s1 + 0xf8]\n  5690: t2 = a1 + a4\n  5693: a4 = t2 <u a1\n  5696: a1 = u64 [s1 + 0x138]\n  5700: a1 = a1 + a4\n  5703: u64 [s1 + 0x138] = a1\n  5707: a1 = u64 [s1 + 0xf0]\n  5711: a4 = a1 + 0x20\n  5714: a5 = a4 <u a1\n  5717: a2 = u64 [s1 + 0xe8]\n  5721: a1 = a2 + a5\n  5724: a2 = a1 <u a2\n  5727: a2 = a5 if a5 == 0\n  5730: a5 = u64 [s1 + 0x100]\n  5734: a2 = a2 + a5\n  5737: a5 = a2 <u a5\n  5740: ra = u64 [s1 + 0x118]\n  5744: ra = ra + a5\n  5747: u64 [s1 + 0x110] = t0\n  5751: a5 = u64 [s1 + 0x120]\n  5755: u64 [a5 + 0x8] = t0\n  5758: t0 = a3\n  5760: u64 [a5] = a3\n  5762: a3 = t1\n  5764: u64 [a5 + 0x10] = a3\n  5767: u64 [s1 + 0x108] = a0\n  5771: u64 [a5 + 0x18] = a0\n  5774: u64 [s1 + 0xe0] = a3\n  5778: a0 = u64 [s1 + 0xd8]\n  5782: u64 [s1 + 0x130] = a0\n  5786: a3 = ra\n  5788: a0 = u64 [s1 + 0xd0]\n  5792: u64 [s1 + 0x128] = a0\n  5796: t1 = t2\n  5798: a5 = a1\n  5800: jump @135\n      : @141 (gas: 10)\n  5803: a4 = u64 [s1 + 0xc0]\n  5807: a2 = u64 [s1 + 0xb0]\n  5811: a0 = a4 | a2\n  5814: a3 = u64 [s1 + 0x80]\n  5818: a1 = a5 | a3\n  5821: a0 = a0 | a1\n  5824: t0 = u64 [s1 + 0xa8]\n  5828: t1 = u64 [s1 + 0xa0]\n  5832: a1 = u64 [s1 + 0x98]\n  5836: jump @157 if a0 != 0\n      : @142 (gas: 5)\n  5840: u64 [s1 + 288] = 0\n  5844: u64 [s1 + 280] = 0\n  5848: u64 [s1 + 296] = 0\n  5852: u64 [s1 + 304] = 0\n  5856: jump @160\n      : @143 (gas: 12)\n  5859: a4 = u64 [s1 + 0xc8]\n  5863: a5 = u64 [s1 + 0xc0]\n  5867: a4 = a4 ^ a5\n  5870: ra = u64 [s1 + 0xb0]\n  5874: a4 = a4 | ra\n  5877: u64 [s1 + 0x138] = a4\n  5881: a5 = u64 [s1 + 0xb8]\n  5885: a4 = u64 [s1 + 0x80]\n  5889: a5 = a5 | a4\n  5892: a4 = u64 [s1 + 0x138]\n  5896: a4 = a4 | a5\n  5899: jump @156 if a4 == 0\n      : @144 (gas: 6)\n  5903: a0 = a1 <u a0\n  5906: a4 = t0 + a0\n  5909: t0 = a4 ^ a3\n  5912: a5 = a4 <u a3\n  5915: a5 = a0 if t0 == 0\n  5918: t0 = 112, jump @708\n      : @145 [@dyn 56] (gas: 1)\n  5923: jump @184 if a0 != 0\n      : @146 (gas: 2)\n  5927: a0 = s1 + 0x380\n  5931: ra = 114, jump @17\n      : @147 [@dyn 57] (gas: 11)\n  5936: a1 = s1 + 0x300\n  5940: a0 = u64 [a1 + 0x98]\n  5944: u64 [s1 + 0x130] = a0\n  5948: a0 = u64 [a1 + 0x90]\n  5952: u64 [s1 + 0x128] = a0\n  5956: a0 = u64 [a1 + 0x88]\n  5960: u64 [s1 + 0x118] = a0\n  5964: a0 = u64 [a1 + 0x80]\n  5968: u64 [s1 + 0x110] = a0\n  5972: a0 = u64 [s1 + 0xc0]\n  5976: t0 = 116, jump @721\n      : @148 [@dyn 58] (gas: 1)\n  5981: ra = 118, jump @734\n      : @149 [@dyn 59] (gas: 6)\n  5986: u64 [s1 + 0x108] = a0\n  5990: u64 [s1 + 0xf0] = a1\n  5994: a0 = 0xffffffffffffffff\n  5997: a1 = 0xffffffffffffffff\n  6000: a2 = u64 [s1 + 0x138]\n  6004: ra = 120, jump @729\n      : @150 [@dyn 60] (gas: 1)\n  6009: t0 = 122, jump @715\n      : @151 [@dyn 61] (gas: 1)\n  6014: ra = 124, jump @729\n      : @152 [@dyn 62] (gas: 1)\n  6019: t0 = 126, jump @700\n      : @153 [@dyn 63] (gas: 4)\n  6024: a0 = u64 [s1 + 0x110]\n  6028: a0 = a0 & ~a3\n  6031: a2 = u64 [s1 + 0x118]\n  6035: t0 = 128, jump @728\n      : @154 [@dyn 64] (gas: 12)\n  6041: a4 = s1 + 0x1000\n  6045: u64 [a4 + 0xfffffffffffff898] = a3\n  6049: a3 = s1 + 0x1000\n  6053: u64 [a3 + 0xfffffffffffff890] = a2\n  6057: a2 = s1 + 0x1000\n  6061: u64 [a2 + 0xfffffffffffff888] = a1\n  6065: a1 = s1 + 0x1000\n  6069: u64 [a1 + 0xfffffffffffff880] = a0\n  6073: a1 = s1 + 0x7ff\n  6077: a1 = a1 + 0x81\n  6081: a0 = u64 [s1 + 0x120]\n  6085: ra = 130, jump @22\n      : @155 [@dyn 65] (gas: 2)\n  6091: ra = u64 [s1 + 0xb0]\n  6095: fallthrough\n      : @156 (gas: 32)\n  6096: a0 = ra >> 0x3f\n  6099: a1 = u64 [s1 + 0x80]\n  6103: a1 = a1 << 0x1\n  6106: a0 = a0 | a1\n  6109: a3 = u64 [s1 + 0xb8]\n  6113: a1 = a3 >> 0x3f\n  6116: a2 = ra << 0x1\n  6119: a1 = a1 | a2\n  6122: a4 = u64 [s1 + 0xc0]\n  6126: a2 = a4 >> 0x3f\n  6129: a3 = a3 << 0x1\n  6132: a2 = a2 | a3\n  6135: a3 = a4 << 0x1\n  6138: a3 = a3 + 0x1\n  6141: a5 = s1 + 0x7ff\n  6145: a5 = a5 + 0xb9\n  6149: u64 [a5 + 0] = 0\n  6151: u64 [a5 + 4294967288] = 0\n  6154: a4 = s1 + 0x1000\n  6158: u64 [a4 + 4294965416] = 0\n  6162: t0 = s1 + 0x1000\n  6166: u64 [t0 + 4294965408] = 0x1\n  6171: u64 [a5 + 0x8] = a3\n  6174: u64 [a5 + 0x10] = a2\n  6177: u64 [a5 + 0x18] = a1\n  6180: u64 [a5 + 0x20] = a0\n  6183: a0 = s1 + 0x7ff\n  6187: a0 = a0 + 0xa1\n  6191: a1 = s1 + 0x7ff\n  6195: a1 = a1 + 0xc1\n  6199: ra = 0x90\n  6203: jump @22\n      : @157 (gas: 7)\n  6206: a0 = u64 [s1 + 0x90]\n  6210: a0 = a0 | a1\n  6213: a1 = 0xffffffe0\n  6223: a1 = t0 <u a1\n  6226: a1 = 0 if t1 != 0\n  6228: a1 = 0 if a0 != 0\n  6230: jump @184 if a1 == 0\n      : @158 (gas: 3)\n  6234: i32 a1 = t0 + 0x20\n  6237: a0 = s1 + 0x3c0\n  6241: ra = 132, jump @17\n      : @159 [@dyn 66] (gas: 14)\n  6247: a3 = u64 [s1 + 0x80]\n  6251: a2 = u64 [s1 + 0xb0]\n  6255: a5 = u64 [s1 + 0xb8]\n  6259: a4 = u64 [s1 + 0xc0]\n  6263: a1 = s1 + 0x300\n  6267: a0 = u64 [a1 + 0xd8]\n  6271: u64 [s1 + 0x130] = a0\n  6275: a0 = u64 [a1 + 0xd0]\n  6279: u64 [s1 + 0x128] = a0\n  6283: a0 = u64 [a1 + 0xc8]\n  6287: u64 [s1 + 0x118] = a0\n  6291: a0 = u64 [a1 + 0xc0]\n  6295: u64 [s1 + 0x120] = a0\n  6299: fallthrough\n      : @160 (gas: 20)\n  6300: a0 = a5 >> 0x3f\n  6303: a1 = a2 << 0x1\n  6306: a0 = a0 | a1\n  6309: u64 [s1 + 0x110] = a0\n  6313: a0 = a2 >> 0x3f\n  6316: a1 = a3 << 0x1\n  6319: a0 = a0 | a1\n  6322: u64 [s1 + 0x108] = a0\n  6326: a0 = a4 >> 0x3f\n  6329: a1 = a5 << 0x1\n  6332: a0 = a0 | a1\n  6335: u64 [s1 + 0x100] = a0\n  6339: a0 = a4 << 0x1\n  6342: u64 [s1 + 0xf8] = a0\n  6346: a1 = a4 << 0x3\n  6349: u64 [s1 + 0x138] = a1\n  6353: i32 a2 = 0x80 - a1\n  6357: a0 = 0xffffffffffffffff\n  6360: a1 = 0xffffffffffffffff\n  6363: ra = 134, jump @734\n      : @161 [@dyn 67] (gas: 7)\n  6369: u64 [s1 + 0xd8] = a0\n  6373: u64 [s1 + 0xf0] = a1\n  6377: a0 = u64 [s1 + 0xc0]\n  6381: i32 a2 = a0 << 0x3\n  6384: a0 = 0xffffffffffffffff\n  6387: a1 = 0xffffffffffffffff\n  6390: ra = 136, jump @729\n      : @162 [@dyn 68] (gas: 10)\n  6396: u64 [s1 + 0xe8] = a0\n  6400: u64 [s1 + 0xe0] = a1\n  6404: a1 = u64 [s1 + 0xd8]\n  6408: a0 = a0 | a1\n  6411: u64 [s1 + 0xd8] = a0\n  6415: a0 = u64 [s1 + 0x138]\n  6419: i32 a2 = a0 + 0xffffffffffffff80\n  6422: a0 = 0xffffffffffffffff\n  6425: a1 = 0xffffffffffffffff\n  6428: ra = 138, jump @729\n      : @163 [@dyn 69] (gas: 7)\n  6434: a4 = u64 [s1 + 0x138]\n  6438: a2 = a4 <u 0x80\n  6442: a3 = u64 [s1 + 0xd8]\n  6446: a0 = a3 if a2 != 0\n  6449: a5 = u64 [s1 + 0xe0]\n  6453: a3 = u64 [s1 + 0xf0]\n  6457: t0 = 140, jump @722\n      : @164 [@dyn 70] (gas: 2)\n  6463: a4 = u64 [s1 + 0xe8]\n  6467: t0 = 142, jump @704\n      : @165 [@dyn 71] (gas: 24)\n  6473: a4 = u64 [s1 + 0xf8]\n  6477: a0 = a0 | a4\n  6480: a5 = s1 + 0x100\n  6484: a4 = u64 [a5]\n  6486: a1 = a1 | a4\n  6489: a4 = u64 [a5 + 0x8]\n  6492: a3 = a3 | a4\n  6495: a4 = u64 [a5 + 0x10]\n  6498: a2 = a2 | a4\n  6501: a5 = s1 + 0x7ff\n  6505: a5 = a5 + 0xb9\n  6509: u64 [a5 + 40] = 0x1\n  6513: u64 [a5 + 0x58] = a2\n  6516: u64 [a5 + 0x60] = a3\n  6519: u64 [a5 + 0x50] = a1\n  6522: u64 [a5 + 0x48] = a0\n  6525: u64 [a5 + 64] = 0\n  6528: u64 [a5 + 56] = 0\n  6531: u64 [a5 + 48] = 0\n  6534: a0 = s1 + 0x7ff\n  6538: a0 = a0 + 0xe1\n  6542: a1 = s1 + 0x7ff\n  6546: a1 = a1 + 0x101\n  6550: ra = 144, jump @22\n      : @166 [@dyn 72] (gas: 10)\n  6556: a1 = s1 + 0x7ff\n  6560: a1 = a1 + 0xb9\n  6564: u64 [a1 + 128] = 0\n  6568: u64 [a1 + 120] = 0\n  6571: u64 [a1 + 112] = 0\n  6574: u64 [a1 + 104] = 0x3\n  6578: a0 = s1 + 0x7ff\n  6582: a0 = a0 + 0x121\n  6586: a1 = u64 [s1 + 0x88]\n  6590: ra = 146, jump @22\n      : @167 [@dyn 73] (gas: 9)\n  6596: a0 = 0x300a0\n  6601: u64 [s1 + 0x138] = a0\n  6605: i32 a0 = a0 + 0\n  6607: u64 [s1 + 0x128] = a0\n  6611: ra = 0x94\n  6615: ecalli 3 // 'caller'\n  6617: a2 = u64 [s1 + 0x138]\n  6621: t0 = 0x96\n  6625: jump @698\n      : @168 [@dyn 74] (gas: 2)\n  6628: a2 = u64 [s1 + 0x138]\n  6632: t0 = 150, jump @698\n      : @169 [@dyn 75] (gas: 7)\n  6638: u64 [s1 + 888] = 0\n  6642: u64 [s1 + 0x370] = a1\n  6646: u64 [s1 + 0x368] = a0\n  6650: a1 = s1 + 0x360\n  6654: u64 [s1 + 0x360] = a3\n  6658: a0 = 0\n  6660: ra = 152, jump @19\n      : @170 [@dyn 76] (gas: 7)\n  6666: u64 [s1 + 856] = 0\n  6670: u64 [s1 + 848] = 0\n  6674: u64 [s1 + 832] = 0x4\n  6679: a0 = 0x20\n  6682: a1 = s1 + 0x340\n  6686: u64 [s1 + 840] = 0\n  6690: ra = 154, jump @19\n      : @171 [@dyn 77] (gas: 2)\n  6696: a1 = i32 [0x2008c]\n  6701: jump @173 if a1 >u 63\n      : @172 (gas: 2)\n  6705: u32 [0x2008c] = 0x40\n  6711: fallthrough\n      : @173 (gas: 28)\n  6712: a0 = sp + 0xffffffffffffffe0\n  6715: a2 = a0 & 0xffffffffffffffe0\n  6718: u64 [s1 + 0x130] = a2\n  6722: sp = a2\n  6724: a0 = 0x200a0\n  6729: i32 a0 = a0 + 0\n  6731: i32 a2 = a2 + 0\n  6733: a1 = 0x40\n  6736: ecalli 6 // 'hash_keccak_256'\n  6738: a3 = u64 [s1 + 0x130]\n  6742: a0 = u64 [a3 + 0x18]\n  6745: a1 = u64 [a3 + 0x10]\n  6748: a2 = u64 [a3 + 0x8]\n  6751: a3 = u64 [a3]\n  6753: a0 = reverse a0\n  6755: a1 = reverse a1\n  6757: a2 = reverse a2\n  6759: a3 = reverse a3\n  6761: a4 = s1 + 0x7ff\n  6765: a4 = a4 + 0xb9\n  6769: u64 [a4 + 0xa0] = a3\n  6773: u64 [a4 + 0x98] = a2\n  6777: u64 [a4 + 0x90] = a1\n  6781: u64 [a4 + 0x88] = a0\n  6785: a0 = s1 + 0x7ff\n  6789: a0 = a0 + 0x141\n  6793: a1 = u64 [s1 + 0x88]\n  6797: ra = 156, jump @22\n      : @174 [@dyn 78] (gas: 3)\n  6803: a0 = s1 + 0x320\n  6807: a1 = 0x40\n  6810: ra = 158, jump @17\n      : @175 [@dyn 79] (gas: 6)\n  6816: a4 = s1 + 0x300\n  6820: a0 = u64 [a4 + 0x38]\n  6823: a1 = u64 [a4 + 0x30]\n  6826: a2 = u64 [a4 + 0x28]\n  6829: a3 = u64 [a4 + 0x20]\n  6832: t0 = 160, jump @710\n      : @176 [@dyn 80] (gas: 1)\n  6838: jump @184 if a0 != 0\n      : @177 (gas: 13)\n  6842: a0 = u64 [s1 + 0x60]\n  6845: a2 = s1 + 0x300\n  6849: u64 [a2] = a0\n  6851: a0 = u64 [s1 + 0x58]\n  6854: u64 [a2 + 0x8] = a0\n  6857: a0 = u64 [s1 + 0x68]\n  6860: u64 [a2 + 0x10] = a0\n  6863: a1 = s1 + 0x300\n  6867: a0 = u64 [s1 + 0x70]\n  6870: u64 [a2 + 0x18] = a0\n  6873: a0 = a3\n  6875: u64 [s1 + 0x130] = a3\n  6879: ra = 162, jump @19\n      : @178 [@dyn 81] (gas: 6)\n  6885: a0 = u64 [s1 + 0x128]\n  6889: ra = 0xa4\n  6893: ecalli 3 // 'caller'\n  6895: a2 = u64 [s1 + 0x138]\n  6899: t0 = 0xa6\n  6903: jump @709\n      : @179 [@dyn 82] (gas: 2)\n  6906: a2 = u64 [s1 + 0x138]\n  6910: t0 = 166, jump @709\n      : @180 [@dyn 83] (gas: 28)\n  6916: t0 = a1 | a0\n  6919: a3 = a3 >> 0x20\n  6922: a2 = reverse a2\n  6924: a1 = a2 << 0x20\n  6927: a1 = a1 | a3\n  6930: a2 = a2 >> 0x20\n  6933: u64 [s1 + 696] = 0\n  6937: u64 [s1 + 728] = 0\n  6941: u64 [s1 + 720] = 0\n  6945: u64 [s1 + 712] = 0\n  6949: u64 [s1 + 704] = 0\n  6953: a3 = u64 [0x20000]\n  6958: a4 = u64 [0x20008]\n  6963: a5 = u64 [0x20010]\n  6968: a0 = u64 [0x20018]\n  6973: u64 [s1 + 0x2f8] = a3\n  6977: u64 [s1 + 0x2f0] = a4\n  6981: u64 [s1 + 0x2e8] = a5\n  6985: u64 [s1 + 0x2e0] = a0\n  6989: u64 [s1 + 0x2b0] = a2\n  6993: u64 [s1 + 0x2a8] = a1\n  6997: a1 = 0x20\n  7000: a2 = s1 + 0x2e0\n  7004: a3 = s1 + 0x2c0\n  7008: a4 = s1 + 0x2a0\n  7012: u64 [s1 + 0x2a0] = t0\n  7016: a0 = u64 [s1 + 0x130]\n  7020: ra = 168, jump @23\n      : @181 [@dyn 84] (gas: 3)\n  7026: a0 = s1 + 0x280\n  7030: a1 = 0x40\n  7033: ra = 170, jump @17\n      : @182 [@dyn 85] (gas: 6)\n  7039: a4 = s1 + 0x200\n  7043: a3 = u64 [a4 + 0x98]\n  7047: a1 = u64 [a4 + 0x90]\n  7051: a2 = u64 [a4 + 0x88]\n  7055: a0 = u64 [a4 + 0x80]\n  7059: t0 = 172, jump @718\n      : @183 [@dyn 86] (gas: 1)\n  7065: jump @214 if a1 == 0\n      : @184 (gas: 1)\n  7069: trap\n      : @185 (gas: 6)\n  7070: a1 = 0x200a0\n  7075: i32 a1 = a1 + 0\n  7077: a0 = 0x1\n  7080: a2 = 0\n  7082: ecalli 7 // 'seal_return'\n  7084: jump @189\n      : @186 (gas: 6)\n  7086: a1 = 0x200a0\n  7091: i32 a1 = a1 + 0\n  7093: a0 = 0x1\n  7096: a2 = 0\n  7098: ecalli 7 // 'seal_return'\n  7100: jump @189\n      : @187 (gas: 6)\n  7102: a1 = 0x200a0\n  7107: i32 a1 = a1 + 0\n  7109: a0 = 0x1\n  7112: a2 = 0\n  7114: ecalli 7 // 'seal_return'\n  7116: jump @189\n      : @188 (gas: 6)\n  7118: a1 = 0x200a0\n  7123: i32 a1 = a1 + 0\n  7125: a0 = 0x1\n  7128: a2 = 0\n  7130: ecalli 7 // 'seal_return'\n  7132: fallthrough\n      : @189 (gas: 6)\n  7133: u64 [s1 + 368] = 0\n  7137: u64 [s1 + 360] = 0\n  7141: u64 [s1 + 352] = 0\n  7145: t0 = 0xae\n  7149: a0 = 0x4e487b7100000000\n  7159: fallthrough\n      : @190 [@dyn 87] (gas: 4)\n  7160: a1 = s1 + 0x160\n  7164: u64 [s1 + 0x178] = a0\n  7168: a0 = 0\n  7170: ra = 176, jump @19\n      : @191 [@dyn 88] (gas: 7)\n  7176: u64 [s1 + 344] = 0\n  7180: u64 [s1 + 336] = 0\n  7184: u64 [s1 + 320] = 0x41\n  7189: a0 = 0x4\n  7192: a1 = s1 + 0x140\n  7196: u64 [s1 + 328] = 0\n  7200: ra = 178, jump @19\n      : @192 [@dyn 89] (gas: 2)\n  7206: a1 = i32 [0x2008c]\n  7211: jump @194 if a1 >u 63\n      : @193 (gas: 3)\n  7215: u32 [0x2008c] = 0x40\n  7221: a1 = 0x200a0\n  7226: jump @213\n      : @194 (gas: 2)\n  7229: a1 = 0x200a0\n  7234: jump @213\n      : @195 (gas: 6)\n  7237: u64 [s1 + 432] = 0\n  7241: u64 [s1 + 424] = 0\n  7245: u64 [s1 + 416] = 0\n  7249: t0 = 0xb4\n  7253: a0 = 0x4e487b7100000000\n  7263: fallthrough\n      : @196 [@dyn 90] (gas: 4)\n  7264: a1 = s1 + 0x1a0\n  7268: u64 [s1 + 0x1b8] = a0\n  7272: a0 = 0\n  7274: ra = 182, jump @19\n      : @197 [@dyn 91] (gas: 7)\n  7280: u64 [s1 + 408] = 0\n  7284: u64 [s1 + 400] = 0\n  7288: u64 [s1 + 384] = 0x22\n  7293: a0 = 0x4\n  7296: a1 = s1 + 0x180\n  7300: u64 [s1 + 392] = 0\n  7304: ra = 184, jump @19\n      : @198 [@dyn 92] (gas: 2)\n  7310: a1 = i32 [0x2008c]\n  7315: jump @200 if a1 >u 63\n      : @199 (gas: 3)\n  7319: u32 [0x2008c] = 0x40\n  7325: a1 = 0x200a0\n  7330: jump @213\n      : @200 (gas: 2)\n  7333: a1 = 0x200a0\n  7338: jump @213\n      : @201 (gas: 6)\n  7341: u64 [s1 + 528] = 0\n  7345: u64 [s1 + 520] = 0\n  7349: u64 [s1 + 512] = 0\n  7353: t0 = 0xba\n  7357: a0 = 0x4e487b7100000000\n  7367: fallthrough\n      : @202 [@dyn 93] (gas: 4)\n  7368: a1 = s1 + 0x200\n  7372: u64 [s1 + 0x218] = a0\n  7376: a0 = 0\n  7378: ra = 188, jump @19\n      : @203 [@dyn 94] (gas: 7)\n  7384: u64 [s1 + 504] = 0\n  7388: u64 [s1 + 496] = 0\n  7392: u64 [s1 + 480] = 0x41\n  7397: a0 = 0x4\n  7400: a1 = s1 + 0x1e0\n  7404: u64 [s1 + 488] = 0\n  7408: ra = 190, jump @19\n      : @204 [@dyn 95] (gas: 2)\n  7414: a1 = i32 [0x2008c]\n  7419: jump @206 if a1 >u 63\n      : @205 (gas: 3)\n  7423: u32 [0x2008c] = 0x40\n  7429: a1 = 0x200a0\n  7434: jump @213\n      : @206 (gas: 2)\n  7436: a1 = 0x200a0\n  7441: jump @213\n      : @207 (gas: 6)\n  7443: u64 [s1 + 592] = 0\n  7447: u64 [s1 + 584] = 0\n  7451: u64 [s1 + 576] = 0\n  7455: t0 = 0xc0\n  7459: a0 = 0x4e487b7100000000\n  7469: fallthrough\n      : @208 [@dyn 96] (gas: 4)\n  7470: a1 = s1 + 0x240\n  7474: u64 [s1 + 0x258] = a0\n  7478: a0 = 0\n  7480: ra = 194, jump @19\n      : @209 [@dyn 97] (gas: 7)\n  7486: u64 [s1 + 568] = 0\n  7490: u64 [s1 + 560] = 0\n  7494: u64 [s1 + 544] = 0x22\n  7499: a0 = 0x4\n  7502: a1 = s1 + 0x220\n  7506: u64 [s1 + 552] = 0\n  7510: ra = 196, jump @19\n      : @210 [@dyn 98] (gas: 2)\n  7516: a1 = i32 [0x2008c]\n  7521: jump @212 if a1 >u 63\n      : @211 (gas: 3)\n  7525: u32 [0x2008c] = 0x40\n  7531: a1 = 0x200a0\n  7536: jump @213\n      : @212 (gas: 2)\n  7538: a1 = 0x200a0\n  7543: fallthrough\n      : @213 (gas: 7)\n  7544: i32 a1 = a1 + 0\n  7546: a0 = 0x1\n  7549: a2 = 0x24\n  7552: ecalli 7 // 'seal_return'\n  7554: u64 [s1 + 0x138] = a0\n  7558: ra = 0xc6\n  7562: jump @26\n      : @214 (gas: 2)\n  7565: u64 [s1 + 0x138] = a0\n  7569: ra = 198, jump @26\n      : @215 [@dyn 99] (gas: 5)\n  7575: i32 a0 = a0 + 0\n  7577: a1 = 0\n  7579: a2 = 0\n  7581: ecalli 0 // 'call_data_copy'\n  7582: jump @15\n      : @216 (gas: 3)\n  7585: a0 = u64 [s1 + 0x138]\n  7589: a1 = 0\n  7591: ra = 200, jump @26\n      : @217 [@dyn 100] (gas: 5)\n  7597: i32 a1 = a0 + 0\n  7599: a0 = 0\n  7601: a2 = 0\n  7603: ecalli 7 // 'seal_return'\n  7605: jump @189\n      : @218 [@dyn 101] (gas: 4)\n  7608: a0 = 0x20088\n  7613: u64 [s1 + 0xb8] = a0\n  7617: a0 = i32 [0x20088]\n  7622: jump @220 if a0 >=u 4\n      : @219 (gas: 1)\n  7626: jump @550\n      : @220 (gas: 6)\n  7629: a0 = s1 + 0x1000\n  7633: i32 a0 = a0 + 0x160\n  7637: a1 = 0\n  7639: ra = 0xcc\n  7643: ecalli 1 // 'call_data_load'\n  7645: fallthrough\n      : @221 [@dyn 102] (gas: 3)\n  7646: a2 = s1 + 0x1030\n  7650: a0 = i32 [a2 + 0x14c]\n  7654: jump @223 if a0 != 2514000705\n      : @222 (gas: 1)\n  7661: jump @451\n      : @223 (gas: 1)\n  7664: jump @334 if a0 == 2835717307\n      : @224 (gas: 1)\n  7672: jump @226 if a0 != 3714247998\n      : @225 (gas: 1)\n  7679: jump @432\n      : @226 (gas: 1)\n  7682: jump @228 if a0 != 117300739\n      : @227 (gas: 1)\n  7689: jump @403\n      : @228 (gas: 1)\n  7692: jump @244 if a0 == 157198259\n      : @229 (gas: 1)\n  7700: jump @322 if a0 == 404098525\n      : @230 (gas: 1)\n  7708: jump @275 if a0 == 599290589\n      : @231 (gas: 1)\n  7716: jump @233 if a0 == 826074471\n      : @232 (gas: 1)\n  7723: jump @384\n      : @233 (gas: 8)\n  7726: u64 [a2 + 744] = 0\n  7730: u64 [a2 + 736] = 0\n  7734: u64 [a2 + 728] = 0\n  7738: u64 [a2 + 720] = 0\n  7742: a0 = s1 + 0x1000\n  7746: i32 a0 = a0 + 0x300\n  7750: ecalli 10 // 'value_transferred'\n  7752: fallthrough\n      : @234 (gas: 10)\n  7753: a3 = s1 + 0x1030\n  7757: a4 = a3 + 0x200\n  7761: a0 = u64 [a4 + 0xe0]\n  7765: a1 = u64 [a4 + 0xe8]\n  7769: a2 = u64 [a4 + 0xd8]\n  7773: a3 = u64 [a4 + 0xd0]\n  7777: a1 = a1 | a2\n  7780: a0 = a0 | a3\n  7783: a0 = a0 | a1\n  7786: jump @236 if a0 == 0\n      : @235 (gas: 1)\n  7789: jump @552\n      : @236 (gas: 3)\n  7792: a0 = u64 [s1 + 0xb8]\n  7796: a0 = i32 [a0]\n  7798: jump @238 if a0 >u 3\n      : @237 (gas: 1)\n  7802: jump @553\n      : @238 (gas: 9)\n  7805: a1 = s1 + 0x1030\n  7809: u64 [a1 + 776] = 0\n  7813: u64 [a1 + 768] = 0\n  7817: u64 [a1 + 760] = 0\n  7821: u64 [a1 + 752] = 0x2\n  7826: a0 = s1 + 0x7ff\n  7830: a0 = a0 + 0x241\n  7834: a1 = s1 + 0x1320\n  7838: ra = 206, jump @21\n      : @239 [@dyn 103] (gas: 8)\n  7844: a0 = s1 + 0x7ff\n  7848: a0 = a0 + 0x31\n  7851: a0 = u64 [a0 + 0x210]\n  7855: u64 [s1 + 0xb8] = a0\n  7859: a0 = s1 + 0x7ff\n  7863: a0 = a0 + 0x221\n  7867: a1 = 0x40\n  7870: ra = 208, jump @17\n      : @240 [@dyn 104] (gas: 7)\n  7876: a3 = s1 + 0x7ff\n  7880: a3 = a3 + 0x31\n  7883: a4 = u64 [a3 + 0x208]\n  7887: a1 = u64 [a3 + 0x200]\n  7891: a2 = u64 [a3 + 0x1f8]\n  7895: a0 = u64 [a3 + 0x1f0]\n  7899: t0 = 210, jump @719\n      : @241 [@dyn 105] (gas: 1)\n  7905: jump @243 if a1 == 0\n      : @242 (gas: 1)\n  7908: jump @525\n      : @243 (gas: 10)\n  7911: a1 = u8 [s1 + 0xb8]\n  7915: u64 [a3 + 488] = 0\n  7919: u64 [a3 + 480] = 0\n  7923: u64 [a3 + 0x1d0] = a1\n  7927: a1 = s1 + 0x7ff\n  7931: a1 = a1 + 0x201\n  7935: u64 [a3 + 472] = 0\n  7939: u64 [s1 + 0xb8] = a0\n  7943: ra = 0x24a\n  7947: jump @19\n      : @244 (gas: 10)\n  7950: u64 [a2 + 424] = 0\n  7954: u64 [a2 + 416] = 0\n  7958: u64 [a2 + 408] = 0\n  7962: u64 [a2 + 400] = 0\n  7966: a0 = s1 + 0x1000\n  7970: i32 a0 = a0 + 0x1c0\n  7974: ra = 0xd4\n  7978: ecalli 10 // 'value_transferred'\n  7980: t0 = 0xd6\n  7984: jump @726\n      : @245 [@dyn 106] (gas: 1)\n  7987: t0 = 214, jump @726\n      : @246 [@dyn 107] (gas: 8)\n  7993: a0 = u64 [a4 + 0xa0]\n  7997: a1 = u64 [a4 + 0xa8]\n  8001: a2 = u64 [a4 + 0x98]\n  8005: a3 = u64 [a4 + 0x90]\n  8009: a1 = a1 | a2\n  8012: a0 = a0 | a3\n  8015: a0 = a0 | a1\n  8018: jump @248 if a0 == 0\n      : @247 (gas: 1)\n  8021: jump @554\n      : @248 (gas: 4)\n  8024: a0 = u64 [s1 + 0xb8]\n  8028: a0 = i32 [a0]\n  8030: a1 = 0x43\n  8033: jump @250 if a1 <u a0\n      : @249 (gas: 1)\n  8036: jump @555\n      : @250 (gas: 4)\n  8039: a0 = s1 + 0x420\n  8043: ra = 0xd8\n  8047: t0 = 0x280\n  8051: jump @724\n      : @251 [@dyn 108] (gas: 38)\n  8054: a0 = u64 [s1 + 0x430]\n  8058: u64 [s1 + 0x98] = a0\n  8062: a0 = u64 [s1 + 0x428]\n  8066: u64 [s1 + 0xa8] = a0\n  8070: a0 = u64 [s1 + 0x420]\n  8074: u64 [s1 + 0xb0] = a0\n  8078: a0 = sp + 0xffffffffffffffe0\n  8081: a0 = a0 & 0xffffffffffffffe0\n  8084: u64 [s1 + 0xb8] = a0\n  8088: sp = a0\n  8090: a0 = s1 + 0x1000\n  8094: i32 a0 = a0 + 0x1e0\n  8098: a1 = 0x24\n  8101: ecalli 1 // 'call_data_load'\n  8103: a0 = s1 + 0x1030\n  8107: a4 = a0 + 0x100\n  8111: a1 = u64 [a4 + 0xc8]\n  8115: a2 = u64 [a4 + 0xc0]\n  8119: a3 = u64 [a4 + 0xb8]\n  8123: a0 = u64 [a4 + 0xb0]\n  8127: u64 [s1 + 0x58] = a1\n  8130: a4 = u64 [s1 + 0xb8]\n  8134: u64 [a4 + 0x18] = a1\n  8137: u64 [s1 + 0x50] = a2\n  8140: u64 [a4 + 0x10] = a2\n  8143: u64 [s1 + 0x40] = a3\n  8146: u64 [a4 + 0x8] = a3\n  8149: u64 [s1 + 0x38] = a0\n  8152: u64 [a4] = a0\n  8154: a0 = 0x300a0\n  8159: u64 [s1 + 0xa0] = a0\n  8163: i32 a0 = a0 + 0\n  8165: u64 [s1 + 0x48] = a0\n  8168: ra = 0xda\n  8172: ecalli 3 // 'caller'\n  8174: a2 = u64 [s1 + 0xa0]\n  8178: t0 = 0xdc\n  8182: jump @698\n      : @252 [@dyn 109] (gas: 2)\n  8185: a2 = u64 [s1 + 0xa0]\n  8189: t0 = 220, jump @698\n      : @253 [@dyn 110] (gas: 8)\n  8195: u64 [s1 + 1048] = 0\n  8199: a2 = s1 + 0x400\n  8203: u64 [a2 + 0x10] = a1\n  8206: u64 [a2 + 0x8] = a0\n  8209: a1 = s1 + 0x400\n  8213: u64 [a2] = a3\n  8215: a0 = 0\n  8217: ra = 222, jump @19\n      : @254 [@dyn 111] (gas: 7)\n  8223: u64 [s1 + 1016] = 0\n  8227: u64 [s1 + 1008] = 0\n  8231: u64 [s1 + 992] = 0x5\n  8236: a0 = 0x20\n  8239: a1 = s1 + 0x3e0\n  8243: u64 [s1 + 1000] = 0\n  8247: ra = 224, jump @19\n      : @255 [@dyn 112] (gas: 3)\n  8253: a1 = 0x2008c\n  8258: a0 = i32 [0x2008c]\n  8263: jump @257 if a0 >u 63\n      : @256 (gas: 2)\n  8267: u32 [0x2008c] = 0x40\n  8273: fallthrough\n      : @257 (gas: 41)\n  8274: a0 = sp + 0xffffffffffffffe0\n  8277: a2 = a0 & 0xffffffffffffffe0\n  8280: u64 [s1 + 0x80] = a2\n  8284: sp = a2\n  8286: a0 = 0x200a0\n  8291: i32 a0 = a0 + 0\n  8293: i32 a2 = a2 + 0\n  8295: u64 [s1 + 0x90] = a1\n  8299: a1 = 0x40\n  8302: u64 [s1 + 0x88] = a0\n  8306: ecalli 6 // 'hash_keccak_256'\n  8308: a3 = u64 [s1 + 0x80]\n  8312: a0 = u64 [a3 + 0x18]\n  8315: a1 = u64 [a3 + 0x10]\n  8318: a2 = u64 [a3 + 0x8]\n  8321: a3 = u64 [a3]\n  8323: a0 = reverse a0\n  8325: u64 [s1 + 0x78] = a0\n  8328: a0 = reverse a1\n  8330: u64 [s1 + 0x70] = a0\n  8333: a0 = reverse a2\n  8335: u64 [s1 + 0x68] = a0\n  8338: a0 = reverse a3\n  8340: u64 [s1 + 0x60] = a0\n  8343: a0 = sp + 0xffffffffffffffe0\n  8346: a0 = a0 & 0xffffffffffffffe0\n  8349: u64 [s1 + 0x80] = a0\n  8353: sp = a0\n  8355: a0 = u64 [s1 + 0x98]\n  8359: a0 = a0 << 0x20\n  8362: a0 = a0 >> 0x20\n  8365: u64 [s1 + 984] = 0\n  8369: u64 [s1 + 0x30] = a0\n  8372: u64 [s1 + 0x3d0] = a0\n  8376: a0 = u64 [s1 + 0xa8]\n  8380: u64 [s1 + 0x3c8] = a0\n  8384: a1 = s1 + 0x3c0\n  8388: a0 = u64 [s1 + 0xb0]\n  8392: u64 [s1 + 0x3c0] = a0\n  8396: a0 = 0\n  8398: ra = 226, jump @19\n      : @258 [@dyn 113] (gas: 12)\n  8404: a0 = u64 [s1 + 0x60]\n  8407: a3 = s1 + 0x300\n  8411: u64 [a3 + 0xb8] = a0\n  8415: a0 = u64 [s1 + 0x68]\n  8418: u64 [a3 + 0xb0] = a0\n  8422: a0 = u64 [s1 + 0x70]\n  8425: u64 [a3 + 0xa8] = a0\n  8429: a0 = 0x20\n  8432: a1 = s1 + 0x3a0\n  8436: a2 = u64 [s1 + 0x78]\n  8439: u64 [a3 + 0xa0] = a2\n  8443: ra = 228, jump @19\n      : @259 [@dyn 114] (gas: 3)\n  8449: a1 = u64 [s1 + 0x90]\n  8453: a0 = i32 [a1]\n  8455: jump @261 if a0 >u 63\n      : @260 (gas: 2)\n  8459: u32 [a1 + 0] = 0x40\n  8462: fallthrough\n      : @261 (gas: 24)\n  8463: a0 = sp + 0xffffffffffffffe0\n  8466: a0 = a0 & 0xffffffffffffffe0\n  8469: u64 [s1 + 0x98] = a0\n  8473: sp = a0\n  8475: i32 a2 = a0 + 0\n  8477: a1 = 0x40\n  8480: a0 = u64 [s1 + 0x88]\n  8484: ecalli 6 // 'hash_keccak_256'\n  8486: a3 = u64 [s1 + 0x98]\n  8490: a0 = u64 [a3 + 0x18]\n  8493: a1 = u64 [a3 + 0x10]\n  8496: a2 = u64 [a3 + 0x8]\n  8499: a3 = u64 [a3]\n  8501: a4 = reverse a0\n  8503: a1 = reverse a1\n  8505: a2 = reverse a2\n  8507: a3 = reverse a3\n  8509: a0 = u64 [s1 + 0x80]\n  8513: u64 [a0 + 0x18] = a3\n  8516: u64 [a0 + 0x10] = a2\n  8519: u64 [a0 + 0x8] = a1\n  8522: u64 [a0] = a4\n  8524: a1 = u64 [s1 + 0xb8]\n  8528: ra = 230, jump @22\n      : @262 [@dyn 115] (gas: 3)\n  8534: a0 = s1 + 0x380\n  8538: a1 = 0x40\n  8541: ra = 232, jump @17\n      : @263 [@dyn 116] (gas: 6)\n  8547: a4 = s1 + 0x300\n  8551: a0 = u64 [a4 + 0x98]\n  8555: a1 = u64 [a4 + 0x90]\n  8559: a2 = u64 [a4 + 0x88]\n  8563: a3 = u64 [a4 + 0x80]\n  8567: t0 = 234, jump @710\n      : @264 [@dyn 117] (gas: 1)\n  8573: jump @266 if a0 == 0\n      : @265 (gas: 1)\n  8576: jump @525\n      : @266 (gas: 12)\n  8579: a0 = u64 [s1 + 0x38]\n  8582: u64 [s1 + 0x360] = a0\n  8586: a0 = u64 [s1 + 0x40]\n  8589: u64 [s1 + 0x368] = a0\n  8593: a0 = u64 [s1 + 0x50]\n  8596: u64 [s1 + 0x370] = a0\n  8600: a1 = s1 + 0x360\n  8604: a0 = u64 [s1 + 0x58]\n  8607: u64 [s1 + 0x378] = a0\n  8611: a0 = a3\n  8613: u64 [s1 + 0xb8] = a3\n  8617: ra = 236, jump @19\n      : @267 [@dyn 118] (gas: 6)\n  8623: a0 = u64 [s1 + 0x48]\n  8626: ra = 0xee\n  8630: ecalli 3 // 'caller'\n  8632: a2 = u64 [s1 + 0xa0]\n  8636: t0 = 0xf0\n  8640: jump @709\n      : @268 [@dyn 119] (gas: 2)\n  8643: a2 = u64 [s1 + 0xa0]\n  8647: t0 = 240, jump @709\n      : @269 [@dyn 120] (gas: 32)\n  8653: t0 = a1 | a0\n  8656: a3 = a3 >> 0x20\n  8659: a2 = reverse a2\n  8661: a1 = a2 << 0x20\n  8664: a1 = a1 | a3\n  8667: a2 = a2 >> 0x20\n  8670: u64 [s1 + 792] = 0\n  8674: a0 = u64 [s1 + 0x30]\n  8677: u64 [s1 + 0x310] = a0\n  8681: a0 = u64 [s1 + 0xa8]\n  8685: u64 [s1 + 0x308] = a0\n  8689: a0 = u64 [s1 + 0xb0]\n  8693: u64 [s1 + 0x300] = a0\n  8697: u64 [s1 + 824] = 0\n  8701: a3 = u64 [0x20058]\n  8706: a4 = u64 [0x20060]\n  8711: a5 = u64 [0x20068]\n  8716: a0 = u64 [0x20070]\n  8721: u64 [s1 + 0x358] = a3\n  8725: a3 = s1 + 0x300\n  8729: u64 [a3 + 0x50] = a4\n  8732: u64 [a3 + 0x48] = a5\n  8735: u64 [a3 + 0x40] = a0\n  8738: u64 [a3 + 0x30] = a2\n  8741: u64 [a3 + 0x28] = a1\n  8744: a1 = 0x20\n  8747: a2 = s1 + 0x340\n  8751: a3 = s1 + 0x320\n  8755: a4 = s1 + 0x300\n  8759: u64 [s1 + 0x320] = t0\n  8763: a0 = u64 [s1 + 0xb8]\n  8767: ra = 242, jump @23\n      : @270 [@dyn 121] (gas: 3)\n  8773: a0 = s1 + 0x2e0\n  8777: a1 = 0x40\n  8780: ra = 244, jump @17\n      : @271 [@dyn 122] (gas: 6)\n  8786: a4 = s1 + 0x200\n  8790: a3 = u64 [a4 + 0xf8]\n  8794: a1 = u64 [a4 + 0xf0]\n  8798: a2 = u64 [a4 + 0xe8]\n  8802: a0 = u64 [a4 + 0xe0]\n  8806: t0 = 246, jump @718\n      : @272 [@dyn 123] (gas: 1)\n  8812: jump @274 if a1 == 0\n      : @273 (gas: 1)\n  8815: jump @525\n      : @274 (gas: 8)\n  8818: u64 [s1 + 728] = 0\n  8822: u64 [s1 + 720] = 0\n  8826: u64 [s1 + 712] = 0\n  8830: a1 = s1 + 0x2c0\n  8834: u64 [s1 + 704] = 0x1\n  8839: u64 [s1 + 0xb8] = a0\n  8843: ra = 0x24a\n  8847: jump @19\n      : @275 (gas: 9)\n  8850: u64 [a2 + 552] = 0\n  8854: u64 [a2 + 544] = 0\n  8858: u64 [a2 + 536] = 0\n  8862: u64 [a2 + 528] = 0\n  8866: a0 = s1 + 0x1000\n  8870: i32 a0 = a0 + 0x240\n  8874: ra = 0xf8\n  8878: ecalli 10 // 'value_transferred'\n  8880: fallthrough\n      : @276 [@dyn 124] (gas: 10)\n  8881: a3 = s1 + 0x1030\n  8885: a4 = a3 + 0x200\n  8889: a0 = u64 [a4 + 0x20]\n  8892: a1 = u64 [a4 + 0x28]\n  8895: a2 = u64 [a4 + 0x18]\n  8898: a3 = u64 [a4 + 0x10]\n  8901: a1 = a1 | a2\n  8904: a0 = a0 | a3\n  8907: a0 = a0 | a1\n  8910: jump @278 if a0 == 0\n      : @277 (gas: 1)\n  8913: jump @556\n      : @278 (gas: 4)\n  8916: a0 = u64 [s1 + 0xb8]\n  8920: a0 = i32 [a0]\n  8922: a1 = 0x63\n  8925: jump @280 if a1 <u a0\n      : @279 (gas: 1)\n  8928: jump @557\n      : @280 (gas: 5)\n  8931: a0 = s1 + 0x7ff\n  8935: a0 = a0 + 0x1e1\n  8939: ra = 0xfa\n  8943: t0 = 0x280\n  8947: jump @724\n      : @281 [@dyn 125] (gas: 13)\n  8950: a1 = s1 + 0x7ff\n  8954: a1 = a1 + 0x31\n  8957: a0 = u64 [a1 + 0x1b0]\n  8961: u64 [s1 + 0x88] = a0\n  8965: a0 = u64 [a1 + 0x1b8]\n  8969: u64 [s1 + 0x80] = a0\n  8973: a0 = u32 [a1 + 0x1c0]\n  8977: u64 [s1 + 0x78] = a0\n  8980: a0 = s1 + 0x7ff\n  8984: a0 = a0 + 0x1c1\n  8988: ra = 0xfc\n  8992: t0 = 0x28a\n  8996: jump @724\n      : @282 [@dyn 126] (gas: 37)\n  8999: a1 = s1 + 0x7ff\n  9003: a1 = a1 + 0x31\n  9006: a2 = a1 + 0x100\n  9010: a0 = u64 [a2 + 0xa0]\n  9014: u64 [s1 + 0x40] = a0\n  9017: a0 = u64 [a2 + 0x98]\n  9021: u64 [s1 + 0x38] = a0\n  9024: a0 = u64 [a2 + 0x90]\n  9028: u64 [s1 + 0x30] = a0\n  9031: a0 = s1 + 0x1000\n  9035: i32 a0 = a0 + 0x260\n  9039: a1 = 0x44\n  9042: ecalli 1 // 'call_data_load'\n  9044: a0 = s1 + 0x1030\n  9048: a2 = a0 + 0x200\n  9052: a1 = u64 [a2 + 0x48]\n  9055: u64 [s1 + 0xa8] = a1\n  9059: a1 = u64 [a2 + 0x40]\n  9062: u64 [s1 + 0xa0] = a1\n  9066: a1 = u64 [a2 + 0x38]\n  9069: u64 [s1 + 0x98] = a1\n  9073: a0 = u64 [a2 + 0x30]\n  9076: u64 [s1 + 0x90] = a0\n  9080: a0 = s1 + 0x7ff\n  9084: a0 = a0 + 0x31\n  9087: u64 [a0 + 392] = 0\n  9091: a1 = u64 [s1 + 0x78]\n  9094: a3 = a0 + 0x100\n  9098: u64 [a3 + 0x80] = a1\n  9102: a1 = u64 [s1 + 0x80]\n  9106: u64 [a3 + 0x78] = a1\n  9109: a1 = s1 + 0x7ff\n  9113: a1 = a1 + 0x1a1\n  9117: a2 = u64 [s1 + 0x88]\n  9121: u64 [a3 + 0x70] = a2\n  9124: a0 = 0\n  9126: ra = 254, jump @19\n      : @283 [@dyn 127] (gas: 11)\n  9132: a1 = s1 + 0x7ff\n  9136: a1 = a1 + 0x31\n  9139: u64 [a1 + 360] = 0\n  9143: u64 [a1 + 352] = 0\n  9147: u64 [a1 + 336] = 0x4\n  9152: a2 = a1\n  9154: a0 = 0x20\n  9157: a1 = s1 + 0x7ff\n  9161: a1 = a1 + 0x181\n  9165: u64 [a2 + 344] = 0\n  9169: ra = 256, jump @19\n      : @284 [@dyn 128] (gas: 3)\n  9175: a1 = 0x2008c\n  9180: a0 = i32 [0x2008c]\n  9185: jump @286 if a0 >u 63\n      : @285 (gas: 2)\n  9189: u32 [0x2008c] = 0x40\n  9195: fallthrough\n      : @286 (gas: 30)\n  9196: a0 = sp + 0xffffffffffffffe0\n  9199: a2 = a0 & 0xffffffffffffffe0\n  9202: u64 [s1 + 0x70] = a2\n  9205: sp = a2\n  9207: a0 = 0x200a0\n  9212: i32 a0 = a0 + 0\n  9214: i32 a2 = a2 + 0\n  9216: u64 [s1 + 0xb8] = a1\n  9220: a1 = 0x40\n  9223: u64 [s1 + 0xb0] = a0\n  9227: ecalli 6 // 'hash_keccak_256'\n  9229: a3 = u64 [s1 + 0x70]\n  9232: a0 = u64 [a3 + 0x18]\n  9235: a1 = u64 [a3 + 0x10]\n  9238: a2 = u64 [a3 + 0x8]\n  9241: a3 = u64 [a3]\n  9243: a0 = reverse a0\n  9245: a1 = reverse a1\n  9247: a2 = reverse a2\n  9249: a3 = reverse a3\n  9251: a4 = s1 + 0x1030\n  9255: a5 = a4 + 0x200\n  9259: u64 [a5 + 0x68] = a3\n  9262: u64 [a5 + 0x60] = a2\n  9265: u64 [a5 + 0x58] = a1\n  9268: u64 [a5 + 0x50] = a0\n  9271: a0 = s1 + 0x7ff\n  9275: a0 = a0 + 0x161\n  9279: a1 = s1 + 0x1280\n  9283: ra = 258, jump @21\n      : @287 [@dyn 129] (gas: 31)\n  9289: a4 = s1 + 0x7ff\n  9293: a4 = a4 + 0x31\n  9296: a5 = a4 + 0x100\n  9300: a0 = u64 [a5 + 0x38]\n  9303: a1 = u64 [a5 + 0x30]\n  9306: a2 = u64 [a5 + 0x40]\n  9309: a3 = u64 [a5 + 0x48]\n  9312: t0 = a4\n  9314: a5 = u64 [s1 + 0x98]\n  9318: a4 = a0 ^ a5\n  9321: a0 = a0 <u a5\n  9324: a5 = u64 [s1 + 0x90]\n  9328: a1 = a1 <u a5\n  9331: a1 = a0 if a4 != 0\n  9334: a4 = u64 [s1 + 0xa8]\n  9338: a0 = a3 ^ a4\n  9341: a3 = a3 <u a4\n  9344: a5 = u64 [s1 + 0xa0]\n  9348: a4 = a2 <u a5\n  9351: a4 = a3 if a0 != 0\n  9354: a2 = a2 ^ a5\n  9357: a0 = a0 | a2\n  9360: a1 = a4 if a0 != 0\n  9363: a0 = a1 ^ 0x1\n  9366: u64 [t0 + 296] = 0\n  9370: u64 [t0 + 288] = 0\n  9374: u64 [t0 + 0x110] = a0\n  9378: a0 = s1 + 0x7ff\n  9382: a0 = a0 + 0x141\n  9386: u64 [t0 + 280] = 0\n  9390: ra = 260, jump @663\n      : @288 [@dyn 130] (gas: 13)\n  9396: a2 = s1 + 0x7ff\n  9400: a2 = a2 + 0x31\n  9403: u64 [a2 + 264] = 0\n  9407: a0 = u64 [s1 + 0x78]\n  9410: u64 [a2 + 0x100] = a0\n  9414: a0 = u64 [s1 + 0x80]\n  9418: u64 [a2 + 0xf8] = a0\n  9422: a1 = s1 + 0x7ff\n  9426: a1 = a1 + 0x121\n  9430: a0 = u64 [s1 + 0x88]\n  9434: u64 [a2 + 0xf0] = a0\n  9438: a0 = 0\n  9440: ra = 262, jump @19\n      : @289 [@dyn 131] (gas: 11)\n  9446: a1 = s1 + 0x7ff\n  9450: a1 = a1 + 0x31\n  9453: u64 [a1 + 232] = 0\n  9457: u64 [a1 + 224] = 0\n  9461: u64 [a1 + 208] = 0x5\n  9466: a2 = a1\n  9468: a0 = 0x20\n  9471: a1 = s1 + 0x7ff\n  9475: a1 = a1 + 0x101\n  9479: u64 [a2 + 216] = 0\n  9483: ra = 264, jump @19\n      : @290 [@dyn 132] (gas: 3)\n  9489: a1 = u64 [s1 + 0xb8]\n  9493: a0 = i32 [a1]\n  9495: jump @292 if a0 >u 63\n      : @291 (gas: 2)\n  9499: u32 [a1 + 0] = 0x40\n  9502: fallthrough\n      : @292 (gas: 4)\n  9503: a0 = sp + 0xffffffffffffffe0\n  9506: a0 = a0 & 0xffffffffffffffe0\n  9509: u64 [s1 + 0x70] = a0\n  9512: t0 = 266, jump @713\n      : @293 [@dyn 133] (gas: 5)\n  9518: ra = 0x10c\n  9522: ecalli 6 // 'hash_keccak_256'\n  9524: a3 = u64 [s1 + 0x70]\n  9527: t0 = 0x10e\n  9531: jump @701\n      : @294 [@dyn 134] (gas: 2)\n  9534: a3 = u64 [s1 + 0x70]\n  9537: t0 = 270, jump @701\n      : @295 [@dyn 135] (gas: 9)\n  9543: a0 = 0x300a0\n  9548: u64 [s1 + 0x70] = a0\n  9551: i32 a0 = a0 + 0\n  9553: u64 [s1 + 0x28] = a0\n  9556: ra = 0x110\n  9560: ecalli 3 // 'caller'\n  9562: a2 = u64 [s1 + 0x70]\n  9565: t0 = 0x112\n  9569: jump @695\n      : @296 [@dyn 136] (gas: 2)\n  9572: a2 = u64 [s1 + 0x70]\n  9575: t0 = 274, jump @695\n      : @297 [@dyn 137] (gas: 8)\n  9581: u64 [a2 + 200] = 0\n  9585: u64 [a2 + 0xc0] = a1\n  9589: u64 [a2 + 0xb8] = a0\n  9593: a1 = s1 + 0x7ff\n  9597: a1 = a1 + 0xe1\n  9601: u64 [a2 + 0xb0] = a3\n  9605: a0 = 0\n  9607: ra = 276, jump @19\n      : @298 [@dyn 138] (gas: 15)\n  9613: a0 = u64 [s1 + 0x48]\n  9616: a1 = s1 + 0x7ff\n  9620: a1 = a1 + 0x31\n  9623: u64 [a1 + 0xa8] = a0\n  9627: a0 = u64 [s1 + 0x50]\n  9630: u64 [a1 + 0xa0] = a0\n  9634: a0 = u64 [s1 + 0x58]\n  9637: u64 [a1 + 0x98] = a0\n  9641: a3 = a1\n  9643: a0 = 0x20\n  9646: a1 = s1 + 0x7ff\n  9650: a1 = a1 + 0xc1\n  9654: a2 = u64 [s1 + 0x60]\n  9657: u64 [a3 + 0x90] = a2\n  9661: ra = 278, jump @19\n      : @299 [@dyn 139] (gas: 3)\n  9667: a1 = u64 [s1 + 0xb8]\n  9671: a0 = i32 [a1]\n  9673: jump @301 if a0 >=u 64\n      : @300 (gas: 2)\n  9677: u32 [a1 + 0] = 0x40\n  9680: fallthrough\n      : @301 (gas: 4)\n  9681: a0 = sp + 0xffffffffffffffe0\n  9684: a0 = a0 & 0xffffffffffffffe0\n  9687: u64 [s1 + 0x60] = a0\n  9690: t0 = 280, jump @713\n      : @302 [@dyn 140] (gas: 5)\n  9696: ra = 0x11a\n  9700: ecalli 6 // 'hash_keccak_256'\n  9702: a3 = u64 [s1 + 0x60]\n  9705: t0 = 0x11c\n  9709: jump @703\n      : @303 [@dyn 141] (gas: 2)\n  9712: a3 = u64 [s1 + 0x60]\n  9715: t0 = 284, jump @703\n      : @304 [@dyn 142] (gas: 2)\n  9721: a0 = a0 + 0xa1\n  9725: ra = 286, jump @21\n      : @305 [@dyn 143] (gas: 23)\n  9731: t0 = s1 + 0x7ff\n  9735: t0 = t0 + 0x31\n  9738: a2 = t0\n  9740: a0 = u64 [a2 + 0x78]\n  9743: a1 = u64 [a2 + 0x70]\n  9746: a5 = u64 [a2 + 0x80]\n  9750: a3 = u64 [a2 + 0x88]\n  9754: a2 = u64 [s1 + 0x98]\n  9758: a4 = a0 ^ a2\n  9761: a0 = a0 <u a2\n  9764: a2 = u64 [s1 + 0x90]\n  9768: a1 = a1 <u a2\n  9771: a1 = a0 if a4 != 0\n  9774: a4 = u64 [s1 + 0xa8]\n  9778: a0 = a3 ^ a4\n  9781: a3 = a3 <u a4\n  9784: a2 = u64 [s1 + 0xa0]\n  9788: a4 = a5 <u a2\n  9791: a4 = a3 if a0 != 0\n  9794: a2 = a2 ^ a5\n  9797: a0 = a0 | a2\n  9800: a1 = a4 if a0 != 0\n  9803: jump @307 if a1 != 0\n      : @306 (gas: 1)\n  9806: jump @478\n      : @307 (gas: 3)\n  9809: a0 = s1 + 0x520\n  9813: a1 = 0x40\n  9816: ra = 288, jump @17\n      : @308 [@dyn 144] (gas: 13)\n  9822: a1 = s1 + 0x500\n  9826: a4 = u64 [a1 + 0x38]\n  9829: a5 = u64 [a1 + 0x30]\n  9832: a3 = u64 [a1 + 0x28]\n  9835: a0 = u64 [a1 + 0x20]\n  9838: a2 = a3 | a4\n  9841: a1 = a0 | a5\n  9844: a1 = a1 | a2\n  9847: a1 = a1 >> 0x20\n  9850: a2 = a2 | a5\n  9853: a2 = a2 << 0x20\n  9856: a1 = a1 | a2\n  9859: jump @310 if a1 == 0\n      : @309 (gas: 1)\n  9862: jump @525\n      : @310 (gas: 11)\n  9865: u64 [s1 + 1296] = 0\n  9869: u64 [s1 + 1288] = 0\n  9873: u64 [s1 + 1280] = 0\n  9877: a2 = 0x8c379a000000000\n  9887: a1 = s1 + 0x500\n  9891: u64 [s1 + 0x518] = a2\n  9895: u64 [s1 + 0xb8] = a0\n  9899: u64 [s1 + 0xb0] = a3\n  9903: u64 [s1 + 0xa8] = a4\n  9907: u64 [s1 + 0xa0] = a5\n  9911: ra = 290, jump @19\n      : @311 [@dyn 145] (gas: 11)\n  9917: a1 = u64 [s1 + 0xb8]\n  9921: a0 = u64 [s1 + 0xa8]\n  9925: a3 = u64 [s1 + 0xa0]\n  9929: a3 = a3 | a0\n  9932: a4 = 0x100000000\n  9942: a0 = 0xfffffffc\n  9952: a0 = a1 <u a0\n  9955: a2 = u64 [s1 + 0xb0]\n  9959: a0 = 0 if a2 != 0\n  9961: a0 = 0 if a3 != 0\n  9963: jump @313 if a0 != 0\n      : @312 (gas: 1)\n  9966: jump @525\n      : @313 (gas: 9)\n  9969: i32 a0 = a1 + 0x4\n  9972: u64 [s1 + 1272] = 0\n  9976: u64 [s1 + 1264] = 0\n  9980: u64 [s1 + 1248] = 0x20\n  9985: a1 = s1 + 0x4e0\n  9989: u64 [s1 + 1256] = 0\n  9993: u64 [s1 + 0xa8] = a3\n  9997: u64 [s1 + 0xa0] = a4\n 10001: ra = 292, jump @19\n      : @314 [@dyn 146] (gas: 9)\n 10007: a3 = u64 [s1 + 0xa8]\n 10011: a2 = u64 [s1 + 0xb0]\n 10015: a1 = u64 [s1 + 0xb8]\n 10019: a0 = u64 [s1 + 0xa0]\n 10023: a0 = a0 + 0xffffffffffffffdc\n 10026: a0 = a1 <u a0\n 10029: a0 = 0 if a2 != 0\n 10031: a0 = 0 if a3 != 0\n 10033: jump @316 if a0 != 0\n      : @315 (gas: 1)\n 10036: jump @525\n      : @316 (gas: 7)\n 10039: i32 a0 = a1 + 0x24\n 10042: u64 [s1 + 1240] = 0\n 10046: u64 [s1 + 1232] = 0\n 10050: u64 [s1 + 1216] = 0x16\n 10055: a1 = s1 + 0x4c0\n 10059: u64 [s1 + 1224] = 0\n 10063: ra = 294, jump @19\n      : @317 [@dyn 147] (gas: 8)\n 10069: a2 = u64 [s1 + 0xb8]\n 10073: a0 = 0xffffffbc\n 10083: a0 = a2 <u a0\n 10086: a1 = u64 [s1 + 0xb0]\n 10090: a0 = 0 if a1 != 0\n 10092: a1 = u64 [s1 + 0xa8]\n 10096: a0 = 0 if a1 != 0\n 10098: jump @319 if a0 != 0\n      : @318 (gas: 1)\n 10101: jump @525\n      : @319 (gas: 11)\n 10104: i32 a0 = a2 + 0x44\n 10107: a1 = u64 [0x20040]\n 10112: a2 = u64 [0x20048]\n 10117: a3 = u64 [0x20050]\n 10122: a4 = s1 + 0x400\n 10126: u64 [a4 + 0xb8] = a1\n 10130: u64 [a4 + 0xb0] = a2\n 10134: u64 [a4 + 0xa8] = a3\n 10138: a1 = s1 + 0x4a0\n 10142: u64 [s1 + 1184] = 0\n 10146: ra = 296, jump @19\n      : @320 [@dyn 148] (gas: 3)\n 10152: a1 = 0x64\n 10155: a0 = u64 [s1 + 0xb8]\n 10159: ra = 298, jump @26\n      : @321 [@dyn 149] (gas: 5)\n 10165: i32 a1 = a0 + 0\n 10167: a0 = 0x1\n 10170: a2 = 0x64\n 10173: ecalli 7 // 'seal_return'\n 10175: fallthrough\n      : @322 (gas: 10)\n 10176: u64 [a2 + 488] = 0\n 10180: u64 [a2 + 480] = 0\n 10184: u64 [a2 + 472] = 0\n 10188: u64 [a2 + 464] = 0\n 10192: a0 = s1 + 0x1000\n 10196: i32 a0 = a0 + 0x200\n 10200: ra = 0x12c\n 10204: ecalli 10 // 'value_transferred'\n 10206: t0 = 0x12e\n 10210: jump @726\n      : @323 [@dyn 150] (gas: 1)\n 10213: t0 = 302, jump @726\n      : @324 [@dyn 151] (gas: 8)\n 10219: a0 = u64 [a4 + 0xe0]\n 10223: a1 = u64 [a4 + 0xe8]\n 10227: a2 = u64 [a4 + 0xd8]\n 10231: a3 = u64 [a4 + 0xd0]\n 10235: a1 = a1 | a2\n 10238: a0 = a0 | a3\n 10241: a0 = a0 | a1\n 10244: jump @326 if a0 == 0\n      : @325 (gas: 1)\n 10247: jump @558\n      : @326 (gas: 3)\n 10250: a0 = u64 [s1 + 0xb8]\n 10254: a1 = i32 [a0]\n 10256: jump @328 if a1 >u 3\n      : @327 (gas: 1)\n 10260: jump @559\n      : @328 (gas: 8)\n 10263: a1 = s1 + 0x1030\n 10267: u64 [a1 + 520] = 0\n 10271: u64 [a1 + 512] = 0\n 10275: u64 [a1 + 504] = 0\n 10279: u64 [a1 + 496] = 0x3\n 10284: a0 = s1 + 0x480\n 10288: a1 = s1 + 0x1220\n 10292: ra = 304, jump @21\n      : @329 [@dyn 152] (gas: 11)\n 10298: a0 = u64 [s1 + 0x498]\n 10302: u64 [s1 + 0xb8] = a0\n 10306: a0 = u64 [s1 + 0x490]\n 10310: u64 [s1 + 0xb0] = a0\n 10314: a0 = u64 [s1 + 0x488]\n 10318: u64 [s1 + 0xa8] = a0\n 10322: a0 = u64 [s1 + 0x480]\n 10326: u64 [s1 + 0xa0] = a0\n 10330: a0 = s1 + 0x460\n 10334: a1 = 0x40\n 10337: ra = 306, jump @17\n      : @330 [@dyn 153] (gas: 6)\n 10343: a4 = s1 + 0x400\n 10347: a0 = u64 [a4 + 0x78]\n 10350: a1 = u64 [a4 + 0x70]\n 10353: a2 = u64 [a4 + 0x68]\n 10356: a3 = u64 [a4 + 0x60]\n 10359: t0 = 308, jump @710\n      : @331 [@dyn 154] (gas: 1)\n 10365: jump @333 if a0 == 0\n      : @332 (gas: 1)\n 10368: jump @525\n      : @333 (gas: 14)\n 10371: a0 = u64 [s1 + 0xa0]\n 10375: a2 = s1 + 0x400\n 10379: u64 [a2 + 0x40] = a0\n 10382: a0 = u64 [s1 + 0xa8]\n 10386: u64 [a2 + 0x48] = a0\n 10389: a0 = u64 [s1 + 0xb0]\n 10393: u64 [a2 + 0x50] = a0\n 10396: a1 = s1 + 0x440\n 10400: a0 = u64 [s1 + 0xb8]\n 10404: u64 [a2 + 0x58] = a0\n 10407: a0 = a3\n 10409: u64 [s1 + 0xb8] = a3\n 10413: ra = 0x24a\n 10417: jump @19\n      : @334 (gas: 10)\n 10420: u64 [a2 + 936] = 0\n 10424: u64 [a2 + 928] = 0\n 10428: u64 [a2 + 920] = 0\n 10432: u64 [a2 + 912] = 0\n 10436: a0 = s1 + 0x1000\n 10440: i32 a0 = a0 + 0x3c0\n 10444: ra = 0x136\n 10448: ecalli 10 // 'value_transferred'\n 10450: t0 = 0x138\n 10454: jump @725\n      : @335 [@dyn 155] (gas: 1)\n 10457: t0 = 312, jump @725\n      : @336 [@dyn 156] (gas: 8)\n 10463: a0 = u64 [a4 + 0xa0]\n 10467: a1 = u64 [a4 + 0xa8]\n 10471: a2 = u64 [a4 + 0x98]\n 10475: a3 = u64 [a4 + 0x90]\n 10479: a1 = a1 | a2\n 10482: a0 = a0 | a3\n 10485: a0 = a0 | a1\n 10488: jump @338 if a0 == 0\n      : @337 (gas: 1)\n 10491: jump @560\n      : @338 (gas: 4)\n 10494: a0 = u64 [s1 + 0xb8]\n 10498: a0 = i32 [a0]\n 10500: a1 = 0x43\n 10503: jump @340 if a1 <u a0\n      : @339 (gas: 1)\n 10506: jump @561\n      : @340 (gas: 4)\n 10509: a0 = s1 + 0x1000\n 10513: ra = 0x13a\n 10517: t0 = 0x280\n 10521: jump @724\n      : @341 [@dyn 157] (gas: 32)\n 10524: a1 = s1 + 0x7ff\n 10528: a1 = a1 + 0x31\n 10531: a2 = a1 + 0x700\n 10535: a0 = u64 [a2 + 0xe0]\n 10539: u64 [s1 + 0x60] = a0\n 10542: a0 = u64 [a2 + 0xd8]\n 10546: u64 [s1 + 0x70] = a0\n 10549: a0 = u64 [a2 + 0xd0]\n 10553: u64 [s1 + 0x78] = a0\n 10556: a0 = s1 + 0x1000\n 10560: i32 a0 = a0 + 0x3e0\n 10564: a1 = 0x24\n 10567: ecalli 1 // 'call_data_load'\n 10569: a0 = s1 + 0x1030\n 10573: a2 = a0 + 0x300\n 10577: a1 = u64 [a2 + 0xc8]\n 10581: u64 [s1 + 0xb8] = a1\n 10585: a1 = u64 [a2 + 0xc0]\n 10589: u64 [s1 + 0xb0] = a1\n 10593: a1 = u64 [a2 + 0xb8]\n 10597: u64 [s1 + 0xa8] = a1\n 10601: a0 = u64 [a2 + 0xb0]\n 10605: u64 [s1 + 0xa0] = a0\n 10609: a0 = 0x300a0\n 10614: u64 [s1 + 0x98] = a0\n 10618: i32 a0 = a0 + 0\n 10620: u64 [s1 + 0x68] = a0\n 10623: ra = 0x13c\n 10627: ecalli 3 // 'caller'\n 10629: a2 = u64 [s1 + 0x98]\n 10633: t0 = 0x13e\n 10637: jump @695\n      : @342 [@dyn 158] (gas: 2)\n 10640: a2 = u64 [s1 + 0x98]\n 10644: t0 = 318, jump @695\n      : @343 [@dyn 159] (gas: 9)\n 10650: u64 [a2 + 1992] = 0\n 10654: a4 = a2 + 0x700\n 10658: u64 [a4 + 0xc0] = a1\n 10662: u64 [a4 + 0xb8] = a0\n 10666: a1 = s1 + 0x7ff\n 10670: a1 = a1 + 0x7e1\n 10674: u64 [a4 + 0xb0] = a3\n 10678: a0 = 0\n 10680: ra = 320, jump @19\n      : @344 [@dyn 160] (gas: 11)\n 10686: a0 = s1 + 0x7ff\n 10690: a0 = a0 + 0x31\n 10693: u64 [a0 + 1960] = 0\n 10697: u64 [a0 + 1952] = 0\n 10701: u64 [a0 + 1944] = 0\n 10705: a3 = a0\n 10707: a0 = 0x20\n 10710: a1 = s1 + 0x7ff\n 10714: a1 = a1 + 0x7c1\n 10718: u64 [a3 + 1936] = 0x4\n 10723: ra = 322, jump @19\n      : @345 [@dyn 161] (gas: 3)\n 10729: a1 = 0x2008c\n 10734: a0 = i32 [0x2008c]\n 10739: jump @347 if a0 >u 63\n      : @346 (gas: 2)\n 10743: u32 [0x2008c] = 0x40\n 10749: fallthrough\n      : @347 (gas: 15)\n 10750: a0 = sp + 0xffffffffffffffe0\n 10753: a2 = a0 & 0xffffffffffffffe0\n 10756: u64 [s1 + 0x80] = a2\n 10760: sp = a2\n 10762: a0 = 0x200a0\n 10767: i32 a0 = a0 + 0\n 10769: i32 a2 = a2 + 0\n 10771: u64 [s1 + 0x90] = a1\n 10775: a1 = 0x40\n 10778: u64 [s1 + 0x88] = a0\n 10782: ra = 0x144\n 10786: ecalli 6 // 'hash_keccak_256'\n 10788: a3 = u64 [s1 + 0x80]\n 10792: t0 = 0x146\n 10796: jump @706\n      : @348 [@dyn 162] (gas: 2)\n 10799: a3 = u64 [s1 + 0x80]\n 10803: t0 = 326, jump @706\n      : @349 [@dyn 163] (gas: 8)\n 10809: u64 [a5 + 0xe8] = a3\n 10813: u64 [a5 + 0xe0] = a2\n 10817: u64 [a5 + 0xd8] = a1\n 10821: u64 [a5 + 0xd0] = a0\n 10825: a0 = s1 + 0x7ff\n 10829: a0 = a0 + 0x7a1\n 10833: a1 = s1 + 0x1400\n 10837: ra = 328, jump @21\n      : @350 [@dyn 164] (gas: 31)\n 10843: a4 = s1 + 0x7ff\n 10847: a4 = a4 + 0x31\n 10850: a5 = a4 + 0x700\n 10854: a0 = u64 [a5 + 0x78]\n 10857: a1 = u64 [a5 + 0x70]\n 10860: a2 = u64 [a5 + 0x80]\n 10864: a3 = u64 [a5 + 0x88]\n 10868: t0 = a4\n 10870: a5 = u64 [s1 + 0xa8]\n 10874: a4 = a0 ^ a5\n 10877: a0 = a0 <u a5\n 10880: a5 = u64 [s1 + 0xa0]\n 10884: a1 = a1 <u a5\n 10887: a1 = a0 if a4 != 0\n 10890: a4 = u64 [s1 + 0xb8]\n 10894: a0 = a3 ^ a4\n 10897: a3 = a3 <u a4\n 10900: a5 = u64 [s1 + 0xb0]\n 10904: a4 = a2 <u a5\n 10907: a4 = a3 if a0 != 0\n 10910: a2 = a2 ^ a5\n 10913: a0 = a0 | a2\n 10916: a1 = a4 if a0 != 0\n 10919: a0 = a1 ^ 0x1\n 10922: u64 [t0 + 1896] = 0\n 10926: u64 [t0 + 1888] = 0\n 10930: u64 [t0 + 0x750] = a0\n 10934: a0 = s1 + 0x7ff\n 10938: a0 = a0 + 0x781\n 10942: u64 [t0 + 1880] = 0\n 10946: ra = 330, jump @663\n      : @351 [@dyn 165] (gas: 6)\n 10952: a0 = u64 [s1 + 0x68]\n 10955: ra = 0x14c\n 10959: ecalli 3 // 'caller'\n 10961: a2 = u64 [s1 + 0x98]\n 10965: t0 = 0x14e\n 10969: jump @695\n      : @352 [@dyn 166] (gas: 2)\n 10972: a2 = u64 [s1 + 0x98]\n 10976: t0 = 334, jump @695\n      : @353 [@dyn 167] (gas: 9)\n 10982: u64 [a2 + 1864] = 0\n 10986: a4 = a2 + 0x700\n 10990: u64 [a4 + 0x40] = a1\n 10993: u64 [a4 + 0x38] = a0\n 10996: a1 = s1 + 0x7ff\n 11000: a1 = a1 + 0x761\n 11004: u64 [a4 + 0x30] = a3\n 11007: a0 = 0\n 11009: ra = 336, jump @19\n      : @354 [@dyn 168] (gas: 11)\n 11015: a1 = s1 + 0x7ff\n 11019: a1 = a1 + 0x31\n 11022: u64 [a1 + 1832] = 0\n 11026: u64 [a1 + 1824] = 0\n 11030: u64 [a1 + 1808] = 0x4\n 11035: a2 = a1\n 11037: a0 = 0x20\n 11040: a1 = s1 + 0x7ff\n 11044: a1 = a1 + 0x741\n 11048: u64 [a2 + 1816] = 0\n 11052: ra = 338, jump @19\n      : @355 [@dyn 169] (gas: 7)\n 11058: a1 = u64 [s1 + 0x90]\n 11062: a0 = sp + 0xffffffffffffffe0\n 11065: a0 = a0 & 0xffffffffffffffe0\n 11068: u64 [s1 + 0x80] = a0\n 11072: sp = a0\n 11074: a0 = i32 [a1]\n 11076: jump @357 if a0 >u 63\n      : @356 (gas: 2)\n 11080: u32 [a1 + 0] = 0x40\n 11083: fallthrough\n      : @357 (gas: 12)\n 11084: a0 = sp + 0xffffffffffffffe0\n 11087: a0 = a0 & 0xffffffffffffffe0\n 11090: u64 [s1 + 0x58] = a0\n 11093: sp = a0\n 11095: i32 a2 = a0 + 0\n 11097: a1 = 0x40\n 11100: a0 = u64 [s1 + 0x88]\n 11104: ra = 0x154\n 11108: ecalli 6 // 'hash_keccak_256'\n 11110: a3 = u64 [s1 + 0x58]\n 11113: t0 = 0x156\n 11117: jump @702\n      : @358 [@dyn 170] (gas: 2)\n 11120: a3 = u64 [s1 + 0x58]\n 11123: t0 = 342, jump @702\n      : @359 [@dyn 171] (gas: 2)\n 11129: a0 = a0 + 0x721\n 11133: ra = 344, jump @21\n      : @360 [@dyn 172] (gas: 26)\n 11139: a5 = s1 + 0x7ff\n 11143: a5 = a5 + 0x31\n 11146: a3 = u64 [a5 + 0x6f0]\n 11150: a0 = u64 [a5 + 0x6f8]\n 11154: a1 = u64 [a5 + 0x700]\n 11158: a2 = u64 [a5 + 0x708]\n 11162: a4 = u64 [s1 + 0xb8]\n 11166: u64 [a5 + 0x6a8] = a4\n 11170: a4 = u64 [s1 + 0xb0]\n 11174: u64 [a5 + 0x6a0] = a4\n 11178: a4 = u64 [s1 + 0xa8]\n 11182: u64 [a5 + 0x698] = a4\n 11186: a4 = u64 [s1 + 0xa0]\n 11190: u64 [a5 + 0x690] = a4\n 11194: a4 = a5 + 0x600\n 11198: u64 [a4 + 0xc8] = a2\n 11202: u64 [a4 + 0xc0] = a1\n 11206: u64 [a4 + 0xb8] = a0\n 11210: a0 = s1 + 0x7ff\n 11214: a0 = a0 + 0x701\n 11218: a1 = s1 + 0x7ff\n 11222: a1 = a1 + 0x6e1\n 11226: a2 = s1 + 0x7ff\n 11230: a2 = a2 + 0x6c1\n 11234: u64 [a4 + 0xb0] = a3\n 11238: ra = 346, jump @677\n      : @361 [@dyn 173] (gas: 15)\n 11244: a3 = s1 + 0x7ff\n 11248: a3 = a3 + 0x31\n 11251: a4 = a3 + 0x600\n 11255: a0 = u64 [a4 + 0xe8]\n 11259: a1 = u64 [a4 + 0xe0]\n 11263: a2 = u64 [a4 + 0xd8]\n 11267: a3 = u64 [a4 + 0xd0]\n 11271: a4 = s1 + 0x1030\n 11275: u64 [a4 + 0x408] = a0\n 11279: u64 [a4 + 0x400] = a1\n 11283: u64 [a4 + 0x3f8] = a2\n 11287: u64 [a4 + 0x3f0] = a3\n 11291: a1 = s1 + 0x1420\n 11295: a0 = u64 [s1 + 0x80]\n 11299: ra = 348, jump @22\n      : @362 [@dyn 174] (gas: 17)\n 11305: a0 = u64 [s1 + 0x60]\n 11308: a0 = a0 << 0x20\n 11311: a0 = a0 >> 0x20\n 11314: a2 = s1 + 0x7ff\n 11318: a2 = a2 + 0x31\n 11321: u64 [a2 + 1672] = 0\n 11325: u64 [s1 + 0x60] = a0\n 11328: a3 = a2 + 0x600\n 11332: u64 [a3 + 0x80] = a0\n 11336: a0 = u64 [s1 + 0x70]\n 11339: u64 [a3 + 0x78] = a0\n 11342: a1 = s1 + 0x7ff\n 11346: a1 = a1 + 0x6a1\n 11350: a0 = u64 [s1 + 0x78]\n 11353: u64 [a3 + 0x70] = a0\n 11356: a0 = 0\n 11358: ra = 350, jump @19\n      : @363 [@dyn 175] (gas: 11)\n 11364: a1 = s1 + 0x7ff\n 11368: a1 = a1 + 0x31\n 11371: u64 [a1 + 1640] = 0\n 11375: u64 [a1 + 1632] = 0\n 11379: u64 [a1 + 1616] = 0x4\n 11384: a2 = a1\n 11386: a0 = 0x20\n 11389: a1 = s1 + 0x7ff\n 11393: a1 = a1 + 0x681\n 11397: u64 [a2 + 1624] = 0\n 11401: ra = 352, jump @19\n      : @364 [@dyn 176] (gas: 7)\n 11407: a1 = u64 [s1 + 0x90]\n 11411: a0 = sp + 0xffffffffffffffe0\n 11414: a0 = a0 & 0xffffffffffffffe0\n 11417: u64 [s1 + 0x80] = a0\n 11421: sp = a0\n 11423: a0 = i32 [a1]\n 11425: jump @366 if a0 >=u 64\n      : @365 (gas: 2)\n 11429: u32 [a1 + 0] = 0x40\n 11432: fallthrough\n      : @366 (gas: 12)\n 11433: a0 = sp + 0xffffffffffffffe0\n 11436: a0 = a0 & 0xffffffffffffffe0\n 11439: u64 [s1 + 0x90] = a0\n 11443: sp = a0\n 11445: i32 a2 = a0 + 0\n 11447: a1 = 0x40\n 11450: a0 = u64 [s1 + 0x88]\n 11454: ra = 0x162\n 11458: ecalli 6 // 'hash_keccak_256'\n 11460: a3 = u64 [s1 + 0x90]\n 11464: t0 = 0x164\n 11468: jump @702\n      : @367 [@dyn 177] (gas: 2)\n 11471: a3 = u64 [s1 + 0x90]\n 11475: t0 = 356, jump @702\n      : @368 [@dyn 178] (gas: 2)\n 11481: a0 = a0 + 0x661\n 11485: ra = 358, jump @21\n      : @369 [@dyn 179] (gas: 25)\n 11491: a5 = s1 + 0x7ff\n 11495: a5 = a5 + 0x31\n 11498: a3 = u64 [a5 + 0x630]\n 11502: a0 = u64 [a5 + 0x638]\n 11506: a1 = u64 [a5 + 0x640]\n 11510: a2 = u64 [a5 + 0x648]\n 11514: a4 = u64 [s1 + 0xb8]\n 11518: u64 [a5 + 0x5e8] = a4\n 11522: a4 = u64 [s1 + 0xb0]\n 11526: u64 [a5 + 0x5e0] = a4\n 11530: a4 = u64 [s1 + 0xa8]\n 11534: u64 [a5 + 0x5d8] = a4\n 11538: a4 = u64 [s1 + 0xa0]\n 11542: u64 [a5 + 0x5d0] = a4\n 11546: u64 [a5 + 0x608] = a2\n 11550: u64 [a5 + 0x600] = a1\n 11554: u64 [a5 + 0x5f8] = a0\n 11558: a0 = s1 + 0x7ff\n 11562: a0 = a0 + 0x641\n 11566: a1 = s1 + 0x7ff\n 11570: a1 = a1 + 0x621\n 11574: a2 = s1 + 0x7ff\n 11578: a2 = a2 + 0x601\n 11582: u64 [a5 + 0x5f0] = a3\n 11586: ra = 360, jump @685\n      : @370 [@dyn 180] (gas: 16)\n 11592: a3 = s1 + 0x7ff\n 11596: a3 = a3 + 0x31\n 11599: a4 = a3 + 0x600\n 11603: a0 = u64 [a4 + 0x28]\n 11606: a1 = u64 [a4 + 0x20]\n 11609: a2 = u64 [a4 + 0x18]\n 11612: a3 = u64 [a4 + 0x10]\n 11615: a4 = s1 + 0x1030\n 11619: a5 = a4 + 0x400\n 11623: u64 [a5 + 0x28] = a0\n 11626: u64 [a5 + 0x20] = a1\n 11629: u64 [a5 + 0x18] = a2\n 11632: u64 [a5 + 0x10] = a3\n 11635: a1 = s1 + 0x1440\n 11639: a0 = u64 [s1 + 0x80]\n 11643: ra = 362, jump @22\n      : @371 [@dyn 181] (gas: 4)\n 11649: a0 = s1 + 0x7ff\n 11653: a0 = a0 + 0x5e1\n 11657: a1 = 0x40\n 11660: ra = 364, jump @17\n      : @372 [@dyn 182] (gas: 8)\n 11666: a3 = s1 + 0x7ff\n 11670: a3 = a3 + 0x31\n 11673: a5 = a3 + 0x500\n 11677: a4 = u64 [a5 + 0xc8]\n 11681: a1 = u64 [a5 + 0xc0]\n 11685: a2 = u64 [a5 + 0xb8]\n 11689: a0 = u64 [a5 + 0xb0]\n 11693: t0 = 366, jump @719\n      : @373 [@dyn 183] (gas: 1)\n 11699: jump @375 if a1 == 0\n      : @374 (gas: 1)\n 11702: jump @525\n      : @375 (gas: 13)\n 11705: a1 = u64 [s1 + 0xa0]\n 11709: a4 = a3 + 0x500\n 11713: u64 [a4 + 0x90] = a1\n 11717: a1 = u64 [s1 + 0xa8]\n 11721: u64 [a4 + 0x98] = a1\n 11725: a1 = u64 [s1 + 0xb0]\n 11729: u64 [a4 + 0xa0] = a1\n 11733: a1 = s1 + 0x7ff\n 11737: a1 = a1 + 0x5c1\n 11741: a2 = u64 [s1 + 0xb8]\n 11745: u64 [a4 + 0xa8] = a2\n 11749: u64 [s1 + 0xb8] = a0\n 11753: ra = 368, jump @19\n      : @376 [@dyn 184] (gas: 6)\n 11759: a0 = u64 [s1 + 0x68]\n 11762: ra = 0x172\n 11766: ecalli 3 // 'caller'\n 11768: a2 = u64 [s1 + 0x98]\n 11772: t0 = 0x174\n 11776: jump @709\n      : @377 [@dyn 185] (gas: 2)\n 11779: a2 = u64 [s1 + 0x98]\n 11783: t0 = 372, jump @709\n      : @378 [@dyn 186] (gas: 58)\n 11789: t0 = a1 | a0\n 11792: a3 = a3 >> 0x20\n 11795: a2 = reverse a2\n 11797: a1 = a2 << 0x20\n 11800: a1 = a1 | a3\n 11803: a2 = a2 >> 0x20\n 11806: a3 = s1 + 0x7ff\n 11810: a3 = a3 + 0x31\n 11813: a0 = u64 [s1 + 0x60]\n 11816: u64 [a3 + 0x540] = a0\n 11820: a3 = u64 [0x20020]\n 11825: a4 = s1 + 0x7ff\n 11829: a4 = a4 + 0x31\n 11832: u64 [a4 + 1352] = 0\n 11836: a4 = s1 + 0x7ff\n 11840: a4 = a4 + 0x31\n 11843: a0 = u64 [s1 + 0x70]\n 11846: u64 [a4 + 0x538] = a0\n 11850: a4 = s1 + 0x7ff\n 11854: a4 = a4 + 0x31\n 11857: a0 = u64 [s1 + 0x78]\n 11860: u64 [a4 + 0x530] = a0\n 11864: a0 = s1 + 0x7ff\n 11868: a0 = a0 + 0x31\n 11871: u64 [a0 + 0x588] = a3\n 11875: a3 = u64 [0x20028]\n 11880: a4 = u64 [0x20030]\n 11885: a5 = u64 [0x20038]\n 11890: a0 = s1 + 0x7ff\n 11894: a0 = a0 + 0x31\n 11897: u64 [a0 + 1384] = 0\n 11901: a0 = s1 + 0x7ff\n 11905: a0 = a0 + 0x31\n 11908: u64 [a0 + 0x580] = a3\n 11912: a0 = s1 + 0x7ff\n 11916: a0 = a0 + 0x31\n 11919: u64 [a0 + 0x578] = a4\n 11923: a0 = s1 + 0x7ff\n 11927: a0 = a0 + 0x31\n 11930: u64 [a0 + 0x570] = a5\n 11934: a0 = s1 + 0x7ff\n 11938: a0 = a0 + 0x31\n 11941: u64 [a0 + 0x560] = a2\n 11945: a0 = s1 + 0x7ff\n 11949: a0 = a0 + 0x31\n 11952: u64 [a0 + 0x558] = a1\n 11956: a1 = 0x20\n 11959: a2 = s1 + 0x7ff\n 11963: a2 = a2 + 0x5a1\n 11967: a3 = s1 + 0x7ff\n 11971: a3 = a3 + 0x581\n 11975: a4 = s1 + 0x7ff\n 11979: a4 = a4 + 0x561\n 11983: a0 = s1 + 0x7ff\n 11987: a0 = a0 + 0x31\n 11990: u64 [a0 + 0x550] = t0\n 11994: a0 = u64 [s1 + 0xb8]\n 11998: ra = 374, jump @23\n      : @379 [@dyn 187] (gas: 4)\n 12004: a0 = s1 + 0x7ff\n 12008: a0 = a0 + 0x541\n 12012: a1 = 0x40\n 12015: ra = 376, jump @17\n      : @380 [@dyn 188] (gas: 8)\n 12021: a3 = s1 + 0x7ff\n 12025: a3 = a3 + 0x31\n 12028: a5 = a3 + 0x500\n 12032: a4 = u64 [a5 + 0x28]\n 12035: a1 = u64 [a5 + 0x20]\n 12038: a2 = u64 [a5 + 0x18]\n 12041: a0 = u64 [a5 + 0x10]\n 12044: t0 = 378, jump @719\n      : @381 [@dyn 189] (gas: 1)\n 12050: jump @383 if a1 == 0\n      : @382 (gas: 1)\n 12053: jump @525\n      : @383 (gas: 9)\n 12056: u64 [a3 + 1288] = 0\n 12060: u64 [a3 + 1280] = 0\n 12064: u64 [a3 + 1264] = 0x1\n 12069: a1 = s1 + 0x7ff\n 12073: a1 = a1 + 0x521\n 12077: u64 [a3 + 1272] = 0\n 12081: u64 [s1 + 0xb8] = a0\n 12085: ra = 0x24a\n 12089: jump @19\n      : @384 (gas: 1)\n 12092: jump @386 if a0 == 1889567281\n      : @385 (gas: 1)\n 12099: jump @550\n      : @386 (gas: 10)\n 12102: u64 [a2 + 808] = 0\n 12106: u64 [a2 + 800] = 0\n 12110: u64 [a2 + 792] = 0\n 12114: u64 [a2 + 784] = 0\n 12118: a0 = s1 + 0x1000\n 12122: i32 a0 = a0 + 0x340\n 12126: ra = 0x17c\n 12130: ecalli 10 // 'value_transferred'\n 12132: t0 = 0x17e\n 12136: jump @725\n      : @387 [@dyn 190] (gas: 1)\n 12139: t0 = 382, jump @725\n      : @388 [@dyn 191] (gas: 8)\n 12145: a0 = u64 [a4 + 0x20]\n 12148: a1 = u64 [a4 + 0x28]\n 12151: a2 = u64 [a4 + 0x18]\n 12154: a3 = u64 [a4 + 0x10]\n 12157: a1 = a1 | a2\n 12160: a0 = a0 | a3\n 12163: a0 = a0 | a1\n 12166: jump @390 if a0 == 0\n      : @389 (gas: 1)\n 12169: jump @562\n      : @390 (gas: 4)\n 12172: a0 = u64 [s1 + 0xb8]\n 12176: a0 = i32 [a0]\n 12178: a1 = 0x23\n 12181: jump @392 if a1 <u a0\n      : @391 (gas: 1)\n 12184: jump @563\n      : @392 (gas: 5)\n 12187: a0 = s1 + 0x7ff\n 12191: a0 = a0 + 0x301\n 12195: ra = 0x180\n 12199: t0 = 0x280\n 12203: jump @724\n      : @393 [@dyn 192] (gas: 14)\n 12206: a3 = s1 + 0x7ff\n 12210: a3 = a3 + 0x31\n 12213: a4 = a3 + 0x200\n 12217: a0 = u64 [a4 + 0xd0]\n 12221: a1 = u64 [a4 + 0xd8]\n 12225: a2 = u32 [a3 + 0x2e0]\n 12229: u64 [a3 + 712] = 0\n 12233: u64 [a4 + 0xc0] = a2\n 12237: u64 [a4 + 0xb8] = a1\n 12241: a1 = s1 + 0x7ff\n 12245: a1 = a1 + 0x2e1\n 12249: u64 [a4 + 0xb0] = a0\n 12253: a0 = 0\n 12255: ra = 386, jump @19\n      : @394 [@dyn 193] (gas: 11)\n 12261: a1 = s1 + 0x7ff\n 12265: a1 = a1 + 0x31\n 12268: u64 [a1 + 680] = 0\n 12272: u64 [a1 + 672] = 0\n 12276: u64 [a1 + 656] = 0x4\n 12281: a2 = a1\n 12283: a0 = 0x20\n 12286: a1 = s1 + 0x7ff\n 12290: a1 = a1 + 0x2c1\n 12294: u64 [a2 + 664] = 0\n 12298: ra = 388, jump @19\n      : @395 [@dyn 194] (gas: 2)\n 12304: a1 = i32 [0x2008c]\n 12309: jump @397 if a1 >u 63\n      : @396 (gas: 2)\n 12313: u32 [0x2008c] = 0x40\n 12319: fallthrough\n      : @397 (gas: 13)\n 12320: a0 = sp + 0xffffffffffffffe0\n 12323: a2 = a0 & 0xffffffffffffffe0\n 12326: u64 [s1 + 0xb8] = a2\n 12330: sp = a2\n 12332: a0 = 0x200a0\n 12337: i32 a0 = a0 + 0\n 12339: i32 a2 = a2 + 0\n 12341: a1 = 0x40\n 12344: ra = 0x186\n 12348: ecalli 6 // 'hash_keccak_256'\n 12350: a3 = u64 [s1 + 0xb8]\n 12354: t0 = 0x188\n 12358: jump @706\n      : @398 [@dyn 195] (gas: 2)\n 12361: a3 = u64 [s1 + 0xb8]\n 12365: t0 = 392, jump @706\n      : @399 [@dyn 196] (gas: 8)\n 12371: u64 [a5 + 0x48] = a3\n 12374: u64 [a5 + 0x40] = a2\n 12377: u64 [a5 + 0x38] = a1\n 12380: u64 [a5 + 0x30] = a0\n 12383: a0 = s1 + 0x7ff\n 12387: a0 = a0 + 0x2a1\n 12391: a1 = s1 + 0x1360\n 12395: ra = 394, jump @21\n      : @400 [@dyn 197] (gas: 15)\n 12401: a1 = s1 + 0x7ff\n 12405: a1 = a1 + 0x31\n 12408: a2 = a1 + 0x200\n 12412: a0 = u64 [a2 + 0x88]\n 12416: u64 [s1 + 0xb8] = a0\n 12420: a0 = u64 [a2 + 0x80]\n 12424: u64 [s1 + 0xb0] = a0\n 12428: a0 = u64 [a2 + 0x78]\n 12431: u64 [s1 + 0xa8] = a0\n 12435: a0 = u64 [a2 + 0x70]\n 12438: u64 [s1 + 0xa0] = a0\n 12442: a0 = s1 + 0x7ff\n 12446: a0 = a0 + 0x281\n 12450: a1 = 0x40\n 12453: ra = 396, jump @17\n      : @401 [@dyn 198] (gas: 15)\n 12459: a3 = s1 + 0x7ff\n 12463: a3 = a3 + 0x31\n 12466: a5 = a3 + 0x200\n 12470: a0 = u64 [a5 + 0x68]\n 12473: a1 = u64 [a5 + 0x60]\n 12476: a2 = u64 [a5 + 0x58]\n 12479: a4 = u64 [a5 + 0x50]\n 12482: a0 = a0 | a2\n 12485: a2 = a4 | a1\n 12488: a2 = a2 | a0\n 12491: a2 = a2 >> 0x20\n 12494: a0 = a0 | a1\n 12497: a0 = a0 << 0x20\n 12500: a0 = a0 | a2\n 12503: jump @525 if a0 != 0\n      : @402 (gas: 15)\n 12507: a0 = u64 [s1 + 0xa0]\n 12511: a2 = a3 + 0x200\n 12515: u64 [a2 + 0x30] = a0\n 12518: a0 = u64 [s1 + 0xa8]\n 12522: u64 [a2 + 0x38] = a0\n 12525: a0 = u64 [s1 + 0xb0]\n 12529: u64 [a2 + 0x40] = a0\n 12532: a1 = s1 + 0x7ff\n 12536: a1 = a1 + 0x261\n 12540: a0 = u64 [s1 + 0xb8]\n 12544: u64 [a2 + 0x48] = a0\n 12547: a0 = a4\n 12549: u64 [s1 + 0xb8] = a4\n 12553: ra = 0x24a\n 12557: jump @19\n      : @403 (gas: 10)\n 12560: u64 [a2 + 360] = 0\n 12564: u64 [a2 + 352] = 0\n 12568: u64 [a2 + 344] = 0\n 12572: u64 [a2 + 336] = 0\n 12576: a0 = s1 + 0x1000\n 12580: i32 a0 = a0 + 0x180\n 12584: ra = 0x18e\n 12588: ecalli 10 // 'value_transferred'\n 12590: t0 = 0x190\n 12594: jump @726\n      : @404 [@dyn 199] (gas: 1)\n 12597: t0 = 400, jump @726\n      : @405 [@dyn 200] (gas: 8)\n 12603: a0 = u64 [a4 + 0x60]\n 12606: a1 = u64 [a4 + 0x68]\n 12609: a2 = u64 [a4 + 0x58]\n 12612: a3 = u64 [a4 + 0x50]\n 12615: a1 = a1 | a2\n 12618: a0 = a0 | a3\n 12621: a0 = a0 | a1\n 12624: jump @407 if a0 == 0\n      : @406 (gas: 1)\n 12627: jump @564\n      : @407 (gas: 3)\n 12630: a0 = u64 [s1 + 0xb8]\n 12634: a0 = i32 [a0]\n 12636: jump @409 if a0 >u 3\n      : @408 (gas: 1)\n 12640: jump @565\n      : @409 (gas: 3)\n 12643: a0 = s1 + 0x2a0\n 12647: a1 = 0x40\n 12650: ra = 402, jump @17\n      : @410 [@dyn 201] (gas: 16)\n 12656: a0 = u64 [s1 + 0x2b8]\n 12660: u64 [s1 + 0x20] = a0\n 12663: a0 = u64 [s1 + 0x2b0]\n 12667: u64 [s1 + 0x30] = a0\n 12670: a0 = u64 [s1 + 0x2a8]\n 12674: u64 [s1 + 0x18] = a0\n 12677: a0 = u64 [s1 + 0x2a0]\n 12681: u64 [s1 + 0x28] = a0\n 12684: a0 = s1 + 0x1030\n 12688: u64 [a0 + 392] = 0\n 12692: u64 [a0 + 384] = 0\n 12696: u64 [a0 + 376] = 0\n 12700: u64 [a0 + 368] = 0\n 12704: a0 = s1 + 0x280\n 12708: a1 = s1 + 0x11a0\n 12712: ra = 404, jump @21\n      : @411 [@dyn 202] (gas: 34)\n 12718: a2 = u64 [s1 + 0x290]\n 12722: t2 = u64 [s1 + 0x288]\n 12726: t0 = u64 [s1 + 0x298]\n 12730: a5 = u64 [s1 + 0x280]\n 12734: a0 = a2 << 0x3f\n 12737: a1 = t2 >> 0x1\n 12740: a0 = a0 | a1\n 12743: a1 = t0 << 0x3f\n 12746: u64 [s1 + 0xb0] = a2\n 12750: a2 = a2 >> 0x1\n 12753: a1 = a1 | a2\n 12756: a2 = t2 << 0x3f\n 12759: a3 = a5 >> 0x1\n 12762: a4 = a3 | a2\n 12765: a2 = t0 >> 0x1\n 12768: u64 [s1 + 0xa8] = a5\n 12772: a5 = a5 & 0x1\n 12775: a3 = -a5\n 12777: a1 = a1 & a3\n 12780: t1 = a3 & a0\n 12783: a2 = a2 & a3\n 12786: ra = a4 & 0x7f\n 12789: a4 = ra if a5 == 0\n 12792: u64 [s1 + 0x78] = a4\n 12795: a0 = a4 <u 0x20\n 12798: u64 [s1 + 0x68] = t1\n 12801: a0 = 0 if t1 != 0\n 12803: u64 [s1 + 0x70] = a1\n 12806: u64 [s1 + 0x60] = a2\n 12809: a1 = a1 | a2\n 12812: a0 = 0 if a1 != 0\n 12814: u64 [s1 + 0xb8] = a5\n 12818: a1 = a5 <u 0x1\n 12821: jump @413 if a1 == a0\n      : @412 (gas: 1)\n 12824: jump @566\n      : @413 (gas: 12)\n 12827: a2 = u64 [s1 + 0x30]\n 12830: a4 = u64 [s1 + 0x28]\n 12833: a0 = a4 | a2\n 12836: a1 = u64 [s1 + 0x20]\n 12839: a3 = u64 [s1 + 0x18]\n 12842: a1 = a1 | a3\n 12845: a0 = a0 | a1\n 12848: a0 = a0 >> 0x20\n 12851: a1 = a1 | a2\n 12854: a1 = a1 << 0x20\n 12857: a1 = a1 | a0\n 12860: jump @525 if a1 != 0\n      : @414 (gas: 15)\n 12864: a0 = a4\n 12866: u64 [s1 + 0x90] = ra\n 12870: u64 [s1 + 0x98] = t2\n 12874: u64 [s1 + 0xa0] = t0\n 12878: a1 = u64 [s1 + 0x78]\n 12881: a3 = s1 + 0x200\n 12885: u64 [a3 + 0x60] = a1\n 12888: a1 = u64 [s1 + 0x68]\n 12891: u64 [a3 + 0x68] = a1\n 12894: a1 = u64 [s1 + 0x70]\n 12897: u64 [a3 + 0x70] = a1\n 12900: a1 = s1 + 0x260\n 12904: a2 = u64 [s1 + 0x60]\n 12907: u64 [a3 + 0x78] = a2\n 12910: ra = 406, jump @19\n      : @415 [@dyn 203] (gas: 2)\n 12916: a0 = u64 [s1 + 0xb8]\n 12920: jump @526 if a0 != 0\n      : @416 (gas: 1)\n 12924: t0 = 408, jump @714\n      : @417 [@dyn 204] (gas: 1)\n 12930: jump @525 if a1 == 0\n      : @418 (gas: 13)\n 12934: a0 = u64 [s1 + 0xa8]\n 12938: a1 = a0 & 0xffffffffffffff00\n 12942: i32 a0 = a3 + 0x20\n 12945: a3 = u64 [s1 + 0x98]\n 12949: a2 = s1 + 0x100\n 12953: u64 [a2 + 0xe8] = a3\n 12957: u64 [a2 + 0xe0] = a1\n 12961: a1 = u64 [s1 + 0xb0]\n 12965: u64 [a2 + 0xf0] = a1\n 12969: a1 = s1 + 0x1e0\n 12973: a3 = u64 [s1 + 0xa0]\n 12977: u64 [a2 + 0xf8] = a3\n 12981: ra = 410, jump @19\n      : @419 [@dyn 205] (gas: 8)\n 12987: t1 = 0\n 12989: u64 [s1 + 168] = 0\n 12993: u64 [s1 + 176] = 0\n 12997: a0 = u64 [s1 + 0x90]\n 13001: a0 = a0 >u 0\n 13003: a0 = a0 << 0x5\n 13006: u64 [s1 + 0xb8] = a0\n 13010: fallthrough\n      : @420 (gas: 18)\n 13011: a1 = u64 [s1 + 0xb8]\n 13015: a0 = a1 + 0x3f\n 13018: t0 = a0 <u a1\n 13021: a3 = t1 + t0\n 13024: a1 = a0 & 0xffffffffffffffe0\n 13027: a0 = t1\n 13029: t1 = u64 [s1 + 0x28]\n 13032: t1 = t1 + a1\n 13035: a4 = t1 <u a1\n 13038: ra = u64 [s1 + 0x18]\n 13041: a1 = a3 + ra\n 13044: t2 = a1 + a4\n 13047: a5 = t2 ^ a3\n 13050: a2 = t2 <u a3\n 13053: a2 = a4 if a5 == 0\n 13056: a3 = a3 <u a0\n 13059: a3 = t0 if t0 == 0\n 13062: t0 = 412, jump @699\n      : @421 [@dyn 206] (gas: 1)\n 13068: jump @423 if a5 == 0\n      : @422 (gas: 1)\n 13071: jump @581\n      : @423 (gas: 1)\n 13074: t0 = 414, jump @723\n      : @424 [@dyn 207] (gas: 10)\n 13080: t0 = a2 <u a0\n 13083: a0 = u64 [s1 + 0x20]\n 13086: a4 = a3 ^ a0\n 13089: a0 = a3 <u a0\n 13092: a0 = t0 if a4 == 0\n 13095: t0 = u64 [s1 + 0x30]\n 13098: a1 = a2 ^ t0\n 13101: a1 = a1 | a4\n 13104: a0 = a5 if a1 == 0\n 13107: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 13110: jump @581\n      : @426 (gas: 7)\n 13113: u64 [s1 + 0x1c0] = t1\n 13117: u64 [s1 + 0x1c8] = t2\n 13121: u64 [s1 + 0x1d0] = a2\n 13125: a0 = 0x40\n 13128: a1 = s1 + 0x1c0\n 13132: u64 [s1 + 0x1d8] = a3\n 13136: ra = 416, jump @19\n      : @427 [@dyn 208] (gas: 3)\n 13142: a0 = s1 + 0x1a0\n 13146: a1 = 0x40\n 13149: ra = 418, jump @17\n      : @428 [@dyn 209] (gas: 25)\n 13155: a5 = s1 + 0x100\n 13159: a2 = u64 [a5 + 0xb8]\n 13163: u64 [s1 + 0xb8] = a2\n 13167: a1 = u64 [a5 + 0xb0]\n 13171: u64 [s1 + 0xb0] = a1\n 13175: a3 = u64 [a5 + 0xa8]\n 13179: u64 [s1 + 0xa8] = a3\n 13183: a4 = u64 [a5 + 0xa0]\n 13187: u64 [s1 + 0xa0] = a4\n 13191: a0 = u64 [s1 + 0x20]\n 13194: u64 [a5 + 0x58] = a0\n 13197: a0 = u64 [s1 + 0x30]\n 13200: u64 [a5 + 0x50] = a0\n 13203: a0 = u64 [s1 + 0x18]\n 13206: u64 [a5 + 0x48] = a0\n 13209: a0 = u64 [s1 + 0x28]\n 13212: u64 [a5 + 0x40] = a0\n 13215: u64 [a5 + 0x78] = a2\n 13218: u64 [a5 + 0x70] = a1\n 13221: u64 [a5 + 0x68] = a3\n 13224: a0 = s1 + 0x180\n 13228: a1 = s1 + 0x160\n 13232: a2 = s1 + 0x140\n 13236: u64 [a5 + 0x60] = a4\n 13239: ra = 420, jump @634\n      : @429 [@dyn 210] (gas: 1)\n 13245: t0 = 422, jump @720\n      : @430 [@dyn 211] (gas: 1)\n 13251: jump @525 if a0 != 0\n      : @431 (gas: 8)\n 13255: t0 = a3\n 13257: a5 = s1 + 0x100\n 13261: a0 = u64 [a5 + 0x88]\n 13265: a1 = u64 [a5 + 0x98]\n 13269: u64 [s1 + 0x98] = a1\n 13273: t1 = u64 [s1 + 0x180]\n 13277: a3 = u64 [a5 + 0x90]\n 13281: jump @475\n      : @432 (gas: 8)\n 13284: u64 [a2 + 1096] = 0\n 13288: u64 [a2 + 1088] = 0\n 13292: u64 [a2 + 1080] = 0\n 13296: u64 [a2 + 1072] = 0\n 13300: a0 = s1 + 0x1000\n 13304: i32 a0 = a0 + 0x460\n 13308: ecalli 10 // 'value_transferred'\n 13310: fallthrough\n      : @433 (gas: 10)\n 13311: a3 = s1 + 0x1030\n 13315: a4 = a3 + 0x400\n 13319: a0 = u64 [a4 + 0x40]\n 13322: a1 = u64 [a4 + 0x48]\n 13325: a2 = u64 [a4 + 0x38]\n 13328: a3 = u64 [a4 + 0x30]\n 13331: a1 = a1 | a2\n 13334: a0 = a0 | a3\n 13337: a0 = a0 | a1\n 13340: jump @435 if a0 == 0\n      : @434 (gas: 1)\n 13343: jump @572\n      : @435 (gas: 4)\n 13346: a0 = u64 [s1 + 0xb8]\n 13350: a0 = i32 [a0]\n 13352: a1 = 0x43\n 13355: jump @437 if a1 <u a0\n      : @436 (gas: 1)\n 13358: jump @573\n      : @437 (gas: 6)\n 13361: a0 = 0xffffffff\n 13371: u64 [s1 + 0xb8] = a0\n 13375: a0 = s1 + 0x1120\n 13379: ra = 0x1a8\n 13383: t0 = 0x280\n 13387: jump @724\n      : @438 [@dyn 212] (gas: 11)\n 13390: a1 = s1 + 0x1030\n 13394: a0 = u64 [a1 + 0xf0]\n 13398: u64 [s1 + 0xb0] = a0\n 13402: a0 = u64 [a1 + 0xf8]\n 13406: u64 [s1 + 0x90] = a0\n 13410: a0 = u32 [a1 + 0x100]\n 13414: u64 [s1 + 0x88] = a0\n 13418: a0 = s1 + 0x1100\n 13422: ra = 0x1aa\n 13426: t0 = 0x28a\n 13430: jump @724\n      : @439 [@dyn 213] (gas: 18)\n 13433: a1 = s1 + 0x1030\n 13437: a0 = u64 [a1 + 0xe0]\n 13441: u64 [s1 + 0xa8] = a0\n 13445: a0 = u64 [a1 + 0xd8]\n 13449: u64 [s1 + 0xa0] = a0\n 13453: a0 = u64 [a1 + 0xd0]\n 13457: u64 [s1 + 0x98] = a0\n 13461: u64 [a1 + 200] = 0\n 13465: a0 = u64 [s1 + 0x88]\n 13469: u64 [a1 + 0xc0] = a0\n 13473: a0 = u64 [s1 + 0x90]\n 13477: u64 [a1 + 0xb8] = a0\n 13481: a2 = a1\n 13483: a1 = s1 + 0x10e0\n 13487: a0 = u64 [s1 + 0xb0]\n 13491: u64 [a2 + 0xb0] = a0\n 13495: a0 = 0\n 13497: ra = 428, jump @19\n      : @440 [@dyn 214] (gas: 9)\n 13503: a1 = s1 + 0x1030\n 13507: u64 [a1 + 168] = 0\n 13511: u64 [a1 + 160] = 0\n 13515: u64 [a1 + 144] = 0x5\n 13520: a2 = a1\n 13522: a0 = 0x20\n 13525: a1 = s1 + 0x10c0\n 13529: u64 [a2 + 152] = 0\n 13533: ra = 430, jump @19\n      : @441 [@dyn 215] (gas: 3)\n 13539: a1 = 0x2008c\n 13544: a0 = i32 [0x2008c]\n 13549: jump @443 if a0 >u 63\n      : @442 (gas: 2)\n 13553: u32 [0x2008c] = 0x40\n 13559: fallthrough\n      : @443 (gas: 43)\n 13560: a0 = sp + 0xffffffffffffffe0\n 13563: a2 = a0 & 0xffffffffffffffe0\n 13566: u64 [s1 + 0x88] = a2\n 13570: sp = a2\n 13572: a0 = 0x200a0\n 13577: i32 a0 = a0 + 0\n 13579: i32 a2 = a2 + 0\n 13581: u64 [s1 + 0xb0] = a1\n 13585: a1 = 0x40\n 13588: u64 [s1 + 0x90] = a0\n 13592: ecalli 6 // 'hash_keccak_256'\n 13594: a3 = u64 [s1 + 0x88]\n 13598: a0 = u64 [a3 + 0x18]\n 13601: a1 = u64 [a3 + 0x10]\n 13604: a2 = u64 [a3 + 0x8]\n 13607: a3 = u64 [a3]\n 13609: a0 = reverse a0\n 13611: u64 [s1 + 0x80] = a0\n 13615: a0 = reverse a1\n 13617: u64 [s1 + 0x78] = a0\n 13620: a0 = reverse a2\n 13622: u64 [s1 + 0x70] = a0\n 13625: a0 = reverse a3\n 13627: u64 [s1 + 0x68] = a0\n 13630: a0 = sp + 0xffffffffffffffe0\n 13633: a0 = a0 & 0xffffffffffffffe0\n 13636: u64 [s1 + 0x88] = a0\n 13640: sp = a0\n 13642: a0 = u64 [s1 + 0x98]\n 13646: a0 = a0 & 0xffffffffffffffff\n 13649: a2 = u64 [s1 + 0xa0]\n 13653: a1 = a2 & 0xffffffffffffffff\n 13656: a2 = u64 [s1 + 0xb8]\n 13660: a3 = u64 [s1 + 0xa8]\n 13664: a2 = a2 & a3\n 13667: a3 = s1 + 0x1030\n 13671: u64 [a3 + 136] = 0\n 13675: u64 [a3 + 0x80] = a2\n 13679: u64 [a3 + 0x78] = a1\n 13682: a1 = s1 + 0x10a0\n 13686: u64 [a3 + 0x70] = a0\n 13689: a0 = 0\n 13691: ra = 432, jump @19\n      : @444 [@dyn 216] (gas: 13)\n 13697: a0 = u64 [s1 + 0x68]\n 13700: a1 = s1 + 0x1030\n 13704: u64 [a1 + 0x68] = a0\n 13707: a0 = u64 [s1 + 0x70]\n 13710: u64 [a1 + 0x60] = a0\n 13713: a0 = u64 [s1 + 0x78]\n 13716: u64 [a1 + 0x58] = a0\n 13719: a3 = a1\n 13721: a0 = 0x20\n 13724: a1 = s1 + 0x1080\n 13728: a2 = u64 [s1 + 0x80]\n 13732: u64 [a3 + 0x50] = a2\n 13735: ra = 434, jump @19\n      : @445 [@dyn 217] (gas: 3)\n 13741: a1 = u64 [s1 + 0xb0]\n 13745: a0 = i32 [a1]\n 13747: jump @447 if a0 >u 63\n      : @446 (gas: 2)\n 13751: u32 [a1 + 0] = 0x40\n 13754: fallthrough\n      : @447 (gas: 24)\n 13755: a0 = sp + 0xffffffffffffffe0\n 13758: a0 = a0 & 0xffffffffffffffe0\n 13761: u64 [s1 + 0xb8] = a0\n 13765: sp = a0\n 13767: i32 a2 = a0 + 0\n 13769: a1 = 0x40\n 13772: a0 = u64 [s1 + 0x90]\n 13776: ecalli 6 // 'hash_keccak_256'\n 13778: a3 = u64 [s1 + 0xb8]\n 13782: a0 = u64 [a3 + 0x18]\n 13785: a1 = u64 [a3 + 0x10]\n 13788: a2 = u64 [a3 + 0x8]\n 13791: a3 = u64 [a3]\n 13793: a0 = reverse a0\n 13795: a4 = reverse a1\n 13797: a2 = reverse a2\n 13799: a3 = reverse a3\n 13801: a1 = u64 [s1 + 0x88]\n 13805: u64 [a1 + 0x18] = a3\n 13808: u64 [a1 + 0x10] = a2\n 13811: u64 [a1 + 0x8] = a4\n 13814: u64 [a1] = a0\n 13816: a0 = s1 + 0x1060\n 13820: ra = 436, jump @21\n      : @448 [@dyn 218] (gas: 12)\n 13826: a1 = s1 + 0x1030\n 13830: a0 = u64 [a1 + 0x48]\n 13833: u64 [s1 + 0xb8] = a0\n 13837: a0 = u64 [a1 + 0x40]\n 13840: u64 [s1 + 0xb0] = a0\n 13844: a0 = u64 [a1 + 0x38]\n 13847: u64 [s1 + 0xa8] = a0\n 13851: a0 = u64 [a1 + 0x30]\n 13854: u64 [s1 + 0xa0] = a0\n 13858: a0 = s1 + 0x1040\n 13862: a1 = 0x40\n 13865: ra = 438, jump @17\n      : @449 [@dyn 219] (gas: 13)\n 13871: a3 = s1 + 0x1030\n 13875: a0 = u64 [a3 + 0x28]\n 13878: a1 = u64 [a3 + 0x20]\n 13881: a2 = u64 [a3 + 0x18]\n 13884: a4 = u64 [a3 + 0x10]\n 13887: a0 = a0 | a2\n 13890: a2 = a4 | a1\n 13893: a2 = a2 | a0\n 13896: a2 = a2 >> 0x20\n 13899: a0 = a0 | a1\n 13902: a0 = a0 << 0x20\n 13905: a0 = a0 | a2\n 13908: jump @525 if a0 != 0\n      : @450 (gas: 15)\n 13912: a0 = s1 + 0x7ff\n 13916: a0 = a0 + 0x31\n 13919: a1 = u64 [s1 + 0xa0]\n 13923: u64 [a0 + 0x7f0] = a1\n 13927: a1 = u64 [s1 + 0xa8]\n 13931: u64 [a0 + 0x7f8] = a1\n 13935: a0 = u64 [s1 + 0xb0]\n 13939: u64 [a3] = a0\n 13941: a1 = s1 + 0x1020\n 13945: a0 = u64 [s1 + 0xb8]\n 13949: u64 [a3 + 0x8] = a0\n 13952: a0 = a4\n 13954: u64 [s1 + 0xb8] = a4\n 13958: ra = 0x24a\n 13962: jump @19\n      : @451 (gas: 10)\n 13965: u64 [a2 + 872] = 0\n 13969: u64 [a2 + 864] = 0\n 13973: u64 [a2 + 856] = 0\n 13977: u64 [a2 + 848] = 0\n 13981: a0 = s1 + 0x1000\n 13985: i32 a0 = a0 + 0x380\n 13989: ra = 0x1b8\n 13993: ecalli 10 // 'value_transferred'\n 13995: t0 = 0x1ba\n 13999: jump @725\n      : @452 [@dyn 220] (gas: 1)\n 14002: t0 = 442, jump @725\n      : @453 [@dyn 221] (gas: 8)\n 14008: a0 = u64 [a4 + 0x60]\n 14011: a1 = u64 [a4 + 0x68]\n 14014: a2 = u64 [a4 + 0x58]\n 14017: a3 = u64 [a4 + 0x50]\n 14020: a1 = a1 | a2\n 14023: a0 = a0 | a3\n 14026: a0 = a0 | a1\n 14029: jump @574 if a0 != 0\n      : @454 (gas: 3)\n 14033: a0 = u64 [s1 + 0xb8]\n 14037: a0 = i32 [a0]\n 14039: jump @575 if a0 <=u 3\n      : @455 (gas: 4)\n 14044: a0 = s1 + 0x7ff\n 14048: a0 = a0 + 0x501\n 14052: a1 = 0x40\n 14055: ra = 444, jump @17\n      : @456 [@dyn 222] (gas: 20)\n 14061: a1 = s1 + 0x7ff\n 14065: a1 = a1 + 0x31\n 14068: a2 = a1 + 0x400\n 14072: a0 = u64 [a2 + 0xe8]\n 14076: u64 [s1 + 0x20] = a0\n 14079: a0 = u64 [a2 + 0xe0]\n 14083: u64 [s1 + 0x30] = a0\n 14086: a0 = u64 [a2 + 0xd8]\n 14090: u64 [s1 + 0x18] = a0\n 14093: a0 = u64 [a2 + 0xd0]\n 14097: u64 [s1 + 0x28] = a0\n 14100: a1 = s1 + 0x1030\n 14104: u64 [a1 + 904] = 0\n 14108: u64 [a1 + 896] = 0\n 14112: u64 [a1 + 888] = 0\n 14116: u64 [a1 + 880] = 0x1\n 14121: a0 = s1 + 0x7ff\n 14125: a0 = a0 + 0x4e1\n 14129: a1 = s1 + 0x13a0\n 14133: ra = 446, jump @21\n      : @457 [@dyn 223] (gas: 36)\n 14139: a0 = s1 + 0x7ff\n 14143: a0 = a0 + 0x31\n 14146: t2 = u64 [a0 + 0x4c0]\n 14150: ra = u64 [a0 + 0x4b8]\n 14154: t1 = u64 [a0 + 0x4c8]\n 14158: a4 = u64 [a0 + 0x4b0]\n 14162: a0 = t2 << 0x3f\n 14165: a1 = ra >> 0x1\n 14168: a0 = a0 | a1\n 14171: a1 = t1 << 0x3f\n 14174: a2 = t2 >> 0x1\n 14177: a1 = a1 | a2\n 14180: a2 = ra << 0x3f\n 14183: a3 = a4 >> 0x1\n 14186: a5 = a3 | a2\n 14189: a2 = t1 >> 0x1\n 14192: u64 [s1 + 0xb0] = a4\n 14196: a4 = a4 & 0x1\n 14199: a3 = -a4\n 14201: a1 = a1 & a3\n 14204: t0 = a3 & a0\n 14207: a2 = a2 & a3\n 14210: a0 = a5 & 0x7f\n 14213: u64 [s1 + 0xa0] = a0\n 14217: a5 = a0 if a4 == 0\n 14220: u64 [s1 + 0x78] = a5\n 14223: a0 = a5 <u 0x20\n 14226: u64 [s1 + 0x68] = t0\n 14229: a0 = 0 if t0 != 0\n 14231: u64 [s1 + 0x70] = a1\n 14234: u64 [s1 + 0x60] = a2\n 14237: a1 = a1 | a2\n 14240: a0 = 0 if a1 != 0\n 14242: u64 [s1 + 0xb8] = a4\n 14246: a1 = a4 <u 0x1\n 14249: jump @576 if a1 != a0\n      : @458 (gas: 12)\n 14253: a2 = u64 [s1 + 0x30]\n 14256: a4 = u64 [s1 + 0x28]\n 14259: a0 = a4 | a2\n 14262: a1 = u64 [s1 + 0x20]\n 14265: a3 = u64 [s1 + 0x18]\n 14268: a1 = a1 | a3\n 14271: a0 = a0 | a1\n 14274: a0 = a0 >> 0x20\n 14277: a1 = a1 | a2\n 14280: a1 = a1 << 0x20\n 14283: a1 = a1 | a0\n 14286: jump @525 if a1 != 0\n      : @459 (gas: 18)\n 14290: a0 = a4\n 14292: u64 [s1 + 0x90] = ra\n 14296: u64 [s1 + 0x98] = t2\n 14300: u64 [s1 + 0xa8] = t1\n 14304: a1 = u64 [s1 + 0x78]\n 14307: a3 = s1 + 0x7ff\n 14311: a3 = a3 + 0x31\n 14314: a4 = a3 + 0x400\n 14318: u64 [a4 + 0x90] = a1\n 14322: a1 = u64 [s1 + 0x68]\n 14325: u64 [a4 + 0x98] = a1\n 14329: a1 = u64 [s1 + 0x70]\n 14332: u64 [a4 + 0xa0] = a1\n 14336: a1 = s1 + 0x7ff\n 14340: a1 = a1 + 0x4c1\n 14344: a2 = u64 [s1 + 0x60]\n 14347: u64 [a4 + 0xa8] = a2\n 14351: ra = 448, jump @19\n      : @460 [@dyn 224] (gas: 2)\n 14357: a0 = u64 [s1 + 0xb8]\n 14361: jump @538 if a0 != 0\n      : @461 (gas: 1)\n 14365: t0 = 450, jump @714\n      : @462 [@dyn 225] (gas: 1)\n 14371: jump @525 if a1 == 0\n      : @463 (gas: 16)\n 14375: a0 = u64 [s1 + 0xb0]\n 14379: a1 = a0 & 0xffffffffffffff00\n 14383: i32 a0 = a3 + 0x20\n 14386: a2 = s1 + 0x7ff\n 14390: a2 = a2 + 0x31\n 14393: a3 = u64 [s1 + 0x90]\n 14397: a4 = a2 + 0x400\n 14401: u64 [a4 + 0x18] = a3\n 14404: u64 [a4 + 0x10] = a1\n 14407: a1 = u64 [s1 + 0x98]\n 14411: u64 [a4 + 0x20] = a1\n 14414: a1 = s1 + 0x7ff\n 14418: a1 = a1 + 0x441\n 14422: a3 = u64 [s1 + 0xa8]\n 14426: u64 [a4 + 0x28] = a3\n 14429: ra = 452, jump @19\n      : @464 [@dyn 226] (gas: 8)\n 14435: t1 = 0\n 14437: u64 [s1 + 168] = 0\n 14441: u64 [s1 + 176] = 0\n 14445: a0 = u64 [s1 + 0xa0]\n 14449: a0 = a0 >u 0\n 14451: a0 = a0 << 0x5\n 14454: u64 [s1 + 0xb8] = a0\n 14458: fallthrough\n      : @465 (gas: 18)\n 14459: a1 = u64 [s1 + 0xb8]\n 14463: a0 = a1 + 0x3f\n 14466: t0 = a0 <u a1\n 14469: a3 = t1 + t0\n 14472: a1 = a0 & 0xffffffffffffffe0\n 14475: a0 = t1\n 14477: t1 = u64 [s1 + 0x28]\n 14480: t1 = t1 + a1\n 14483: a4 = t1 <u a1\n 14486: ra = u64 [s1 + 0x18]\n 14489: a1 = a3 + ra\n 14492: t2 = a1 + a4\n 14495: a5 = t2 ^ a3\n 14498: a2 = t2 <u a3\n 14501: a2 = a4 if a5 == 0\n 14504: a3 = a3 <u a0\n 14507: a3 = t0 if t0 == 0\n 14510: t0 = 454, jump @699\n      : @466 [@dyn 227] (gas: 1)\n 14516: jump @587 if a5 != 0\n      : @467 (gas: 1)\n 14520: t0 = 456, jump @723\n      : @468 [@dyn 228] (gas: 10)\n 14526: t0 = a2 <u a0\n 14529: a0 = u64 [s1 + 0x20]\n 14532: a4 = a3 ^ a0\n 14535: a0 = a3 <u a0\n 14538: a0 = t0 if a4 == 0\n 14541: t0 = u64 [s1 + 0x30]\n 14544: a1 = a2 ^ t0\n 14547: a1 = a1 | a4\n 14550: a0 = a5 if a1 == 0\n 14553: jump @587 if a0 != 0\n      : @469 (gas: 10)\n 14557: a4 = s1 + 0x7ff\n 14561: a4 = a4 + 0x31\n 14564: u64 [a4 + 0x3f0] = t1\n 14568: u64 [a4 + 0x3f8] = t2\n 14572: u64 [a4 + 0x400] = a2\n 14576: a0 = 0x40\n 14579: a1 = s1 + 0x7ff\n 14583: a1 = a1 + 0x421\n 14587: u64 [a4 + 0x408] = a3\n 14591: ra = 458, jump @19\n      : @470 [@dyn 229] (gas: 4)\n 14597: a0 = s1 + 0x7ff\n 14601: a0 = a0 + 0x401\n 14605: a1 = 0x40\n 14608: ra = 460, jump @17\n      : @471 [@dyn 230] (gas: 31)\n 14614: a1 = s1 + 0x7ff\n 14618: a1 = a1 + 0x31\n 14621: a3 = u64 [a1 + 0x3e8]\n 14625: u64 [s1 + 0xb8] = a3\n 14629: a2 = u64 [a1 + 0x3e0]\n 14633: u64 [s1 + 0xb0] = a2\n 14637: a4 = u64 [a1 + 0x3d8]\n 14641: u64 [s1 + 0xa8] = a4\n 14645: a5 = u64 [a1 + 0x3d0]\n 14649: u64 [s1 + 0xa0] = a5\n 14653: a0 = u64 [s1 + 0x20]\n 14656: u64 [a1 + 0x388] = a0\n 14660: a0 = u64 [s1 + 0x30]\n 14663: u64 [a1 + 0x380] = a0\n 14667: a0 = u64 [s1 + 0x18]\n 14670: u64 [a1 + 0x378] = a0\n 14674: a0 = u64 [s1 + 0x28]\n 14677: u64 [a1 + 0x370] = a0\n 14681: a0 = a1 + 0x300\n 14685: u64 [a0 + 0xa8] = a3\n 14689: u64 [a0 + 0xa0] = a2\n 14693: u64 [a0 + 0x98] = a4\n 14697: a3 = a1\n 14699: a0 = s1 + 0x7ff\n 14703: a0 = a0 + 0x3e1\n 14707: a1 = s1 + 0x7ff\n 14711: a1 = a1 + 0x3c1\n 14715: a2 = s1 + 0x7ff\n 14719: a2 = a2 + 0x3a1\n 14723: u64 [a3 + 0x390] = a5\n 14727: ra = 462, jump @634\n      : @472 [@dyn 231] (gas: 1)\n 14733: t0 = 464, jump @720\n      : @473 [@dyn 232] (gas: 1)\n 14739: jump @525 if a0 != 0\n      : @474 (gas: 10)\n 14743: t0 = a3\n 14745: a1 = s1 + 0x7ff\n 14749: a1 = a1 + 0x31\n 14752: a5 = a1 + 0x300\n 14756: a0 = u64 [a5 + 0xb8]\n 14760: a3 = u64 [a5 + 0xc8]\n 14764: u64 [s1 + 0x98] = a3\n 14768: t1 = u64 [a1 + 0x3b0]\n 14772: a3 = u64 [a5 + 0xc0]\n 14776: fallthrough\n      : @475 (gas: 26)\n 14777: t2 = a0 ^ a4\n 14780: a5 = a0 <u a4\n 14783: ra = t1 <u a2\n 14786: a5 = ra if t2 == 0\n 14789: a1 = a3 - t0\n 14792: t2 = a1 - a5\n 14795: a1 = a1 <u a5\n 14798: u64 [s1 + 0x90] = a1\n 14802: a3 = a3 <u t0\n 14805: a5 = u64 [s1 + 0xb8]\n 14809: a1 = u64 [s1 + 0x98]\n 14813: a5 = a1 - a5\n 14816: a5 = a5 - a3\n 14819: a1 = u64 [s1 + 0x90]\n 14823: a5 = a5 - a1\n 14826: a0 = a0 - a4\n 14829: a0 = a0 - ra\n 14832: a1 = t1 - a2\n 14835: a0 = a0 | a5\n 14838: a3 = a1 | t2\n 14841: a3 = a3 | a0\n 14844: a0 = a0 | t2\n 14847: a3 = a3 >> 0x20\n 14850: a0 = a0 << 0x20\n 14853: a0 = a0 | a3\n 14856: jump @525 if a0 != 0\n      : @476 (gas: 3)\n 14860: a0 = a2\n 14862: u64 [s1 + 0xb8] = a1\n 14866: ra = 466, jump @26\n      : @477 [@dyn 233] (gas: 6)\n 14872: i32 a1 = a0 + 0\n 14874: a2 = i32 [s1 + 0xb8]\n 14878: a0 = 0\n 14880: ra = 0x24e\n 14884: ecalli 7 // 'seal_return'\n 14886: jump @596\n      : @478 (gas: 14)\n 14889: a0 = 0xffffffff\n 14899: u64 [s1 + 0x60] = a0\n 14902: u64 [t0 + 104] = 0\n 14905: a0 = u64 [s1 + 0x88]\n 14909: a2 = t0\n 14911: u64 [a2 + 0x50] = a0\n 14914: a0 = u64 [s1 + 0x80]\n 14918: u64 [a2 + 0x58] = a0\n 14921: a1 = s1 + 0x7ff\n 14925: a1 = a1 + 0x81\n 14929: a0 = u64 [s1 + 0x78]\n 14932: u64 [a2 + 0x60] = a0\n 14935: a0 = 0\n 14937: ra = 468, jump @19\n      : @479 [@dyn 234] (gas: 11)\n 14943: a0 = s1 + 0x7ff\n 14947: a0 = a0 + 0x31\n 14950: u64 [a0 + 72] = 0\n 14953: u64 [a0 + 64] = 0\n 14956: u64 [a0 + 56] = 0\n 14959: a3 = a0\n 14961: a0 = 0x20\n 14964: a1 = s1 + 0x7ff\n 14968: a1 = a1 + 0x61\n 14971: u64 [a3 + 48] = 0x4\n 14975: ra = 470, jump @19\n      : @480 [@dyn 235] (gas: 7)\n 14981: a0 = sp + 0xffffffffffffffe0\n 14984: a0 = a0 & 0xffffffffffffffe0\n 14987: u64 [s1 + 0x68] = a0\n 14990: sp = a0\n 14992: a1 = u64 [s1 + 0xb8]\n 14996: a0 = i32 [a1]\n 14998: jump @482 if a0 >u 63\n      : @481 (gas: 2)\n 15002: u32 [a1 + 0] = 0x40\n 15005: fallthrough\n      : @482 (gas: 4)\n 15006: a0 = sp + 0xffffffffffffffe0\n 15009: a0 = a0 & 0xffffffffffffffe0\n 15012: u64 [s1 + 0x58] = a0\n 15015: t0 = 472, jump @713\n      : @483 [@dyn 236] (gas: 5)\n 15021: ra = 0x1da\n 15025: ecalli 6 // 'hash_keccak_256'\n 15027: a3 = u64 [s1 + 0x58]\n 15030: t0 = 0x1dc\n 15034: jump @703\n      : @484 [@dyn 237] (gas: 2)\n 15037: a3 = u64 [s1 + 0x58]\n 15040: t0 = 476, jump @703\n      : @485 [@dyn 238] (gas: 2)\n 15046: a0 = a0 + 0x41\n 15049: ra = 478, jump @21\n      : @486 [@dyn 239] (gas: 28)\n 15055: a2 = s1 + 0x7ff\n 15059: a2 = a2 + 0x31\n 15062: a3 = u64 [a2 + 0x10]\n 15065: a0 = u64 [a2 + 0x18]\n 15068: a1 = u64 [a2 + 0x20]\n 15071: a2 = u64 [a2 + 0x28]\n 15074: a4 = u64 [s1 + 0xa8]\n 15078: u64 [s1 + 0x7f8] = a4\n 15082: a4 = u64 [s1 + 0xa0]\n 15086: u64 [s1 + 0x7f0] = a4\n 15090: a4 = u64 [s1 + 0x98]\n 15094: u64 [s1 + 0x7e8] = a4\n 15098: a4 = u64 [s1 + 0x90]\n 15102: u64 [s1 + 0x7e0] = a4\n 15106: a4 = s1 + 0x1000\n 15110: u64 [a4 + 0xfffffffffffff818] = a2\n 15114: a2 = s1 + 0x1000\n 15118: u64 [a2 + 0xfffffffffffff810] = a1\n 15122: a1 = s1 + 0x1000\n 15126: u64 [a1 + 0xfffffffffffff808] = a0\n 15130: a0 = s1 + 0x7ff\n 15134: a0 = a0 + 0x21\n 15137: a1 = s1 + 0x7ff\n 15141: a1 = a1 + 0x1\n 15144: a2 = s1 + 0x7e0\n 15148: a4 = s1 + 0x1000\n 15152: u64 [a4 + 0xfffffffffffff800] = a3\n 15156: ra = 480, jump @677\n      : @487 [@dyn 240] (gas: 17)\n 15162: a1 = s1 + 0x7ff\n 15166: a1 = a1 + 0x31\n 15169: a0 = u64 [a1 + 0x8]\n 15172: a1 = u64 [a1]\n 15174: a2 = s1 + 0x1000\n 15178: a2 = u64 [a2 + 0xfffffffffffff828]\n 15182: a3 = s1 + 0x1000\n 15186: a3 = u64 [a3 + 0xfffffffffffff820]\n 15190: a4 = s1 + 0x1030\n 15194: a5 = a4 + 0x200\n 15198: u64 [a5 + 0x88] = a0\n 15202: u64 [a5 + 0x80] = a1\n 15206: u64 [a5 + 0x78] = a2\n 15209: u64 [a5 + 0x70] = a3\n 15212: a1 = s1 + 0x12a0\n 15216: a0 = u64 [s1 + 0x68]\n 15219: ra = 482, jump @22\n      : @488 [@dyn 241] (gas: 17)\n 15225: a0 = u64 [s1 + 0x30]\n 15228: a2 = a0 & 0xffffffffffffffff\n 15231: a0 = u64 [s1 + 0x38]\n 15234: a1 = a0 & 0xffffffffffffffff\n 15237: a0 = u64 [s1 + 0x40]\n 15240: a3 = u64 [s1 + 0x60]\n 15243: a0 = a0 & a3\n 15246: u64 [s1 + 2008] = 0\n 15250: u64 [s1 + 0x30] = a0\n 15253: u64 [s1 + 0x7d0] = a0\n 15257: u64 [s1 + 0x38] = a1\n 15260: u64 [s1 + 0x7c8] = a1\n 15264: a1 = s1 + 0x7c0\n 15268: u64 [s1 + 0x40] = a2\n 15271: u64 [s1 + 0x7c0] = a2\n 15275: a0 = 0\n 15277: ra = 484, jump @19\n      : @489 [@dyn 242] (gas: 7)\n 15283: u64 [s1 + 1976] = 0\n 15287: u64 [s1 + 1968] = 0\n 15291: u64 [s1 + 1952] = 0x4\n 15296: a0 = 0x20\n 15299: a1 = s1 + 0x7a0\n 15303: u64 [s1 + 1960] = 0\n 15307: ra = 486, jump @19\n      : @490 [@dyn 243] (gas: 7)\n 15313: a1 = u64 [s1 + 0xb8]\n 15317: a0 = sp + 0xffffffffffffffe0\n 15320: a0 = a0 & 0xffffffffffffffe0\n 15323: u64 [s1 + 0x68] = a0\n 15326: sp = a0\n 15328: a0 = i32 [a1]\n 15330: jump @492 if a0 >u 63\n      : @491 (gas: 2)\n 15334: u32 [a1 + 0] = 0x40\n 15337: fallthrough\n      : @492 (gas: 4)\n 15338: a0 = sp + 0xffffffffffffffe0\n 15341: a0 = a0 & 0xffffffffffffffe0\n 15344: u64 [s1 + 0x60] = a0\n 15347: t0 = 488, jump @713\n      : @493 [@dyn 244] (gas: 5)\n 15353: ra = 0x1ea\n 15357: ecalli 6 // 'hash_keccak_256'\n 15359: a3 = u64 [s1 + 0x60]\n 15362: t0 = 0x1ec\n 15366: jump @707\n      : @494 [@dyn 245] (gas: 2)\n 15369: a3 = u64 [s1 + 0x60]\n 15372: t0 = 492, jump @707\n      : @495 [@dyn 246] (gas: 2)\n 15378: a0 = s1 + 0x780\n 15382: ra = 494, jump @21\n      : @496 [@dyn 247] (gas: 20)\n 15388: a3 = u64 [s1 + 0x780]\n 15392: a0 = u64 [s1 + 0x788]\n 15396: a1 = u64 [s1 + 0x790]\n 15400: a2 = u64 [s1 + 0x798]\n 15404: a4 = u64 [s1 + 0xa8]\n 15408: u64 [s1 + 0x738] = a4\n 15412: a4 = u64 [s1 + 0xa0]\n 15416: u64 [s1 + 0x730] = a4\n 15420: a4 = u64 [s1 + 0x98]\n 15424: u64 [s1 + 0x728] = a4\n 15428: a4 = u64 [s1 + 0x90]\n 15432: u64 [s1 + 0x720] = a4\n 15436: u64 [s1 + 0x758] = a2\n 15440: u64 [s1 + 0x750] = a1\n 15444: u64 [s1 + 0x748] = a0\n 15448: a0 = s1 + 0x760\n 15452: a1 = s1 + 0x740\n 15456: a2 = s1 + 0x720\n 15460: u64 [s1 + 0x740] = a3\n 15464: ra = 496, jump @685\n      : @497 [@dyn 248] (gas: 13)\n 15470: a0 = u64 [s1 + 0x778]\n 15474: a1 = u64 [s1 + 0x770]\n 15478: a2 = u64 [s1 + 0x768]\n 15482: a3 = u64 [s1 + 0x760]\n 15486: a4 = s1 + 0x1030\n 15490: a5 = a4 + 0x200\n 15494: u64 [a5 + 0xa8] = a0\n 15498: u64 [a5 + 0xa0] = a1\n 15502: u64 [a5 + 0x98] = a2\n 15506: u64 [a5 + 0x90] = a3\n 15510: a1 = s1 + 0x12c0\n 15514: a0 = u64 [s1 + 0x68]\n 15517: ra = 498, jump @22\n      : @498 [@dyn 249] (gas: 11)\n 15523: u64 [s1 + 1816] = 0\n 15527: a0 = u64 [s1 + 0x78]\n 15530: a2 = s1 + 0x700\n 15534: u64 [a2 + 0x10] = a0\n 15537: a0 = u64 [s1 + 0x80]\n 15541: u64 [a2 + 0x8] = a0\n 15544: a1 = s1 + 0x700\n 15548: a0 = u64 [s1 + 0x88]\n 15552: u64 [a2] = a0\n 15554: a0 = 0\n 15556: ra = 500, jump @19\n      : @499 [@dyn 250] (gas: 7)\n 15562: u64 [s1 + 1784] = 0\n 15566: u64 [s1 + 1776] = 0\n 15570: u64 [s1 + 1760] = 0x5\n 15575: a0 = 0x20\n 15578: a1 = s1 + 0x6e0\n 15582: u64 [s1 + 1768] = 0\n 15586: ra = 502, jump @19\n      : @500 [@dyn 251] (gas: 3)\n 15592: a1 = u64 [s1 + 0xb8]\n 15596: a0 = i32 [a1]\n 15598: jump @502 if a0 >u 63\n      : @501 (gas: 2)\n 15602: u32 [a1 + 0] = 0x40\n 15605: fallthrough\n      : @502 (gas: 4)\n 15606: a0 = sp + 0xffffffffffffffe0\n 15609: a0 = a0 & 0xffffffffffffffe0\n 15612: u64 [s1 + 0x68] = a0\n 15615: t0 = 504, jump @713\n      : @503 [@dyn 252] (gas: 5)\n 15621: ra = 0x1fa\n 15625: ecalli 6 // 'hash_keccak_256'\n 15627: a3 = u64 [s1 + 0x68]\n 15630: t0 = 0x1fc\n 15634: jump @701\n      : @504 [@dyn 253] (gas: 2)\n 15637: a3 = u64 [s1 + 0x68]\n 15640: t0 = 508, jump @701\n      : @505 [@dyn 254] (gas: 6)\n 15646: a0 = u64 [s1 + 0x28]\n 15649: ra = 0x1fe\n 15653: ecalli 3 // 'caller'\n 15655: a2 = u64 [s1 + 0x70]\n 15658: t0 = 0x200\n 15662: jump @698\n      : @506 [@dyn 255] (gas: 2)\n 15665: a2 = u64 [s1 + 0x70]\n 15668: t0 = 512, jump @698\n      : @507 [@dyn 256] (gas: 7)\n 15674: u64 [s1 + 1752] = 0\n 15678: u64 [s1 + 0x6d0] = a1\n 15682: u64 [s1 + 0x6c8] = a0\n 15686: a1 = s1 + 0x6c0\n 15690: u64 [s1 + 0x6c0] = a3\n 15694: a0 = 0\n 15696: ra = 514, jump @19\n      : @508 [@dyn 257] (gas: 12)\n 15702: a0 = u64 [s1 + 0x48]\n 15705: a3 = s1 + 0x600\n 15709: u64 [a3 + 0xb8] = a0\n 15713: a0 = u64 [s1 + 0x50]\n 15716: u64 [a3 + 0xb0] = a0\n 15720: a0 = u64 [s1 + 0x58]\n 15723: u64 [a3 + 0xa8] = a0\n 15727: a0 = 0x20\n 15730: a1 = s1 + 0x6a0\n 15734: a2 = u64 [s1 + 0x60]\n 15737: u64 [a3 + 0xa0] = a2\n 15741: ra = 516, jump @19\n      : @509 [@dyn 258] (gas: 3)\n 15747: a1 = u64 [s1 + 0xb8]\n 15751: a0 = i32 [a1]\n 15753: jump @511 if a0 >u 63\n      : @510 (gas: 2)\n 15757: u32 [a1 + 0] = 0x40\n 15760: fallthrough\n      : @511 (gas: 4)\n 15761: a0 = sp + 0xffffffffffffffe0\n 15764: a0 = a0 & 0xffffffffffffffe0\n 15767: u64 [s1 + 0xb8] = a0\n 15771: t0 = 518, jump @713\n      : @512 [@dyn 259] (gas: 5)\n 15777: ra = 0x208\n 15781: ecalli 6 // 'hash_keccak_256'\n 15783: a3 = u64 [s1 + 0xb8]\n 15787: t0 = 0x20a\n 15791: jump @707\n      : @513 [@dyn 260] (gas: 2)\n 15794: a3 = u64 [s1 + 0xb8]\n 15798: t0 = 522, jump @707\n      : @514 [@dyn 261] (gas: 2)\n 15804: a0 = s1 + 0x680\n 15808: ra = 524, jump @21\n      : @515 [@dyn 262] (gas: 20)\n 15814: a3 = u64 [s1 + 0x680]\n 15818: a0 = u64 [s1 + 0x688]\n 15822: a1 = u64 [s1 + 0x690]\n 15826: a2 = u64 [s1 + 0x698]\n 15830: a4 = u64 [s1 + 0xa8]\n 15834: u64 [s1 + 0x638] = a4\n 15838: a4 = u64 [s1 + 0xa0]\n 15842: u64 [s1 + 0x630] = a4\n 15846: a4 = u64 [s1 + 0x98]\n 15850: u64 [s1 + 0x628] = a4\n 15854: a4 = u64 [s1 + 0x90]\n 15858: u64 [s1 + 0x620] = a4\n 15862: u64 [s1 + 0x658] = a2\n 15866: u64 [s1 + 0x650] = a1\n 15870: u64 [s1 + 0x648] = a0\n 15874: a0 = s1 + 0x660\n 15878: a1 = s1 + 0x640\n 15882: a2 = s1 + 0x620\n 15886: u64 [s1 + 0x640] = a3\n 15890: ra = 526, jump @677\n      : @516 [@dyn 263] (gas: 13)\n 15896: a0 = u64 [s1 + 0x678]\n 15900: a1 = u64 [s1 + 0x670]\n 15904: a2 = u64 [s1 + 0x668]\n 15908: a3 = u64 [s1 + 0x660]\n 15912: a4 = s1 + 0x1030\n 15916: a5 = a4 + 0x200\n 15920: u64 [a5 + 0xc8] = a0\n 15924: u64 [a5 + 0xc0] = a1\n 15928: u64 [a5 + 0xb8] = a2\n 15932: u64 [a5 + 0xb0] = a3\n 15936: a1 = s1 + 0x12e0\n 15940: a0 = u64 [s1 + 0x68]\n 15943: ra = 528, jump @22\n      : @517 [@dyn 264] (gas: 3)\n 15949: a0 = s1 + 0x600\n 15953: a1 = 0x40\n 15956: ra = 530, jump @17\n      : @518 [@dyn 265] (gas: 6)\n 15962: a4 = s1 + 0x600\n 15966: a0 = u64 [a4 + 0x18]\n 15969: a1 = u64 [a4 + 0x10]\n 15972: a2 = u64 [a4 + 0x8]\n 15975: a3 = u64 [a4]\n 15977: t0 = 532, jump @710\n      : @519 [@dyn 266] (gas: 1)\n 15983: jump @525 if a0 != 0\n      : @520 (gas: 12)\n 15987: a0 = u64 [s1 + 0x90]\n 15991: u64 [s1 + 0x5e0] = a0\n 15995: a0 = u64 [s1 + 0x98]\n 15999: u64 [s1 + 0x5e8] = a0\n 16003: a0 = u64 [s1 + 0xa0]\n 16007: u64 [s1 + 0x5f0] = a0\n 16011: a1 = s1 + 0x5e0\n 16015: a0 = u64 [s1 + 0xa8]\n 16019: u64 [s1 + 0x5f8] = a0\n 16023: a0 = a3\n 16025: u64 [s1 + 0xb8] = a3\n 16029: ra = 534, jump @19\n      : @521 [@dyn 267] (gas: 28)\n 16035: u64 [s1 + 1432] = 0\n 16039: a0 = u64 [s1 + 0x30]\n 16042: u64 [s1 + 0x590] = a0\n 16046: a0 = u64 [s1 + 0x38]\n 16049: u64 [s1 + 0x588] = a0\n 16053: a0 = u64 [s1 + 0x40]\n 16056: u64 [s1 + 0x580] = a0\n 16060: u64 [s1 + 1464] = 0\n 16064: a0 = u64 [s1 + 0x78]\n 16067: u64 [s1 + 0x5b0] = a0\n 16071: a0 = u64 [s1 + 0x80]\n 16075: u64 [s1 + 0x5a8] = a0\n 16079: a0 = u64 [0x20020]\n 16084: a1 = u64 [0x20028]\n 16089: a2 = u64 [0x20030]\n 16094: a3 = u64 [s1 + 0x88]\n 16098: u64 [s1 + 0x5a0] = a3\n 16102: u64 [s1 + 0x5d8] = a0\n 16106: u64 [s1 + 0x5d0] = a1\n 16110: u64 [s1 + 0x5c8] = a2\n 16114: a0 = u64 [0x20038]\n 16119: a1 = 0x20\n 16122: a2 = s1 + 0x5c0\n 16126: a3 = s1 + 0x5a0\n 16130: a4 = s1 + 0x580\n 16134: u64 [s1 + 0x5c0] = a0\n 16138: a0 = u64 [s1 + 0xb8]\n 16142: ra = 536, jump @23\n      : @522 [@dyn 268] (gas: 3)\n 16148: a0 = s1 + 0x560\n 16152: a1 = 0x40\n 16155: ra = 538, jump @17\n      : @523 [@dyn 269] (gas: 6)\n 16161: a4 = s1 + 0x500\n 16165: a3 = u64 [a4 + 0x78]\n 16168: a1 = u64 [a4 + 0x70]\n 16171: a2 = u64 [a4 + 0x68]\n 16174: a0 = u64 [a4 + 0x60]\n 16177: t0 = 540, jump @718\n      : @524 [@dyn 270] (gas: 1)\n 16183: jump @593 if a1 == 0\n      : @525 (gas: 1)\n 16187: trap\n      : @526 (gas: 7)\n 16188: u64 [s1 + 600] = 0\n 16192: u64 [s1 + 592] = 0\n 16196: u64 [s1 + 584] = 0\n 16200: a1 = s1 + 0x240\n 16204: u64 [s1 + 576] = 0\n 16208: a0 = 0\n 16210: ra = 542, jump @19\n      : @527 [@dyn 271] (gas: 6)\n 16216: a0 = sp + 0xffffffffffffffe0\n 16219: a0 = a0 & 0xffffffffffffffe0\n 16222: u64 [s1 + 0x58] = a0\n 16225: sp = a0\n 16227: a1 = i32 [0x2008c]\n 16232: jump @529 if a1 >u 31\n      : @528 (gas: 2)\n 16236: u32 [0x2008c] = 0x20\n 16242: fallthrough\n      : @529 (gas: 10)\n 16243: a0 = sp + 0xffffffffffffffe0\n 16246: a2 = a0 & 0xffffffffffffffe0\n 16249: u64 [s1 + 0xa8] = a2\n 16253: sp = a2\n 16255: a0 = 0x200a0\n 16260: i32 a0 = a0 + 0\n 16262: i32 a2 = a2 + 0\n 16264: a1 = 0x20\n 16267: ecalli 6 // 'hash_keccak_256'\n 16269: t0 = 544, jump @697\n      : @530 [@dyn 272] (gas: 18)\n 16275: t0 = u64 [s1 + 0x58]\n 16278: a3 = a2\n 16280: a5 = t0\n 16282: u64 [a5 + 0x18] = a2\n 16285: u64 [s1 + 0x80] = t2\n 16289: u64 [t0 + 0x10] = t2\n 16292: u64 [s1 + 0x90] = a1\n 16296: u64 [a5 + 0x8] = a1\n 16299: a2 = a0\n 16301: u64 [a5] = a0\n 16303: a0 = u64 [s1 + 0x30]\n 16306: a4 = a4 + a0\n 16309: u64 [s1 + 0x40] = a4\n 16312: a0 = a4 <u a0\n 16315: a1 = u64 [s1 + 0x20]\n 16318: a0 = a0 + a1\n 16321: u64 [s1 + 0x38] = a0\n 16324: fallthrough\n      : @531 (gas: 21)\n 16325: u64 [s1 + 0xa8] = ra\n 16329: u64 [s1 + 0x88] = a3\n 16333: u64 [s1 + 0x98] = a2\n 16337: a0 = u64 [s1 + 0x78]\n 16340: a1 = u64 [s1 + 0xb8]\n 16344: a0 = a1 <u a0\n 16347: a2 = u64 [s1 + 0x68]\n 16350: a1 = t1 ^ a2\n 16353: a2 = t1 <u a2\n 16356: a2 = a0 if a1 == 0\n 16359: a4 = u64 [s1 + 0x70]\n 16362: a0 = ra <u a4\n 16365: a3 = u64 [s1 + 0x60]\n 16368: a1 = u64 [s1 + 0xb0]\n 16372: a5 = a1 ^ a3\n 16375: a3 = a1 <u a3\n 16378: a3 = a0 if a5 == 0\n 16381: a0 = ra ^ a4\n 16384: a0 = a0 | a5\n 16387: a3 = a2 if a0 == 0\n 16390: jump @420 if a3 == 0\n      : @532 (gas: 4)\n 16394: a0 = s1 + 0x220\n 16398: a1 = t0\n 16400: u64 [s1 + 0xa0] = t1\n 16404: ra = 546, jump @21\n      : @533 [@dyn 273] (gas: 20)\n 16410: t1 = u64 [s1 + 0xb8]\n 16414: t2 = u64 [s1 + 0xa0]\n 16418: a1 = u64 [s1 + 0x50]\n 16421: a0 = a1 + t1\n 16424: a1 = a0 <u a1\n 16427: a4 = u64 [s1 + 0x48]\n 16430: a2 = a4 + t2\n 16433: a2 = a2 + a1\n 16436: a5 = a2 ^ a4\n 16439: a4 = a2 <u a4\n 16442: a4 = a1 if a5 == 0\n 16445: a5 = u64 [s1 + 0x40]\n 16448: ra = u64 [s1 + 0xa8]\n 16452: a1 = a5 + ra\n 16455: t0 = a1 <u a5\n 16458: a5 = u64 [s1 + 0xb0]\n 16462: a3 = u64 [s1 + 0x38]\n 16465: a5 = a5 + a3\n 16468: a5 = a5 + t0\n 16471: t0 = 548, jump @716\n      : @534 [@dyn 274] (gas: 1)\n 16477: jump @525 if a1 != 0\n      : @535 (gas: 12)\n 16481: t0 = u64 [s1 + 0x238]\n 16485: a3 = s1 + 0x200\n 16489: a1 = u64 [a3 + 0x30]\n 16492: a2 = u64 [a3 + 0x28]\n 16495: a4 = u64 [a3 + 0x20]\n 16498: u64 [a3] = a4\n 16500: u64 [a3 + 0x8] = a2\n 16503: u64 [a3 + 0x10] = a1\n 16506: a1 = s1 + 0x200\n 16510: u64 [s1 + 0x218] = t0\n 16514: u64 [s1 + 0xb8] = t1\n 16518: ra = 550, jump @19\n      : @536 [@dyn 275] (gas: 1)\n 16524: t0 = 552, jump @696\n      : @537 [@dyn 276] (gas: 13)\n 16530: t0 = u64 [s1 + 0x58]\n 16533: a1 = t0\n 16535: u64 [a1 + 0x8] = a3\n 16538: a2 = a5\n 16540: u64 [a1] = a5\n 16542: u64 [t0 + 0x10] = t1\n 16545: a3 = a0\n 16547: u64 [a1 + 0x18] = a0\n 16550: u64 [s1 + 0x80] = t1\n 16554: u64 [s1 + 0xb8] = ra\n 16558: t1 = t2\n 16560: ra = a4\n 16562: jump @531\n      : @538 (gas: 10)\n 16565: a2 = s1 + 0x7ff\n 16569: a2 = a2 + 0x31\n 16572: u64 [a2 + 1160] = 0\n 16576: u64 [a2 + 1152] = 0\n 16580: u64 [a2 + 1144] = 0\n 16584: a1 = s1 + 0x7ff\n 16588: a1 = a1 + 0x4a1\n 16592: u64 [a2 + 1136] = 0x1\n 16597: a0 = 0\n 16599: ra = 554, jump @19\n      : @539 [@dyn 277] (gas: 6)\n 16605: a0 = sp + 0xffffffffffffffe0\n 16608: a0 = a0 & 0xffffffffffffffe0\n 16611: u64 [s1 + 0x58] = a0\n 16614: sp = a0\n 16616: a1 = i32 [0x2008c]\n 16621: jump @541 if a1 >u 31\n      : @540 (gas: 2)\n 16625: u32 [0x2008c] = 0x20\n 16631: fallthrough\n      : @541 (gas: 10)\n 16632: a0 = sp + 0xffffffffffffffe0\n 16635: a2 = a0 & 0xffffffffffffffe0\n 16638: u64 [s1 + 0xa8] = a2\n 16642: sp = a2\n 16644: a0 = 0x200a0\n 16649: i32 a0 = a0 + 0\n 16651: i32 a2 = a2 + 0\n 16653: a1 = 0x20\n 16656: ecalli 6 // 'hash_keccak_256'\n 16658: t0 = 556, jump @697\n      : @542 [@dyn 278] (gas: 18)\n 16664: t0 = u64 [s1 + 0x58]\n 16667: a3 = a2\n 16669: a5 = t0\n 16671: u64 [a5 + 0x18] = a2\n 16674: u64 [s1 + 0x80] = t2\n 16678: u64 [t0 + 0x10] = t2\n 16681: u64 [s1 + 0x90] = a1\n 16685: u64 [a5 + 0x8] = a1\n 16688: a2 = a0\n 16690: u64 [a5] = a0\n 16692: a0 = u64 [s1 + 0x30]\n 16695: a4 = a4 + a0\n 16698: u64 [s1 + 0x40] = a4\n 16701: a0 = a4 <u a0\n 16704: a1 = u64 [s1 + 0x20]\n 16707: a0 = a0 + a1\n 16710: u64 [s1 + 0x38] = a0\n 16713: fallthrough\n      : @543 (gas: 21)\n 16714: u64 [s1 + 0xa8] = ra\n 16718: u64 [s1 + 0x88] = a3\n 16722: u64 [s1 + 0x98] = a2\n 16726: a0 = u64 [s1 + 0x78]\n 16729: a1 = u64 [s1 + 0xb8]\n 16733: a0 = a1 <u a0\n 16736: a2 = u64 [s1 + 0x68]\n 16739: a1 = t1 ^ a2\n 16742: a2 = t1 <u a2\n 16745: a2 = a0 if a1 == 0\n 16748: a4 = u64 [s1 + 0x70]\n 16751: a0 = ra <u a4\n 16754: a3 = u64 [s1 + 0x60]\n 16757: a1 = u64 [s1 + 0xb0]\n 16761: a5 = a1 ^ a3\n 16764: a3 = a1 <u a3\n 16767: a3 = a0 if a5 == 0\n 16770: a0 = ra ^ a4\n 16773: a0 = a0 | a5\n 16776: a3 = a2 if a0 == 0\n 16779: jump @465 if a3 == 0\n      : @544 (gas: 5)\n 16783: a0 = s1 + 0x7ff\n 16787: a0 = a0 + 0x481\n 16791: a1 = t0\n 16793: u64 [s1 + 0xa0] = t1\n 16797: ra = 558, jump @21\n      : @545 [@dyn 279] (gas: 20)\n 16803: t2 = u64 [s1 + 0xb8]\n 16807: ra = u64 [s1 + 0xa0]\n 16811: a1 = u64 [s1 + 0x50]\n 16814: a0 = a1 + t2\n 16817: a1 = a0 <u a1\n 16820: a4 = u64 [s1 + 0x48]\n 16823: a2 = a4 + ra\n 16826: a2 = a2 + a1\n 16829: a5 = a2 ^ a4\n 16832: a4 = a2 <u a4\n 16835: a4 = a1 if a5 == 0\n 16838: a5 = u64 [s1 + 0x40]\n 16841: t1 = u64 [s1 + 0xa8]\n 16845: a1 = a5 + t1\n 16848: t0 = a1 <u a5\n 16851: a5 = u64 [s1 + 0xb0]\n 16855: a3 = u64 [s1 + 0x38]\n 16858: a5 = a5 + a3\n 16861: a5 = a5 + t0\n 16864: t0 = 560, jump @716\n      : @546 [@dyn 280] (gas: 1)\n 16870: jump @525 if a1 != 0\n      : @547 (gas: 15)\n 16874: a5 = s1 + 0x7ff\n 16878: a5 = a5 + 0x31\n 16881: t0 = u64 [a5 + 0x468]\n 16885: t1 = u64 [a5 + 0x460]\n 16889: a2 = a5 + 0x400\n 16893: a1 = u64 [a2 + 0x58]\n 16896: a4 = u64 [a2 + 0x50]\n 16899: u64 [a2 + 0x30] = a4\n 16902: u64 [a2 + 0x38] = a1\n 16905: u64 [a5 + 0x440] = t1\n 16909: a1 = s1 + 0x7ff\n 16913: a1 = a1 + 0x461\n 16917: u64 [a5 + 0x448] = t0\n 16921: u64 [s1 + 0xb8] = t2\n 16925: ra = 562, jump @19\n      : @548 [@dyn 281] (gas: 1)\n 16931: t0 = 564, jump @696\n      : @549 [@dyn 282] (gas: 13)\n 16937: t0 = u64 [s1 + 0x58]\n 16940: a1 = t0\n 16942: u64 [a1 + 0x8] = a3\n 16945: a2 = a5\n 16947: u64 [a1] = a5\n 16949: u64 [t0 + 0x10] = t1\n 16952: a3 = a0\n 16954: u64 [a1 + 0x18] = a0\n 16957: u64 [s1 + 0x80] = t1\n 16961: u64 [s1 + 0xb8] = ra\n 16965: t1 = t2\n 16967: ra = a4\n 16969: jump @543\n      : @550 (gas: 2)\n 16972: a1 = 0x200a0\n 16977: fallthrough\n      : @551 (gas: 6)\n 16978: i32 a1 = a1 + 0\n 16980: a0 = 0x1\n 16983: a2 = 0\n 16985: ecalli 7 // 'seal_return'\n 16987: a1 = 0x200a0\n 16992: jump @551\n      : @552 (gas: 2)\n 16994: a1 = 0x200a0\n 16999: jump @551\n      : @553 (gas: 2)\n 17001: a1 = 0x200a0\n 17006: jump @551\n      : @554 (gas: 2)\n 17008: a1 = 0x200a0\n 17013: jump @551\n      : @555 (gas: 2)\n 17015: a1 = 0x200a0\n 17020: jump @551\n      : @556 (gas: 2)\n 17022: a1 = 0x200a0\n 17027: jump @551\n      : @557 (gas: 2)\n 17029: a1 = 0x200a0\n 17034: jump @551\n      : @558 (gas: 2)\n 17036: a1 = 0x200a0\n 17041: jump @551\n      : @559 (gas: 2)\n 17043: a1 = 0x200a0\n 17048: jump @551\n      : @560 (gas: 2)\n 17050: a1 = 0x200a0\n 17055: jump @551\n      : @561 (gas: 2)\n 17057: a1 = 0x200a0\n 17062: jump @551\n      : @562 (gas: 2)\n 17064: a1 = 0x200a0\n 17069: jump @551\n      : @563 (gas: 2)\n 17071: a1 = 0x200a0\n 17076: jump @551\n      : @564 (gas: 2)\n 17078: a1 = 0x200a0\n 17083: jump @551\n      : @565 (gas: 2)\n 17085: a1 = 0x200a0\n 17090: jump @551\n      : @566 (gas: 6)\n 17092: u64 [s1 + 240] = 0\n 17096: u64 [s1 + 232] = 0\n 17100: u64 [s1 + 224] = 0\n 17104: t0 = 0x236\n 17108: a0 = 0x4e487b7100000000\n 17118: fallthrough\n      : @567 [@dyn 283] (gas: 4)\n 17119: a1 = s1 + 0xe0\n 17123: u64 [s1 + 0xf8] = a0\n 17127: a0 = 0\n 17129: ra = 568, jump @19\n      : @568 [@dyn 284] (gas: 7)\n 17135: u64 [s1 + 216] = 0\n 17139: u64 [s1 + 208] = 0\n 17143: u64 [s1 + 192] = 0x22\n 17148: a0 = 0x4\n 17151: a1 = s1 + 0xc0\n 17155: u64 [s1 + 200] = 0\n 17159: ra = 570, jump @19\n      : @569 [@dyn 285] (gas: 2)\n 17165: a1 = i32 [0x2008c]\n 17170: jump @571 if a1 >u 63\n      : @570 (gas: 3)\n 17174: u32 [0x2008c] = 0x40\n 17180: a1 = 0x200a0\n 17185: jump @592\n      : @571 (gas: 2)\n 17188: a1 = 0x200a0\n 17193: jump @592\n      : @572 (gas: 2)\n 17196: a1 = 0x200a0\n 17201: jump @551\n      : @573 (gas: 2)\n 17204: a1 = 0x200a0\n 17209: jump @551\n      : @574 (gas: 2)\n 17212: a1 = 0x200a0\n 17217: jump @551\n      : @575 (gas: 2)\n 17220: a1 = 0x200a0\n 17225: jump @551\n      : @576 (gas: 11)\n 17228: a2 = s1 + 0x7ff\n 17232: a2 = a2 + 0x31\n 17235: u64 [a2 + 800] = 0\n 17239: u64 [a2 + 792] = 0\n 17243: u64 [a2 + 784] = 0\n 17247: a0 = 0x4e487b7100000000\n 17257: a1 = s1 + 0x7ff\n 17261: a1 = a1 + 0x341\n 17265: u64 [a2 + 0x328] = a0\n 17269: a0 = 0\n 17271: ra = 572, jump @19\n      : @577 [@dyn 286] (gas: 11)\n 17277: a1 = s1 + 0x7ff\n 17281: a1 = a1 + 0x31\n 17284: u64 [a1 + 776] = 0\n 17288: u64 [a1 + 768] = 0\n 17292: u64 [a1 + 752] = 0x22\n 17297: a2 = a1\n 17299: a0 = 0x4\n 17302: a1 = s1 + 0x7ff\n 17306: a1 = a1 + 0x321\n 17310: u64 [a2 + 760] = 0\n 17314: ra = 574, jump @19\n      : @578 [@dyn 287] (gas: 2)\n 17320: a1 = i32 [0x2008c]\n 17325: jump @580 if a1 >u 63\n      : @579 (gas: 3)\n 17329: u32 [0x2008c] = 0x40\n 17335: a1 = 0x200a0\n 17340: jump @592\n      : @580 (gas: 2)\n 17343: a1 = 0x200a0\n 17348: jump @592\n      : @581 (gas: 6)\n 17351: u64 [s1 + 304] = 0\n 17355: u64 [s1 + 296] = 0\n 17359: u64 [s1 + 288] = 0\n 17363: t0 = 0x240\n 17367: a0 = 0x4e487b7100000000\n 17377: fallthrough\n      : @582 [@dyn 288] (gas: 4)\n 17378: a1 = s1 + 0x120\n 17382: u64 [s1 + 0x138] = a0\n 17386: a0 = 0\n 17388: ra = 578, jump @19\n      : @583 [@dyn 289] (gas: 7)\n 17394: u64 [s1 + 280] = 0\n 17398: u64 [s1 + 272] = 0\n 17402: u64 [s1 + 256] = 0x41\n 17407: a0 = 0x4\n 17410: a1 = s1 + 0x100\n 17414: u64 [s1 + 264] = 0\n 17418: ra = 580, jump @19\n      : @584 [@dyn 290] (gas: 2)\n 17424: a1 = i32 [0x2008c]\n 17429: jump @586 if a1 >u 63\n      : @585 (gas: 3)\n 17433: u32 [0x2008c] = 0x40\n 17439: a1 = 0x200a0\n 17444: jump @592\n      : @586 (gas: 2)\n 17447: a1 = 0x200a0\n 17452: jump @592\n      : @587 (gas: 12)\n 17454: a0 = s1 + 0x7ff\n 17458: a0 = a0 + 0x31\n 17461: u64 [a0 + 864] = 0\n 17465: u64 [a0 + 856] = 0\n 17469: u64 [a0 + 848] = 0\n 17473: a2 = a0\n 17475: a0 = 0x4e487b7100000000\n 17485: a1 = s1 + 0x7ff\n 17489: a1 = a1 + 0x381\n 17493: u64 [a2 + 0x368] = a0\n 17497: a0 = 0\n 17499: ra = 582, jump @19\n      : @588 [@dyn 291] (gas: 11)\n 17505: a1 = s1 + 0x7ff\n 17509: a1 = a1 + 0x31\n 17512: u64 [a1 + 840] = 0\n 17516: u64 [a1 + 832] = 0\n 17520: u64 [a1 + 816] = 0x41\n 17525: a2 = a1\n 17527: a0 = 0x4\n 17530: a1 = s1 + 0x7ff\n 17534: a1 = a1 + 0x361\n 17538: u64 [a2 + 824] = 0\n 17542: ra = 584, jump @19\n      : @589 [@dyn 292] (gas: 2)\n 17548: a1 = i32 [0x2008c]\n 17553: jump @591 if a1 >u 63\n      : @590 (gas: 3)\n 17557: u32 [0x2008c] = 0x40\n 17563: a1 = 0x200a0\n 17568: jump @592\n      : @591 (gas: 2)\n 17570: a1 = 0x200a0\n 17575: fallthrough\n      : @592 (gas: 5)\n 17576: i32 a1 = a1 + 0\n 17578: a0 = 0x1\n 17581: a2 = 0x24\n 17584: ecalli 7 // 'seal_return'\n 17586: fallthrough\n      : @593 (gas: 7)\n 17587: u64 [s1 + 1368] = 0\n 17591: u64 [s1 + 1360] = 0\n 17595: u64 [s1 + 1352] = 0\n 17599: a1 = s1 + 0x540\n 17603: u64 [s1 + 1344] = 0x1\n 17608: u64 [s1 + 0xb8] = a0\n 17612: ra = 586, jump @19\n      : @594 [@dyn 293] (gas: 3)\n 17618: a1 = 0x20\n 17621: a0 = u64 [s1 + 0xb8]\n 17625: ra = 588, jump @26\n      : @595 [@dyn 294] (gas: 6)\n 17631: i32 a1 = a0 + 0\n 17633: a2 = 0x20\n 17636: a0 = 0\n 17638: ra = 0x24e\n 17642: ecalli 7 // 'seal_return'\n 17644: fallthrough\n      : @596 [@dyn 295] (gas: 17)\n 17645: sp = sp + 0xffffffffffffff30\n 17649: u64 [sp + 0xc8] = ra\n 17653: u64 [sp + 0xc0] = s0\n 17657: u64 [sp + 0xb8] = s1\n 17661: s0 = sp + 0xd0\n 17665: sp = sp & 0xfffffffffffffff0\n 17668: a2 = u64 [a1 + 0x18]\n 17671: u64 [sp + 0x10] = a2\n 17674: a2 = u64 [a1 + 0x10]\n 17677: u64 [sp + 0x8] = a2\n 17680: a2 = u64 [a1 + 0x8]\n 17683: u64 [sp] = a2\n 17685: s1 = u64 [a1]\n 17687: u64 [sp + 0x28] = a0\n 17690: a0 = sp + 0x90\n 17694: a1 = 0x40\n 17697: ra = 592, jump @17\n      : @597 [@dyn 296] (gas: 39)\n 17703: a1 = u64 [sp + 0x98]\n 17707: a2 = u64 [sp + 0x90]\n 17711: a0 = s1 + 0x1f\n 17714: ra = a0 <u s1\n 17717: a3 = u64 [sp]\n 17719: a4 = a3 + ra\n 17722: a0 = a0 & 0xffffffffffffffe0\n 17725: t1 = a1 + a4\n 17728: t0 = a2 + a0\n 17731: u64 [sp + 0x20] = a2\n 17734: a5 = t0 <u a2\n 17737: t1 = t1 + a5\n 17740: s1 = t1 ^ a1\n 17743: u64 [sp + 0x18] = a1\n 17746: a2 = t1 <u a1\n 17749: a2 = a5 if s1 == 0\n 17752: t2 = u64 [sp + 0xa8]\n 17756: a4 = a4 <u a3\n 17759: s1 = u64 [sp + 0xa0]\n 17763: a4 = ra if ra == 0\n 17766: a0 = u64 [sp + 0x8]\n 17769: a4 = a4 + a0\n 17772: a5 = a4 <u a0\n 17775: a4 = a4 + s1\n 17778: a3 = a4 + a2\n 17781: a0 = u64 [sp + 0x10]\n 17784: a0 = a0 + t2\n 17787: a0 = a0 + a5\n 17790: a5 = a3 <u a4\n 17793: a4 = a4 <u s1\n 17796: a0 = a0 + a4\n 17799: a4 = a0 + a5\n 17802: a0 = a4 >u 0\n 17804: a5 = a3 >u 0\n 17806: a5 = a0 if a4 != 0\n 17809: a0 = a3 | a4\n 17812: a1 = t1 >u 0\n 17814: a1 = a5 if a0 != 0\n 17817: jump @601 if a1 != 0\n      : @598 (gas: 8)\n 17820: a0 = a3 <u s1\n 17823: a1 = a4 ^ t2\n 17826: a5 = a4 <u t2\n 17829: a5 = a0 if a1 == 0\n 17832: a0 = a3 ^ s1\n 17835: a0 = a0 | a1\n 17838: a2 = a5 if a0 != 0\n 17841: jump @601 if a2 != 0\n      : @599 (gas: 8)\n 17844: u64 [sp + 0x70] = t0\n 17847: u64 [sp + 0x78] = t1\n 17850: u64 [sp + 0x80] = a3\n 17854: a0 = 0x40\n 17857: a1 = sp + 0x70\n 17860: u64 [sp + 0x88] = a4\n 17864: u64 [sp + 0x10] = t2\n 17867: ra = 594, jump @19\n      : @600 [@dyn 297] (gas: 14)\n 17873: a0 = u64 [sp + 0x28]\n 17876: a1 = u64 [sp + 0x10]\n 17879: u64 [a0 + 0x18] = a1\n 17882: u64 [a0 + 0x10] = s1\n 17885: a1 = u64 [sp + 0x18]\n 17888: u64 [a0 + 0x8] = a1\n 17891: a1 = u64 [sp + 0x20]\n 17894: u64 [a0] = a1\n 17896: sp = s0 + 0xffffffffffffff30\n 17900: ra = u64 [sp + 0xc8]\n 17904: s0 = u64 [sp + 0xc0]\n 17908: s1 = u64 [sp + 0xb8]\n 17912: sp = sp + 0xd0\n 17916: ret\n      : @601 (gas: 6)\n 17918: u64 [sp + 96] = 0\n 17921: u64 [sp + 88] = 0\n 17924: u64 [sp + 80] = 0\n 17927: t0 = 0x254\n 17931: a0 = 0x4e487b7100000000\n 17941: fallthrough\n      : @602 [@dyn 298] (gas: 4)\n 17942: a1 = sp + 0x50\n 17945: u64 [sp + 0x68] = a0\n 17948: a0 = 0\n 17950: ra = 598, jump @19\n      : @603 [@dyn 299] (gas: 7)\n 17956: u64 [sp + 72] = 0\n 17959: u64 [sp + 64] = 0\n 17962: u64 [sp + 48] = 0x41\n 17966: a0 = 0x4\n 17969: a1 = sp + 0x30\n 17972: u64 [sp + 56] = 0\n 17975: ra = 600, jump @19\n      : @604 [@dyn 300] (gas: 2)\n 17981: a1 = i32 [0x2008c]\n 17986: jump @606 if a1 >u 63\n      : @605 (gas: 2)\n 17990: u32 [0x2008c] = 0x40\n 17996: fallthrough\n      : @606 (gas: 7)\n 17997: a1 = 0x200a0\n 18002: i32 a1 = a1 + 0\n 18004: a0 = 0x1\n 18007: a2 = 0x24\n 18010: ra = 0x25a\n 18014: ecalli 7 // 'seal_return'\n 18016: fallthrough\n      : @607 [@dyn 301] (gas: 37)\n 18017: sp = sp + 0xfffffffffffffe70\n 18021: u64 [sp + 0x188] = ra\n 18025: u64 [sp + 0x180] = s0\n 18029: u64 [sp + 0x178] = s1\n 18033: s0 = sp + 0x190\n 18037: sp = sp & 0xfffffffffffffff0\n 18040: t2 = u64 [a1]\n 18042: a4 = u64 [a2 + 0x8]\n 18045: ra = u64 [a1 + 0x8]\n 18048: s1 = u64 [a2]\n 18050: a3 = t2 + 0x1f\n 18053: t0 = a3 <u t2\n 18056: a5 = ra + t0\n 18059: u64 [sp + 0x20] = s1\n 18062: t1 = a3 <u s1\n 18065: a3 = a5 ^ a4\n 18068: u64 [sp + 0x28] = a4\n 18071: a4 = a5 <u a4\n 18074: a4 = t1 if a3 == 0\n 18077: s1 = u64 [a1 + 0x10]\n 18080: a3 = a5 <u ra\n 18083: a3 = t0 if t0 == 0\n 18086: a5 = u64 [a2 + 0x18]\n 18089: t0 = u64 [a1 + 0x18]\n 18092: t1 = u64 [a2 + 0x10]\n 18095: a3 = a3 + s1\n 18098: a1 = a3 <u s1\n 18101: a1 = a1 + t0\n 18104: a2 = a1 ^ a5\n 18107: u64 [sp + 0x10] = a5\n 18110: a1 = a1 <s a5\n 18113: a5 = a3 <u t1\n 18116: a1 = a5 if a2 == 0\n 18119: a3 = a3 ^ t1\n 18122: a2 = a2 | a3\n 18125: a4 = a1 if a2 != 0\n 18128: jump @625 if a4 == 0\n      : @608 (gas: 13)\n 18132: u64 [sp + 0x8] = a0\n 18135: u64 [sp + 0x18] = t1\n 18138: a0 = t2 | s1\n 18141: u64 [sp + 0x38] = ra\n 18144: u64 [sp + 0x30] = t0\n 18147: a1 = ra | t0\n 18150: a0 = a0 | a1\n 18153: a0 = a0 >> 0x20\n 18156: u64 [sp + 0x58] = s1\n 18159: a1 = a1 | s1\n 18162: a1 = a1 << 0x20\n 18165: a0 = a0 | a1\n 18168: jump @624 if a0 != 0\n      : @609 (gas: 4)\n 18172: a0 = sp + 0x150\n 18176: u64 [sp + 0x50] = t2\n 18179: a1 = t2\n 18181: ra = 604, jump @17\n      : @610 [@dyn 302] (gas: 12)\n 18187: a3 = u64 [sp + 0x168]\n 18191: a2 = u64 [sp + 0x160]\n 18195: a4 = u64 [sp + 0x158]\n 18199: a0 = a3 >u 0\n 18201: a1 = a2 >u 0\n 18203: a1 = a0 if a3 != 0\n 18206: u64 [sp + 0x80] = a2\n 18210: u64 [sp + 0x88] = a3\n 18214: a0 = a2 | a3\n 18217: a2 = a4 >u 0\n 18219: a2 = a1 if a0 != 0\n 18222: jump @626 if a2 != 0\n      : @611 (gas: 20)\n 18226: a1 = u64 [sp + 0x150]\n 18230: a0 = a1 + 0x1f\n 18233: u64 [sp + 0x48] = a1\n 18236: a1 = a0 <u a1\n 18239: u64 [sp + 0x78] = a4\n 18242: a1 = a1 + a4\n 18245: a1 = a1 & 0x1\n 18248: a0 = a0 & 0xffffffffffffffe0\n 18251: a2 = a0 + 0x20\n 18254: a0 = a2 <u a0\n 18257: a3 = a1 + a0\n 18260: a4 = a3 <u a1\n 18263: a4 = a0 if a0 == 0\n 18266: u64 [sp + 296] = 0\n 18270: u64 [sp + 0x110] = a2\n 18274: u64 [sp + 0x118] = a3\n 18278: a0 = sp + 0x130\n 18282: a1 = sp + 0x110\n 18286: u64 [sp + 0x120] = a4\n 18290: ra = 606, jump @596\n      : @612 [@dyn 303] (gas: 15)\n 18296: a2 = u64 [sp + 0x148]\n 18300: a3 = u64 [sp + 0x140]\n 18304: a1 = u64 [sp + 0x138]\n 18308: a0 = u64 [sp + 0x130]\n 18312: u64 [sp + 0x40] = a1\n 18315: u64 [sp + 0x68] = a2\n 18318: a2 = a2 | a1\n 18321: a1 = a0 | a3\n 18324: a1 = a1 | a2\n 18327: a1 = a1 >> 0x20\n 18330: u64 [sp + 0x70] = a3\n 18333: a2 = a2 | a3\n 18336: a2 = a2 << 0x20\n 18339: a1 = a1 | a2\n 18342: jump @624 if a1 != 0\n      : @613 (gas: 11)\n 18346: s1 = u64 [sp + 0x48]\n 18349: u64 [sp + 0xf0] = s1\n 18353: a1 = u64 [sp + 0x78]\n 18356: u64 [sp + 0xf8] = a1\n 18360: a1 = u64 [sp + 0x80]\n 18364: u64 [sp + 0x100] = a1\n 18368: a1 = sp + 0xf0\n 18372: a2 = u64 [sp + 0x88]\n 18376: u64 [sp + 0x108] = a2\n 18380: u64 [sp + 0x60] = a0\n 18383: ra = 608, jump @19\n      : @614 [@dyn 304] (gas: 45)\n 18389: a0 = u64 [sp + 0x50]\n 18392: a3 = a0 + s1\n 18395: a2 = a3 <u a0\n 18398: t2 = u64 [sp + 0x38]\n 18401: a0 = u64 [sp + 0x78]\n 18404: a0 = a0 + t2\n 18407: a0 = a0 + a2\n 18410: a4 = a0 ^ t2\n 18413: a1 = a0 <u t2\n 18416: a1 = a2 if a4 == 0\n 18419: t1 = u64 [sp + 0x58]\n 18422: a2 = u64 [sp + 0x80]\n 18426: a2 = a2 + t1\n 18429: a5 = a3 + 0x20\n 18432: t0 = a5 <u a3\n 18435: a4 = a0 + t0\n 18438: a3 = u64 [sp + 0x20]\n 18441: a5 = a3 <u a5\n 18444: a3 = u64 [sp + 0x28]\n 18447: s1 = a4 ^ a3\n 18450: a3 = a3 <u a4\n 18453: a5 = a3 if s1 != 0\n 18456: a3 = a2 <u t1\n 18459: t1 = u64 [sp + 0x30]\n 18462: s1 = u64 [sp + 0x88]\n 18466: s1 = s1 + t1\n 18469: a3 = a3 + s1\n 18472: a1 = a1 + a2\n 18475: a2 = a1 <u a2\n 18478: a2 = a2 + a3\n 18481: a0 = a4 <u a0\n 18484: a0 = t0 if t0 == 0\n 18487: a0 = a0 + a1\n 18490: a1 = a0 <u a1\n 18493: a1 = a1 + a2\n 18496: a3 = u64 [sp + 0x10]\n 18499: a2 = a1 ^ a3\n 18502: a1 = a3 <u a1\n 18505: a4 = u64 [sp + 0x18]\n 18508: a3 = a4 <u a0\n 18511: a1 = a3 if a2 == 0\n 18514: a0 = a0 ^ a4\n 18517: a0 = a0 | a2\n 18520: a5 = a1 if a0 != 0\n 18523: jump @632 if a5 != 0\n      : @615 (gas: 10)\n 18527: a0 = u64 [sp + 0x70]\n 18530: a1 = u64 [sp + 0x68]\n 18533: a1 = a1 | a0\n 18536: a0 = 0xffffffe0\n 18546: a4 = u64 [sp + 0x60]\n 18549: a2 = a4 <u a0\n 18552: a3 = u64 [sp + 0x40]\n 18555: a2 = 0 if a3 != 0\n 18557: a2 = 0 if a1 != 0\n 18559: jump @624 if a2 == 0\n      : @616 (gas: 12)\n 18563: a3 = a4\n 18565: a1 = u64 [sp + 0x58]\n 18568: a1 = a1 | t1\n 18571: a5 = u64 [sp + 0x50]\n 18574: a0 = a5 <u a0\n 18577: a0 = 0 if t2 != 0\n 18579: a0 = 0 if a1 != 0\n 18581: ra = u64 [sp + 0x88]\n 18585: a2 = u64 [sp + 0x80]\n 18589: a4 = u64 [sp + 0x78]\n 18592: s1 = u64 [sp + 0x48]\n 18595: jump @624 if a0 == 0\n      : @617 (gas: 8)\n 18599: a0 = s1 | a2\n 18602: a1 = a4 | ra\n 18605: a0 = a0 | a1\n 18608: a0 = a0 >> 0x20\n 18611: a1 = a1 | a2\n 18614: a1 = a1 << 0x20\n 18617: a0 = a0 | a1\n 18620: jump @624 if a0 != 0\n      : @618 (gas: 5)\n 18624: i32 a0 = a3 + 0x20\n 18627: i32 a1 = a5 + 0x20\n 18630: u64 [sp + 0x58] = a1\n 18633: a1 = s1\n 18635: ra = 610, jump @26\n      : @619 [@dyn 305] (gas: 4)\n 18641: u64 [sp + 0x50] = a0\n 18644: a0 = u64 [sp + 0x58]\n 18647: a1 = s1\n 18649: ra = 612, jump @26\n      : @620 [@dyn 306] (gas: 4)\n 18655: a1 = a0\n 18657: a0 = u64 [sp + 0x50]\n 18660: a2 = s1\n 18662: ra = 614, jump @0\n      : @621 [@dyn 307] (gas: 27)\n 18668: a1 = u64 [sp + 0x60]\n 18671: a0 = a1 + s1\n 18674: a1 = a0 <u a1\n 18677: s1 = u64 [sp + 0x40]\n 18680: a2 = u64 [sp + 0x78]\n 18683: a2 = a2 + s1\n 18686: a2 = a2 + a1\n 18689: a3 = a2 ^ s1\n 18692: a4 = a2 <u s1\n 18695: a4 = a1 if a3 == 0\n 18698: a5 = u64 [sp + 0x70]\n 18701: a1 = u64 [sp + 0x80]\n 18705: a1 = a1 + a5\n 18708: a4 = a4 + a1\n 18711: t0 = a4 <u a1\n 18714: a1 = a1 <u a5\n 18717: a5 = u64 [sp + 0x88]\n 18721: a3 = u64 [sp + 0x68]\n 18724: a5 = a5 + a3\n 18727: a1 = a1 + a5\n 18730: a1 = a1 + t0\n 18733: a1 = a1 | a4\n 18736: a3 = 0xffffffe0\n 18746: a3 = a0 <u a3\n 18749: a3 = 0 if a2 != 0\n 18751: a3 = 0 if a1 != 0\n 18753: jump @624 if a3 == 0\n      : @622 (gas: 7)\n 18756: i32 a0 = a0 + 0x20\n 18759: u64 [sp + 232] = 0\n 18763: u64 [sp + 224] = 0\n 18767: u64 [sp + 216] = 0\n 18771: a1 = sp + 0xd0\n 18775: u64 [sp + 208] = 0\n 18779: ra = 616, jump @19\n      : @623 [@dyn 308] (gas: 14)\n 18785: a0 = u64 [sp + 0x8]\n 18788: a1 = u64 [sp + 0x68]\n 18791: u64 [a0 + 0x18] = a1\n 18794: a1 = u64 [sp + 0x70]\n 18797: u64 [a0 + 0x10] = a1\n 18800: u64 [a0 + 0x8] = s1\n 18803: a1 = u64 [sp + 0x60]\n 18806: u64 [a0] = a1\n 18808: sp = s0 + 0xfffffffffffffe70\n 18812: ra = u64 [sp + 0x188]\n 18816: s0 = u64 [sp + 0x180]\n 18820: s1 = u64 [sp + 0x178]\n 18824: sp = sp + 0x190\n 18828: ret\n      : @624 (gas: 1)\n 18830: trap\n      : @625 (gas: 2)\n 18831: a1 = 0x200a0\n 18836: jump @633\n      : @626 (gas: 6)\n 18838: u64 [sp + 192] = 0\n 18842: u64 [sp + 184] = 0\n 18846: u64 [sp + 176] = 0\n 18850: t0 = 0x26a\n 18854: a0 = 0x4e487b7100000000\n 18864: fallthrough\n      : @627 [@dyn 309] (gas: 4)\n 18865: a1 = sp + 0xb0\n 18869: u64 [sp + 0xc8] = a0\n 18873: a0 = 0\n 18875: ra = 620, jump @19\n      : @628 [@dyn 310] (gas: 7)\n 18881: u64 [sp + 168] = 0\n 18885: u64 [sp + 160] = 0\n 18889: u64 [sp + 144] = 0x41\n 18894: a0 = 0x4\n 18897: a1 = sp + 0x90\n 18901: u64 [sp + 152] = 0\n 18905: ra = 622, jump @19\n      : @629 [@dyn 311] (gas: 2)\n 18911: a1 = i32 [0x2008c]\n 18916: jump @631 if a1 >u 63\n      : @630 (gas: 2)\n 18920: u32 [0x2008c] = 0x40\n 18926: fallthrough\n      : @631 (gas: 7)\n 18927: a1 = 0x200a0\n 18932: i32 a1 = a1 + 0\n 18934: a0 = 0x1\n 18937: a2 = 0x24\n 18940: ecalli 7 // 'seal_return'\n 18942: a1 = 0x200a0\n 18947: jump @633\n      : @632 (gas: 2)\n 18949: a1 = 0x200a0\n 18954: fallthrough\n      : @633 (gas: 6)\n 18955: i32 a1 = a1 + 0\n 18957: a0 = 0x1\n 18960: a2 = 0\n 18962: ra = 0x270\n 18966: ecalli 7 // 'seal_return'\n 18968: fallthrough\n      : @634 [@dyn 312] (gas: 22)\n 18969: sp = sp + 0xfffffffffffffee0\n 18973: u64 [sp + 0x118] = ra\n 18977: u64 [sp + 0x110] = s0\n 18981: u64 [sp + 0x108] = s1\n 18985: s0 = sp + 0x120\n 18989: sp = sp & 0xfffffffffffffff0\n 18992: a4 = u64 [a1 + 0x10]\n 18995: a3 = u64 [a1 + 0x18]\n 18998: a5 = u64 [a1 + 0x8]\n 19001: t0 = u64 [a1]\n 19003: u64 [sp + 0x68] = a3\n 19006: u64 [sp + 0x78] = a5\n 19009: a1 = a5 | a3\n 19012: a3 = t0 | a4\n 19015: a3 = a3 | a1\n 19018: a3 = a3 >> 0x20\n 19021: u64 [sp + 0x70] = a4\n 19024: a1 = a1 | a4\n 19027: a1 = a1 << 0x20\n 19030: a1 = a1 | a3\n 19033: u64 [sp + 0x8] = a0\n 19036: jump @649 if a1 != 0\n      : @635 (gas: 15)\n 19040: a0 = u64 [a2 + 0x18]\n 19043: u64 [sp + 0x48] = a0\n 19046: s1 = u64 [a2 + 0x10]\n 19049: a0 = u64 [a2 + 0x8]\n 19052: u64 [sp + 0x50] = a0\n 19055: a0 = u64 [a2]\n 19057: u64 [sp + 0x58] = a0\n 19060: u64 [sp + 248] = 0\n 19064: u64 [sp + 240] = 0\n 19068: u64 [sp + 232] = 0\n 19072: a1 = sp + 0xe0\n 19076: u64 [sp + 224] = 0x20\n 19081: a0 = t0\n 19083: u64 [sp + 0x60] = t0\n 19086: ra = 626, jump @19\n      : @636 [@dyn 313] (gas: 12)\n 19092: a1 = u64 [sp + 0x58]\n 19095: a0 = a1 | s1\n 19098: a2 = u64 [sp + 0x48]\n 19101: a3 = u64 [sp + 0x50]\n 19104: a2 = a2 | a3\n 19107: a0 = a0 | a2\n 19110: a0 = a0 >> 0x20\n 19113: u64 [sp + 0x20] = s1\n 19116: a2 = a2 | s1\n 19119: a2 = a2 << 0x20\n 19122: a0 = a0 | a2\n 19125: jump @649 if a0 != 0\n      : @637 (gas: 2)\n 19129: a0 = sp + 0xc0\n 19133: ra = 628, jump @17\n      : @638 [@dyn 314] (gas: 13)\n 19139: a0 = u64 [sp + 0x70]\n 19142: a1 = u64 [sp + 0x68]\n 19145: a1 = a1 | a0\n 19148: a0 = 0x100000000\n 19158: u64 [sp + 0x10] = a0\n 19161: a0 = 0xffffffe0\n 19171: a2 = u64 [sp + 0x60]\n 19174: a0 = a2 <u a0\n 19177: a3 = u64 [sp + 0x78]\n 19180: a0 = 0 if a3 != 0\n 19182: u64 [sp + 0x18] = a1\n 19185: a0 = 0 if a1 != 0\n 19187: jump @649 if a0 == 0\n      : @639 (gas: 16)\n 19191: a3 = u64 [sp + 0xd8]\n 19195: a4 = u64 [sp + 0xd0]\n 19199: a5 = u64 [sp + 0xc8]\n 19203: a1 = u64 [sp + 0xc0]\n 19207: i32 a0 = a2 + 0x20\n 19210: u64 [sp + 0x28] = a1\n 19213: u64 [sp + 0xa0] = a1\n 19217: u64 [sp + 0x30] = a5\n 19220: u64 [sp + 0xa8] = a5\n 19224: u64 [sp + 0x38] = a4\n 19227: u64 [sp + 0xb0] = a4\n 19231: a1 = sp + 0xa0\n 19235: u64 [sp + 0x40] = a3\n 19238: u64 [sp + 0xb8] = a3\n 19242: s1 = a2\n 19244: ra = 630, jump @19\n      : @640 [@dyn 315] (gas: 8)\n 19250: a0 = u64 [sp + 0x10]\n 19253: a0 = a0 + 0xffffffffffffffc0\n 19256: a0 = s1 <u a0\n 19259: a1 = u64 [sp + 0x78]\n 19262: a0 = 0 if a1 != 0\n 19264: a1 = u64 [sp + 0x18]\n 19267: a0 = 0 if a1 != 0\n 19269: jump @649 if a0 == 0\n      : @641 (gas: 10)\n 19273: a0 = u64 [sp + 0x48]\n 19276: a1 = u64 [sp + 0x20]\n 19279: a0 = a0 | a1\n 19282: a1 = 0xffffffe0\n 19292: a3 = u64 [sp + 0x58]\n 19295: a1 = a3 <u a1\n 19298: a4 = u64 [sp + 0x50]\n 19301: a1 = 0 if a4 != 0\n 19303: a1 = 0 if a0 != 0\n 19305: jump @649 if a1 == 0\n      : @642 (gas: 13)\n 19309: a2 = s1\n 19311: a1 = u64 [sp + 0x28]\n 19314: a5 = u64 [sp + 0x38]\n 19317: a0 = a1 | a5\n 19320: a4 = u64 [sp + 0x40]\n 19323: s1 = u64 [sp + 0x30]\n 19326: a4 = a4 | s1\n 19329: a0 = a0 | a4\n 19332: a0 = a0 >> 0x20\n 19335: a4 = a4 | a5\n 19338: a4 = a4 << 0x20\n 19341: a0 = a0 | a4\n 19344: jump @649 if a0 != 0\n      : @643 (gas: 5)\n 19348: i32 a0 = a2 + 0x40\n 19351: i32 a3 = a3 + 0x20\n 19354: u64 [sp + 0x58] = a3\n 19357: s1 = a1\n 19359: ra = 632, jump @26\n      : @644 [@dyn 316] (gas: 4)\n 19365: u64 [sp + 0x50] = a0\n 19368: a0 = u64 [sp + 0x58]\n 19371: a1 = s1\n 19373: ra = 634, jump @26\n      : @645 [@dyn 317] (gas: 4)\n 19379: a1 = a0\n 19381: a0 = u64 [sp + 0x50]\n 19384: a2 = s1\n 19386: ra = 636, jump @0\n      : @646 [@dyn 318] (gas: 27)\n 19392: a0 = u64 [sp + 0x60]\n 19395: a0 = a0 + s1\n 19398: a1 = a0 <u s1\n 19401: a2 = u64 [sp + 0x78]\n 19404: a4 = u64 [sp + 0x30]\n 19407: a2 = a2 + a4\n 19410: a2 = a2 + a1\n 19413: a3 = a2 ^ a4\n 19416: a4 = a2 <u a4\n 19419: a4 = a1 if a3 == 0\n 19422: a1 = u64 [sp + 0x70]\n 19425: a3 = u64 [sp + 0x38]\n 19428: a1 = a1 + a3\n 19431: a3 = a1 <u a3\n 19434: a5 = u64 [sp + 0x68]\n 19437: s1 = u64 [sp + 0x40]\n 19440: a5 = a5 + s1\n 19443: a3 = a3 + a5\n 19446: a4 = a4 + a1\n 19449: a1 = a4 <u a1\n 19452: a1 = a1 + a3\n 19455: a1 = a1 | a4\n 19458: a3 = 0xffffffc0\n 19468: a3 = a0 <u a3\n 19471: a3 = 0 if a2 != 0\n 19473: a3 = 0 if a1 != 0\n 19475: jump @649 if a3 == 0\n      : @647 (gas: 7)\n 19479: i32 a0 = a0 + 0x40\n 19482: u64 [sp + 152] = 0\n 19486: u64 [sp + 144] = 0\n 19490: u64 [sp + 136] = 0\n 19494: a1 = sp + 0x80\n 19498: u64 [sp + 128] = 0\n 19502: ra = 638, jump @19\n      : @648 [@dyn 319] (gas: 35)\n 19508: s1 = u64 [sp + 0x28]\n 19511: s1 = s1 + 0x1f\n 19514: a0 = 0x1ffffffe0\n 19524: a0 = a0 & s1\n 19527: a1 = u64 [sp + 0x60]\n 19530: a0 = a0 + a1\n 19533: a1 = a0 <u a1\n 19536: a3 = u64 [sp + 0x78]\n 19539: a2 = a3 + a1\n 19542: a3 = a2 <u a3\n 19545: a3 = a1 if a1 == 0\n 19548: a1 = u64 [sp + 0x70]\n 19551: a3 = a3 + a1\n 19554: a1 = a3 <u a1\n 19557: a4 = u64 [sp + 0x68]\n 19560: a1 = a1 + a4\n 19563: a4 = a0 + 0x40\n 19566: a0 = a4 <u a0\n 19569: a5 = a2 + a0\n 19572: a2 = a5 <u a2\n 19575: a2 = a0 if a0 == 0\n 19578: a2 = a2 + a3\n 19581: a0 = a2 <u a3\n 19584: a0 = a0 + a1\n 19587: a1 = u64 [sp + 0x8]\n 19590: u64 [a1] = a4\n 19592: u64 [a1 + 0x8] = a5\n 19595: u64 [a1 + 0x10] = a2\n 19598: u64 [a1 + 0x18] = a0\n 19601: sp = s0 + 0xfffffffffffffee0\n 19605: ra = u64 [sp + 0x118]\n 19609: s0 = u64 [sp + 0x110]\n 19613: s1 = u64 [sp + 0x108]\n 19617: sp = sp + 0x120\n 19621: ret\n      : @649 (gas: 1)\n 19623: trap\n      : @650 [@dyn 320] (gas: 5)\n 19624: a1 = 0x4\n 19627: ra = 0x282\n 19631: ecalli 1 // 'call_data_load'\n 19633: t0 = 0x284\n 19637: jump @711\n      : @651 [@dyn 321] (gas: 1)\n 19640: t0 = 644, jump @711\n      : @652 [@dyn 322] (gas: 1)\n 19646: jump @655 if a3 == 0\n      : @653 (gas: 1)\n 19649: t0 = 646, jump @717\n      : @654 [@dyn 323] (gas: 1)\n 19655: ret\n      : @655 (gas: 8)\n 19657: a1 = 0x200a0\n 19662: i32 a1 = a1 + 0\n 19664: a0 = 0x1\n 19667: a2 = 0\n 19669: ra = 0x288\n 19673: ecalli 7 // 'seal_return'\n 19675: t0 = 0x28a\n 19679: jump @724\n      : @656 [@dyn 324] (gas: 1)\n 19682: t0 = 650, jump @724\n      : @657 [@dyn 325] (gas: 5)\n 19688: a1 = 0x24\n 19691: ra = 0x28c\n 19695: ecalli 1 // 'call_data_load'\n 19697: t0 = 0x28e\n 19701: jump @711\n      : @658 [@dyn 326] (gas: 1)\n 19704: t0 = 654, jump @711\n      : @659 [@dyn 327] (gas: 1)\n 19710: jump @662 if a3 == 0\n      : @660 (gas: 1)\n 19713: t0 = 656, jump @717\n      : @661 [@dyn 328] (gas: 1)\n 19719: ret\n      : @662 (gas: 7)\n 19721: a1 = 0x200a0\n 19726: i32 a1 = a1 + 0\n 19728: a0 = 0x1\n 19731: a2 = 0\n 19733: ra = 0x292\n 19737: ecalli 7 // 'seal_return'\n 19739: fallthrough\n      : @663 [@dyn 329] (gas: 14)\n 19740: sp = sp + 0xffffffffffffff20\n 19744: u64 [sp + 0xd8] = ra\n 19748: u64 [sp + 0xd0] = s0\n 19752: u64 [sp + 0xc8] = s1\n 19756: s0 = sp + 0xe0\n 19760: sp = sp & 0xfffffffffffffff0\n 19763: a1 = u64 [a0 + 0x10]\n 19766: a2 = u64 [a0 + 0x18]\n 19769: a3 = u64 [a0 + 0x8]\n 19772: a0 = u64 [a0]\n 19774: a2 = a2 | a3\n 19777: a0 = a0 | a1\n 19780: a0 = a0 | a2\n 19783: jump @665 if a0 == 0\n      : @664 (gas: 6)\n 19786: sp = s0 + 0xffffffffffffff20\n 19790: ra = u64 [sp + 0xd8]\n 19794: s0 = u64 [sp + 0xd0]\n 19798: s1 = u64 [sp + 0xc8]\n 19802: sp = sp + 0xe0\n 19806: ret\n      : @665 (gas: 3)\n 19808: a0 = sp + 0xa0\n 19812: a1 = 0x40\n 19815: ra = 660, jump @17\n      : @666 [@dyn 330] (gas: 15)\n 19821: a2 = u64 [sp + 0xb8]\n 19825: s1 = u64 [sp + 0xb0]\n 19829: a0 = u64 [sp + 0xa8]\n 19833: a1 = u64 [sp + 0xa0]\n 19837: u64 [sp + 0x10] = a0\n 19840: u64 [sp + 0x8] = a2\n 19843: a0 = a0 | a2\n 19846: u64 [sp + 0x18] = a1\n 19849: a1 = a1 | s1\n 19852: a1 = a1 | a0\n 19855: a1 = a1 >> 0x20\n 19858: a0 = a0 | s1\n 19861: a0 = a0 << 0x20\n 19864: a0 = a0 | a1\n 19867: jump @673 if a0 != 0\n      : @667 (gas: 8)\n 19871: u64 [sp + 144] = 0\n 19875: u64 [sp + 136] = 0\n 19879: u64 [sp + 128] = 0\n 19883: a0 = 0x8c379a000000000\n 19893: a1 = sp + 0x80\n 19897: u64 [sp + 0x98] = a0\n 19901: a0 = u64 [sp + 0x18]\n 19904: ra = 662, jump @19\n      : @668 [@dyn 331] (gas: 11)\n 19910: a2 = u64 [sp + 0x8]\n 19913: a2 = a2 | s1\n 19916: s1 = 0x100000000\n 19926: a0 = 0xfffffffc\n 19936: a1 = u64 [sp + 0x18]\n 19939: a0 = a1 <u a0\n 19942: a1 = u64 [sp + 0x10]\n 19945: a0 = 0 if a1 != 0\n 19947: u64 [sp + 0x8] = a2\n 19950: a0 = 0 if a2 != 0\n 19952: jump @673 if a0 == 0\n      : @669 (gas: 8)\n 19955: a0 = u64 [sp + 0x18]\n 19958: i32 a0 = a0 + 0x4\n 19961: u64 [sp + 120] = 0\n 19964: u64 [sp + 112] = 0\n 19967: u64 [sp + 96] = 0x20\n 19971: a1 = sp + 0x60\n 19974: u64 [sp + 104] = 0\n 19977: ra = 664, jump @19\n      : @670 [@dyn 332] (gas: 8)\n 19983: a0 = s1 + 0xffffffffffffffdc\n 19986: a1 = u64 [sp + 0x18]\n 19989: a0 = a1 <u a0\n 19992: a1 = u64 [sp + 0x10]\n 19995: a0 = 0 if a1 != 0\n 19997: a1 = u64 [sp + 0x8]\n 20000: a0 = 0 if a1 != 0\n 20002: jump @673 if a0 == 0\n      : @671 (gas: 8)\n 20005: s1 = u64 [sp + 0x18]\n 20008: i32 a0 = s1 + 0x24\n 20011: u64 [sp + 88] = 0\n 20014: u64 [sp + 80] = 0\n 20017: u64 [sp + 64] = 0x14\n 20021: a1 = sp + 0x40\n 20024: u64 [sp + 72] = 0\n 20027: ra = 666, jump @19\n      : @672 [@dyn 333] (gas: 7)\n 20033: a0 = 0xffffffbc\n 20043: a0 = s1 <u a0\n 20046: a1 = u64 [sp + 0x10]\n 20049: a0 = 0 if a1 != 0\n 20051: a1 = u64 [sp + 0x8]\n 20054: a0 = 0 if a1 != 0\n 20056: jump @674 if a0 != 0\n      : @673 (gas: 1)\n 20059: trap\n      : @674 (gas: 11)\n 20060: s1 = u64 [sp + 0x18]\n 20063: i32 a0 = s1 + 0x44\n 20066: a1 = u64 [0x20078]\n 20071: a2 = u64 [0x20080]\n 20076: u64 [sp + 0x38] = a1\n 20079: u64 [sp + 0x30] = a2\n 20082: a1 = 0x616e636500000000\n 20092: u64 [sp + 0x28] = a1\n 20095: a1 = sp + 0x20\n 20098: u64 [sp + 32] = 0\n 20101: ra = 668, jump @19\n      : @675 [@dyn 334] (gas: 3)\n 20107: a1 = 0x64\n 20110: a0 = s1\n 20112: ra = 670, jump @26\n      : @676 [@dyn 335] (gas: 6)\n 20118: i32 a1 = a0 + 0\n 20120: a0 = 0x1\n 20123: a2 = 0x64\n 20126: ra = 0x2a0\n 20130: ecalli 7 // 'seal_return'\n 20132: fallthrough\n      : @677 [@dyn 336] (gas: 30)\n 20133: sp = sp + 0xffffffffffffff80\n 20136: u64 [sp + 0x78] = ra\n 20139: u64 [sp + 0x70] = s0\n 20142: u64 [sp + 0x68] = s1\n 20145: s0 = sp + 0x80\n 20149: sp = sp & 0xfffffffffffffff0\n 20152: a4 = u64 [a2]\n 20154: a3 = u64 [a1]\n 20156: s1 = u64 [a2 + 0x8]\n 20159: t1 = u64 [a1 + 0x8]\n 20162: t2 = u64 [a2 + 0x10]\n 20165: a5 = u64 [a1 + 0x10]\n 20168: a2 = u64 [a2 + 0x18]\n 20171: a1 = u64 [a1 + 0x18]\n 20174: t0 = t1 ^ s1\n 20177: u64 [sp + 0x8] = s1\n 20180: s1 = t1 <u s1\n 20183: u64 [sp + 0x18] = a4\n 20186: u64 [sp + 0x10] = a3\n 20189: a3 = a3 <u a4\n 20192: u64 [sp] = a3\n 20194: s1 = a3 if t0 == 0\n 20197: a3 = a1 ^ a2\n 20200: ra = a1 <u a2\n 20203: t0 = a5 <u t2\n 20206: ra = t0 if a3 == 0\n 20209: a4 = a5 ^ t2\n 20212: a3 = a3 | a4\n 20215: ra = s1 if a3 == 0\n 20218: jump @679 if ra != 0\n      : @678 (gas: 23)\n 20221: a3 = a5 - t2\n 20224: a1 = a1 - a2\n 20227: a1 = a1 - t0\n 20230: a2 = a3 <u s1\n 20233: a1 = a1 - a2\n 20236: a3 = a3 - s1\n 20239: a2 = u64 [sp + 0x8]\n 20242: a2 = t1 - a2\n 20245: a4 = u64 [sp]\n 20247: a2 = a2 - a4\n 20250: a4 = u64 [sp + 0x18]\n 20253: a5 = u64 [sp + 0x10]\n 20256: a4 = a5 - a4\n 20259: u64 [a0] = a4\n 20261: u64 [a0 + 0x8] = a2\n 20264: u64 [a0 + 0x10] = a3\n 20267: u64 [a0 + 0x18] = a1\n 20270: sp = s0 + 0xffffffffffffff80\n 20273: ra = u64 [sp + 0x78]\n 20276: s0 = u64 [sp + 0x70]\n 20279: s1 = u64 [sp + 0x68]\n 20282: sp = sp + 0x80\n 20286: ret\n      : @679 (gas: 6)\n 20288: u64 [sp + 80] = 0\n 20291: u64 [sp + 72] = 0\n 20294: u64 [sp + 64] = 0\n 20297: t0 = 0x2a2\n 20301: a0 = 0x4e487b7100000000\n 20311: fallthrough\n      : @680 [@dyn 337] (gas: 4)\n 20312: a1 = sp + 0x40\n 20315: u64 [sp + 0x58] = a0\n 20318: a0 = 0\n 20320: ra = 676, jump @19\n      : @681 [@dyn 338] (gas: 7)\n 20326: u64 [sp + 56] = 0\n 20329: u64 [sp + 48] = 0\n 20332: u64 [sp + 32] = 0x11\n 20336: a0 = 0x4\n 20339: a1 = sp + 0x20\n 20342: u64 [sp + 40] = 0\n 20345: ra = 678, jump @19\n      : @682 [@dyn 339] (gas: 2)\n 20351: a1 = i32 [0x2008c]\n 20356: jump @684 if a1 >u 63\n      : @683 (gas: 2)\n 20360: u32 [0x2008c] = 0x40\n 20366: fallthrough\n      : @684 (gas: 7)\n 20367: a1 = 0x200a0\n 20372: i32 a1 = a1 + 0\n 20374: a0 = 0x1\n 20377: a2 = 0x24\n 20380: ra = 0x2a8\n 20384: ecalli 7 // 'seal_return'\n 20386: fallthrough\n      : @685 [@dyn 340] (gas: 45)\n 20387: sp = sp + 0xffffffffffffff90\n 20390: u64 [sp + 0x68] = ra\n 20393: u64 [sp + 0x60] = s0\n 20396: u64 [sp + 0x58] = s1\n 20399: s0 = sp + 0x70\n 20402: sp = sp & 0xfffffffffffffff0\n 20405: a3 = u64 [a1 + 0x18]\n 20408: u64 [sp + 0x8] = a3\n 20411: a4 = u64 [a2 + 0x18]\n 20414: t2 = u64 [a1]\n 20416: u64 [sp] = t2\n 20418: a3 = u64 [a1 + 0x8]\n 20421: s1 = u64 [a2 + 0x8]\n 20424: a5 = u64 [a2]\n 20426: t1 = u64 [a1 + 0x10]\n 20429: t0 = u64 [a2 + 0x10]\n 20432: a2 = s1 + a3\n 20435: t2 = t2 + a5\n 20438: a5 = t2 <u a5\n 20441: a2 = a2 + a5\n 20444: ra = a2 ^ s1\n 20447: s1 = a2 <u s1\n 20450: s1 = a5 if ra == 0\n 20453: a1 = t0 + t1\n 20456: a5 = u64 [sp + 0x8]\n 20459: a5 = a5 + a4\n 20462: a4 = a1 <u t0\n 20465: a4 = a4 + a5\n 20468: a5 = a1 + s1\n 20471: a1 = a5 <u a1\n 20474: ra = a4 + a1\n 20477: a4 = a2 ^ a3\n 20480: a3 = a2 <u a3\n 20483: a1 = u64 [sp]\n 20485: s1 = t2 <u a1\n 20488: s1 = a3 if a4 != 0\n 20491: t0 = a5 <u t1\n 20494: a1 = u64 [sp + 0x8]\n 20497: a4 = ra ^ a1\n 20500: a3 = ra <u a1\n 20503: a3 = t0 if a4 == 0\n 20506: a1 = a5 ^ t1\n 20509: a1 = a1 | a4\n 20512: s1 = a3 if a1 != 0\n 20515: jump @687 if s1 != 0\n      : @686 (gas: 10)\n 20518: u64 [a0] = t2\n 20520: u64 [a0 + 0x8] = a2\n 20523: u64 [a0 + 0x10] = a5\n 20526: u64 [a0 + 0x18] = ra\n 20529: sp = s0 + 0xffffffffffffff90\n 20532: ra = u64 [sp + 0x68]\n 20535: s0 = u64 [sp + 0x60]\n 20538: s1 = u64 [sp + 0x58]\n 20541: sp = sp + 0x70\n 20544: ret\n      : @687 (gas: 6)\n 20546: u64 [sp + 64] = 0\n 20549: u64 [sp + 56] = 0\n 20552: u64 [sp + 48] = 0\n 20555: t0 = 0x2aa\n 20559: a0 = 0x4e487b7100000000\n 20569: fallthrough\n      : @688 [@dyn 341] (gas: 4)\n 20570: a1 = sp + 0x30\n 20573: u64 [sp + 0x48] = a0\n 20576: a0 = 0\n 20578: ra = 684, jump @19\n      : @689 [@dyn 342] (gas: 7)\n 20584: u64 [sp + 40] = 0\n 20587: u64 [sp + 32] = 0\n 20590: u64 [sp + 16] = 0x11\n 20594: a0 = 0x4\n 20597: a1 = sp + 0x10\n 20600: u64 [sp + 24] = 0\n 20603: ra = 686, jump @19\n      : @690 [@dyn 343] (gas: 2)\n 20609: a1 = i32 [0x2008c]\n 20614: jump @692 if a1 >u 63\n      : @691 (gas: 2)\n 20618: u32 [0x2008c] = 0x40\n 20624: fallthrough\n      : @692 (gas: 8)\n 20625: a1 = 0x200a0\n 20630: i32 a1 = a1 + 0\n 20632: a0 = 0x1\n 20635: a2 = 0x24\n 20638: ecalli 7 // 'seal_return'\n 20640: a0 = 0\n 20642: ra = 0x2b0\n 20646: jump @32\n      : @693 [export #0: 'call'] (gas: 2)\n 20649: a0 = 0\n 20651: ra = 688, jump @32\n      : @694 [@dyn 344] [export #1: 'deploy'] (gas: 2)\n 20657: a0 = 0x1\n 20660: ra = 690, jump @32\n      : @695 [@dyn 345] (gas: 16)\n 20666: a0 = u64 [a2 + 0x8]\n 20669: a1 = i32 [a2 + 0x10]\n 20672: a2 = u64 [a2]\n 20674: a0 = reverse a0\n 20676: a3 = a0 << 0x20\n 20679: a1 = reverse a1\n 20681: a1 = a1 >> 0x20\n 20684: a3 = a3 | a1\n 20687: a0 = a0 >> 0x20\n 20690: a1 = reverse a2\n 20692: a2 = a1 << 0x20\n 20695: a0 = a0 | a2\n 20698: a1 = a1 >> 0x20\n 20701: a2 = s1 + 0x7ff\n 20705: a2 = a2 + 0x31\n 20708: jump [t0]\n      : @696 (gas: 27)\n 20710: a5 = u64 [s1 + 0x98]\n 20714: a5 = a5 + 0x1\n 20717: a0 = a5 <u 0x1\n 20720: a3 = u64 [s1 + 0x90]\n 20724: a3 = a3 + a0\n 20727: a0 = a5 | a3\n 20730: a0 = a0 <u 0x1\n 20733: a1 = u64 [s1 + 0x80]\n 20737: t1 = a1 + a0\n 20740: a1 = t1 <u a1\n 20743: a0 = u64 [s1 + 0x88]\n 20747: a0 = a0 + a1\n 20750: a1 = u64 [s1 + 0xb8]\n 20754: ra = a1 + 0x20\n 20757: a2 = ra <u a1\n 20760: a1 = u64 [s1 + 0xa0]\n 20764: t2 = a1 + a2\n 20767: a4 = t2 <u a1\n 20770: a4 = a2 if a2 == 0\n 20773: a1 = u64 [s1 + 0xa8]\n 20777: a4 = a4 + a1\n 20780: a2 = a4 <u a1\n 20783: a1 = u64 [s1 + 0xb0]\n 20787: a1 = a1 + a2\n 20790: u64 [s1 + 0xb0] = a1\n 20794: u64 [s1 + 0x90] = a3\n 20798: jump [t0]\n      : @697 (gas: 23)\n 20800: u64 [s1 + 184] = 0\n 20804: t1 = 0\n 20806: ra = 0\n 20808: u64 [s1 + 176] = 0\n 20812: a5 = u64 [s1 + 0xa8]\n 20816: a0 = u64 [a5 + 0x18]\n 20819: a1 = u64 [s1 + 0x28]\n 20822: a2 = a1 + 0x20\n 20825: u64 [s1 + 0x50] = a2\n 20828: a1 = a2 <u a1\n 20831: a2 = u64 [s1 + 0x18]\n 20834: a3 = a2 + a1\n 20837: u64 [s1 + 0x48] = a3\n 20840: a4 = a3 <u a2\n 20843: a4 = a1 if a1 == 0\n 20846: a1 = u64 [a5 + 0x10]\n 20849: a2 = u64 [a5 + 0x8]\n 20852: a3 = u64 [a5]\n 20854: a0 = reverse a0\n 20856: a1 = reverse a1\n 20858: t2 = reverse a2\n 20860: a2 = reverse a3\n 20862: jump [t0]\n      : @698 (gas: 14)\n 20864: a0 = u64 [a2 + 0x8]\n 20867: a1 = i32 [a2 + 0x10]\n 20870: a2 = u64 [a2]\n 20872: a0 = reverse a0\n 20874: a3 = a0 << 0x20\n 20877: a1 = reverse a1\n 20879: a1 = a1 >> 0x20\n 20882: a3 = a3 | a1\n 20885: a0 = a0 >> 0x20\n 20888: a1 = reverse a2\n 20890: a2 = a1 << 0x20\n 20893: a0 = a0 | a2\n 20896: a1 = a1 >> 0x20\n 20899: jump [t0]\n      : @699 (gas: 21)\n 20901: a0 = u64 [s1 + 0xa8]\n 20905: a3 = a3 + a0\n 20908: a4 = a3 <u a0\n 20911: a5 = u64 [s1 + 0x30]\n 20914: a5 = a5 + a3\n 20917: a2 = a2 + a5\n 20920: a3 = a5 <u a3\n 20923: a5 = a2 <u a5\n 20926: a0 = u64 [s1 + 0xb0]\n 20930: a1 = u64 [s1 + 0x20]\n 20933: a0 = a0 + a1\n 20936: a0 = a0 + a4\n 20939: a0 = a0 + a3\n 20942: a3 = a0 + a5\n 20945: a0 = a3 >u 0\n 20947: a4 = a2 >u 0\n 20949: a4 = a0 if a3 != 0\n 20952: a0 = a2 | a3\n 20955: a5 = t2 >u 0\n 20957: a5 = a4 if a0 != 0\n 20960: jump [t0]\n      : @700 (gas: 15)\n 20962: a4 = u64 [s1 + 0x138]\n 20966: a2 = a4 <u 0x80\n 20970: a3 = u64 [s1 + 0xf0]\n 20974: a1 = a3 if a2 != 0\n 20977: a5 = u64 [s1 + 0xf8]\n 20981: a3 = u64 [s1 + 0x108]\n 20985: a3 = a3 | a5\n 20988: a3 = a0 if a2 == 0\n 20991: a0 = 0xffffffffffffffff\n 20994: a1 = a0 if a4 == 0\n 20997: a3 = a0 if a4 == 0\n 21000: a4 = u64 [s1 + 0x100]\n 21004: a4 = 0 if a2 == 0\n 21006: a5 = 0 if a2 == 0\n 21008: jump [t0]\n      : @701 (gas: 17)\n 21010: a0 = u64 [a3 + 0x18]\n 21013: a1 = u64 [a3 + 0x10]\n 21016: a2 = u64 [a3 + 0x8]\n 21019: a3 = u64 [a3]\n 21021: a0 = reverse a0\n 21023: u64 [s1 + 0x60] = a0\n 21026: a0 = reverse a1\n 21028: u64 [s1 + 0x58] = a0\n 21031: a0 = reverse a2\n 21033: u64 [s1 + 0x50] = a0\n 21036: a0 = reverse a3\n 21038: u64 [s1 + 0x48] = a0\n 21041: a0 = sp + 0xffffffffffffffe0\n 21044: a0 = a0 & 0xffffffffffffffe0\n 21047: u64 [s1 + 0x68] = a0\n 21050: sp = a0\n 21052: jump [t0]\n      : @702 (gas: 15)\n 21054: a0 = u64 [a3 + 0x18]\n 21057: a1 = u64 [a3 + 0x10]\n 21060: a2 = u64 [a3 + 0x8]\n 21063: a3 = u64 [a3]\n 21065: a0 = reverse a0\n 21067: a4 = reverse a1\n 21069: a2 = reverse a2\n 21071: a3 = reverse a3\n 21073: a1 = u64 [s1 + 0x80]\n 21077: u64 [a1 + 0x18] = a3\n 21080: u64 [a1 + 0x10] = a2\n 21083: u64 [a1 + 0x8] = a4\n 21086: u64 [a1] = a0\n 21088: a0 = s1 + 0x7ff\n 21092: jump [t0]\n      : @703 (gas: 15)\n 21094: a0 = u64 [a3 + 0x18]\n 21097: a1 = u64 [a3 + 0x10]\n 21100: a2 = u64 [a3 + 0x8]\n 21103: a3 = u64 [a3]\n 21105: a0 = reverse a0\n 21107: a4 = reverse a1\n 21109: a2 = reverse a2\n 21111: a3 = reverse a3\n 21113: a1 = u64 [s1 + 0x68]\n 21116: u64 [a1 + 0x18] = a3\n 21119: u64 [a1 + 0x10] = a2\n 21122: u64 [a1 + 0x8] = a4\n 21125: u64 [a1] = a0\n 21127: a0 = s1 + 0x7ff\n 21131: jump [t0]\n      : @704 (gas: 10)\n 21133: a4 = 0 if a2 == 0\n 21135: a1 = u64 [s1 + 0x118]\n 21139: a1 = a1 & ~a3\n 21142: a2 = u64 [s1 + 0x120]\n 21146: a0 = a2 & ~a0\n 21149: a2 = u64 [s1 + 0x128]\n 21153: a2 = a2 & ~a4\n 21156: a3 = u64 [s1 + 0x130]\n 21160: a3 = a3 & ~a5\n 21163: jump [t0]\n      : @705 (gas: 13)\n 21165: a4 = a0 << 0x3f\n 21168: a5 = a1 >> 0x1\n 21171: t1 = a5 | a4\n 21174: a5 = a3 << 0x3f\n 21177: a0 = a0 >> 0x1\n 21180: a0 = a0 | a5\n 21183: a1 = a1 << 0x3f\n 21186: a5 = a2 >> 0x1\n 21189: a1 = a1 | a5\n 21192: a3 = a3 >> 0x1\n 21195: a2 = a2 & 0x1\n 21198: a5 = -a2\n 21200: jump [t0]\n      : @706 (gas: 11)\n 21202: a0 = u64 [a3 + 0x18]\n 21205: a1 = u64 [a3 + 0x10]\n 21208: a2 = u64 [a3 + 0x8]\n 21211: a3 = u64 [a3]\n 21213: a0 = reverse a0\n 21215: a1 = reverse a1\n 21217: a2 = reverse a2\n 21219: a3 = reverse a3\n 21221: a4 = s1 + 0x1030\n 21225: a5 = a4 + 0x300\n 21229: jump [t0]\n      : @707 (gas: 14)\n 21231: a0 = u64 [a3 + 0x18]\n 21234: a1 = u64 [a3 + 0x10]\n 21237: a2 = u64 [a3 + 0x8]\n 21240: a3 = u64 [a3]\n 21242: a0 = reverse a0\n 21244: a4 = reverse a1\n 21246: a2 = reverse a2\n 21248: a3 = reverse a3\n 21250: a1 = u64 [s1 + 0x68]\n 21253: u64 [a1 + 0x18] = a3\n 21256: u64 [a1 + 0x10] = a2\n 21259: u64 [a1 + 0x8] = a4\n 21262: u64 [a1] = a0\n 21264: jump [t0]\n      : @708 (gas: 13)\n 21266: a5 = a5 + a2\n 21269: a3 = a5 <u a2\n 21272: a2 = a2 <u t2\n 21275: a0 = t1 + a2\n 21278: a0 = a0 + a3\n 21281: a2 = a1 | a5\n 21284: a0 = a0 | a4\n 21287: a2 = a2 | a0\n 21290: a2 = a2 >> 0x20\n 21293: a0 = a0 | a5\n 21296: a0 = a0 << 0x20\n 21299: a0 = a0 | a2\n 21302: jump [t0]\n      : @709 (gas: 8)\n 21304: a0 = u64 [a2 + 0x8]\n 21307: a1 = i32 [a2 + 0x10]\n 21310: a2 = u64 [a2]\n 21312: a3 = reverse a0\n 21314: a0 = a3 << 0x20\n 21317: a1 = reverse a1\n 21319: a1 = a1 >> 0x20\n 21322: jump [t0]\n      : @710 (gas: 8)\n 21324: a0 = a0 | a2\n 21327: a2 = a3 | a1\n 21330: a2 = a2 | a0\n 21333: a2 = a2 >> 0x20\n 21336: a0 = a0 | a1\n 21339: a0 = a0 << 0x20\n 21342: a0 = a0 | a2\n 21345: jump [t0]\n      : @711 (gas: 10)\n 21347: a0 = u64 [sp + 0x10]\n 21350: a1 = u64 [sp + 0x18]\n 21353: a2 = 0x100000000\n 21363: a2 = a2 ^ a0\n 21366: a2 = a2 | a1\n 21369: a3 = a0 >> 0x20\n 21372: a3 = a3 <u 0x1\n 21375: a3 = 0 if a1 != 0\n 21377: a3 = 0 if a2 == 0\n 21379: jump [t0]\n      : @712 (gas: 8)\n 21381: a2 = a4 >u 0\n 21383: a1 = a1 ^ 0x1\n 21386: a1 = a2 if a4 != 0\n 21389: a2 = t2 >u 0\n 21391: a3 = a5 >u 0\n 21393: a3 = a2 if a5 == 0\n 21396: a3 = a1 if a0 == 0\n 21399: jump [t0]\n      : @713 (gas: 5)\n 21401: sp = a0\n 21403: i32 a2 = a0 + 0\n 21405: a1 = 0x40\n 21408: a0 = u64 [s1 + 0xb0]\n 21412: jump [t0]\n      : @714 (gas: 10)\n 21414: a0 = u64 [s1 + 0x30]\n 21417: a1 = u64 [s1 + 0x20]\n 21420: a0 = a0 | a1\n 21423: a1 = 0xffffffe0\n 21433: a3 = u64 [s1 + 0x28]\n 21436: a1 = a3 <u a1\n 21439: a2 = u64 [s1 + 0x18]\n 21442: a1 = 0 if a2 != 0\n 21444: a1 = 0 if a0 != 0\n 21446: jump [t0]\n      : @715 (gas: 10)\n 21448: u64 [s1 + 0xf8] = a0\n 21452: u64 [s1 + 0x100] = a1\n 21456: a0 = u64 [s1 + 0xf0]\n 21460: a0 = a0 | a1\n 21463: u64 [s1 + 0xf0] = a0\n 21467: a0 = u64 [s1 + 0x138]\n 21471: a2 = a0 + 0xffffffffffffff80\n 21474: a0 = 0xffffffffffffffff\n 21477: a1 = 0xffffffffffffffff\n 21480: jump [t0]\n      : @716 (gas: 11)\n 21482: a4 = a4 + a1\n 21485: a1 = a4 <u a1\n 21488: a1 = a1 + a5\n 21491: a1 = a1 | a2\n 21494: a2 = a0 | a4\n 21497: a2 = a2 | a1\n 21500: a1 = a1 | a4\n 21503: a2 = a2 >> 0x20\n 21506: a1 = a1 << 0x20\n 21509: a1 = a1 | a2\n 21512: jump [t0]\n      : @717 (gas: 12)\n 21514: a2 = u64 [sp]\n 21516: a3 = u64 [sp + 0x8]\n 21519: u64 [s1] = a2\n 21521: u64 [s1 + 0x8] = a3\n 21524: u64 [s1 + 0x10] = a0\n 21527: u64 [s1 + 0x18] = a1\n 21530: sp = s0 + 0xffffffffffffffc0\n 21533: ra = u64 [sp + 0x38]\n 21536: s0 = u64 [sp + 0x30]\n 21539: s1 = u64 [sp + 0x28]\n 21542: sp = sp + 0x40\n 21545: jump [t0]\n      : @718 (gas: 8)\n 21547: a3 = a3 | a2\n 21550: a2 = a0 | a1\n 21553: a2 = a2 | a3\n 21556: a2 = a2 >> 0x20\n 21559: a1 = a1 | a3\n 21562: a1 = a1 << 0x20\n 21565: a1 = a1 | a2\n 21568: jump [t0]\n      : @719 (gas: 8)\n 21570: a4 = a4 | a2\n 21573: a2 = a0 | a1\n 21576: a2 = a2 | a4\n 21579: a2 = a2 >> 0x20\n 21582: a1 = a1 | a4\n 21585: a1 = a1 << 0x20\n 21588: a1 = a1 | a2\n 21591: jump [t0]\n      : @720 (gas: 12)\n 21593: a4 = u64 [s1 + 0xa8]\n 21597: a2 = u64 [s1 + 0xa0]\n 21601: a0 = u64 [s1 + 0xb8]\n 21605: a0 = a0 | a4\n 21608: a3 = u64 [s1 + 0xb0]\n 21612: a1 = a2 | a3\n 21615: a1 = a1 | a0\n 21618: a1 = a1 >> 0x20\n 21621: a0 = a0 | a3\n 21624: a0 = a0 << 0x20\n 21627: a0 = a0 | a1\n 21630: jump [t0]\n      : @721 (gas: 7)\n 21632: a0 = a0 << 0x3b\n 21635: a1 = a0 >> 0x38\n 21638: u64 [s1 + 0x138] = a1\n 21642: a2 = 0x80 - a1\n 21646: a0 = 0xffffffffffffffff\n 21649: a1 = 0xffffffffffffffff\n 21652: jump [t0]\n      : @722 (gas: 7)\n 21654: a3 = a3 | a5\n 21657: a3 = a1 if a2 == 0\n 21660: a1 = 0xffffffffffffffff\n 21663: a0 = a1 if a4 == 0\n 21666: a3 = a1 if a4 == 0\n 21669: a5 = 0 if a2 == 0\n 21671: jump [t0]\n      : @723 (gas: 7)\n 21673: a0 = u64 [s1 + 0x28]\n 21676: a0 = t1 <u a0\n 21679: a4 = t2 ^ ra\n 21682: a5 = t2 <u ra\n 21685: a5 = a0 if a4 == 0\n 21688: a0 = u64 [s1 + 0x30]\n 21691: jump [t0]\n      : @724 (gas: 9)\n 21693: sp = sp + 0xffffffffffffffc0\n 21696: u64 [sp + 0x38] = ra\n 21699: u64 [sp + 0x30] = s0\n 21702: u64 [sp + 0x28] = s1\n 21705: s0 = sp + 0x40\n 21708: sp = sp & 0xffffffffffffffe0\n 21711: s1 = a0\n 21713: i32 a0 = sp + 0\n 21715: jump [t0]\n      : @725 (gas: 4)\n 21717: a0 = 0x1030\n 21721: a3 = s1 + a0\n 21724: a4 = a3 + 0x300\n 21728: jump [t0]\n      : @726 (gas: 4)\n 21730: a0 = 0x1030\n 21734: a3 = s1 + a0\n 21737: a4 = a3 + 0x100\n 21741: jump [t0]\n      : @727 (gas: 8)\n 21743: a0 = a0 + a4\n 21746: a3 = a3 + a1\n 21749: a5 = a3 <u a1\n 21752: a0 = a0 + a5\n 21755: ra = u64 [s1 + 0x100]\n 21759: ra = ra + a3\n 21762: a3 = ra <u a3\n 21765: jump [t0]\n      : @728 (gas: 6)\n 21767: a1 = a2 & ~a1\n 21770: a2 = u64 [s1 + 0x128]\n 21774: a2 = a2 & ~a5\n 21777: a3 = u64 [s1 + 0x130]\n 21781: a3 = a3 & ~a4\n 21784: jump [t0]\n      : @729 (gas: 2)\n 21786: a3 = a2 & 0x40\n 21789: jump @733 if a3 != 0\n      : @730 (gas: 1)\n 21792: jump @732 if a2 == 0\n      : @731 (gas: 6)\n 21795: i32 a3 = 0x40 - a2\n 21798: a3 = a1 << a3\n 21801: a1 = a1 >> a2\n 21804: a0 = a0 >> a2\n 21807: a0 = a0 | a3\n 21810: ret\n      : @732 (gas: 1)\n 21812: ret\n      : @733 (gas: 4)\n 21814: a0 = a2 + 0xffffffffffffffc0\n 21817: a0 = a1 >> a0\n 21820: a1 = 0\n 21822: ret\n      : @734 (gas: 2)\n 21824: a3 = a2 & 0x40\n 21827: jump @738 if a3 != 0\n      : @735 (gas: 1)\n 21830: jump @737 if a2 == 0\n      : @736 (gas: 6)\n 21833: i32 a3 = 0x40 - a2\n 21836: a3 = a0 >> a3\n 21839: a0 = a0 << a2\n 21842: a1 = a1 << a2\n 21845: a1 = a1 | a3\n 21848: ret\n      : @737 (gas: 1)\n 21850: ret\n      : @738 (gas: 4)\n 21852: a1 = a2 + 0xffffffffffffffc0\n 21855: a1 = a0 << a1\n 21858: a0 = 0\n 21860: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": "50564d00004664000000000000010700c1c000c000800380889bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5289bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5286369666675736e496c6c6120746e6569000065636e61776f5b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b6369666675736e496c616220746e65690480bd0b000000000e0000001c0000002a000000300000003d000000480000005700000062000000740000007f00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235367365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c0a9500463616c6cc0b150066465706c6f7906c0cb62815902c066559b00e30100040804de042a056505c5050d062f06fc065907f20751089a08dd08110971098a09b309ed09070bbc0b6a0c800c900dbd0d080f310f360f4d0f520f570f5c0f6c0f8d0f23108910a310c810e410ed1048117a11eb11ff11261261127d134514be14d4149e15af15ef15231730175d17621779177e17831788179917cb176718e118fc1822193f1949199c19c419e419ee190a1a281a931aa01ab61ae51afa1a041b721b7f1b991bf81b081c261c601c701c8e1cc81cd81cf61c2e1d3e1d5c1d971dad1db81dde1da41ec41ee11e331f391f761ff91f03201f203d20d4200121562163217d21af21c321cd21452252226c22b122f6222723ac23d7234924b424e62411252e253e25472564256d258d25c325e025f025f92503265e26bd2617275527a827b527e527eb273a2867287d28d928df281c2990299a29be29e9292f2a392a5b2ac82adc2ae62a072b322b702b792b832bec2b292c642c8f2ccf2cd92ce32c482d812d922db32def2d032e0d2ee42ef52e122f6b2f712fae2fe52f1030493053307130ab3035313b317031ae3174328232bb320c33183356336333bd33c3334e347934bf34e3348135ad3502362f36b236b836ed363b37153823386338b438be38053916398d399339183a5f3a853aad3abd3ac63acf3a3a3b793bb33bd13bf93b093c123c1c3c6e3ca33cca3ce83c053d153d1e3d313d3a3d563d833da13db23dbc3dc63d183e4d3e5a3e6f3ea33e143f213f373f583f933f1a405d408c409240dd401841a341e64123422942df42ef420d437d43a843e243f243104461448c44d244df44ed442745d145164624463d4661460b477847d547d148df48ec486149b149c149df49194a944ac34a324ba54bb34bc04b344ca84cb84cbe4cc74ce24ce84cf84cfe4c074d1c4d6d4dc64d0f4e414e8b4e964ea54e584f664f7f4fa34f5a5068508150b150ba50aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f03200390890000251082c1d3307c0000383770a08281f1d9511f07b10087b15648964753308206497501002f9037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004b1026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a05821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a099551a08210588215509511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910491138203300082892007b18385010088c006f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a04955120ff8210d8008215d0008216c8009511e00032008b7910520931c8780883881f8488e056380000012533098c0002390a8c0002ae8a093d088c0002013308a000028377c887073200009511f07b10087b158475010a02013d0788000251050750100a5033000c951108f8951700077b70f0007b75e8007b76e0009515f807951100f8951158fb8411e0641695693010492928014929200149291001800033074095684011492918013300ca002898fc951110fe7b10e8017b15e0017b16d8019515f001951170f88411e064164926980649269006492680068000330740956880064926880650100e5ffc4926b8064926b0064926a8064926a0068367a0060a0a01956b000682b7b00082b8b80082b9a80082baa000d49808d4a707d48707510706280216380988000249265806492650064926480695676006956840067b6930017b6940065010102d3f956b000682ba7882b97082b76882b860956b00017bb7287bba18d4a7077bb838d49808d478089888207bb920d49707977720d4870751070628a015826738018268300150101287fe83778168300133090a018268300156185f07288f1595672006826838015010145bfa8267380682623006826b28067b671001d4720988ba01949a520a06287415826a20068263380182643001c83404d83408c8a3037b633001d8a30a82692801c89b07649cc8a703d3b309d8b30bda9a0b64c9c88c0cd89c09da880982682001c8820ad82a008267180182621001c87202c82000c89802c8ab0bd8ab09c8900ad88208c878087b6410017b64c0057b6c08017b6cc80582673001956c00057bc7e0007b6230017b62d0057b6800017bc8d8007b63e8057bcbf000956700069568e0059569c0057bcaf8005010166a3f956a000182a72082a818d478081407e0ffffff0000000082a938d8790782a92894979487520706287a147b68f800956800068287187b67c0008287107b67b8008287087b67c80082877b67d000826738018378209567a00550101831f98262b8058267b005826ba805d4270988ba01949a520a06285e14826aa00582693801c8a909d8a90c826a2801c8ba0ac8ca0ad3ba08d8ba0bda8c0b82681801c8820282682001c87808d87807c82707c88b0bd88b08c8870c826710017b674005826708017b6748057b696005826730017b675005826700017b6758057b6a68057b6b70059567800595686005956940057b6c780550101a743e9517e08478e064811407c0ffffff0000000082693801d879078269280194978269f8009497520706288313826798057b679000826790057b679800826788057b67a000826780057b67a8007b688800826738018378409567200550101c39f8826830058267380582692005826a28057b6868826b88007bb8107b67707bb7187b69607bb97b6a587bba084926d8064926d0064926c8064926c00602956700059568c00650101e1cfa956b000582b782b80882b91082ba18847700ff8677124926f8064926f0064926e8064926e00602956b00077bba187bb9107bb8087bb79567e006956800075010205afa8268d000826bb800d4b8078269c800826ac000d4a909d49707987720d4b909979920d497075107062898129567e00450102279f795670004827af8008278f0008279e8008ea78e8bdba70b7b69f0008e977b68787b6ae800d4a8087b67507b6bb0007b68e000db8b075107062894128267e0047b678000492638074926300749262807492620079567c0049568200750102445f9956b000482b7d00082b8c80082b9c00082bad800501226284988920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479aa9206289a12501228d749826780008877207b67d800510a2f027b6b10017b6018017b6c20017b6430014926b8044926b0044926a8049568a0044926a004330750102ad7f739088c000256181f0b20038c000220019517e08479e07b69280164913307a00002837783993308200a068267800095781fd87807826cf000c87c09d8c90ada770a826b78c8ba0a7b6a080197aa3b989b05d4ab0b8267280182731897993b827a10988805d498076f346fa98268d80094c8826ae00094a8948b9487c87402d84207c8790cc8cb0b7b6b3801d39b0cd89b0adac70a7b6a00018267180195701fd8700b826a1001c8ba07d8a70cdabb0c82633001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b671801d847076424c8790bc8ab0bd39b0a7b6b1001d89b09daa709826b0801826778d87b07826ae800c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b50122ced49c8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a5f492658074926500749264807492640079568400764377b6430017b6b38017b6228017b60200150102e7bf78263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c8820264702868ff8267d800857701826cf000826850dbc8078268b0008269e000db98078264e800d44c0982687898833f97440198c23f978a017b6a50826a800098a03f97cc0197ab0151074a027b69187b6c387b62407b60207b64287b63307b6b4884aae07b6ab000492678044926700449266804956860044926600433075010305af59517e08477e07b6710016471330820330750103214f89518e08488e07b6808016481837783893308200a064926380120330c4926300149262801330b33004926180149262001826a080182a71882a81082a90882a26f736f886f9a6f296492826710017b79187b6af0007b7a107b6808017b7808643a7b7301642464a38267b0007b6b0001d87b07857b017b60f800940b018267200182691801d49707947b018268d00082673801c87808826ac80064c2c8ca0a8269b80082673001c879098267c000826c2801c8c707520b6901826b3801d8b80bc8ba00642ad32002d8a00cda2b0cc89c0cd89c02826b3001d8b909c89707c82707d4c809d47007d47909989920d4c707977720d497077b63e8007b64e000510706281d0e9567c0017b6ad800501034faf28267d8018268d0018269c801826ac001956b00077bb7787bb8707bb9687bba6095686007826710015010367af58260e80095000188070182620801c87202d420078877018268f000c87803d883088267e000c88707826838019589207b69e800d8890a8268d800c8a8097b69e000d8890bdaaa0b82683001c8b804d8840b82682801c8b8087b68280182680001958b20d88b0c8269f800c8c908d89809dacc09826a1801c8a909d8a90c826a2001c8ca0a7b6a20017b620801826c10017bc208640a7bc07bc31064727bc7187b63f0008267e8007b673801826ce0007b64300164807b691801286dfed48a07d497078269d00052075e017b6b484926200149261801492628014926300128c101642082638000826bb000d33b0b826c78d4cb0b826c18d4cb0b826c40826238510bd800826b3801d8b80bc8ba0ad30a02d80a0cda2b0cc89c0cd89c02826b3001d8b909c89707c82707d4c809d4a707d47909989920d4c707977720d497075207a20c9567400450103882f1956800048287587b6730018287507b6728018287487b6720018287407b6718018267800050123a544550103c0f467b6708017b68f0003307ff3308ff8269380150103ed2455012407b44501042c8455012448b4282671801e0a70782692001501246a045956b00077bba98007bb990007bb888007bb780009568800782671001501048aaf3826238826c4001826730826828d48707826850d4c808826920d49209826a4895aa014926b8074926b0074926a8074926a007956b00077bbac0007bb9c8007bb8d0007bb7d8009567a0079568c0073300562854f38267c0008268b800d487071408e0ffffff00000000d88908826ac80094a8947851089c0b7b6b48839820956780047b63307b64287b60207b62407b6c3850104a67f0826c38826240826020826428826330826a80009568000482879800956900017b9730828790007b9728828788007b9718828780007b972001826750d427077b671001d434077b670801d40c077b67000197a8037b6838018d8980003307ff3308ff50104cbc447b67e0007b68f800826780008a79033307ff3308ff50104e7c447b67f0007b68e8008268e000d487077b67e000826738018379803307ff3308ff5010505744826b380188b98000826ae000db9a07826ce800826af800501252b743826bf000501254a541826b48d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956b00107bb910f8956900107b9a18f8956900107b9808f8956800107b8700f84926f8074926f0074926e8074926e0079567e0079568ff07958801501056eff18268a800826a9800d4a8078269a000826b9000d4b909d49707987720d4a909979920d497075207300a9567200450105810ef95670004827a388279308278288ea78e9bdba70b7b68b8008e877b69b0007b6a8000d4a9097b67d8007b6be0007b69f000db9b075207ff0a826720047b67c00095670010492738f895670010492730f895670010492728f895680010492820f801956700049568ff0795882150105acbf0956b000482b71082b80882b982ba1850125cb34088920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479ab92f60a50125e64418267c0008877207b67e800510a45027b6b10017b6018017b6c20017b6430014926f8034926f0034926e8039568e0034926e00301330750106063ef39088c000256181f0b20038c000220019517e08479e07b69280164913307a00002837783993308200a068267c00095781fd87807826cb800c87c09d8c90ada770a826bb000c8ba0a7b6a080197aa3b989b05d4ab0b8267280182721897993b827710988805d489096f246f778268e80094c8826af00094a8948b9489c89402d84209c8970cc8cb0b7b6b3801d37b0cd87b0adac90a7b6a00018269180195901fd8900b826a1001c8ba09d8a90cdabb0c82633001c8c303973b3b989a05d4ba0a97993b980b05d4b909c849097b691801d8490b6424c8b709c8a909d3790a7b691001d87909daab09826b08018267b000d87b07826a8000c8a70798ba05977b3bd4ba0a826b280182b282bb08987705948a94876fb86f2b5012627741c8a70282673001d87307826a2001c8a707983a05977c3bd4ca0a987705c8b707956c000182cb38c88a0ad88a08c88707c8a9097bc908d8a908c887077bc79517e08473e064317b63f8000182671801d8740782691001d39b08d89b09da8709826c0801d8c007826a0001d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a7295670010492758f895670010492750f895670010492748f895670010492740f89568ff0795884164377b6430017b6b38017b6228017b602001501064f2ee8263f80082622801826b380182643001954401884701c87b0bd4b40788770182682001c88707d88708c8820264702855ff8267e800857701826cb8008268d800dbc8078268e0008269f000db9807510718028267c0008477e07b67c8004926b8034926b0034926a8039568a0034926a00301330750106606ed9517e08477e07b67200164713308203307501068c0ef9518e08488e07b6818016481837783893308200a06492630012049262801330349263801330b330c3309330a8267180182741882781082700882726f446f886f006f227b620801826720017b72187b60e0007b70107b6810017b780864427b740164208267c8007b6bf000d87b07857b017b6ce80094cb017b6a18017b690001d4a907947b018267a80082683001c87808826aa00082622801c8a202826498007b63f800c8340982639000826c3801c8c303520b5d01d87807c8720bd3ab02d8ab0cda270c50126a793d7b60d8005207fb059567600250106cdbea956b000282b77882b87082b96882ba60956b00107bb778f8956700107b7870f8956700107b7968f8956700107b7a60f89568ff079588618267200150106e48ed826ad80095aa0188a70182621001c87202d42a078877018268e000c87803d8830882670801c88707826830019589207b69d800d8890882692801c8890b7b6bd000d89b0bda880b8268f800c8b804d8840b82683801c8b8087b6838018268f000958b20d88b0c8269e800c8c908d89809dacc09826c0001c8c909d8c90c82601801c8c0007b621001826c20017bc20864a27bca643a7bca107b6708017bc7187b6ae0008267d8007b673001640a8267d0007b6728016443648c288dfe826bc0008269b000d49b07826a8000d4ac08d487078262a8008263a00082689800520772014926200149261801492628014926300128bc01826bc800826cc000d3cb0b8260b000d40b0b7b6b3801826cb800826b8000d4bc0c826b3801d4cb0b510bc500d87807c8720bd3ab02d8ab0cda270c501270f43b52077a04956780035010725ae995680003828798007b673001828790007b672801828788007b671801828780007b6710018267c000501274283d501076e33d7b6708017b68f0003307ff3308ff82693801501078a63d50127a4f3c50107c9c3d50127e5f3a82671001e0a7078269180150228000743d956b00107bba98f8956a00107ba990f8956900107b9888f8956800107b8780f89568ff079588810082672001502082006deb8260b0000198073f82688000978801d48707826ab80098a83f970901d49808826bc00098b93f97aa01d4a90997ba0195aa01956cff0795ccb900490c491cf8956b0010492ba8f8956200104922a0f8017bca087bc9107bc8187bc7209567ff079577a1009568ff079588c1003300900028f7ea82679000d487071408e0ffffff00000000d8820894389478510847038328209567c0035020840024e8826a80008269b000826cb800826bc000956800038287d8007b6730018287d0007b6728018287c8007b6718018287c0007b6720010198c73f979801d487077b67100198973f97a801d487077b67080198b73f97c801d487077b67000197b7017b67f80097b8037b6838018d8980003307ff3308ff50208600653c7b67d8007b68f0008267c0008a79033307ff3308ff50208800243c7b67e8007b68e0008268d800d487077b67d800826738018379803307ff3308ff50208a00fe3b826b380188b98000826ad800db9a07826ce000826af00050228c005d3b826be80050228e004a39826bf800d4b707956c000182cbd4b80882cb08d4ba0a82cb10d4b909956cff0795ccb900491c28017bc9587bca607bc8507bc748491c40491c38491c309567ff079577e1009568ff0795880101502090009ce99568ff079588b90049288000491878491870491868039567ff0795772101826888005020920074e93307a000037b67380183777b672801330094000a038269380133029600289f3782693801502296009837492678037b6870037b676803956860037b6a6003330750209800bbe749265803492650034926400304330720956840034926480350209a009de739088c000256183f0b20038c000240019517e08479e07b69300164913307a00002837783993308400a06826a300182a71882a81082a90882aa6f776f886f996faa956bff0795bbb9007bbaa0007bb998007bb890007bb788009567ff07957741018268880050209c00a5e89567200333084050209e00ebe5956b000382b73882b83082b92882ba205022a0009c385207e700826760956900037b978267587b97088267687b9710956800038267707b971864a77b6a30015020a200e0e6826728013300a4000a03826938013302a600284138826938015022a6003a38d4780298aa206f99979820d4a8089899204926b8024926d8024926d0024926c8024926c0023a0a0000023a0b0800023a0c1000023a071800027b6af8027b6bf0027b6ce8027b67e0027b69b0027b68a8023308209569e002956ac002956ba0027b62a002826730015020a8002fe8956780023308405020aa000ce5956b000282ba980082b8900082b9880082b780005022ac0098385108f401003308a00002838833070133090a0728313308a00002838833070133090a0728213308a00002838833070133090a0728113308a00002838833070133090a07014926700149266801492660013302ae00140700000000717b484e01956860017b67780133075020b000bde54926580149265001492640014133070495684001492648015020b2009fe539088c000256183f1220038c0002403308a00002283e013308a000022836014926b0014926a8014926a0013302b400140700000000717b484e019568a0017b67b80133075020b60055e54926980149269001492680012233070495688001492688015020b80037e539088c000256183f1220038c0002403308a0000228d6003308a0000228ce004926100249260802492600023302ba00140700000000717b484e01956800027b67180233075020bc00ede44926f8014926f0014926e001413307049568e0014926e8015020be00cfe439088c000256183f1120038c0002403308a00002286e3308a0000228674926500249264802492640023302c000140700000000717b484e01956840027b67580233075020c20087e44926380249263002492620022233070495682002492628025020c40069e439088c000256183f1120038c0002403308a0000228083308a000020183883307013309240a077b6738013300c6002805e77b6738015020c600fee68377330833090a28d2e28267380133085020c800e8e68378330733090a072828fe33078800027b67b800390788000255170407288224956700108377600133083300cc000a01019569301081974c015247419bd8950a28a0185147bb9c05a9c40a52473eed62dd0a28e515524703defd060a2807135147b3a75e0902015147dd0d1618ac095147dd72b8237604514767e53c310a2811114929e8024929e0024929d8024929d00295670010837700030a0a01956a301095ab000282b7e00082b8e80082b9d80082bad000d49808d4a707d4870751070628f5238267b80081775617030728ef239568301049280803492800034928f8024928f002029567ff0795774102956820135020ce0013e49567ff07957731827710027b67b8009567ff07957721023308405020d000c7e1956aff0795aa3182ab080282a8000282a9f80182a7f0015022d20067355108062857207c68b800492ae801492ae0017ba8d0019568ff0795880102492ad8017b67b80033004a0228b4e24929a8014929a0014929980149299001956700108377c0013300d4000a0a3302d60028b2355022d600af3582b7a00082b8a80082b9980082ba9000d49808d4a707d48707510706281b238267b8008177330843ac7806281323956720043300d80033028002284a35826730047b679800826728047b67a800826720047b67b0009517e08477e07b67b8006471956700108377e0013308240a0195673010957b000182b8c80082b9c00082bab80082b7b0007b6858826bb8007bb8187b69507bb9107b6a407bba087b67387bb73307a000037b67a00083777b67483300da000a038269a0003302dc00288a318269a0005022dc00833149261804956900047b98107b9708956800047b9a33075020de00a6e14926f8034926f0034926e003053307209568e0034926e8035020e00088e133088c000239078c000256173f0b20038c000240019517e08479e07b69800064913307a00002837783997b6890003308407b6788000a06826a800082a71882a81082a90882aa6f777b67786f877b67706f977b67686fa77b67609517e08477e07b6780006471826798009777209877204926d8037b67307b67d0038267a8007b67c8039568c0038267b0007b67c00333075020e200f1e0826760956a00037ba7b8008267687ba7b0008267707ba7a8003307209568a0038269787ba9a0005020e400c4e082689000818756173f08480840019517e08477e07b67980064718379330840826788000a06826a980082a71882a81082a90882aa6f7b6f886f996faa826780007b7a187b79107b78087b7b8268b8005020e600e2e1956780033308405020e80028df956b000382b7980082b8900082b9880082ba80005022ea00d53151070628bb1d8267387b6760038267407b6768038267507b677003956860038267587b67780364a77b6ab8005020ec0016e08267483300ee000a038269a0003302f0002878318269a0005022f0007131d4780298aa206f99979820d4a808989920492618038267307b6710038267a8007b6708038267b0007b670003492638033a0a5800023a0b6000023a0c6800023a077000027b6a5803956a00037bab507bac487ba7407ba9307ba82833082095694003956a2003956b00037b6220038267b8005020f2005ce19567e0023308405020f40039de956b000282baf80082b8f00082b9e80082b7e0005022f600c53151080628cc1c4926d8024926d0024926c8029568c0024926c002017b67b80033004a022830df4929280249292002492918024929100295670010837740023300f8000a0a01956a301095ab000282b72082b82882b91882ba10d49808d4a707d4870751070628ad1f8267b8008177330863ac780628a51f9567ff079577e1013300fa003302800228ca319568ff079588318287b0017b6788008287b8017b6780008087c0017b67789567ff079577c1013300fc0033028a022899319568ff07958831958900018297a0007b6740829798007b6738829790007b673095670010837760023308440a0195673010957900028298487b68a8008298407b68a0008298387b6898008297307b6790009567ff0795773149278801826878957a00017ba88000826880007ba8789568ff079588a101826988007ba97033075020fe0019de9568ff079588314928680149286001492850010464893307209568ff07958881014929580150200001eedd33088c000239078c000256173f0b20038c000240019517e08479e07b697064913307a00002837783997b68b8003308407b67b0000a06826a7082a71882a81082a90882aa6f776f886f996faa956b301095bc00027bca687bc9607bc8587bc7509567ff079577610195688012502002016ede956bff0795bb3195bc000182c73882c83082c94082ca4864b2826c9800d3c70bd8c707826c9000d8c808dbb708826ba800d3ba07d8ba0a826ca000d8c90bdb7a0bd3c909d49707db7b0885870149222801492220017b2710019567ff079577410149221801502004016e289569ff07959931492908018267787b970001826780007b97f8009568ff0795882101826788007b97f000330750200601dfdc9568ff079588314928e8004928e0004928d0000564893307209568ff07958801014929d80050200801b4dc8268b800818756173f08480840019517e08477e07b677050220a01712e33000c010a06826a7033020e0128d72c826a7050220e01d12c3307a000037b677083777b6728330010010a038269703302120128592b82697050221201532b4929c8007b98c0007b97b8009568ff079588e1007b9ab00033075020140138dc8267489568ff079588317b87a8008267507b87a0008267587b879800648a3307209568ff079588c1008269607ba990005020160102dc8268b800818755174008480840019517e08477e07b676050221801bf2d33001a010a06826a6033021c0128792c826a6050221c01732c9577a10050201e01b4dc9562ff079522316429829778829870829c8000829a880082699800d3970bd8970782699000d89808dbb708826ba800d3ba07d8ba0a8269a000d89c0bdb7a0bd3c909d49707db7b0852080628db1395672005330840502020012dda95680005828b38828c30828a28828720d4ba09d4c708d49808988820d4c909979920d4980851080628b518492610054926080549260005140900000000a079c308956800057b6918057b67b8007b6ab0007b6ba8007b6ca0005020220108db8268b8008267a800826aa000d47a0a140b00000000010000001407fcffffff00000000d878078269b000949794a7520706284d188387044926f8044926f0044926e004209568e0044926e8047b6aa8007b6ba00050202401aeda826aa8008269b0008268b8008267a0009577dcd87807949794a75207062807188387244926d8044926d0044926c004169568c0044926c8045020260170da8269b8001407bcffffff00000000d879078268b00094878268a800948752070628c6178397443a084000023a094800023a0a500002956b00047bb8b8007bb9b0007bbaa8009568a0044926a004502028011dda3308648267b80050202a01e0dc83783307013309640a07014929e8014929e0014929d8014929d001956700108377000233002c010a0a33022e0128002d50222e01fd2c82b7e00082b8e80082b9d80082bad000d49808d4a707d4870751070628851a8267b800817856180307287f1a9568301049280802492800024928f8014928f001039567800495682012502030017dda826798047b67b800826790047b67b000826788047b67a800826780047b67a000956760043308405020320124d8956b000482b77882b87082b96882ba6050223401d52a51070628bb168267a000956900047b97408267a8007b97488267b0007b9750956840048267b8007b975864a77b6ab80033004a02280ed94929a8034929a0034929980349299003956700108377c003330036010a0a3302380128ff2b50223801fc2b82b7a00082b8a80082b9980082ba9000d49808d4a707d48707510706289f198267b8008177330843ac78062897199567001033003a013302800228a42b9568ff07958831958900078297e0007b67608297d8007b67708297d0007b6778956700108377e0033308240a0195673010957900038298c8007b68b8008298c0007b68b0008298b8007b68a8008297b0007b67a0003307a000037b67980083777b676833003c010a038269980033023e01282d278269980050223e0126274929c807959b00077bb8c0007bb7b8009568ff079588e1077bbab00033075020400107d89567ff079577314927a8074927a00749279807647a3307209568ff079588c107492a90070450204201dcd733088c000239078c000256173f0b20038c000240019517e08479e07b69800064913307a00002837783997b6890003308407b678800330044010a06826a80003302460128a628826a8000502246019f287bcae8007bc9e0007bc8d8007bc7d0009567ff079577a10795680014502048015cd8956bff0795bb3195bc000782c77882c87082c9800082ca880064b2826ca800d3c70bd8c707826ca000d8c808dbb708826bb800d3ba07d8ba0a826cb000d8c90bdb7a0bd3c909d49707db7b0885870149226807492260077b2750079567ff07957781074922580750204a015a2282676833004c010a038269980033024e0128e1258269980050224e01da2549294807959b00077bb8407bb7389568ff07958861077bba30330750205001bed69568ff079588314928280749282007492810070464893307209568ff0795884107492918075020520193d6826890009517e08477e07b6780006471818756173f08480840019517e08477e07b67586471837933084082678800330054010a06826a583302560128d126826a5850225601cb26957721075020580134d7956cff0795cc3182caf00682c7f80682c8000782c90807826bb8007bcba806826bb0007bcba006826ba8007bcb9806826ba0007bcb900695cb00067bb9c8007bb8c0007bb7b8009567ff07957701079568ff079588e1069569ff079599c1067bbab00050205a01bf22956aff0795aa3195ab000682b7e80082b8e00082b9d80082bad000956b30107bb708047bb800047bb9f8037bbaf003956820148267800050205c010fd78267609777209877209569ff07959931492988067b6760959a00067ba780008267707ba7789568ff079588a1068267787ba770330750205e0161d59568ff079588314928680649286006492850060464893307209568ff0795888106492958065020600136d5826890009517e08477e07b6780006471818755174008480840019517e08477e07b6790006471837933084082678800330062010a06826a900033026401287225826a9000502264016b259577610650206601d4d5956cff0795cc3182ca300682c7380682c8400682c94806826bb8007bcbe805826bb0007bcbe005826ba8007bcbd805826ba0007bcbd0057bc908067bc800067bc7f8059567ff07957741069568ff07958821069569ff07959901067bcaf005502068016122956aff0795aa3195ab000682b72882b82082b91882ba10956b301095bc00047bc7287bc8207bc9187bca10956840148267800050206a01b7d59567ff079577e10533084050206c01f9d2956aff0795aa3195ac000582cbc80082c8c00082c9b80082c7b00050226e0195265108062885118268a00095ab00057bb890008268a8007bb898008268b0007bb8a0009568ff079588c1058269b8007bb9a8007b67b80050207001d6d3826768330072010a03826998003302740128382582699800502274013125d4780298aa206f99979820d4a808989920956aff0795aa318267607ba740053a0a200002956bff0795bb31492b4805956bff0795bb318267707bb73805956bff0795bb318267787bb730059567ff079577317b7a88053a0a2800023a0b3000023a0c3800029567ff07957731492768059567ff079577317b7a80059567ff079577317b7b78059567ff079577317b7c70059567ff079577317b7960059567ff079577317b7858053308209569ff079599a105956aff0795aa8105956bff0795bb61059567ff079577317b7250058267b80050207601bdd49567ff07957741053308405020780196d1956aff0795aa3195ac000582cb2882c82082c91882c71050227a013625510806282610492a0805492a0005492af004019568ff0795882105492af8047b67b80033004a022886d251473182a0700a28091349292803492920034929180349291003956700108377400333007c010a0a33027e01286d2550227e016a2582b72082b82882b91882ba10d49808d4a707d48707510706281f138267b8008177330823ac78062817139567ff07957701033300800133028002281225956aff0795aa3195ab000282b7d00082b8d80080a9e002492ac8027bb9c0007bb8b8009568ff079588e1027bb7b000330750208201e0d19568ff079588314928a8024928a002492890020464893307209568ff079588c1024929980250208401b5d139088c000256183f0b20038c000240019517e08479e07b69b80064913307a0000283778399330840330086010a06826ab80033028801288c22826ab8005022880185227bca487bc9407bc8387bc7309567ff079577a1029568601350208a0146d29568ff0795883195890002829788007b67b800829780007b67b0008297787b67a8008297707b67a0009567ff079577810233084050208c01e0cf956aff0795aa3195ac000282c76882c86082c95882cb50d49707d48b09d47909989920d48707977720d497075207640e8267a00095a900027b97308267a8007b97388267b0007b97409568ff07958861028267b8007b974864b77b6bb80033004a0228b2d049296801492960014929580149295001956700108377800133008e010a0a3302900128b02350229001ad2382b76082b86882b95882ba50d49808d4a707d487075107062863118267b800817756170307285d119567a002330840502092011bcf8267b8027b67208267b0027b67308267a8027b67188267a0027b67289567301049278801492780014927780149277001956780029568a0115020940109d1826990028264880282629802826c800297973f984801d4870797283f7b69b000989901d4980897493f98ca01d49a0b9829017b6ca80084cc019acad2a808d27a03d2a90984b07fdac00b7b6b7888b7207b636894377b68707b6960d4980894877b6cb80088c801aa780628ac10826930826b28d49b07826820826a18d4a808d48707987720d49808978820d478085208ff0c64b77b6090007b6498007b62a000826878956a00027ba8608268687ba8688268707ba870956860028269607ba9785020960151cf8267b8005207c40c502298012a215108b90c8267a800847800ff83a720826a9800956900017b9ae8007b98e0008268b0007b98f0009568e001826aa0007b9af80050209a010acf33034926a8004926b000826790008e779777057b67b800018268b80095873fd88702c8230a8478e06437826328c88303d8830b826018c80a08c8b804d3a40cd8a409dacb09d87a0ada220a50229c019f1e510c0628b81050229e019721d87902826720d37a0bd87a07dab207826230d32908d4b808da8c075107062891107b63c0017b64c8017b69d0013307409568c0017b6ad8015020a0016fce9567a0013308405020a20128cd956c000182c9b8007b69b80082c8b0007b68b00082caa8007b6aa80082cba0007b6ba0008267207bc7588267307bc7508267187bc7488267287bc7407bc9787bc8707bca689567800195686001956940017bcb605020a40162165022a6019c205207780b64a2956c000182c7880082c898007b6898008263800182ca900028d8054929480449294004492938044929300495670010837760040a0a01956a301095ab000482b74082b84882b93882ba30d49808d4a707d48707510706280d0f8267b8008177330843ac780628060f1407ffffffff000000007b67b800956720113300a80133028002287220956830108287f0007b67b0008287f8007b679000808700017b678800956700113300aa0133028a02284720956830108287e0007b67a8008287d8007b67a0008287d0007b6798004928c800826788007b87c000826790007b87b80064899568e0108267b0007b97b00033075020ac0106cd956830104928a8004928a000492890000564893307209568c010492998005020ae01e2cc33088c000239078c000256173f0b20038c000240019517e08479e07b69880064913307a00002837783997b68b0003308407b6790000a06826a880082a71882a81082a90882aa6f777b6780006f877b67786f977b67706fa77b67689517e08477e07b6788006471826798008477ff8269a0008498ff8269b800826aa800d2a909956a3010492a88007ba980007ba8789568a0107ba77033075020b00144cc826768956830107b87688267707b87608267787b8758648a33072095688010826980007ba9505020b20118cc8268b000818756173f08480840019517e08477e07b67b80064718379330840826790000a06826ab80082a71882a81082a90882aa6f776f8b6f996faa826888007b8a187b89107b8b087b87956760105020b401b5cc956830108287487b67b8008287407b67b0008287387b67a8008287307b67a000956740103308405020b6015cca956a301082a72882a82082a91882ab10d49707d48b09d47909989920d48707977720d497075207e7089567ff079577318268a0007b78f0078268a8007b78f8078267b0007ba7956820108267b8007ba70864b77b6bb80033004a022835cb4929680349296003492958034929500395670010837780033300b8010a0a3302ba0128261e5022ba01231e82b76082b86882b95882ba50d49808d4a707d4870752076f0c8267b80081775417036d0c9567ff07957701053308405020bc019ec99568ff07958831958900048297e8007b67208297e0007b67308297d8007b67188297d0007b67289568301049288803492880034928780349287003019567ff079577e1049568a0135020be017ccb9567ff079577318274c0048270b8048273c804827bb00497473f980801d4870797383f984901d4980897093f98ba01d49a0c9839017b6bb00084bb019abad2a808d27a02d2a90984c77f7b67a000dab70c7b6c7888c7207b626894277b68707b6960d4980894877b6bb80088b801ab78a30b826930826b28d49b07826820826a18d4a808d48707987720d49808978820d4780852086d0764b77b6090007b6498007b63a800826878956aff0795aa3195ab00047bb890008268687bb898008268707bb8a0009568ff079588c1048269607bb9a8005020c001b0c98267b80052079c085022c201891b510818078267b000847800ff83a7209569ff07959931826a9000959b00047bba187bb810826898007bb8209568ff0795884104826aa8007bba285020c40162c933034926a8004926b0008267a0008e779777057b67b800018268b80095873fd88702c8230a8478e06437826328c88303d8830b826018c80a08c8b804d3a40cd8a409dacb09d87a0ada220a5022c601f718520c7a0b5022c801f11bd87902826720d37a0bd87a07dab207826230d32908d4b808da8c075207550b956bff0795bb317bb3f0037bb4f8037bb900043307409568ff07958821047bba08045020ca01c0c89567ff07957701043308405020cc0175c79568ff07958831828ae8037b6ab8008289e0037b69b000828bd8037b6ba800828cd0037b6ca0008267207b8788038267307b8780038267187b8778038267287b877003958700037b7aa8007b79a0007b7b9800648a9567ff079577e1039568ff079588c1039569ff079599a1037bac90035020ce0192105022d001cc1a5207a80564a29568ff07958831958c000382c7b80082cac8007b6a98008283b00382cac00001d3b704d8b70cd89300da400cc92a08c9c804d8c8087b689000d82a0a826cb80082689800c9c80cc9ac0c82689000c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a7075207330564977b68b8005020d2017dca83788169b800330733004e020a0728c70a1407ffffffff000000007b67604912688267880064297b9750826780007b97589568ff07958881008267787b976033075020d40166c79567ff07957731491748491740491738647a3307209568ff07958861491a30045020d60140c79517e08477e07b676864718268b800818756173f08480840019517e08477e07b67585022d801f2183300da010a06826a583302dc0128ac17826a585022dc01a6179577415020de01e8c79569ff07959931829a10829718829820829928826ba8007b6bf807826ba0007b6bf007826b98007b6be807826b90007b6be007956b00107bb918f8956900107b9810f8956800107b8708f89567ff079577219568ff079588019569e007956b00107bba00f85020e00171139568ff07958831828708828895690010829928f8956a001082aa20f8956b301095bc00027bc788007bc880007bc9787bca709568a0128267685020e201bfc78267308479ff8267388478ff826740826a60d2a7074926d8077b67307b67d0077b68387b68c8079568c0077b69407b69c00733075020e40112c64926b8074926b0074926a007043307209568a0074926a8075020e601f4c58268b8009517e08477e07b67686471818756173f08480840019517e08477e07b67605022e801a6173300ea010a06826a603302ec0128e916826a605022ec01e316956780075020ee019bc6826a8007826788078268900782699807826ba8007b6b3807826ba0007b6b3007826b98007b6b2807826b90007b6b20077b6958077b6850077b6748079567600795684007956920077b6a40075020f0013b13826778078268700782696807826a6007956b301095bc00027bc7a8007bc8a0007bc998007bca90009568c0128267685020f20195c649261807826778956900077b9710826780007b970895680007826788007b9733075020f401fbc44926f8064926f0064926e006053307209568e0064926e8065020f601ddc48268b800818756173f08480840019517e08477e07b67685022f8019a163300fa010a06826a683302fc01280015826a685022fc01fa148267283300fe010a0382697033020002285214826970502200024c144926d8067b68d0067b67c8069568c0067b6ac0063307502002026fc4826748956a00067ba7b8008267507ba7b0008267587ba7a8003307209568a0068269607ba9a0005020040242c48268b800818756173f08480840019517e08477e07b67b80050220602fe15330008020a06826ab80033020a02284015826ab80050220a0239159567800650200c02f1c4826a8006826788068268900682699806826ba8007b6b3806826ba0007b6b3006826b98007b6b2806826b90007b6b20067b6958067b6850067b6748069567600695684006956920067b6a400650200e029310826778068268700682696806826a6006956b301095bc00027bc7c8007bc8c0007bc9b8007bcab0009568e01282676850201002ebc4956700063308405020120231c2956b000682b71882b81082b90882ba50221402e3145207cc00826790007b67e005826798007b67e8058267a0007b67f0059568e0058267a8007b67f80564a77b6ab8005020160222c3492698058267307b6790058267387b6788058267407b6780054926b8058267787b67b005826780007b67a8053a072000023a082800023a09300002826a88007b6aa0057b67d8057b68d0057b69c8053a073800023308209569c005956aa005956b80057b67c0058267b800502018028dc49567600533084050201a026ac1956b000582ba7882b87082b96882b76050221c02fa1451087c05004926580249265002492648029568400249264002330750201e026dc29517e08477e07b6758647139088c000256181f0b20038c000220019517e08479e07b69a80064913307a00002837783993308200a0650222002b311826258649a642c7bc9187b6480007b24107b6890007bc80864797bc7826730c87b0b7b6b40d87b07826820c887077b6738017b60a8007b6a88007b6998008267788268b800d87807826968d39308d89309da8709826b70d8b007826a608268b000d3a80cd8a80adac70ad3b007d4c707da790a510acdf29567200264287b63a000502022029dc28263b8008264a000826850c83807d88708826b48c84b09c88909d3b90cd8b90bdac80b826c408260a800c80c08d8c802826cb000826a38c8ac0cc82c0c5022240293135208defe82623802956a000282a83082a92882ab207bab7ba9087ba810956800027b6218027b63b8005020260239c1502228025a1082625864287b8a0864c97b8c7b2310647a7b87187b6380007b60b800644364b02813ff9569ff079599314929880449298004492978049568ff079588a1044929700401330750202a02e8c09517e08477e07b6758647139088c000256181f0b20038c000220019517e08479e07b69a80064913307a00002837783993308200a0650222c022e10826258649a642c7bc9187b6480007b24107b6890007bc80864797bc7826730c87b0b7b6b40d87b07826820c887077b6738017b60a8007b6a88007b6998008267788268b800d87807826968d39308d89309da8709826b70d8b007826a608268b000d3a80cd8a80adac70ad3b007d4c707da790a510af0f69567ff079577810464287b63a00050202e0214c18264b8008260a000826850c84807d88708826b48c80b09c88909d3b90cd8b90bdac80b826c408263a800c83c08d8c802826cb000826a38c8ac0cc82c0c502230020a12520855fd956cff0795cc3182c2680482c3600495c90004829858829b507b9b307b98387bc340049568ff07958861047bc248047b64b80050203202a2bf50223402c30e82625864287b8a0864c97b8c7b2310647a7b87187b6380007b60b800644364b02801ff3308a0000201838833070133090a073308a0000228f23308a0000228eb3308a0000228e43308a0000228dd3308a0000228d63308a0000228cf3308a0000228c83308a0000228c13308a0000228ba3308a0000228b33308a0000228ac3308a0000228a53308a00002289e3308a0000228973308a0000228904926f0004926e8004926e00033023602140700000000717b484e019568e0007b67f800330750203802d6be4926d8004926d0004926c000223307049568c0004926c80050203a02b8be39088c000256183f1220038c0002403308a000022887013308a00002287f013308a000022821ff3308a000022819ff3308a000022811ff3308a000022809ff9569ff07959931492920034929180349291003140700000000717b484e9568ff07958841037b972803330750203c0248be9568ff0795883149280803492800034928f0022264893307049568ff07958821034929f80250203e021dbe39088c000256183f1220038c0002403308a0000228ec003308a0000228e40049263001492628014926200133024002140700000000717b484e01956820017b673801330750204202d3bd49261801492610014926000141330704956800014926080150204402b5bd39088c000256183f1220038c0002403308a000022884003308a00002287c9567ff079577314927600349275803492750036479140700000000717b484e9568ff07958881037b97680333075020460264bd9568ff079588314928480349284003492830034164893307049568ff0795886103492938035020480239bd39088c000256183f1120038c0002403308a0000228083308a000020183883307013309240a07014926580549265005492648059568400549264005017b67b80050204a02f3bc3308208267b80050204c02b6bf8378330920330733004e020a0701951130ff7b10c8007b15c0007b16b8009515d0008411f08289187b19108289107b19088289087b1982867b1728951790003308405020500264bb821898008219900095671fd86700821ac80a0b8477e0c8b803c879027b1920d8920cc8c303d383067b1818d88309da6c098214a800d8ab0b8216a000da000b821708c87b0bd87b0cc86b0bc89b0a821710c84707c8c707d8ba0cd86b0bc8b707c8c70b8eb78eacdbb70cd4ba078e38db7c08520865d86a07d34b08d84b0cda870cd36a07d48707db7c0952094d7b12707b13787b1a80003307409518707b1b88007b141050205202f4bb8217288218107b78187b76108218187b78088218207b78955130ff8210c8008215c0008216b8009511d000320049116049115849115033025402140700000000717b484e019518507b1768330750205602a1bb491148491140491130413307049518304911385020580288bb39088c000256183f0b20038c000240013308a00002838833070133092433005a020a0701951170fe7b1088017b1580017b167801951590018411f08284829b088280088296954a1fd84a02c8200c7b1620d86a03d3bc0a7b1b28d8bc0bdaa30b828610d80c0ada220a829c18828218829310c86a0ad86a08c82808d3c8097b1c10d9c808d83a0cda9c08d33a0ad4a909db980b510bbf027b17087b1318d464077b10387b1230d42008d487079877207b1658d46808978820d4870752079602951750017b1450644850205c0280b9821a680182196001821b58018ea78e98dba7087b1980007b1a8800d4a9078eb9db7809520968028218500195871f7b1848d887087b1b78c8b8088488018477e0957920d87907c8780ad88a0bda770b492128017b1910017b1a180195173001951810017b1b200150205e027bfd82194801821a400182183801821730017b18407b1968d48909d4a708d498089888207b1a70d4a909979920d498085208e8018216487b16f0008218787b18f800821880007b1800019518f000821988007b1908017b176050206002f0b9821750c8670ad87a09821438821778c84707c89707d3470bd84708dab90882135882198000c8390995ac20d8ac02c8270b821a20d8ca0c821a28d3ab06d8ba0adb6a0cd8390a82133082168800c83606c86a0ac89808d89809c8a909d87b07da2207c88707d88708c89808821a10d3a809d88a08821b18d87b0ada9a08d3b707d49707db780c520caa01821770821868d478081407e0ffffff00000000821b60d87b09821a4094a9948951090f0164ba821858d43808821c50d87c07944794878210880082198000821b788216485107eb00d49607d40b08d48707987720d49808978820d487075207d20083a72083c8207b1858646850206202c4bb7b1750821758646850206402b6bb64788217506469502066021ab7821860c86807d88708821640821978c86909c88909d3690ad8690bdaa80b821c7082188000c8c808c88b0bd88b02d8c808821c8800821a68c8ac0cc8c808c82808d4b808140ae0ffffff00000000d8a70a949a948a510a4d8377204921e8004921e0004921d8009518d0004921d0005020680264b88217088218687b78188218707b78107b76088218607b78955170fe821088018215800182167801951190013200003308a0000228774921c0004921b8004921b00033026a02140700000000717b484e019518b0007b17c800330750206c0204b84921a8004921a0004921900041330704951890004921980050206e02e6b739088c000256183f0b20038c000240013308a0000283883307013309240a073308a0000228083308a000020183883307013309330070020a07019511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b12605020720231b7821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c00050207402c8b5821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab80064965020760293b68217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a58648650207802f0b87b1750821758646850207a02e2b86478821750646950207c0246b4821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a9400837740492198004921900049218800951880004921800050207e0291b582162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe82101801821510018216080195112001320000330804330082020a013302840228ae0650228402ab06510a0b50228602490732003308a0000283883307013309330088020a0733028a0228de0750228a02db0733082433008c020a0133028e02286e0650228e026b06510a0b50229002090732003308a0000283883307013309330092020a0701951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d49707510719955120ff8210d8008215d0008216c8009511e00032009517a000330840502094021eb38219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487075207c000492190004921880049218000140700000000a079c308951880007b17980082171850209602ffb3821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949751076b8217188377044911784911704911602095186049116850209802b6b39567dc821818d87807821810948782180894875107398216188367244911584911504911401495184049114850209a0284b31407bcffffff00000000d8760782181094878218089487520704008216188367443a087800023a098000027b18387b193014080000000065636e617b182895182049112050209c023ab3330864646750209e02ffb583783307013309643300a0020a07019511807b10787b15707b1668951580008411f0829b828a829608828308829410828c10829918828818d363027b1608d863067b1b187b1a10d8ba0a7b1ada2a06d3980ad89800d84c02daa200d34c0bd4ba0adaa600520046c94c0ac99808c92808d86a09c99808c96a0a821908c99309821bc9b909821b18821c10c9bc0b7b7b7b79087b7a107b78189551808210788215708216689511800032004911504911484911403302a202140700000000717b484e019518407b175833075020a4025fb2491138491130491120113307049518204911285020a60246b239088c000256183f0b20038c000240013308a0000283883307013309243300a8020a07019511907b10687b15607b16589515708411f0828a187b1a08829b1882847b14828a08829608829c828310829210c8a609c8c404d8c40cc8c909d36900d86906da0c06c83208821c08c8bc0cd8280bc8cb0bc8680cd88c08c88b00d3a90bd8a90a8218d88406dbba06d83c02821808d3800bd8800adab20ad33c08d4b808db8a0652061f7b747b79087b7c107b701895519082106882156082165895117032004911404911384911303302aa02140700000000717b484e019518307b174833075020ac025db1491128491120491110113307049518104911185020ae0244b139088c000256183f0b20038c000240013308a0000283883307013309240a0733073300b002281eb433075020b00219b43307015020b20210b482970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888209569ff079599313202826c980095cc0188c701826a9000c87a0ad4ac0788770182688000c87803d8830882678800c887078268b800958020d880098268a000c89804d8840bda990b8268a800c88b0bd88b098268b000c898087b68b0007b6a900032024926b800330333004926b000826ca80082c7188268289589207b6950d88908826918c8890a7b6a48d89a0bda880b82c81082c90882ca6f776f886f946fa9320282970881981082996f77977a206f88988820d48a0a9877206f98978920d4970798882032028267a800c87a0ad87a0b826c30c8ac0cc8c909d8ac0ad8c90c8267b000826820c88707c8b707c8a707c8c70a8ea78e9bdba70bd4a9078e4cdb7b0c3202826b380188b98000826af000db9a08826cf800826a0801d4ca0ada970a3307ffdab708dab70a826b0001939b939c320282a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b67686471320282a71882a81082a90882aa6f776f8b6f996faa826880007b8a187b89107b8b087b879567ff07320282a71882a81082a90882aa6f776f8b6f996faa8268687b8a187b89107b8b087b879567ff073202939b82681801e0a80882692001e0790782692801e0b909826a3001e0ca0a3202977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c320282a71882a81082a90882aa6f776f886f996faa956b301095bc0003320282a71882a81082a90882aa6f776f8b6f996faa8268687b8a187b89107b8b087b873202c89c0cd89c0ad84909c89307c8a707d4c809d4b707d47909989920d4c707977720d49707320282970881981082996f7a97a7206f889888203202d49707d48a09d47909989920d48707977720d49707320282171082181814090000000001000000d37909d48909987a2088aa01948a939a32028eb9858801dbb9088e498ecadac90ada780a3202647183793308408267b0003202826730826820d487071408e0ffffff00000000826a28d88a088269189498947832027b67f8007b6800018267f000d487077b67f000826738019579803307ff3308ff3202c88b0bd88b08c8c808d49808d4b709d48909d4b808989920978820d4980832028219821a087b697b6a087b67107b68189551c08210388215308216289511403202d49a0ad48709d4a909989920d4a808978820d498083202d49b0bd48709d4b909989920d4b808978820d498083202826ba8008269a0008267b800d4b707826ab000d4a908d47808988820d4a707977720d48707320297773b9878387b6838019a8980003307ff3308ff3202d4ca0ada980a3308ffdab807dab80a939c3202826728d87307d3040bd8040cdab70c82673032029511c07b10387b15307b16289515408411e064768317320233073010c8760a95ab0003320233073010c8760a95ab00013202c8b707c88a0ad88a0cc8c70782600001c8a000d8a00a3202e0890882692801e0c909826a3001e0ba0a3202849a40520a195109148d9a40cfa80ad09808d09707d4a707320032009597c0d0780733083200849a40520a195109148d9a40d0a70acf9707cf9808d4a808320032009598c0cf87083307320049922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a498a88889424495292242925492409a592929222458a142952a44851922222a224491042c2509a948644222222225244048988444444a48820112122221a1111499210111111219224922449922411a1e88844848888a4242292442225494922894892248988888888888888881049024852494422912822112222298948224912892449222222222222222224051089a22422222222221122221249521211212244492211112249112122114992241122222a5122894812111111112222222449924a49884444444444442144308942a548224912492249525154491249229248124992249192441249244994548544224992489224292946224924922429492222a288881011912489242512494422499244924892248988882824510a49542914511191a4aa229148ad8824129144244a4422129194248924499224228908111191241121924812492412894412492422892491442222951211114592884444a488244912912449224992248908914824121142441221841089101111112199244992888888888848221240a222892449489244442412894c229148441222224988884424091191881021899224111111111111110911894892242244924a149188484444444444884888a48424495229422422222222221442049328548a249244224924492a8a2a4922494412492249922452924822124912255521914892249224494a8a9148128924494a92888888884811112122224912494a24221189484444844212a590449542145591a4aa884422b58824129144242211894824494244844892888888884884482249249148241249249188249244128948954844145189482411111111894824221289244988081111111111214424114208910822222222222288892492449224a24444489288884824805424828888888888889824924492482422092222491011894812444422820822519224229224494444101149444410a28822124144441444844404218249142a4592aa22222222228804912441244a92488a20a288449094242222420821222222111111448288880862285528552855283522228011051121114188202424222280110511211141882024242222801105112111418820148a880860444144484410220885254524826aa2a02a214224a2684420018104121010104844444423222292245124222244441089884810898808928888888848444444140922229224519288484444441245a488888844922485285144228848a2828890882084082651a84814492aa594248a2412111151908844229108a2c8242a5124a92a9214412488888820492412912882441189202949242222228410229224898888201244444490444484884444444423922449122589884824222212119148442291881491482412914844242252108908252282102298a450912849aa8a4892880822912445124924912449444444108944444444412422948808a2c8244194488290122592202222a2209148244a4422882293045122092288944444124924912449224124499224492222808888882022124000894a12112222828888a492448488200248142509214444440489a0a41111115124888848924491888810114444444444824892208948241291221211111145828888244994242212894824129122222222224294282211444444444124224a440842886012858a441491082222222288441251249144124992444444048922124144129182484428111144121599a412512209228844444444444444444444444410898888888888089244221149445210890825228248a22293a844149108228844444444444444444444440491489288248908221244222222482222222222228244118920294924112211494412910821442212918844242291888888484410912012491224112122221248444444140992244912258988482422222222a22012114a4404218249142a5144224892880822111191484424884492244992884824121129221111115124489224491489049148241211111141444492449224919224494a5224499224491245442249124910114444222222222228224a8c242949922449900449922449222211412488888888882449922411912088222222121111d18824499244490288884844444444442222222222228a88828808252208218249142a1245928a524a124522118988440a1249921291208a4ca2124592aa2249114422914844824892244912918888282245242222228a04499224a21091201291482412111122228844442449922491922492a42445224992244914118944241211892022888844229248442428224a8c24294992244910419224492212118988202241242222222291482422228a88888820882211111193244924228924499224510445510248a244229282489212892049516492204a24418248924444444444444444221111445244444444120992244924129128880889082249452609a24412441011111111111111111141444444444424884422111544844404516492204a2441a2441244444441221289442288229308a2884410414444444444444444440411111111119120124492828888888888228844221189881042444484444444100922498218111105490a114ca25029482512a924493222124992249124494411442449922491449220229294444410a4544a4425121111a12049218249142a05a9442295244946442249922492248988228848922449228924414422224922222208522a25a212960a8542a15028140a8542a15028141111c0888288908820441012121212121289880022a22012114a4404218290908888004614448444042182905024220a20220a2211a1444410220885258d8808112482523422229224a9448288a42449922491489224499254529224499244120992244911115192086052904492204430944423222225254992244992244992249124499224112988884a444a4492244992444444041111499224492412111191204992244924499224492449922449922489240124a928492a2289244912490a92825290244992249224922401a4928888089224491111d150444400230a2242228210c15052282c45232222494a9224491249921211114a9024499224224812400248528a88882412894814244929920490a4a22449922491a420292805499224499224499204908a4444449004902449922449922449492222a28922418242298a048922418242291a111149529244444491202222499224898808202241124000494a4992488224292549220902484a9984900490244841493449229524499224254992244992a42429499244492280494112498210c150124d92244925254992244992242949922449499224258900260549240942044349450a122495929424522491249248249124924844511149922449525549a524252992244924492a2945442292245125a99452925492aa22495192aa92a4a8482412294992244925a92aa224552549254992244949a59424494a024892aaa4922a51920092541191882425499224959224494a9224254992222291244949445292a492242949922a1245a22489a444222549925452499224951400"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 11:\"contracts/MockERC20.sol\"\nobject \"MockERC20_1563\" {\n    code {\n        {\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockERC20_1563\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 32))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let value := mload(add(memoryDataOffset, 64))\n            sstore(/** @src 11:157:159  \"18\" */ 0x02, /** @src 11:58:1680  \"contract MockERC20 {...\" */ or(and(sload(/** @src 11:157:159  \"18\" */ 0x02), /** @src 11:58:1680  \"contract MockERC20 {...\" */ not(255)), /** @src 11:157:159  \"18\" */ 0x12))\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let newLen := mload(value0)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            let _2 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            length := shr(1, _2)\n            let outOfPlaceEncoding := and(_2, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _3 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                if newLen\n                {\n                    value_1 := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            let _4 := sload(1)\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            length_1 := shr(1, _4)\n            let outOfPlaceEncoding_1 := and(_4, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 1)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _5 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 1)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(1, add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(value1, srcOffset_1))\n                }\n                sstore(1, or(and(value_2, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            sstore(/** @src 11:617:645  \"totalSupply = _initialSupply\" */ 0x03, /** @src 11:58:1680  \"contract MockERC20 {...\" */ value)\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:665:675  \"msg.sender\" */ caller())\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            mstore(32, /** @src 11:655:664  \"balanceOf\" */ 0x04)\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 64), value)\n            /// @src 11:708:756  \"Transfer(address(0), msg.sender, _initialSupply)\"\n            let _6 := /** @src 11:58:1680  \"contract MockERC20 {...\" */ mload(64)\n            mstore(_6, value)\n            /// @src 11:708:756  \"Transfer(address(0), msg.sender, _initialSupply)\"\n            log3(_6, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32, /** @src 11:708:756  \"Transfer(address(0), msg.sender, _initialSupply)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 11:665:675  \"msg.sender\" */ caller())\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            let _7 := mload(64)\n            let _8 := datasize(\"MockERC20_1563_deployed\")\n            codecopy(_7, dataoffset(\"MockERC20_1563_deployed\"), _8)\n            return(_7, _8)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let length := mload(offset)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x24)\n            }\n            let array_1 := allocate_memory(add(and(add(length, 0x1f), not(31)), 0x20))\n            mstore(array_1, length)\n            if gt(add(add(offset, length), 0x20), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            mcopy(add(array_1, 0x20), add(offset, 0x20), length)\n            mstore(add(add(array_1, length), 0x20), /** @src -1:-1:-1 */ 0)\n            /// @src 11:58:1680  \"contract MockERC20 {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 11:\"contracts/MockERC20.sol\"\n    object \"MockERC20_1563_deployed\" {\n        code {\n            {\n                /// @src 11:58:1680  \"contract MockERC20 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 11:83:101  \"string public name\"\n                        let value := /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0\n                        let slot := 0\n                        slot := 0\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(0)\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := keccak256(0, 32)\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        value := memPtr\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(0, /** @src 11:1152:1162  \"msg.sender\" */ caller())\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(32, /** @src 11:1142:1151  \"allowance\" */ 0x05)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 11:1142:1172  \"allowance[msg.sender][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ and(/** @src 11:1142:1172  \"allowance[msg.sender][spender]\" */ value0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 11:1142:1163  \"allowance[msg.sender]\" */ dataSlot)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x40)\n                        sstore(/** @src 11:1142:1172  \"allowance[msg.sender][spender]\" */ dataSlot_1, /** @src 11:58:1680  \"contract MockERC20 {...\" */ value_1)\n                        /// @src 11:1195:1231  \"Approval(msg.sender, spender, value)\"\n                        let _1 := /** @src 11:58:1680  \"contract MockERC20 {...\" */ mload(64)\n                        mstore(_1, value_1)\n                        /// @src 11:1195:1231  \"Approval(msg.sender, spender, value)\"\n                        log3(_1, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32, /** @src 11:1195:1231  \"Approval(msg.sender, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 11:1152:1162  \"msg.sender\" */ caller(), /** @src 11:58:1680  \"contract MockERC20 {...\" */ and(/** @src 11:1195:1231  \"Approval(msg.sender, spender, value)\" */ value0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ sub(shl(160, 1), 1)))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(/** @src 11:165:191  \"uint256 public totalSupply\" */ 3)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _2)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_3426()\n                        let value_2 := calldataload(68)\n                        let _3 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _3)\n                        mstore(32, 4)\n                        /// @src 11:1360:1417  \"require(balanceOf[from] >= value, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 11:1368:1392  \"balanceOf[from] >= value\" */ iszero(lt(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(keccak256(0, 64)), /** @src 11:1368:1392  \"balanceOf[from] >= value\" */ value_2)))\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(0, _3)\n                        mstore(32, /** @src 11:1435:1444  \"allowance\" */ 0x05)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 11:1435:1462  \"allowance[from][msg.sender]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ and(/** @src 11:1451:1461  \"msg.sender\" */ caller(), /** @src 11:58:1680  \"contract MockERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 11:1435:1462  \"allowance[from][msg.sender]\" */ dataSlot_2)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x40)\n                        if /** @src 11:1435:1471  \"allowance[from][msg.sender] >= value\" */ lt(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:1435:1462  \"allowance[from][msg.sender]\" */ dataSlot_3), /** @src 11:1435:1471  \"allowance[from][msg.sender] >= value\" */ value_2)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 22)\n                            mstore(add(memPtr_1, 68), \"Insufficient allowance\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(0, _3)\n                        mstore(32, 4)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, /** @src 11:1508:1532  \"balanceOf[from] -= value\" */ checked_sub_uint256(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:1508:1532  \"balanceOf[from] -= value\" */ dataSlot_4), value_2))\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let _4 := and(value1, sub(shl(160, 1), 1))\n                        mstore(0, _4)\n                        mstore(32, 4)\n                        let dataSlot_5 := keccak256(0, 64)\n                        sstore(dataSlot_5, /** @src 11:1542:1564  \"balanceOf[to] += value\" */ checked_add_uint256(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:1542:1564  \"balanceOf[to] += value\" */ dataSlot_5), value_2))\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(0, _3)\n                        mstore(32, /** @src 11:1435:1444  \"allowance\" */ 0x05)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 11:1574:1601  \"allowance[from][msg.sender]\"\n                        let dataSlot_7 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ and(/** @src 11:1451:1461  \"msg.sender\" */ caller(), /** @src 11:58:1680  \"contract MockERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 11:1574:1589  \"allowance[from]\" */ dataSlot_6)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        dataSlot_7 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x40)\n                        sstore(/** @src 11:1574:1601  \"allowance[from][msg.sender]\" */ dataSlot_7, /** @src 11:1574:1610  \"allowance[from][msg.sender] -= value\" */ checked_sub_uint256(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:1574:1601  \"allowance[from][msg.sender]\" */ dataSlot_7), /** @src 11:1574:1610  \"allowance[from][msg.sender] -= value\" */ value_2))\n                        /// @src 11:1625:1650  \"Transfer(from, to, value)\"\n                        let _5 := /** @src 11:58:1680  \"contract MockERC20 {...\" */ mload(64)\n                        mstore(_5, value_2)\n                        /// @src 11:1625:1650  \"Transfer(from, to, value)\"\n                        log3(_5, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32, /** @src 11:1625:1650  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _3, _4)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(/** @src 11:133:159  \"uint8 public decimals = 18\" */ 2), /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0xff)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, value_3)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _6 := sload(keccak256(0, 64))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _6)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 11:107:127  \"string public symbol\"\n                        let value_4 := /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0\n                        let offset := 0\n                        offset := 0\n                        let memPtr_2 := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(/** @src 11:107:127  \"string public symbol\" */ 1)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let length_1 := 0\n                        length_1 := shr(/** @src 11:107:127  \"string public symbol\" */ 1, /** @src 11:58:1680  \"contract MockERC20 {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 11:107:127  \"string public symbol\" */ 1)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_2, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_2, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_2, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 11:107:127  \"string public symbol\" */ 1)\n                            /// @src 11:58:1680  \"contract MockERC20 {...\"\n                            let dataPos_1 := keccak256(0, 32)\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_2, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 11:107:127  \"string public symbol\" */ 1)\n                            }\n                            /// @src 11:58:1680  \"contract MockERC20 {...\"\n                            ret_1 := add(add(memPtr_2, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_2, and(add(sub(ret_1, memPtr_2), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_2))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        value_4 := memPtr_2\n                        let memPos_6 := mload(64)\n                        return(memPos_6, sub(abi_encode_string(memPos_6, memPtr_2), memPos_6))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        mstore(0, /** @src 11:864:874  \"msg.sender\" */ caller())\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(32, 4)\n                        /// @src 11:846:909  \"require(balanceOf[msg.sender] >= value, \\\"Insufficient balance\\\")\"\n                        require_helper_stringliteral(/** @src 11:854:884  \"balanceOf[msg.sender] >= value\" */ iszero(lt(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(keccak256(0, 64)), /** @src 11:854:884  \"balanceOf[msg.sender] >= value\" */ value_5)))\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(0, /** @src 11:864:874  \"msg.sender\" */ caller())\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(32, 4)\n                        let dataSlot_8 := keccak256(0, 64)\n                        sstore(dataSlot_8, /** @src 11:919:949  \"balanceOf[msg.sender] -= value\" */ checked_sub_uint256(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:919:949  \"balanceOf[msg.sender] -= value\" */ dataSlot_8), value_5))\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let _7 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(0, _7)\n                        mstore(32, 4)\n                        let dataSlot_9 := keccak256(0, 64)\n                        sstore(dataSlot_9, /** @src 11:959:981  \"balanceOf[to] += value\" */ checked_add_uint256(/** @src 11:58:1680  \"contract MockERC20 {...\" */ sload(/** @src 11:959:981  \"balanceOf[to] += value\" */ dataSlot_9), value_5))\n                        /// @src 11:996:1027  \"Transfer(msg.sender, to, value)\"\n                        let _8 := /** @src 11:58:1680  \"contract MockERC20 {...\" */ mload(64)\n                        mstore(_8, value_5)\n                        /// @src 11:996:1027  \"Transfer(msg.sender, to, value)\"\n                        log3(_8, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 32, /** @src 11:996:1027  \"Transfer(msg.sender, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 11:864:874  \"msg.sender\" */ caller(), /** @src 11:996:1027  \"Transfer(msg.sender, to, value)\" */ _7)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value1_1 := abi_decode_address_3426()\n                        mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 11:247:311  \"mapping(address => mapping(address => uint256)) public allowance\" */ 5)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let dataSlot_10 := keccak256(0, 64)\n                        /// @src 11:247:311  \"mapping(address => mapping(address => uint256)) public allowance\"\n                        let dataSlot_11 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ and(/** @src 11:247:311  \"mapping(address => mapping(address => uint256)) public allowance\" */ value1_1, /** @src 11:58:1680  \"contract MockERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 11:247:311  \"mapping(address => mapping(address => uint256)) public allowance\" */ dataSlot_10)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        dataSlot_11 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:58:1680  \"contract MockERC20 {...\" */ 0x40)\n                        let _9 := sload(/** @src 11:247:311  \"mapping(address => mapping(address => uint256)) public allowance\" */ dataSlot_11)\n                        /// @src 11:58:1680  \"contract MockERC20 {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _9)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_3426() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Insufficient balance\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220279815e3122cb36cb0d5a394589f6055c9bfb59ad7793685f3ac34ce37af0b3a64736f6c634300081c0033\"\n    }\n}\n",
          "hash": "5a508dc72c24ec44d95336a76966ef9db9b877b37b5763d3ea08b090f4b0f48a",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MyToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x87557c382933e7f0e253d563c8b6e914c47a4d19f6a5e4e82405359519731106\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://533fa8a21263b20cf1de68686844dc1e75ddd7ce723afbd7f93c91c83f365a25\",\"dweb:/ipfs/QmXyFm2ffBqU8MFpucbifvHwryxWr7h135Qw3sEjYLJHvh\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 616/66208 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 9900\n// Code size = 34674 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20270]\n   117: jump @261 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x302a0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @261\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @33\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @33\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 5 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @1351\n      : @23 [@dyn 4] (gas: 10)\n   791: u64 [s1 + 0x18] = a3\n   794: u64 [s1 + 0x10] = a2\n   797: u64 [s1 + 0x8] = a1\n   800: u64 [s1] = a0\n   802: sp = s0 + 0xffffffffffffffa0\n   805: ra = u64 [sp + 0x58]\n   808: s0 = u64 [sp + 0x50]\n   811: s1 = u64 [sp + 0x48]\n   814: sp = sp + 0x60\n   817: ret\n      : @24 (gas: 40)\n   819: sp = sp + 0xffffffffffffffa0\n   822: u64 [sp + 0x58] = ra\n   825: u64 [sp + 0x50] = s0\n   828: s0 = sp + 0x60\n   831: sp = sp & 0xffffffffffffffe0\n   834: t0 = u64 [a0]\n   836: a3 = u64 [a0 + 0x8]\n   839: a4 = u64 [a0 + 0x10]\n   842: a0 = u64 [a0 + 0x18]\n   845: t1 = u64 [a1]\n   847: a2 = u64 [a1 + 0x8]\n   850: a5 = u64 [a1 + 0x10]\n   853: a1 = u64 [a1 + 0x18]\n   856: t2 = reverse a0\n   858: a4 = reverse a4\n   860: a3 = reverse a3\n   862: a0 = reverse t0\n   864: t0 = reverse a1\n   866: a5 = reverse a5\n   868: a2 = reverse a2\n   870: a1 = reverse t1\n   872: u64 [sp + 0x18] = a0\n   875: u64 [sp + 0x10] = a3\n   878: u64 [sp + 0x8] = a4\n   881: u64 [sp] = t2\n   883: u64 [sp + 0x38] = a1\n   886: u64 [sp + 0x30] = a2\n   889: u64 [sp + 0x28] = a5\n   892: u64 [sp + 0x20] = t0\n   895: i32 a1 = sp + 0\n   897: i32 a3 = sp + 0x20\n   900: a2 = 0xffffffffffffffff\n   903: a4 = 0x20\n   906: a0 = 0\n   908: ecalli 9 // 'set_storage'\n   910: sp = s0 + 0xffffffffffffffa0\n   913: ra = u64 [sp + 0x58]\n   916: s0 = u64 [sp + 0x50]\n   919: sp = sp + 0x60\n   922: ret\n      : @25 (gas: 16)\n   924: sp = sp + 0xffffffffffffffa0\n   927: u64 [sp + 0x58] = ra\n   930: u64 [sp + 0x50] = s0\n   933: u64 [sp + 0x48] = s1\n   936: s0 = sp + 0x60\n   939: sp = sp & 0xffffffffffffffe0\n   942: a3 = u64 [a2]\n   944: u64 [sp + 0x18] = a3\n   947: a3 = u64 [a2 + 0x8]\n   950: u64 [sp + 0x10] = a3\n   953: a3 = u64 [a2 + 0x10]\n   956: u64 [sp + 0x8] = a3\n   959: a2 = u64 [a2 + 0x18]\n   962: u64 [sp] = a2\n   964: s1 = a1\n   966: ra = 10, jump @33\n      : @26 [@dyn 5] (gas: 23)\n   971: a1 = u64 [sp]\n   973: a1 = reverse a1\n   975: a2 = u64 [sp + 0x8]\n   978: a2 = reverse a2\n   980: a3 = u64 [sp + 0x10]\n   983: a3 = reverse a3\n   985: a4 = u64 [sp + 0x18]\n   988: a4 = reverse a4\n   990: u64 [sp + 0x38] = a4\n   993: u64 [sp + 0x30] = a3\n   996: u64 [sp + 0x28] = a2\n   999: u64 [sp + 0x20] = a1\n  1002: i32 a2 = a0 + 0\n  1004: i32 a3 = s1 + 0\n  1006: i32 a0 = sp + 0x20\n  1009: a1 = 0x1\n  1012: ecalli 4 // 'deposit_event'\n  1014: sp = s0 + 0xffffffffffffffa0\n  1017: ra = u64 [sp + 0x58]\n  1020: s0 = u64 [sp + 0x50]\n  1023: s1 = u64 [sp + 0x48]\n  1026: sp = sp + 0x60\n  1029: ret\n      : @27 (gas: 15)\n  1031: sp = sp + 0xffffffffffffff20\n  1035: u64 [sp + 0xd8] = ra\n  1039: u64 [sp + 0xd0] = s0\n  1043: u64 [sp + 0xc8] = s1\n  1047: s0 = sp + 0xe0\n  1051: sp = sp & 0xffffffffffffffe0\n  1054: a5 = u64 [a4]\n  1056: u64 [sp + 0x40] = a5\n  1059: a5 = u64 [a4 + 0x8]\n  1062: u64 [sp + 0x48] = a5\n  1065: a5 = u64 [a4 + 0x10]\n  1068: u64 [sp + 0x50] = a5\n  1071: a4 = u64 [a4 + 0x18]\n  1074: u64 [sp + 0x58] = a4\n  1077: t0 = 12, jump @1367\n      : @28 [@dyn 6] (gas: 2)\n  1082: u64 [sp + 0x38] = a1\n  1085: ra = 14, jump @33\n      : @29 [@dyn 7] (gas: 46)\n  1090: a1 = reverse s1\n  1092: u64 [sp + 0x78] = a1\n  1095: a1 = u64 [sp]\n  1097: a1 = reverse a1\n  1099: u64 [sp + 0x70] = a1\n  1102: a1 = u64 [sp + 0x8]\n  1105: a1 = reverse a1\n  1107: u64 [sp + 0x68] = a1\n  1110: a1 = u64 [sp + 0x10]\n  1113: a1 = reverse a1\n  1115: u64 [sp + 0x60] = a1\n  1118: a1 = u64 [sp + 0x18]\n  1121: a1 = reverse a1\n  1123: u64 [sp + 0x98] = a1\n  1127: a1 = u64 [sp + 0x20]\n  1130: a1 = reverse a1\n  1132: u64 [sp + 0x90] = a1\n  1136: a1 = u64 [sp + 0x28]\n  1139: a1 = reverse a1\n  1141: u64 [sp + 0x88] = a1\n  1145: a1 = u64 [sp + 0x30]\n  1148: a1 = reverse a1\n  1150: u64 [sp + 0x80] = a1\n  1154: a1 = u64 [sp + 0x40]\n  1157: a1 = reverse a1\n  1159: u64 [sp + 0xb8] = a1\n  1163: a1 = u64 [sp + 0x48]\n  1166: a1 = reverse a1\n  1168: u64 [sp + 0xb0] = a1\n  1172: a1 = u64 [sp + 0x50]\n  1175: a1 = reverse a1\n  1177: u64 [sp + 0xa8] = a1\n  1181: a1 = u64 [sp + 0x58]\n  1184: a1 = reverse a1\n  1186: u64 [sp + 0xa0] = a1\n  1190: i32 a2 = a0 + 0\n  1192: a3 = i32 [sp + 0x38]\n  1195: i32 a0 = sp + 0x60\n  1198: a1 = 0x3\n  1201: ecalli 4 // 'deposit_event'\n  1203: sp = s0 + 0xffffffffffffff20\n  1207: ra = u64 [sp + 0xd8]\n  1211: s0 = u64 [sp + 0xd0]\n  1215: s1 = u64 [sp + 0xc8]\n  1219: sp = sp + 0xe0\n  1223: ret\n      : @30 (gas: 23)\n  1225: sp = sp + 0xfffffffffffffee0\n  1229: u64 [sp + 0x118] = ra\n  1233: u64 [sp + 0x110] = s0\n  1237: u64 [sp + 0x108] = s1\n  1241: s0 = sp + 0x120\n  1245: sp = sp & 0xffffffffffffffe0\n  1248: s1 = u64 [a5]\n  1250: u64 [sp + 0x60] = s1\n  1253: s1 = u64 [a5 + 0x8]\n  1256: u64 [sp + 0x68] = s1\n  1259: s1 = u64 [a5 + 0x10]\n  1262: u64 [sp + 0x70] = s1\n  1265: a5 = u64 [a5 + 0x18]\n  1268: u64 [sp + 0x78] = a5\n  1271: a5 = u64 [a4]\n  1273: u64 [sp + 0x38] = a5\n  1276: a5 = u64 [a4 + 0x8]\n  1279: u64 [sp + 0x40] = a5\n  1282: a5 = u64 [a4 + 0x10]\n  1285: u64 [sp + 0x48] = a5\n  1288: a4 = u64 [a4 + 0x18]\n  1291: u64 [sp + 0x50] = a4\n  1294: t0 = 16, jump @1367\n      : @31 [@dyn 8] (gas: 2)\n  1299: u64 [sp + 0x58] = a1\n  1302: ra = 18, jump @33\n      : @32 [@dyn 9] (gas: 58)\n  1307: a1 = reverse s1\n  1309: u64 [sp + 0x98] = a1\n  1313: a1 = u64 [sp]\n  1315: a1 = reverse a1\n  1317: u64 [sp + 0x90] = a1\n  1321: a1 = u64 [sp + 0x8]\n  1324: a1 = reverse a1\n  1326: u64 [sp + 0x88] = a1\n  1330: a1 = u64 [sp + 0x10]\n  1333: a1 = reverse a1\n  1335: u64 [sp + 0x80] = a1\n  1339: a1 = u64 [sp + 0x18]\n  1342: a1 = reverse a1\n  1344: u64 [sp + 0xb8] = a1\n  1348: a1 = u64 [sp + 0x20]\n  1351: a1 = reverse a1\n  1353: u64 [sp + 0xb0] = a1\n  1357: a1 = u64 [sp + 0x28]\n  1360: a1 = reverse a1\n  1362: u64 [sp + 0xa8] = a1\n  1366: a1 = u64 [sp + 0x30]\n  1369: a1 = reverse a1\n  1371: u64 [sp + 0xa0] = a1\n  1375: a1 = u64 [sp + 0x38]\n  1378: a1 = reverse a1\n  1380: u64 [sp + 0xd8] = a1\n  1384: a1 = u64 [sp + 0x40]\n  1387: a1 = reverse a1\n  1389: u64 [sp + 0xd0] = a1\n  1393: a1 = u64 [sp + 0x48]\n  1396: a1 = reverse a1\n  1398: u64 [sp + 0xc8] = a1\n  1402: a1 = u64 [sp + 0x50]\n  1405: a1 = reverse a1\n  1407: u64 [sp + 0xc0] = a1\n  1411: a1 = u64 [sp + 0x60]\n  1414: a1 = reverse a1\n  1416: u64 [sp + 0xf8] = a1\n  1420: a1 = u64 [sp + 0x68]\n  1423: a1 = reverse a1\n  1425: u64 [sp + 0xf0] = a1\n  1429: a1 = u64 [sp + 0x70]\n  1432: a1 = reverse a1\n  1434: u64 [sp + 0xe8] = a1\n  1438: a1 = u64 [sp + 0x78]\n  1441: a1 = reverse a1\n  1443: u64 [sp + 0xe0] = a1\n  1447: i32 a2 = a0 + 0\n  1449: a3 = i32 [sp + 0x58]\n  1452: i32 a0 = sp + 0x80\n  1456: a1 = 0x4\n  1459: ecalli 4 // 'deposit_event'\n  1461: sp = s0 + 0xfffffffffffffee0\n  1465: ra = u64 [sp + 0x118]\n  1469: s0 = u64 [sp + 0x110]\n  1473: s1 = u64 [sp + 0x108]\n  1477: sp = sp + 0x120\n  1481: ret\n      : @33 (gas: 2)\n  1483: i32 a2 = a0 >> 0x10\n  1486: jump @38 if a2 != 0\n      : @34 (gas: 4)\n  1489: a1 = a1 + a0\n  1492: i32 a1 = a1 + 0x1f\n  1495: a1 = a1 & 0xffffffffffffffe0\n  1498: jump @38 if a1 >u 65536\n      : @35 (gas: 3)\n  1504: a2 = 0x2026c\n  1509: a3 = i32 [0x2026c]\n  1514: jump @37 if a3 >=u a1\n      : @36 (gas: 2)\n  1517: u32 [0x2026c] = a1\n  1522: fallthrough\n      : @37 (gas: 4)\n  1523: a1 = 0x20280\n  1528: i32 a0 = a0 + 0\n  1530: a0 = a0 + a1\n  1533: ret\n      : @38 (gas: 1)\n  1535: trap\n      : @39 (gas: 6)\n  1536: sp = sp + 0xfffffffffffffff0\n  1539: u64 [sp + 0x8] = ra\n  1542: u64 [sp] = s0\n  1544: s0 = a0 & 0x1\n  1547: ecalli 2 // 'call_data_size'\n  1549: fallthrough\n      : @40 (gas: 2)\n  1550: u32 [0x20268] = a0\n  1555: jump @42 if s0 == 0\n      : @41 (gas: 1)\n  1558: ra = 20, jump @43\n      : @42 [@dyn 10] (gas: 18)\n  1562: ra = 0x16\n  1565: sp = sp + 0xfffffffffffffe10\n  1569: u64 [sp + 0x1e8] = ra\n  1573: u64 [sp + 0x1e0] = s0\n  1577: u64 [sp + 0x1d8] = s1\n  1581: s0 = sp + 0x1f0\n  1585: sp = sp + 0xffffffffffffe650\n  1589: sp = sp & 0xffffffffffffffe0\n  1592: s1 = sp\n  1594: a2 = s1 + 0x1038\n  1598: u64 [a2 + 1248] = 0\n  1602: u64 [a2 + 1240] = 0\n  1606: u64 [a2 + 1224] = 0x80\n  1612: a0 = 0x40\n  1615: a1 = s1 + 0x1500\n  1619: u64 [a2 + 1232] = 0\n  1623: ra = 0x112\n  1627: jump @19\n      : @43 [@dyn 11] (gas: 21)\n  1630: sp = sp + 0xfffffffffffff808\n  1634: a0 = sp + 0x700\n  1638: u64 [a0 + 0xf0] = ra\n  1642: u64 [a0 + 0xe8] = s0\n  1646: u64 [a0 + 0xe0] = s1\n  1650: s0 = sp + 0x7f8\n  1654: sp = sp + 0xfffffffffffffcf8\n  1658: sp = sp & 0xffffffffffffffe0\n  1661: s1 = sp\n  1663: a0 = s1 + 0x1000\n  1667: u64 [a0 + 4294965304] = 0\n  1671: a0 = s1 + 0x1000\n  1675: u64 [a0 + 4294965296] = 0\n  1679: a1 = s1 + 0x1000\n  1683: u64 [a1 + 4294965280] = 0x80\n  1689: a0 = 0x40\n  1692: a1 = s1 + 0x7ff\n  1696: a1 = a1 + 0x21\n  1699: a2 = s1 + 0x1000\n  1703: u64 [a2 + 4294965288] = 0\n  1707: ra = 24, jump @19\n      : @44 [@dyn 12] (gas: 12)\n  1712: a0 = s1 + 0x1000\n  1716: u64 [a0 + 4294965336] = 0\n  1720: a0 = s1 + 0x1000\n  1724: u64 [a0 + 4294965328] = 0\n  1728: a0 = s1 + 0x1000\n  1732: u64 [a0 + 4294965320] = 0\n  1736: a0 = s1 + 0x1000\n  1740: u64 [a0 + 4294965312] = 0\n  1744: a0 = s1 + 0x1000\n  1748: i32 a0 = a0 + 0xfffffffffffff840\n  1752: ecalli 10 // 'value_transferred'\n  1754: fallthrough\n      : @45 (gas: 12)\n  1755: a0 = s1 + 0x1000\n  1759: a0 = u64 [a0 + 0xfffffffffffff850]\n  1763: a1 = s1 + 0x1000\n  1767: a1 = u64 [a1 + 0xfffffffffffff858]\n  1771: a2 = s1 + 0x1000\n  1775: a2 = u64 [a2 + 0xfffffffffffff848]\n  1779: a3 = s1 + 0x1000\n  1783: a3 = u64 [a3 + 0xfffffffffffff840]\n  1787: a1 = a1 | a2\n  1790: a0 = a0 | a3\n  1793: a0 = a0 | a1\n  1796: jump @47 if a0 == 0\n      : @46 (gas: 1)\n  1799: jump @217\n      : @47 (gas: 10)\n  1802: a2 = u32 [0x20268]\n  1807: u64 [s1 + 2040] = 0\n  1811: u64 [s1 + 2032] = 0\n  1815: u64 [s1 + 2024] = 0\n  1819: a0 = s1 + 0x7ff\n  1823: a0 = a0 + 0x1\n  1826: a1 = s1 + 0x7e0\n  1830: u64 [s1 + 0x138] = a2\n  1834: u64 [s1 + 0x7e0] = a2\n  1838: ra = 26, jump @857\n      : @48 [@dyn 13] (gas: 9)\n  1843: a0 = s1 + 0x1000\n  1847: a3 = u64 [a0 + 0xfffffffffffff818]\n  1851: a0 = s1 + 0x1000\n  1855: a1 = u64 [a0 + 0xfffffffffffff810]\n  1859: a0 = s1 + 0x1000\n  1863: a2 = u64 [a0 + 0xfffffffffffff808]\n  1867: a0 = s1 + 0x1000\n  1871: a0 = u64 [a0 + 0xfffffffffffff800]\n  1875: t0 = 28, jump @1332\n      : @49 [@dyn 14] (gas: 1)\n  1880: jump @51 if a1 == 0\n      : @50 (gas: 1)\n  1883: jump @216\n      : @51 (gas: 3)\n  1886: u64 [s1 + 0x130] = a0\n  1890: a1 = u64 [s1 + 0x138]\n  1894: ra = 30, jump @33\n      : @52 [@dyn 15] (gas: 5)\n  1899: i32 a0 = a0 + 0\n  1901: a1 = i32 [s1 + 0x138]\n  1905: a2 = 0\n  1907: ecalli 0 // 'call_data_copy'\n  1908: fallthrough\n      : @53 (gas: 2)\n  1909: a1 = u64 [s1 + 0x138]\n  1913: jump @55 if a1 >u 31\n      : @54 (gas: 1)\n  1917: jump @218\n      : @55 (gas: 3)\n  1920: a0 = s1 + 0x7c0\n  1924: a1 = u64 [s1 + 0x130]\n  1928: ra = 32, jump @17\n      : @56 [@dyn 16] (gas: 15)\n  1933: a0 = u64 [s1 + 0x7d8]\n  1937: u64 [s1 + 0x80] = a0\n  1941: a0 = u64 [s1 + 0x7d0]\n  1945: u64 [s1 + 0x78] = a0\n  1948: a0 = u64 [s1 + 0x7c8]\n  1952: u64 [s1 + 0x70] = a0\n  1955: a0 = u64 [s1 + 0x7c0]\n  1959: u64 [s1 + 0x68] = a0\n  1962: u64 [s1 + 1944] = 0\n  1966: u64 [s1 + 1936] = 0\n  1970: u64 [s1 + 1920] = 0x40\n  1975: a0 = s1 + 0x7a0\n  1979: a1 = s1 + 0x780\n  1983: u64 [s1 + 1928] = 0\n  1987: ra = 34, jump @857\n      : @57 [@dyn 17] (gas: 13)\n  1992: a1 = s1 + 0x700\n  1996: a2 = u64 [a1 + 0xb8]\n  2000: a3 = u64 [a1 + 0xb0]\n  2004: a4 = u64 [a1 + 0xa8]\n  2008: a0 = u64 [a1 + 0xa0]\n  2012: a5 = a4 | a2\n  2015: a1 = a0 | a3\n  2018: a1 = a1 | a5\n  2021: a1 = a1 >> 0x20\n  2024: a5 = a5 | a3\n  2027: a5 = a5 << 0x20\n  2030: a1 = a1 | a5\n  2033: jump @59 if a1 == 0\n      : @58 (gas: 1)\n  2036: jump @216\n      : @59 (gas: 11)\n  2039: u64 [s1 + 1912] = 0\n  2043: u64 [s1 + 1904] = 0\n  2047: u64 [s1 + 1896] = 0\n  2051: a5 = 0x7\n  2054: a1 = s1 + 0x760\n  2058: u64 [s1 + 0x760] = a5\n  2062: u64 [s1 + 0xc8] = a2\n  2066: u64 [s1 + 0xc0] = a3\n  2070: u64 [s1 + 0xb8] = a4\n  2074: u64 [s1 + 0xd0] = a0\n  2078: ra = 36, jump @19\n      : @60 [@dyn 18] (gas: 10)\n  2083: a3 = u64 [s1 + 0xd0]\n  2087: a0 = u64 [s1 + 0xc8]\n  2091: a1 = u64 [s1 + 0xc0]\n  2095: a0 = a0 | a1\n  2098: a1 = 0xffffffe0\n  2108: a1 = a3 <u a1\n  2111: a2 = u64 [s1 + 0xb8]\n  2115: a1 = 0 if a2 != 0\n  2117: a1 = 0 if a0 != 0\n  2119: jump @62 if a1 != 0\n      : @61 (gas: 1)\n  2122: jump @216\n      : @62 (gas: 9)\n  2125: i32 a0 = a3 + 0x20\n  2128: u64 [s1 + 1872] = 0\n  2132: a2 = u64 [0x20000]\n  2137: u64 [s1 + 1864] = 0\n  2141: u64 [s1 + 1856] = 0\n  2145: a1 = s1 + 0x740\n  2149: u64 [s1 + 0x758] = a2\n  2153: u64 [s1 + 0xf0] = a0\n  2157: ra = 38, jump @19\n      : @63 [@dyn 19] (gas: 7)\n  2162: u64 [s1 + 1816] = 0\n  2166: u64 [s1 + 1808] = 0\n  2170: u64 [s1 + 1792] = 0x40\n  2175: a0 = s1 + 0x720\n  2179: a1 = s1 + 0x700\n  2183: u64 [s1 + 1800] = 0\n  2187: ra = 40, jump @857\n      : @64 [@dyn 20] (gas: 13)\n  2192: a1 = s1 + 0x700\n  2196: a5 = u64 [a1 + 0x38]\n  2199: a2 = u64 [a1 + 0x30]\n  2202: a3 = u64 [a1 + 0x28]\n  2205: a0 = u64 [a1 + 0x20]\n  2208: a4 = a3 | a5\n  2211: a1 = a0 | a2\n  2214: a1 = a1 | a4\n  2217: a1 = a1 >> 0x20\n  2220: a4 = a4 | a2\n  2223: a4 = a4 << 0x20\n  2226: a1 = a1 | a4\n  2229: jump @66 if a1 == 0\n      : @65 (gas: 1)\n  2232: jump @216\n      : @66 (gas: 11)\n  2235: u64 [s1 + 1784] = 0\n  2239: u64 [s1 + 1776] = 0\n  2243: u64 [s1 + 1768] = 0\n  2247: a4 = 0x3\n  2250: a1 = s1 + 0x6e0\n  2254: u64 [s1 + 0x6e0] = a4\n  2258: u64 [s1 + 0x98] = a2\n  2262: u64 [s1 + 0x90] = a3\n  2266: u64 [s1 + 0xa0] = a0\n  2270: u64 [s1 + 0x88] = a5\n  2274: ra = 42, jump @19\n      : @67 [@dyn 21] (gas: 10)\n  2279: a3 = u64 [s1 + 0xa0]\n  2283: a0 = u64 [s1 + 0x98]\n  2287: a1 = u64 [s1 + 0x88]\n  2291: a0 = a0 | a1\n  2294: a1 = 0xffffffe0\n  2304: a1 = a3 <u a1\n  2307: a2 = u64 [s1 + 0x90]\n  2311: a1 = 0 if a2 != 0\n  2313: a1 = 0 if a0 != 0\n  2315: jump @69 if a1 != 0\n      : @68 (gas: 1)\n  2318: jump @216\n      : @69 (gas: 9)\n  2321: i32 a0 = a3 + 0x20\n  2324: u64 [s1 + 1744] = 0\n  2328: u64 [s1 + 1736] = 0\n  2332: u64 [s1 + 1728] = 0\n  2336: a2 = 0x4d544b0000000000\n  2346: a1 = s1 + 0x6c0\n  2350: u64 [s1 + 0x6d8] = a2\n  2354: u64 [s1 + 0x18] = a0\n  2357: ra = 44, jump @19\n      : @70 [@dyn 22] (gas: 3)\n  2362: a0 = s1 + 0x6a0\n  2366: a1 = u64 [s1 + 0xd0]\n  2370: ra = 46, jump @17\n      : @71 [@dyn 23] (gas: 17)\n  2375: a0 = s1 + 0x600\n  2379: a3 = u64 [a0 + 0xb8]\n  2383: a1 = u64 [a0 + 0xb0]\n  2387: a2 = u64 [a0 + 0xa8]\n  2391: a0 = a3 >u 0\n  2393: a4 = a1 >u 0\n  2395: a4 = a0 if a3 != 0\n  2398: u64 [s1 + 0xe8] = a2\n  2402: a0 = a2 >u 0\n  2404: u64 [s1 + 0x58] = a1\n  2407: u64 [s1 + 0xe0] = a3\n  2411: a1 = a1 | a3\n  2414: u64 [s1 + 0x50] = a0\n  2417: u64 [s1 + 0xa8] = a4\n  2421: u64 [s1 + 0xd8] = a1\n  2425: a0 = a4 if a1 != 0\n  2428: jump @73 if a0 == 0\n      : @72 (gas: 1)\n  2431: jump @219\n      : @73 (gas: 14)\n  2434: a0 = u64 [s1 + 0x6a0]\n  2438: u64 [s1 + 0x60] = a0\n  2441: a0 = s1 + 0x1000\n  2445: u64 [a0 + 4294965368] = 0\n  2449: a0 = s1 + 0x1000\n  2453: u64 [a0 + 4294965360] = 0\n  2457: a0 = s1 + 0x1000\n  2461: u64 [a0 + 4294965352] = 0\n  2465: a1 = s1 + 0x1000\n  2469: u64 [a1 + 4294965344] = 0x3\n  2474: a0 = s1 + 0x680\n  2478: a1 = s1 + 0x7ff\n  2482: a1 = a1 + 0x61\n  2485: ra = 48, jump @21\n      : @74 [@dyn 24] (gas: 6)\n  2490: a4 = s1 + 0x600\n  2494: a0 = u64 [a4 + 0x90]\n  2498: a1 = u64 [a4 + 0x88]\n  2502: a2 = u64 [a4 + 0x80]\n  2506: a3 = u64 [a4 + 0x98]\n  2510: t0 = 50, jump @1357\n      : @75 [@dyn 25] (gas: 12)\n  2515: t0 = a2 <u 0x1\n  2518: ra = a1 & 0x7f\n  2521: t2 = a5 & a0\n  2524: a4 = a5 & t1\n  2527: ra = a1 if a2 != 0\n  2530: a1 = ra <u 0x20\n  2533: a5 = a5 & a3\n  2536: a2 = a1\n  2538: a2 = 0 if a4 != 0\n  2540: a0 = t2 | a5\n  2543: a2 = 0 if a0 != 0\n  2545: jump @77 if t0 == a2\n      : @76 (gas: 1)\n  2548: jump @225\n      : @77 (gas: 1)\n  2551: t0 = 52, jump @1368\n      : @78 [@dyn 26] (gas: 4)\n  2556: a0 = u64 [s1 + 0x60]\n  2559: a0 = a0 <u 0x20\n  2562: u64 [s1 + 0xb0] = a0\n  2566: jump @90 if a3 == 0\n      : @79 (gas: 11)\n  2570: u64 [s1 + 0x110] = a4\n  2574: u64 [s1 + 0x118] = ra\n  2578: u64 [s1 + 0x120] = a5\n  2582: u64 [s1 + 0x130] = t2\n  2586: u64 [s1 + 1656] = 0\n  2590: u64 [s1 + 1648] = 0\n  2594: u64 [s1 + 1640] = 0\n  2598: a1 = s1 + 0x660\n  2602: u64 [s1 + 1632] = 0x3\n  2607: a0 = 0\n  2609: ra = 54, jump @19\n      : @80 [@dyn 27] (gas: 2)\n  2614: a1 = i32 [0x2026c]\n  2619: jump @82 if a1 >u 31\n      : @81 (gas: 2)\n  2623: u32 [0x2026c] = 0x20\n  2629: fallthrough\n      : @82 (gas: 11)\n  2630: a0 = sp + 0xffffffffffffffe0\n  2633: a2 = a0 & 0xffffffffffffffe0\n  2636: u64 [s1 + 0x128] = a2\n  2640: sp = a2\n  2642: a0 = 0x20280\n  2647: i32 a0 = a0 + 0\n  2649: i32 a2 = a2 + 0\n  2651: a1 = 0x20\n  2654: ra = 0x38\n  2657: ecalli 6 // 'hash_keccak_256'\n  2659: fallthrough\n      : @83 [@dyn 28] (gas: 9)\n  2660: a0 = u64 [s1 + 0x60]\n  2663: a1 = a0 + 0x1f\n  2666: a0 = a1 <u a0\n  2669: a5 = u64 [s1 + 0xe8]\n  2673: a2 = a5 + a0\n  2676: a3 = a2 <u a5\n  2679: a3 = a0 if a0 == 0\n  2682: a4 = u64 [s1 + 0x58]\n  2685: t0 = 58, jump @1352\n      : @84 [@dyn 29] (gas: 35)\n  2690: a1 = u64 [s1 + 0xb0]\n  2694: a1 = 0 if a5 != 0\n  2696: a3 = u64 [s1 + 0xd8]\n  2700: a1 = 0 if a3 != 0\n  2702: a4 = 0 if a1 != 0\n  2704: a0 = 0 if a1 != 0\n  2706: t0 = t2 + a0\n  2709: a0 = t0 <u t2\n  2712: a5 = a2 + a0\n  2715: a4 = a4 + a5\n  2718: u64 [s1 + 0x138] = a4\n  2722: a5 = a4 ^ a2\n  2725: a3 = a4 <u a2\n  2728: a3 = a0 if a5 == 0\n  2731: u64 [s1 + 0x100] = a3\n  2735: a0 = u64 [s1 + 0x118]\n  2739: ra = a0 + 0x1f\n  2742: a4 = ra <u a0\n  2745: a3 = u64 [s1 + 0x110]\n  2749: a0 = a3 + a4\n  2752: a5 = a0 <u a3\n  2755: a5 = a4 if a4 == 0\n  2758: t1 = u64 [s1 + 0x130]\n  2762: t1 = t1 + a5\n  2765: a4 = t1 << 0x3b\n  2768: a3 = a0 >> 0x5\n  2771: a3 = a3 | a4\n  2774: a0 = a0 << 0x3b\n  2777: a4 = ra >> 0x5\n  2780: a0 = a0 | a4\n  2783: a0 = a0 + t2\n  2786: u64 [s1 + 0x118] = a0\n  2790: a0 = a0 <u t2\n  2793: t2 = t0\n  2795: t0 = 60, jump @1375\n      : @85 [@dyn 30] (gas: 16)\n  2800: a0 = u64 [s1 + 0x58]\n  2803: a0 = a4 <u a0\n  2806: a3 = u64 [s1 + 0xe0]\n  2810: a0 = a0 + a3\n  2813: a3 = a4 >> 0x5\n  2816: a4 = a0 << 0x3b\n  2819: a3 = a3 | a4\n  2822: a4 = u64 [s1 + 0x128]\n  2826: t0 = u64 [a4]\n  2828: a4 = u64 [a4 + 0x8]\n  2831: a0 = a0 >> 0x5\n  2834: a3 = 0 if a1 != 0\n  2836: a0 = 0 if a1 != 0\n  2838: a1 = reverse a4\n  2840: a4 = reverse t0\n  2842: t0 = 62, jump @1393\n      : @86 [@dyn 31] (gas: 25)\n  2847: t0 = a0 + a3\n  2850: a0 = u64 [s1 + 0x130]\n  2854: a0 = t1 <u a0\n  2857: a3 = u64 [s1 + 0x120]\n  2861: a0 = a0 + a3\n  2864: a3 = t1 >> 0x5\n  2867: a5 = a0 << 0x3b\n  2870: a3 = a3 | a5\n  2873: a0 = a0 >> 0x5\n  2876: a0 = a0 + a4\n  2879: a5 = s1 + 0x100\n  2883: a4 = u64 [a5 + 0x38]\n  2886: a3 = a3 + a1\n  2889: a1 = a3 <u a1\n  2892: a0 = a0 + a1\n  2895: a2 = a2 + a3\n  2898: u64 [a5 + 0x8] = a2\n  2901: a1 = a2 <u a3\n  2904: a0 = a0 + a1\n  2907: u64 [a5] = a0\n  2909: a0 = sp + 0xffffffffffffffe0\n  2912: t1 = a0 & 0xffffffffffffffe0\n  2915: sp = t1\n  2917: u64 [s1 + 0xf8] = t1\n  2921: fallthrough\n      : @87 (gas: 20)\n  2922: a0 = u64 [s1 + 0x118]\n  2926: a0 = t2 <u a0\n  2929: a2 = u64 [s1 + 0x110]\n  2933: a1 = a4 ^ a2\n  2936: a2 = a4 <u a2\n  2939: a2 = a0 if a1 == 0\n  2942: a5 = u64 [s1 + 0x108]\n  2946: a0 = ra <u a5\n  2949: a3 = u64 [s1 + 0x100]\n  2953: a1 = t0 ^ a3\n  2956: a3 = t0 <u a3\n  2959: a3 = a0 if a1 == 0\n  2962: a0 = ra ^ a5\n  2965: a0 = a0 | a1\n  2968: a3 = a2 if a0 == 0\n  2971: u64 [t1] = t2\n  2973: u64 [t1 + 0x8] = a4\n  2976: u64 [t1 + 0x10] = ra\n  2979: u64 [t1 + 0x18] = t0\n  2982: jump @90 if a3 == 0\n      : @88 (gas: 16)\n  2985: a0 = s1 + 0x1000\n  2989: u64 [a0 + 4294965400] = 0\n  2993: a0 = s1 + 0x1000\n  2997: u64 [a0 + 4294965392] = 0\n  3001: a0 = s1 + 0x1000\n  3005: u64 [a0 + 4294965384] = 0\n  3009: a0 = s1 + 0x1000\n  3013: u64 [a0 + 4294965376] = 0\n  3017: a1 = s1 + 0x7ff\n  3021: a1 = a1 + 0x81\n  3025: a0 = t1\n  3027: u64 [s1 + 0x130] = t2\n  3031: u64 [s1 + 0x138] = a4\n  3035: u64 [s1 + 0x128] = t0\n  3039: u64 [s1 + 0x120] = ra\n  3043: ra = 64, jump @24\n      : @89 [@dyn 32] (gas: 15)\n  3048: t1 = u64 [s1 + 0xf8]\n  3052: t0 = u64 [s1 + 0x128]\n  3056: a4 = u64 [s1 + 0x138]\n  3060: t2 = u64 [s1 + 0x130]\n  3064: t2 = t2 + 0x1\n  3067: a0 = t2 <u 0x1\n  3070: a4 = a4 + a0\n  3073: a0 = t2 | a4\n  3076: a0 = a0 <u 0x1\n  3079: a1 = u64 [s1 + 0x120]\n  3083: a0 = a0 + a1\n  3086: a1 = a0 <u a1\n  3089: t0 = t0 + a1\n  3092: ra = a0\n  3094: jump @87\n      : @90 (gas: 26)\n  3097: a0 = u64 [s1 + 0xb0]\n  3101: a0 = a0 ^ 0x1\n  3104: a4 = u64 [s1 + 0xe8]\n  3108: a1 = u64 [s1 + 0x50]\n  3111: a0 = a1 if a4 != 0\n  3114: a1 = u64 [s1 + 0xa8]\n  3118: a2 = u64 [s1 + 0xd8]\n  3122: a0 = a1 if a2 != 0\n  3125: t1 = u64 [s1 + 0xe0]\n  3129: a1 = a4 | t1\n  3132: u64 [s1 + 0xb0] = a1\n  3136: a1 = u64 [s1 + 0x58]\n  3139: t2 = a1 >> 0x3f\n  3142: t1 = t1 << 0x1\n  3145: a5 = a4 >> 0x3f\n  3148: t0 = a1 << 0x1\n  3151: a3 = u64 [s1 + 0x60]\n  3154: ra = a3 >> 0x3f\n  3157: a4 = a4 << 0x1\n  3160: a2 = a3 << 0x1\n  3163: u64 [s1 + 0x48] = a2\n  3166: u64 [s1 + 0x40] = t1\n  3169: u64 [s1 + 0x38] = ra\n  3172: u64 [s1 + 0x30] = a5\n  3175: u64 [s1 + 0x50] = t0\n  3178: jump @101 if a0 == 0\n      : @91 (gas: 11)\n  3182: u64 [s1 + 0x28] = a4\n  3185: u64 [s1 + 0x20] = t2\n  3188: a3 = a3 & 0xffffffffffffffe0\n  3191: u64 [s1 + 0xa8] = a3\n  3195: u64 [s1 + 1592] = 0\n  3199: u64 [s1 + 1584] = 0\n  3203: u64 [s1 + 1576] = 0\n  3207: a1 = s1 + 0x620\n  3211: u64 [s1 + 1568] = 0x3\n  3216: a0 = 0\n  3218: ra = 66, jump @19\n      : @92 [@dyn 33] (gas: 7)\n  3223: a0 = sp + 0xffffffffffffffe0\n  3226: a0 = a0 & 0xffffffffffffffe0\n  3229: u64 [s1 + 0x118] = a0\n  3233: sp = a0\n  3235: a1 = 0x20\n  3238: a0 = 0\n  3240: ra = 68, jump @33\n      : @93 [@dyn 34] (gas: 35)\n  3245: a1 = sp + 0xffffffffffffffe0\n  3248: a1 = a1 & 0xffffffffffffffe0\n  3251: u64 [s1 + 0x110] = a1\n  3255: sp = a1\n  3257: i32 a0 = a0 + 0\n  3259: i32 a2 = a1 + 0\n  3261: a1 = 0x20\n  3264: ecalli 6 // 'hash_keccak_256'\n  3266: u64 [s1 + 312] = 0x20\n  3271: t0 = 0\n  3273: u64 [s1 + 304] = 0\n  3277: u64 [s1 + 296] = 0\n  3281: a4 = 0\n  3283: a5 = 0\n  3285: ra = 0\n  3287: u64 [s1 + 288] = 0\n  3291: a3 = u64 [s1 + 0x110]\n  3295: a0 = u64 [a3 + 0x18]\n  3298: a1 = u64 [a3 + 0x10]\n  3301: a2 = u64 [a3 + 0x8]\n  3304: t1 = u64 [a3]\n  3306: a0 = reverse a0\n  3308: a1 = reverse a1\n  3310: a3 = reverse a2\n  3312: t1 = reverse t1\n  3314: t2 = t1\n  3316: a2 = u64 [s1 + 0x118]\n  3320: u64 [a2 + 0x18] = t1\n  3323: u64 [s1 + 0xf0] = a3\n  3327: u64 [a2 + 0x10] = a3\n  3330: u64 [s1 + 0x110] = a1\n  3334: u64 [a2 + 0x8] = a1\n  3337: a3 = a0\n  3339: u64 [a2] = a0\n  3341: fallthrough\n      : @94 (gas: 25)\n  3342: u64 [s1 + 0x108] = t2\n  3346: t1 = a3\n  3348: a0 = u64 [s1 + 0xa8]\n  3352: u64 [s1 + 0x100] = a4\n  3356: a0 = a4 <u a0\n  3359: a4 = a0 ^ 0x1\n  3362: u64 [s1 + 0xf8] = a5\n  3366: a4 = 0x1 if a5 != 0\n  3369: a5 = s1 + 0x100\n  3373: a0 = u64 [a5 + 0x20]\n  3376: a0 = ra | a0\n  3379: a4 = 0x1 if a0 != 0\n  3382: a1 = u64 [s1 + 0xd0]\n  3386: a0 = u64 [a5 + 0x38]\n  3389: a1 = a1 + a0\n  3392: a3 = u64 [s1 + 0xb8]\n  3396: a3 = a3 + t0\n  3399: a2 = u64 [s1 + 0xc0]\n  3403: a0 = u64 [a5 + 0x30]\n  3406: a2 = a2 + a0\n  3409: a0 = u64 [s1 + 0xc8]\n  3413: t2 = u64 [s1 + 0x128]\n  3417: t2 = t2 + a0\n  3420: a0 = u64 [s1 + 0xb0]\n  3424: jump @103 if a4 != 0\n      : @95 (gas: 9)\n  3428: a0 = u64 [s1 + 0x138]\n  3432: a4 = a1 <u a0\n  3435: a3 = a3 + a4\n  3438: a0 = t0\n  3440: t0 = a3 ^ t0\n  3443: u64 [s1 + 0xe0] = a0\n  3447: a5 = a3 <u a0\n  3450: a5 = a4 if t0 == 0\n  3453: t0 = 70, jump @1355\n      : @96 [@dyn 35] (gas: 2)\n  3458: u64 [s1 + 0xe8] = t1\n  3462: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  3465: jump @216\n      : @98 (gas: 3)\n  3468: a0 = s1 + 0x1c0\n  3472: u64 [s1 + 0xd8] = ra\n  3476: ra = 72, jump @17\n      : @99 [@dyn 36] (gas: 16)\n  3481: a0 = u64 [s1 + 0x1d8]\n  3485: a1 = u64 [s1 + 0x1d0]\n  3489: a2 = u64 [s1 + 0x1c8]\n  3493: a3 = u64 [s1 + 0x1c0]\n  3497: a4 = s1 + 0x7ff\n  3501: a4 = a4 + 0xb9\n  3505: u64 [a4] = a0\n  3507: u64 [a4 + 0xfffffffffffffff8] = a1\n  3510: a0 = s1 + 0x1000\n  3514: u64 [a0 + 0xfffffffffffff8a8] = a2\n  3518: a0 = s1 + 0x1000\n  3522: u64 [a0 + 0xfffffffffffff8a0] = a3\n  3526: a1 = s1 + 0x7ff\n  3530: a1 = a1 + 0xa1\n  3534: a0 = u64 [s1 + 0x118]\n  3538: ra = 74, jump @24\n      : @100 [@dyn 37] (gas: 56)\n  3543: t2 = u64 [s1 + 0xe8]\n  3547: t2 = t2 + 0x1\n  3550: a0 = t2 <u 0x1\n  3553: t0 = u64 [s1 + 0x110]\n  3557: t0 = t0 + a0\n  3560: a0 = t2 | t0\n  3563: a0 = a0 <u 0x1\n  3566: a1 = u64 [s1 + 0xf0]\n  3570: t1 = a1 + a0\n  3573: a1 = t1 <u a1\n  3576: a0 = u64 [s1 + 0x108]\n  3580: a0 = a0 + a1\n  3583: a1 = u64 [s1 + 0x138]\n  3587: a2 = a1 + 0x20\n  3590: u64 [s1 + 0x108] = a2\n  3594: a3 = a2 <u a1\n  3597: a1 = u64 [s1 + 0xe0]\n  3601: a2 = a1 + a3\n  3604: u64 [s1 + 0xe8] = a2\n  3608: a4 = a2 <u a1\n  3611: a4 = a3 if a3 == 0\n  3614: a1 = u64 [s1 + 0x130]\n  3618: ra = a1 + a4\n  3621: a4 = ra <u a1\n  3624: a1 = u64 [s1 + 0x128]\n  3628: a1 = a1 + a4\n  3631: u64 [s1 + 0x128] = a1\n  3635: a1 = u64 [s1 + 0x100]\n  3639: a4 = a1 + 0x20\n  3642: a5 = a4 <u a1\n  3645: a2 = u64 [s1 + 0xf8]\n  3649: a1 = a2 + a5\n  3652: a2 = a1 <u a2\n  3655: a2 = a5 if a5 == 0\n  3658: a3 = u64 [s1 + 0xd8]\n  3662: a2 = a2 + a3\n  3665: a5 = a2 <u a3\n  3668: a3 = u64 [s1 + 0x120]\n  3672: a3 = a3 + a5\n  3675: u64 [s1 + 0x120] = a3\n  3679: u64 [s1 + 0x110] = t0\n  3683: a5 = u64 [s1 + 0x118]\n  3687: u64 [a5 + 0x8] = t0\n  3690: a3 = t2\n  3692: u64 [a5] = t2\n  3694: u64 [a5 + 0x10] = t1\n  3697: t2 = a0\n  3699: u64 [a5 + 0x18] = a0\n  3702: u64 [s1 + 0xf0] = t1\n  3706: a0 = u64 [s1 + 0x108]\n  3710: u64 [s1 + 0x138] = a0\n  3714: t0 = u64 [s1 + 0xe8]\n  3718: u64 [s1 + 0x130] = ra\n  3722: a5 = a1\n  3724: ra = a2\n  3726: jump @94\n      : @101 (gas: 4)\n  3729: a0 = a3 | a1\n  3732: a1 = u64 [s1 + 0xb0]\n  3736: a0 = a0 | a1\n  3739: jump @118 if a0 != 0\n      : @102 (gas: 9)\n  3743: u64 [s1 + 288] = 0\n  3747: u64 [s1 + 280] = 0\n  3751: u64 [s1 + 296] = 0\n  3755: u64 [s1 + 304] = 0\n  3759: t1 = u64 [s1 + 0x40]\n  3762: t0 = u64 [s1 + 0x38]\n  3765: a1 = u64 [s1 + 0x30]\n  3768: a5 = u64 [s1 + 0x50]\n  3771: jump @120\n      : @103 (gas: 10)\n  3774: ra = t0\n  3776: t1 = u64 [s1 + 0x60]\n  3779: a4 = u64 [s1 + 0xa8]\n  3783: a4 = a4 ^ t1\n  3786: a5 = u64 [s1 + 0x58]\n  3789: a4 = a4 | a5\n  3792: a4 = a4 | a0\n  3795: t0 = u64 [s1 + 0x28]\n  3798: a5 = u64 [s1 + 0x50]\n  3801: jump @117 if a4 == 0\n      : @104 (gas: 7)\n  3805: a0 = u64 [s1 + 0x138]\n  3809: a4 = a1 <u a0\n  3812: a3 = a3 + a4\n  3815: t0 = a3 ^ ra\n  3818: a5 = a3 <u ra\n  3821: a5 = a4 if t0 == 0\n  3824: t0 = 76, jump @1355\n      : @105 [@dyn 38] (gas: 1)\n  3829: jump @107 if a0 == 0\n      : @106 (gas: 1)\n  3832: jump @216\n      : @107 (gas: 2)\n  3835: a0 = s1 + 0x600\n  3839: ra = 78, jump @17\n      : @108 [@dyn 39] (gas: 11)\n  3844: a1 = s1 + 0x600\n  3848: a0 = u64 [a1 + 0x18]\n  3851: u64 [s1 + 0x130] = a0\n  3855: a0 = u64 [a1 + 0x10]\n  3858: u64 [s1 + 0x128] = a0\n  3862: a0 = u64 [a1 + 0x8]\n  3865: u64 [s1 + 0x120] = a0\n  3869: a0 = u64 [a1]\n  3871: u64 [s1 + 0x110] = a0\n  3875: a0 = u64 [s1 + 0x60]\n  3878: t0 = 80, jump @1388\n      : @109 [@dyn 40] (gas: 1)\n  3883: ra = 82, jump @1404\n      : @110 [@dyn 41] (gas: 6)\n  3888: u64 [s1 + 0x108] = a0\n  3892: u64 [s1 + 0xf0] = a1\n  3896: a0 = 0xffffffffffffffff\n  3899: a1 = 0xffffffffffffffff\n  3902: a2 = u64 [s1 + 0x138]\n  3906: ra = 84, jump @1399\n      : @111 [@dyn 42] (gas: 1)\n  3911: t0 = 86, jump @1379\n      : @112 [@dyn 43] (gas: 1)\n  3916: ra = 88, jump @1399\n      : @113 [@dyn 44] (gas: 1)\n  3921: t0 = 90, jump @1342\n      : @114 [@dyn 45] (gas: 2)\n  3926: a2 = u64 [s1 + 0x120]\n  3930: t0 = 92, jump @1371\n      : @115 [@dyn 46] (gas: 8)\n  3935: u64 [a4 + 0x20] = a3\n  3938: u64 [a4 + 0x18] = a2\n  3941: u64 [a4 + 0x10] = a1\n  3944: u64 [a4 + 0x8] = a0\n  3947: a1 = s1 + 0x7ff\n  3951: a1 = a1 + 0xc1\n  3955: a0 = u64 [s1 + 0x118]\n  3959: ra = 94, jump @24\n      : @116 [@dyn 47] (gas: 3)\n  3964: a5 = u64 [s1 + 0x50]\n  3967: t0 = u64 [s1 + 0x28]\n  3970: fallthrough\n      : @117 (gas: 25)\n  3971: a0 = u64 [s1 + 0x20]\n  3974: a1 = u64 [s1 + 0x40]\n  3977: a0 = a0 | a1\n  3980: a1 = u64 [s1 + 0x30]\n  3983: a1 = a1 | a5\n  3986: a2 = u64 [s1 + 0x38]\n  3989: a2 = t0 | a2\n  3992: a3 = u64 [s1 + 0x48]\n  3995: a3 = a3 + 0x1\n  3998: a5 = s1 + 0x7ff\n  4002: a5 = a5 + 0xb9\n  4006: u64 [a5 + 64] = 0\n  4009: u64 [a5 + 56] = 0\n  4012: u64 [a5 + 48] = 0\n  4015: u64 [a5 + 40] = 0x3\n  4019: u64 [a5 + 0x48] = a3\n  4022: u64 [a5 + 0x50] = a2\n  4025: u64 [a5 + 0x58] = a1\n  4028: u64 [a5 + 0x60] = a0\n  4031: a0 = s1 + 0x7ff\n  4035: a0 = a0 + 0xe1\n  4039: a1 = s1 + 0x7ff\n  4043: a1 = a1 + 0x101\n  4047: ra = 0x6e\n  4050: jump @24\n      : @118 (gas: 5)\n  4053: a0 = s1 + 0x640\n  4057: a1 = u64 [s1 + 0xf0]\n  4061: u64 [s1 + 0x20] = t2\n  4064: u64 [s1 + 0x28] = a4\n  4067: ra = 96, jump @17\n      : @119 [@dyn 48] (gas: 17)\n  4072: a5 = u64 [s1 + 0x50]\n  4075: a4 = u64 [s1 + 0x28]\n  4078: a1 = u64 [s1 + 0x30]\n  4081: t0 = u64 [s1 + 0x38]\n  4084: t1 = u64 [s1 + 0x40]\n  4087: t2 = u64 [s1 + 0x20]\n  4090: a3 = u64 [s1 + 0x60]\n  4093: a2 = s1 + 0x600\n  4097: a0 = u64 [a2 + 0x58]\n  4100: u64 [s1 + 0x130] = a0\n  4104: a0 = u64 [a2 + 0x50]\n  4107: u64 [s1 + 0x128] = a0\n  4111: a0 = u64 [a2 + 0x48]\n  4114: u64 [s1 + 0x118] = a0\n  4118: a0 = u64 [a2 + 0x40]\n  4121: u64 [s1 + 0x120] = a0\n  4125: fallthrough\n      : @120 (gas: 7)\n  4126: a0 = a5 | a1\n  4129: u64 [s1 + 0x110] = a0\n  4133: a0 = t1 | t2\n  4136: u64 [s1 + 0x108] = a0\n  4140: a0 = a4 | t0\n  4143: u64 [s1 + 0x100] = a0\n  4147: t0 = 98, jump @1394\n      : @121 [@dyn 49] (gas: 1)\n  4152: ra = 100, jump @1404\n      : @122 [@dyn 50] (gas: 7)\n  4157: u64 [s1 + 0xe0] = a0\n  4161: u64 [s1 + 0xf8] = a1\n  4165: a0 = u64 [s1 + 0x60]\n  4168: i32 a2 = a0 << 0x3\n  4171: a0 = 0xffffffffffffffff\n  4174: a1 = 0xffffffffffffffff\n  4177: ra = 102, jump @1399\n      : @123 [@dyn 51] (gas: 10)\n  4182: u64 [s1 + 0xf0] = a0\n  4186: u64 [s1 + 0xe8] = a1\n  4190: a1 = u64 [s1 + 0xe0]\n  4194: a0 = a0 | a1\n  4197: u64 [s1 + 0xe0] = a0\n  4201: a0 = u64 [s1 + 0x138]\n  4205: i32 a2 = a0 + 0xffffffffffffff80\n  4208: a0 = 0xffffffffffffffff\n  4211: a1 = 0xffffffffffffffff\n  4214: ra = 104, jump @1399\n      : @124 [@dyn 52] (gas: 7)\n  4219: a4 = u64 [s1 + 0x138]\n  4223: a2 = a4 <u 0x80\n  4227: a3 = u64 [s1 + 0xe0]\n  4231: a0 = a3 if a2 != 0\n  4234: a5 = u64 [s1 + 0xe8]\n  4238: a3 = u64 [s1 + 0xf8]\n  4242: t0 = 106, jump @1396\n      : @125 [@dyn 53] (gas: 2)\n  4247: a4 = u64 [s1 + 0xf0]\n  4251: t0 = 108, jump @1356\n      : @126 [@dyn 54] (gas: 24)\n  4256: a4 = u64 [s1 + 0x48]\n  4259: a0 = a0 | a4\n  4262: a5 = s1 + 0x100\n  4266: a4 = u64 [a5]\n  4268: a1 = a1 | a4\n  4271: a4 = u64 [a5 + 0x8]\n  4274: a3 = a3 | a4\n  4277: a4 = u64 [a5 + 0x10]\n  4280: a2 = a2 | a4\n  4283: a5 = s1 + 0x7ff\n  4287: a5 = a5 + 0xb9\n  4291: u64 [a5 + 104] = 0x3\n  4295: u64 [a5 + 0x98] = a2\n  4299: u64 [a5 + 0xa0] = a3\n  4303: u64 [a5 + 0x90] = a1\n  4307: u64 [a5 + 0x88] = a0\n  4311: u64 [a5 + 128] = 0\n  4315: u64 [a5 + 120] = 0\n  4318: u64 [a5 + 112] = 0\n  4321: a0 = s1 + 0x7ff\n  4325: a0 = a0 + 0x121\n  4329: a1 = s1 + 0x7ff\n  4333: a1 = a1 + 0x141\n  4337: ra = 110, jump @24\n      : @127 [@dyn 55] (gas: 3)\n  4342: a0 = s1 + 0x5e0\n  4346: a1 = u64 [s1 + 0xa0]\n  4350: ra = 112, jump @17\n      : @128 [@dyn 56] (gas: 17)\n  4355: a0 = s1 + 0x500\n  4359: a3 = u64 [a0 + 0xf8]\n  4363: a2 = u64 [a0 + 0xf0]\n  4367: a1 = u64 [a0 + 0xe8]\n  4371: a0 = a3 >u 0\n  4373: a4 = a2 >u 0\n  4375: a4 = a0 if a3 != 0\n  4378: u64 [s1 + 0xb8] = a1\n  4382: a0 = a1 >u 0\n  4384: u64 [s1 + 0xb0] = a2\n  4388: u64 [s1 + 0xa8] = a3\n  4392: a2 = a2 | a3\n  4395: u64 [s1 + 0xd8] = a0\n  4399: u64 [s1 + 0xe0] = a4\n  4403: u64 [s1 + 0xf0] = a2\n  4407: a0 = a4 if a2 != 0\n  4410: jump @231 if a0 != 0\n      : @129 (gas: 12)\n  4414: a0 = u64 [s1 + 0x5e0]\n  4418: u64 [s1 + 0xc0] = a0\n  4422: a1 = s1 + 0x7ff\n  4426: a1 = a1 + 0xb9\n  4430: u64 [a1 + 192] = 0\n  4434: u64 [a1 + 184] = 0\n  4438: u64 [a1 + 176] = 0\n  4442: u64 [a1 + 168] = 0x4\n  4447: a0 = s1 + 0x5c0\n  4451: a1 = s1 + 0x7ff\n  4455: a1 = a1 + 0x161\n  4459: ra = 114, jump @21\n      : @130 [@dyn 57] (gas: 6)\n  4464: a4 = s1 + 0x500\n  4468: a0 = u64 [a4 + 0xd0]\n  4472: a1 = u64 [a4 + 0xc8]\n  4476: a2 = u64 [a4 + 0xc0]\n  4480: a3 = u64 [a4 + 0xd8]\n  4484: t0 = 116, jump @1357\n      : @131 [@dyn 58] (gas: 12)\n  4489: t0 = a2 <u 0x1\n  4492: ra = a1 & 0x7f\n  4495: t2 = a5 & a0\n  4498: a4 = a5 & t1\n  4501: ra = a1 if a2 != 0\n  4504: a1 = ra <u 0x20\n  4507: a5 = a5 & a3\n  4510: a2 = a1\n  4512: a2 = 0 if a4 != 0\n  4514: a0 = t2 | a5\n  4517: a2 = 0 if a0 != 0\n  4519: jump @237 if t0 != a2\n      : @132 (gas: 1)\n  4523: t0 = 118, jump @1368\n      : @133 [@dyn 59] (gas: 4)\n  4528: a0 = u64 [s1 + 0xc0]\n  4532: a0 = a0 <u 0x20\n  4535: u64 [s1 + 0xe8] = a0\n  4539: jump @145 if a3 == 0\n      : @134 (gas: 11)\n  4543: u64 [s1 + 0x110] = a4\n  4547: u64 [s1 + 0x118] = ra\n  4551: u64 [s1 + 0x120] = a5\n  4555: u64 [s1 + 0x130] = t2\n  4559: u64 [s1 + 1464] = 0\n  4563: u64 [s1 + 1456] = 0\n  4567: u64 [s1 + 1448] = 0\n  4571: a1 = s1 + 0x5a0\n  4575: u64 [s1 + 1440] = 0x4\n  4580: a0 = 0\n  4582: ra = 120, jump @19\n      : @135 [@dyn 60] (gas: 2)\n  4587: a1 = i32 [0x2026c]\n  4592: jump @137 if a1 >u 31\n      : @136 (gas: 2)\n  4596: u32 [0x2026c] = 0x20\n  4602: fallthrough\n      : @137 (gas: 11)\n  4603: a0 = sp + 0xffffffffffffffe0\n  4606: a2 = a0 & 0xffffffffffffffe0\n  4609: u64 [s1 + 0x128] = a2\n  4613: sp = a2\n  4615: a0 = 0x20280\n  4620: i32 a0 = a0 + 0\n  4622: i32 a2 = a2 + 0\n  4624: a1 = 0x20\n  4627: ra = 0x7a\n  4630: ecalli 6 // 'hash_keccak_256'\n  4632: fallthrough\n      : @138 [@dyn 61] (gas: 9)\n  4633: a0 = u64 [s1 + 0xc0]\n  4637: a1 = a0 + 0x1f\n  4640: a0 = a1 <u a0\n  4643: a5 = u64 [s1 + 0xb8]\n  4647: a2 = a5 + a0\n  4650: a3 = a2 <u a5\n  4653: a3 = a0 if a0 == 0\n  4656: a4 = u64 [s1 + 0xb0]\n  4660: t0 = 124, jump @1352\n      : @139 [@dyn 62] (gas: 35)\n  4665: a1 = u64 [s1 + 0xe8]\n  4669: a1 = 0 if a5 != 0\n  4671: a3 = u64 [s1 + 0xf0]\n  4675: a1 = 0 if a3 != 0\n  4677: a4 = 0 if a1 != 0\n  4679: a0 = 0 if a1 != 0\n  4681: t0 = t2 + a0\n  4684: a0 = t0 <u t2\n  4687: a5 = a2 + a0\n  4690: a4 = a4 + a5\n  4693: u64 [s1 + 0x138] = a4\n  4697: a5 = a4 ^ a2\n  4700: a3 = a4 <u a2\n  4703: a3 = a0 if a5 == 0\n  4706: u64 [s1 + 0x100] = a3\n  4710: a0 = u64 [s1 + 0x118]\n  4714: ra = a0 + 0x1f\n  4717: a4 = ra <u a0\n  4720: a3 = u64 [s1 + 0x110]\n  4724: a0 = a3 + a4\n  4727: a5 = a0 <u a3\n  4730: a5 = a4 if a4 == 0\n  4733: t1 = u64 [s1 + 0x130]\n  4737: t1 = t1 + a5\n  4740: a4 = t1 << 0x3b\n  4743: a3 = a0 >> 0x5\n  4746: a3 = a3 | a4\n  4749: a0 = a0 << 0x3b\n  4752: a4 = ra >> 0x5\n  4755: a0 = a0 | a4\n  4758: a0 = a0 + t2\n  4761: u64 [s1 + 0x118] = a0\n  4765: a0 = a0 <u t2\n  4768: t2 = t0\n  4770: t0 = 126, jump @1375\n      : @140 [@dyn 63] (gas: 16)\n  4775: a0 = u64 [s1 + 0xb0]\n  4779: a0 = a4 <u a0\n  4782: a3 = u64 [s1 + 0xa8]\n  4786: a0 = a0 + a3\n  4789: a3 = a4 >> 0x5\n  4792: a4 = a0 << 0x3b\n  4795: a3 = a3 | a4\n  4798: a4 = u64 [s1 + 0x128]\n  4802: t0 = u64 [a4]\n  4804: a4 = u64 [a4 + 0x8]\n  4807: a0 = a0 >> 0x5\n  4810: a3 = 0 if a1 != 0\n  4812: a0 = 0 if a1 != 0\n  4814: a1 = reverse a4\n  4816: a4 = reverse t0\n  4818: t0 = 128, jump @1393\n      : @141 [@dyn 64] (gas: 25)\n  4824: t0 = a0 + a3\n  4827: a0 = u64 [s1 + 0x130]\n  4831: a0 = t1 <u a0\n  4834: a3 = u64 [s1 + 0x120]\n  4838: a0 = a0 + a3\n  4841: a3 = t1 >> 0x5\n  4844: a5 = a0 << 0x3b\n  4847: a3 = a3 | a5\n  4850: a0 = a0 >> 0x5\n  4853: a0 = a0 + a4\n  4856: a5 = s1 + 0x100\n  4860: a4 = u64 [a5 + 0x38]\n  4863: a3 = a3 + a1\n  4866: a1 = a3 <u a1\n  4869: a0 = a0 + a1\n  4872: a2 = a2 + a3\n  4875: u64 [a5 + 0x8] = a2\n  4878: a1 = a2 <u a3\n  4881: a0 = a0 + a1\n  4884: u64 [a5] = a0\n  4886: a0 = sp + 0xffffffffffffffe0\n  4889: t1 = a0 & 0xffffffffffffffe0\n  4892: sp = t1\n  4894: u64 [s1 + 0xf8] = t1\n  4898: fallthrough\n      : @142 (gas: 20)\n  4899: a0 = u64 [s1 + 0x118]\n  4903: a0 = t2 <u a0\n  4906: a2 = u64 [s1 + 0x110]\n  4910: a1 = a4 ^ a2\n  4913: a2 = a4 <u a2\n  4916: a2 = a0 if a1 == 0\n  4919: a5 = u64 [s1 + 0x108]\n  4923: a0 = ra <u a5\n  4926: a3 = u64 [s1 + 0x100]\n  4930: a1 = t0 ^ a3\n  4933: a3 = t0 <u a3\n  4936: a3 = a0 if a1 == 0\n  4939: a0 = ra ^ a5\n  4942: a0 = a0 | a1\n  4945: a3 = a2 if a0 == 0\n  4948: u64 [t1] = t2\n  4950: u64 [t1 + 0x8] = a4\n  4953: u64 [t1 + 0x10] = ra\n  4956: u64 [t1 + 0x18] = t0\n  4959: jump @145 if a3 == 0\n      : @143 (gas: 14)\n  4962: a0 = s1 + 0x7ff\n  4966: a0 = a0 + 0xb9\n  4970: u64 [a0 + 224] = 0\n  4974: u64 [a0 + 216] = 0\n  4978: u64 [a0 + 208] = 0\n  4982: u64 [a0 + 200] = 0\n  4986: a1 = s1 + 0x7ff\n  4990: a1 = a1 + 0x181\n  4994: a0 = t1\n  4996: u64 [s1 + 0x130] = t2\n  5000: u64 [s1 + 0x138] = a4\n  5004: u64 [s1 + 0x128] = t0\n  5008: u64 [s1 + 0x120] = ra\n  5012: ra = 130, jump @24\n      : @144 [@dyn 65] (gas: 15)\n  5018: t1 = u64 [s1 + 0xf8]\n  5022: t0 = u64 [s1 + 0x128]\n  5026: a4 = u64 [s1 + 0x138]\n  5030: t2 = u64 [s1 + 0x130]\n  5034: t2 = t2 + 0x1\n  5037: a0 = t2 <u 0x1\n  5040: a4 = a4 + a0\n  5043: a0 = t2 | a4\n  5046: a0 = a0 <u 0x1\n  5049: a1 = u64 [s1 + 0x120]\n  5053: a0 = a0 + a1\n  5056: a1 = a0 <u a1\n  5059: t0 = t0 + a1\n  5062: ra = a0\n  5064: jump @142\n      : @145 (gas: 9)\n  5067: a0 = u64 [s1 + 0xe8]\n  5071: a0 = a0 ^ 0x1\n  5074: a2 = u64 [s1 + 0xb8]\n  5078: a1 = u64 [s1 + 0xd8]\n  5082: a0 = a1 if a2 != 0\n  5085: a1 = u64 [s1 + 0xe0]\n  5089: a3 = u64 [s1 + 0xf0]\n  5093: a0 = a1 if a3 != 0\n  5096: jump @155 if a0 == 0\n      : @146 (gas: 10)\n  5100: a0 = u64 [s1 + 0xc0]\n  5104: a0 = a0 & 0xffffffffffffffe0\n  5107: u64 [s1 + 0xc8] = a0\n  5111: u64 [s1 + 1400] = 0\n  5115: u64 [s1 + 1392] = 0\n  5119: u64 [s1 + 1384] = 0\n  5123: a1 = s1 + 0x560\n  5127: u64 [s1 + 1376] = 0x4\n  5132: a0 = 0\n  5134: ra = 132, jump @19\n      : @147 [@dyn 66] (gas: 7)\n  5140: a0 = sp + 0xffffffffffffffe0\n  5143: a0 = a0 & 0xffffffffffffffe0\n  5146: u64 [s1 + 0x120] = a0\n  5150: sp = a0\n  5152: a1 = 0x20\n  5155: a0 = 0\n  5157: ra = 134, jump @33\n      : @148 [@dyn 67] (gas: 39)\n  5163: a1 = sp + 0xffffffffffffffe0\n  5166: a1 = a1 & 0xffffffffffffffe0\n  5169: u64 [s1 + 0x118] = a1\n  5173: sp = a1\n  5175: i32 a0 = a0 + 0\n  5177: i32 a2 = a1 + 0\n  5179: a1 = 0x20\n  5182: ecalli 6 // 'hash_keccak_256'\n  5184: u64 [s1 + 312] = 0x20\n  5189: a5 = 0\n  5191: u64 [s1 + 296] = 0\n  5195: u64 [s1 + 304] = 0\n  5199: a4 = 0\n  5201: a3 = 0\n  5203: a2 = 0\n  5205: t1 = 0\n  5207: a0 = u64 [s1 + 0x118]\n  5211: t0 = u64 [a0 + 0x18]\n  5214: a1 = u64 [a0 + 0x10]\n  5217: ra = u64 [a0 + 0x8]\n  5220: a0 = u64 [a0]\n  5222: u64 [s1 + 0x110] = a0\n  5226: a0 = reverse t0\n  5228: u64 [s1 + 0x118] = a0\n  5232: t2 = reverse a1\n  5234: t0 = reverse ra\n  5236: a0 = u64 [s1 + 0x110]\n  5240: a1 = reverse a0\n  5242: ra = a1\n  5244: a0 = u64 [s1 + 0x120]\n  5248: u64 [a0 + 0x18] = a1\n  5251: a1 = t0\n  5253: u64 [s1 + 0xd8] = a1\n  5257: u64 [a0 + 0x10] = a1\n  5260: u64 [s1 + 0x108] = t2\n  5264: u64 [a0 + 0x8] = t2\n  5267: a1 = u64 [s1 + 0x118]\n  5271: u64 [a0] = a1\n  5273: fallthrough\n      : @149 (gas: 24)\n  5274: u64 [s1 + 0x100] = ra\n  5278: a0 = u64 [s1 + 0xc8]\n  5282: u64 [s1 + 0xf0] = a4\n  5286: a0 = a4 <u a0\n  5289: a4 = a0 ^ 0x1\n  5292: u64 [s1 + 0xe8] = a3\n  5296: a4 = 0x1 if a3 != 0\n  5299: u64 [s1 + 0x110] = t1\n  5303: u64 [s1 + 0xf8] = a2\n  5307: a0 = a2 | t1\n  5310: a4 = 0x1 if a0 != 0\n  5313: a0 = u64 [s1 + 0xa0]\n  5317: a1 = u64 [s1 + 0x138]\n  5321: a1 = a1 + a0\n  5324: a3 = u64 [s1 + 0x90]\n  5328: u64 [s1 + 0xe0] = a5\n  5332: t0 = a3 + a5\n  5335: t2 = u64 [s1 + 0x98]\n  5339: a2 = u64 [s1 + 0x128]\n  5343: a2 = a2 + t2\n  5346: t1 = u64 [s1 + 0x88]\n  5350: a5 = u64 [s1 + 0x130]\n  5354: t1 = t1 + a5\n  5357: jump @157 if a4 != 0\n      : @150 (gas: 6)\n  5361: ra = a1 <u a0\n  5364: a4 = t0 + ra\n  5367: t0 = a4 ^ a3\n  5370: a5 = a4 <u a3\n  5373: a5 = ra if t0 == 0\n  5376: t0 = 136, jump @1360\n      : @151 [@dyn 68] (gas: 1)\n  5382: jump @216 if a0 != 0\n      : @152 (gas: 2)\n  5386: a0 = s1 + 0x260\n  5390: ra = 138, jump @17\n      : @153 [@dyn 69] (gas: 15)\n  5396: a4 = s1 + 0x200\n  5400: a0 = u64 [a4 + 0x78]\n  5403: a1 = u64 [a4 + 0x70]\n  5406: a2 = u64 [a4 + 0x68]\n  5409: a3 = u64 [a4 + 0x60]\n  5412: a4 = s1 + 0x7ff\n  5416: a4 = a4 + 0xb9\n  5420: u64 [a4 + 0x100] = a0\n  5424: u64 [a4 + 0xf8] = a1\n  5428: u64 [a4 + 0xf0] = a2\n  5432: u64 [a4 + 0xe8] = a3\n  5436: a1 = s1 + 0x7ff\n  5440: a1 = a1 + 0x1a1\n  5444: a0 = u64 [s1 + 0x120]\n  5448: ra = 140, jump @24\n      : @154 [@dyn 70] (gas: 54)\n  5454: ra = u64 [s1 + 0x118]\n  5458: ra = ra + 0x1\n  5461: a0 = ra <u 0x1\n  5464: a3 = u64 [s1 + 0x108]\n  5468: a3 = a3 + a0\n  5471: a0 = ra | a3\n  5474: a0 = a0 <u 0x1\n  5477: a1 = u64 [s1 + 0xd8]\n  5481: a0 = a0 + a1\n  5484: a1 = a0 <u a1\n  5487: t0 = u64 [s1 + 0x100]\n  5491: t0 = t0 + a1\n  5494: a1 = u64 [s1 + 0x138]\n  5498: a2 = a1 + 0x20\n  5501: u64 [s1 + 0x100] = a2\n  5505: a1 = a2 <u a1\n  5508: a2 = u64 [s1 + 0xe0]\n  5512: a4 = a2 + a1\n  5515: u64 [s1 + 0xd0] = a4\n  5519: a4 = a4 <u a2\n  5522: a4 = a1 if a1 == 0\n  5525: a1 = u64 [s1 + 0x128]\n  5529: t2 = a1 + a4\n  5532: a4 = t2 <u a1\n  5535: a1 = u64 [s1 + 0x130]\n  5539: a1 = a1 + a4\n  5542: u64 [s1 + 0x130] = a1\n  5546: a1 = u64 [s1 + 0xf0]\n  5550: a4 = a1 + 0x20\n  5553: a5 = a4 <u a1\n  5556: a2 = u64 [s1 + 0xe8]\n  5560: a1 = a2 + a5\n  5563: a2 = a1 <u a2\n  5566: a2 = a5 if a5 == 0\n  5569: a5 = u64 [s1 + 0xf8]\n  5573: a2 = a2 + a5\n  5576: a5 = a2 <u a5\n  5579: t1 = u64 [s1 + 0x110]\n  5583: t1 = t1 + a5\n  5586: u64 [s1 + 0x108] = a3\n  5590: a5 = u64 [s1 + 0x120]\n  5594: u64 [a5 + 0x8] = a3\n  5597: u64 [s1 + 0x118] = ra\n  5601: u64 [a5] = ra\n  5603: u64 [a5 + 0x10] = a0\n  5606: ra = t0\n  5608: u64 [a5 + 0x18] = t0\n  5611: u64 [s1 + 0xd8] = a0\n  5615: a0 = u64 [s1 + 0x100]\n  5619: u64 [s1 + 0x138] = a0\n  5623: a5 = u64 [s1 + 0xd0]\n  5627: u64 [s1 + 0x128] = t2\n  5631: a3 = a1\n  5633: jump @149\n      : @155 (gas: 7)\n  5636: a3 = u64 [s1 + 0xc0]\n  5640: a4 = u64 [s1 + 0xb0]\n  5644: a0 = a3 | a4\n  5647: a5 = u64 [s1 + 0xa8]\n  5651: a1 = a2 | a5\n  5654: a0 = a0 | a1\n  5657: jump @171 if a0 != 0\n      : @156 (gas: 5)\n  5661: u64 [s1 + 288] = 0\n  5665: u64 [s1 + 280] = 0\n  5669: u64 [s1 + 296] = 0\n  5673: u64 [s1 + 304] = 0\n  5677: jump @173\n      : @157 (gas: 12)\n  5680: a4 = u64 [s1 + 0xc8]\n  5684: a5 = u64 [s1 + 0xc0]\n  5688: a4 = a4 ^ a5\n  5691: ra = u64 [s1 + 0xb0]\n  5695: a4 = a4 | ra\n  5698: u64 [s1 + 0x138] = a4\n  5702: a5 = u64 [s1 + 0xb8]\n  5706: a4 = u64 [s1 + 0xa8]\n  5710: a5 = a5 | a4\n  5713: a4 = u64 [s1 + 0x138]\n  5717: a4 = a4 | a5\n  5720: jump @170 if a4 == 0\n      : @158 (gas: 6)\n  5724: ra = a1 <u a0\n  5727: a4 = t0 + ra\n  5730: t0 = a4 ^ a3\n  5733: a5 = a4 <u a3\n  5736: a5 = ra if t0 == 0\n  5739: t0 = 142, jump @1360\n      : @159 [@dyn 71] (gas: 1)\n  5745: jump @216 if a0 != 0\n      : @160 (gas: 2)\n  5749: a0 = s1 + 0x540\n  5753: ra = 144, jump @17\n      : @161 [@dyn 72] (gas: 11)\n  5759: a1 = s1 + 0x500\n  5763: a0 = u64 [a1 + 0x58]\n  5766: u64 [s1 + 0x130] = a0\n  5770: a0 = u64 [a1 + 0x50]\n  5773: u64 [s1 + 0x128] = a0\n  5777: a0 = u64 [a1 + 0x48]\n  5780: u64 [s1 + 0x118] = a0\n  5784: a0 = u64 [a1 + 0x40]\n  5787: u64 [s1 + 0x110] = a0\n  5791: a0 = u64 [s1 + 0xc0]\n  5795: t0 = 146, jump @1388\n      : @162 [@dyn 73] (gas: 1)\n  5801: ra = 148, jump @1404\n      : @163 [@dyn 74] (gas: 6)\n  5807: u64 [s1 + 0x108] = a0\n  5811: u64 [s1 + 0xf0] = a1\n  5815: a0 = 0xffffffffffffffff\n  5818: a1 = 0xffffffffffffffff\n  5821: a2 = u64 [s1 + 0x138]\n  5825: ra = 150, jump @1399\n      : @164 [@dyn 75] (gas: 1)\n  5831: t0 = 152, jump @1379\n      : @165 [@dyn 76] (gas: 1)\n  5837: ra = 154, jump @1399\n      : @166 [@dyn 77] (gas: 1)\n  5843: t0 = 156, jump @1342\n      : @167 [@dyn 78] (gas: 2)\n  5849: a2 = u64 [s1 + 0x118]\n  5853: t0 = 158, jump @1371\n      : @168 [@dyn 79] (gas: 9)\n  5859: a5 = a4 + 0x100\n  5863: u64 [a5 + 0x20] = a3\n  5866: u64 [a5 + 0x18] = a2\n  5869: u64 [a5 + 0x10] = a1\n  5872: u64 [a5 + 0x8] = a0\n  5875: a1 = s1 + 0x7ff\n  5879: a1 = a1 + 0x1c1\n  5883: a0 = u64 [s1 + 0x120]\n  5887: ra = 160, jump @24\n      : @169 [@dyn 80] (gas: 2)\n  5893: ra = u64 [s1 + 0xb0]\n  5897: fallthrough\n      : @170 (gas: 31)\n  5898: a0 = ra >> 0x3f\n  5901: a1 = u64 [s1 + 0xa8]\n  5905: a1 = a1 << 0x1\n  5908: a0 = a0 | a1\n  5911: a3 = u64 [s1 + 0xb8]\n  5915: a1 = a3 >> 0x3f\n  5918: a2 = ra << 0x1\n  5921: a1 = a1 | a2\n  5924: a4 = u64 [s1 + 0xc0]\n  5928: a2 = a4 >> 0x3f\n  5931: a3 = a3 << 0x1\n  5934: a2 = a2 | a3\n  5937: a3 = a4 << 0x1\n  5940: a3 = a3 + 0x1\n  5943: a5 = s1 + 0x7ff\n  5947: a5 = a5 + 0xb9\n  5951: u64 [a5 + 320] = 0\n  5955: u64 [a5 + 312] = 0\n  5959: u64 [a5 + 304] = 0\n  5963: u64 [a5 + 296] = 0x4\n  5968: a4 = a5 + 0x100\n  5972: u64 [a4 + 0x48] = a3\n  5975: u64 [a4 + 0x50] = a2\n  5978: u64 [a4 + 0x58] = a1\n  5981: u64 [a4 + 0x60] = a0\n  5984: a0 = s1 + 0x7ff\n  5988: a0 = a0 + 0x1e1\n  5992: a1 = s1 + 0x7ff\n  5996: a1 = a1 + 0x201\n  6000: ra = 0xb0\n  6004: jump @24\n      : @171 (gas: 3)\n  6007: a0 = s1 + 0x580\n  6011: a1 = u64 [s1 + 0x18]\n  6014: ra = 162, jump @17\n      : @172 [@dyn 81] (gas: 14)\n  6020: a5 = u64 [s1 + 0xa8]\n  6024: a4 = u64 [s1 + 0xb0]\n  6028: a2 = u64 [s1 + 0xb8]\n  6032: a3 = u64 [s1 + 0xc0]\n  6036: a1 = s1 + 0x500\n  6040: a0 = u64 [a1 + 0x98]\n  6044: u64 [s1 + 0x130] = a0\n  6048: a0 = u64 [a1 + 0x90]\n  6052: u64 [s1 + 0x128] = a0\n  6056: a0 = u64 [a1 + 0x88]\n  6060: u64 [s1 + 0x118] = a0\n  6064: a0 = u64 [a1 + 0x80]\n  6068: u64 [s1 + 0x120] = a0\n  6072: fallthrough\n      : @173 (gas: 15)\n  6073: a0 = a2 >> 0x3f\n  6076: a1 = a4 << 0x1\n  6079: a0 = a0 | a1\n  6082: u64 [s1 + 0x110] = a0\n  6086: a0 = a4 >> 0x3f\n  6089: a1 = a5 << 0x1\n  6092: a0 = a0 | a1\n  6095: u64 [s1 + 0x108] = a0\n  6099: a0 = a3 >> 0x3f\n  6102: a1 = a2 << 0x1\n  6105: a0 = a0 | a1\n  6108: u64 [s1 + 0x100] = a0\n  6112: a0 = a3 << 0x1\n  6115: u64 [s1 + 0xf8] = a0\n  6119: t0 = 164, jump @1394\n      : @174 [@dyn 82] (gas: 1)\n  6125: ra = 166, jump @1404\n      : @175 [@dyn 83] (gas: 7)\n  6131: u64 [s1 + 0xd8] = a0\n  6135: u64 [s1 + 0xf0] = a1\n  6139: a0 = u64 [s1 + 0xc0]\n  6143: i32 a2 = a0 << 0x3\n  6146: a0 = 0xffffffffffffffff\n  6149: a1 = 0xffffffffffffffff\n  6152: ra = 168, jump @1399\n      : @176 [@dyn 84] (gas: 10)\n  6158: u64 [s1 + 0xe8] = a0\n  6162: u64 [s1 + 0xe0] = a1\n  6166: a1 = u64 [s1 + 0xd8]\n  6170: a0 = a0 | a1\n  6173: u64 [s1 + 0xd8] = a0\n  6177: a0 = u64 [s1 + 0x138]\n  6181: i32 a2 = a0 + 0xffffffffffffff80\n  6184: a0 = 0xffffffffffffffff\n  6187: a1 = 0xffffffffffffffff\n  6190: ra = 170, jump @1399\n      : @177 [@dyn 85] (gas: 7)\n  6196: a4 = u64 [s1 + 0x138]\n  6200: a2 = a4 <u 0x80\n  6204: a3 = u64 [s1 + 0xd8]\n  6208: a0 = a3 if a2 != 0\n  6211: a5 = u64 [s1 + 0xe0]\n  6215: a3 = u64 [s1 + 0xf0]\n  6219: t0 = 172, jump @1396\n      : @178 [@dyn 86] (gas: 2)\n  6225: a4 = u64 [s1 + 0xe8]\n  6229: t0 = 174, jump @1356\n      : @179 [@dyn 87] (gas: 25)\n  6235: a4 = u64 [s1 + 0xf8]\n  6239: a0 = a0 | a4\n  6242: a5 = s1 + 0x100\n  6246: a4 = u64 [a5]\n  6248: a1 = a1 | a4\n  6251: a4 = u64 [a5 + 0x8]\n  6254: a3 = a3 | a4\n  6257: a4 = u64 [a5 + 0x10]\n  6260: a2 = a2 | a4\n  6263: a5 = s1 + 0x7ff\n  6267: a5 = a5 + 0xb9\n  6271: u64 [a5 + 360] = 0x4\n  6276: a4 = a5 + 0x100\n  6280: u64 [a4 + 0x98] = a2\n  6284: u64 [a4 + 0xa0] = a3\n  6288: u64 [a4 + 0x90] = a1\n  6292: u64 [a4 + 0x88] = a0\n  6296: u64 [a5 + 384] = 0\n  6300: u64 [a5 + 376] = 0\n  6304: u64 [a5 + 368] = 0\n  6308: a0 = s1 + 0x7ff\n  6312: a0 = a0 + 0x221\n  6316: a1 = s1 + 0x7ff\n  6320: a1 = a1 + 0x241\n  6324: ra = 176, jump @24\n      : @180 [@dyn 88] (gas: 8)\n  6330: a0 = 0x30280\n  6335: u64 [s1 + 0x138] = a0\n  6339: i32 a0 = a0 + 0\n  6341: u64 [s1 + 0x130] = a0\n  6345: ra = 0xb2\n  6349: ecalli 3 // 'caller'\n  6351: t0 = 0xb4\n  6355: jump @1324\n      : @181 [@dyn 89] (gas: 1)\n  6358: t0 = 180, jump @1324\n      : @182 [@dyn 90] (gas: 8)\n  6364: u64 [s1 + 1304] = 0\n  6368: a2 = s1 + 0x500\n  6372: u64 [a2 + 0x10] = a1\n  6375: u64 [a2 + 0x8] = a0\n  6378: a0 = s1 + 0x520\n  6382: a1 = s1 + 0x500\n  6386: u64 [a2] = a3\n  6388: ra = 182, jump @868\n      : @183 [@dyn 91] (gas: 5)\n  6394: a0 = u64 [s1 + 0x130]\n  6398: ra = 0xb8\n  6402: ecalli 3 // 'caller'\n  6404: t0 = 0xba\n  6408: jump @1324\n      : @184 [@dyn 92] (gas: 1)\n  6411: t0 = 186, jump @1324\n      : @185 [@dyn 93] (gas: 9)\n  6417: u64 [s1 + 1240] = 0\n  6421: u64 [s1 + 0x4d0] = a1\n  6425: u64 [s1 + 0x4c8] = a0\n  6429: a0 = s1 + 0x4e0\n  6433: a1 = s1 + 0x4c0\n  6437: u64 [s1 + 0x4c0] = a3\n  6441: ra = 0xbc\n  6445: t0 = 0x358\n  6449: jump @1358\n      : @186 [@dyn 94] (gas: 5)\n  6452: a0 = u64 [s1 + 0x130]\n  6456: ra = 0xbe\n  6460: ecalli 3 // 'caller'\n  6462: t0 = 0xc0\n  6466: jump @1324\n      : @187 [@dyn 95] (gas: 1)\n  6469: t0 = 192, jump @1324\n      : @188 [@dyn 96] (gas: 10)\n  6475: u64 [s1 + 1176] = 0\n  6479: a2 = s1 + 0x400\n  6483: u64 [a2 + 0x90] = a1\n  6487: u64 [a2 + 0x88] = a0\n  6491: a0 = s1 + 0x4a0\n  6495: a1 = s1 + 0x480\n  6499: u64 [a2 + 0x80] = a3\n  6503: ra = 0xc2\n  6507: t0 = 0x39e\n  6511: jump @1358\n      : @189 [@dyn 97] (gas: 3)\n  6514: a0 = u64 [s1 + 0x130]\n  6518: ecalli 3 // 'caller'\n  6520: fallthrough\n      : @190 (gas: 7)\n  6521: a2 = u64 [s1 + 0x138]\n  6525: a0 = u32 [a2 + 0x10]\n  6528: a1 = u64 [a2]\n  6530: a2 = u64 [a2 + 0x8]\n  6533: a0 = a0 | a1\n  6536: a0 = a0 | a2\n  6539: jump @243 if a0 == 0\n      : @191 (gas: 10)\n  6543: a1 = s1 + 0x7ff\n  6547: a1 = a1 + 0xb9\n  6551: u64 [a1 + 448] = 0\n  6555: u64 [a1 + 440] = 0\n  6559: u64 [a1 + 432] = 0\n  6563: u64 [a1 + 424] = 0x5\n  6568: a0 = s1 + 0x460\n  6572: a1 = s1 + 0x7ff\n  6576: a1 = a1 + 0x261\n  6580: ra = 196, jump @21\n      : @192 [@dyn 98] (gas: 2)\n  6586: a0 = u8 [s1 + 0x460]\n  6590: jump @248 if a0 != 0\n      : @193 (gas: 10)\n  6594: a0 = s1 + 0x7ff\n  6598: a0 = a0 + 0xb9\n  6602: u64 [a0 + 480] = 0\n  6606: u64 [a0 + 472] = 0\n  6610: u64 [a0 + 464] = 0\n  6614: u64 [a0 + 456] = 0x2\n  6619: a0 = s1 + 0x420\n  6623: a1 = s1 + 0x7ff\n  6627: a1 = a1 + 0x281\n  6631: ra = 198, jump @21\n      : @194 [@dyn 99] (gas: 43)\n  6637: t2 = u64 [s1 + 0x438]\n  6641: t1 = u64 [s1 + 0x430]\n  6645: ra = u64 [s1 + 0x420]\n  6649: u64 [s1 + 0x128] = ra\n  6653: a5 = u64 [s1 + 0x428]\n  6657: a1 = sp + 0xffffffffffffffe0\n  6660: a1 = a1 & 0xffffffffffffffe0\n  6663: sp = a1\n  6665: a2 = u64 [s1 + 0x70]\n  6668: a4 = a2 + a5\n  6671: a0 = u64 [s1 + 0x68]\n  6674: ra = ra + a0\n  6677: a0 = ra <u a0\n  6680: a4 = a4 + a0\n  6683: a3 = a4 ^ a2\n  6686: a2 = a4 <u a2\n  6689: a2 = a0 if a3 == 0\n  6692: t0 = u64 [s1 + 0x78]\n  6695: a0 = t0 + t1\n  6698: a3 = u64 [s1 + 0x80]\n  6702: a3 = a3 + t2\n  6705: t0 = a0 <u t0\n  6708: a3 = a3 + t0\n  6711: a2 = a2 + a0\n  6714: a0 = a2 <u a0\n  6717: t0 = a3 + a0\n  6720: a0 = a5 ^ a4\n  6723: a5 = a4 <u a5\n  6726: a3 = u64 [s1 + 0x128]\n  6730: a3 = ra <u a3\n  6733: a3 = a5 if a0 != 0\n  6736: a0 = a2 <u t1\n  6739: a5 = t2 ^ t0\n  6742: t2 = t0 <u t2\n  6745: t2 = a0 if a5 == 0\n  6748: a0 = t1 ^ a2\n  6751: a0 = a0 | a5\n  6754: a3 = t2 if a0 != 0\n  6757: u64 [a1 + 0x10] = a2\n  6760: u64 [a1 + 0x8] = a4\n  6763: u64 [a1] = ra\n  6765: u64 [a1 + 0x18] = t0\n  6768: jump @252 if a3 != 0\n      : @195 (gas: 9)\n  6772: a0 = s1 + 0x7ff\n  6776: a0 = a0 + 0xb9\n  6780: u64 [a0 + 512] = 0\n  6784: u64 [a0 + 504] = 0\n  6788: u64 [a0 + 496] = 0\n  6792: u64 [a0 + 488] = 0x2\n  6797: a0 = s1 + 0x7ff\n  6801: a0 = a0 + 0x2a1\n  6805: ra = 200, jump @24\n      : @196 [@dyn 100] (gas: 5)\n  6811: a0 = u64 [s1 + 0x130]\n  6815: ra = 0xca\n  6819: ecalli 3 // 'caller'\n  6821: t0 = 0xcc\n  6825: jump @1324\n      : @197 [@dyn 101] (gas: 1)\n  6828: t0 = 204, jump @1324\n      : @198 [@dyn 102] (gas: 8)\n  6834: u64 [s1 + 1048] = 0\n  6838: a2 = s1 + 0x400\n  6842: u64 [a2 + 0x10] = a1\n  6845: u64 [a2 + 0x8] = a0\n  6848: a1 = s1 + 0x400\n  6852: u64 [a2] = a3\n  6854: a0 = 0\n  6856: ra = 206, jump @19\n      : @199 [@dyn 103] (gas: 7)\n  6862: u64 [s1 + 1016] = 0\n  6866: u64 [s1 + 1008] = 0\n  6870: u64 [s1 + 1000] = 0\n  6874: a0 = 0x20\n  6877: a1 = s1 + 0x3e0\n  6881: u64 [s1 + 992] = 0\n  6885: ra = 208, jump @19\n      : @200 [@dyn 104] (gas: 6)\n  6891: a0 = sp + 0xffffffffffffffe0\n  6894: a0 = a0 & 0xffffffffffffffe0\n  6897: u64 [s1 + 0x128] = a0\n  6901: sp = a0\n  6903: a1 = i32 [0x2026c]\n  6908: jump @202 if a1 >u 63\n      : @201 (gas: 2)\n  6912: u32 [0x2026c] = 0x40\n  6918: fallthrough\n      : @202 (gas: 13)\n  6919: a0 = sp + 0xffffffffffffffe0\n  6922: a2 = a0 & 0xffffffffffffffe0\n  6925: u64 [s1 + 0x120] = a2\n  6929: sp = a2\n  6931: a0 = 0x20280\n  6936: i32 a0 = a0 + 0\n  6938: i32 a2 = a2 + 0\n  6940: a1 = 0x40\n  6943: ra = 0xd2\n  6947: ecalli 6 // 'hash_keccak_256'\n  6949: a3 = u64 [s1 + 0x120]\n  6953: t0 = 0xd4\n  6957: jump @1330\n      : @203 [@dyn 105] (gas: 2)\n  6960: a3 = u64 [s1 + 0x120]\n  6964: t0 = 212, jump @1330\n      : @204 [@dyn 106] (gas: 7)\n  6970: a1 = u64 [s1 + 0x128]\n  6974: u64 [a1 + 0x18] = a3\n  6977: u64 [a1 + 0x10] = a2\n  6980: u64 [a1 + 0x8] = a4\n  6983: u64 [a1] = a0\n  6985: a0 = s1 + 0x3c0\n  6989: ra = 214, jump @21\n      : @205 [@dyn 107] (gas: 33)\n  6995: a0 = u64 [s1 + 0x3c8]\n  6999: a1 = u64 [s1 + 0x3c0]\n  7003: t0 = u64 [s1 + 0x3d8]\n  7007: a3 = u64 [s1 + 0x3d0]\n  7011: a4 = u64 [s1 + 0x70]\n  7014: a4 = a4 + a0\n  7017: a5 = u64 [s1 + 0x68]\n  7020: a5 = a5 + a1\n  7023: a1 = a5 <u a1\n  7026: a4 = a4 + a1\n  7029: a2 = a4 ^ a0\n  7032: a0 = a4 <u a0\n  7035: a0 = a1 if a2 == 0\n  7038: a1 = u64 [s1 + 0x78]\n  7041: a1 = a1 + a3\n  7044: a2 = u64 [s1 + 0x80]\n  7048: t0 = t0 + a2\n  7051: a2 = a1 <u a3\n  7054: a2 = a2 + t0\n  7057: a0 = a0 + a1\n  7060: a1 = a0 <u a1\n  7063: a1 = a1 + a2\n  7066: a2 = s1 + 0x7ff\n  7070: a2 = a2 + 0xb9\n  7074: a3 = a2 + 0x200\n  7078: u64 [a3 + 0x8] = a5\n  7081: u64 [a3 + 0x10] = a4\n  7084: u64 [a3 + 0x18] = a0\n  7087: u64 [a3 + 0x20] = a1\n  7090: a1 = s1 + 0x7ff\n  7094: a1 = a1 + 0x2c1\n  7098: a0 = u64 [s1 + 0x128]\n  7102: ra = 216, jump @24\n      : @206 [@dyn 108] (gas: 3)\n  7108: a0 = s1 + 0x3a0\n  7112: a1 = 0x40\n  7115: ra = 218, jump @17\n      : @207 [@dyn 109] (gas: 6)\n  7121: a4 = s1 + 0x300\n  7125: a3 = u64 [a4 + 0xb8]\n  7129: a1 = u64 [a4 + 0xb0]\n  7133: a2 = u64 [a4 + 0xa8]\n  7137: a0 = u64 [a4 + 0xa0]\n  7141: t0 = 220, jump @1332\n      : @208 [@dyn 110] (gas: 1)\n  7147: jump @216 if a1 != 0\n      : @209 (gas: 11)\n  7151: a1 = u64 [s1 + 0x68]\n  7154: u64 [s1 + 0x380] = a1\n  7158: a1 = u64 [s1 + 0x70]\n  7161: u64 [s1 + 0x388] = a1\n  7165: a1 = u64 [s1 + 0x78]\n  7168: u64 [s1 + 0x390] = a1\n  7172: a1 = s1 + 0x380\n  7176: a2 = u64 [s1 + 0x80]\n  7180: u64 [s1 + 0x398] = a2\n  7184: u64 [s1 + 0x128] = a0\n  7188: ra = 222, jump @19\n      : @210 [@dyn 111] (gas: 6)\n  7194: a0 = u64 [s1 + 0x130]\n  7198: ra = 0xe0\n  7202: ecalli 3 // 'caller'\n  7204: a2 = u64 [s1 + 0x138]\n  7208: t0 = 0xe2\n  7212: jump @1325\n      : @211 [@dyn 112] (gas: 2)\n  7215: a2 = u64 [s1 + 0x138]\n  7219: t0 = 226, jump @1325\n      : @212 [@dyn 113] (gas: 28)\n  7225: t0 = a1 | a0\n  7228: a3 = a3 >> 0x20\n  7231: a2 = reverse a2\n  7233: a1 = a2 << 0x20\n  7236: a1 = a1 | a3\n  7239: a2 = a2 >> 0x20\n  7242: u64 [s1 + 824] = 0\n  7246: u64 [s1 + 856] = 0\n  7250: u64 [s1 + 848] = 0\n  7254: u64 [s1 + 840] = 0\n  7258: u64 [s1 + 832] = 0\n  7262: a3 = u64 [0x20008]\n  7267: a4 = u64 [0x20010]\n  7272: a5 = u64 [0x20018]\n  7277: a0 = u64 [0x20020]\n  7282: u64 [s1 + 0x378] = a3\n  7286: u64 [s1 + 0x370] = a4\n  7290: u64 [s1 + 0x368] = a5\n  7294: u64 [s1 + 0x360] = a0\n  7298: u64 [s1 + 0x330] = a2\n  7302: u64 [s1 + 0x328] = a1\n  7306: a1 = 0x20\n  7309: a2 = s1 + 0x360\n  7313: a3 = s1 + 0x340\n  7317: a4 = s1 + 0x320\n  7321: u64 [s1 + 0x320] = t0\n  7325: a0 = u64 [s1 + 0x128]\n  7329: ra = 228, jump @27\n      : @213 [@dyn 114] (gas: 3)\n  7335: a0 = s1 + 0x300\n  7339: a1 = 0x40\n  7342: ra = 230, jump @17\n      : @214 [@dyn 115] (gas: 6)\n  7348: a4 = s1 + 0x300\n  7352: a3 = u64 [a4 + 0x18]\n  7355: a1 = u64 [a4 + 0x10]\n  7358: a2 = u64 [a4 + 0x8]\n  7361: a0 = u64 [a4]\n  7363: t0 = 232, jump @1332\n      : @215 [@dyn 116] (gas: 1)\n  7369: jump @259 if a1 == 0\n      : @216 (gas: 1)\n  7373: trap\n      : @217 (gas: 6)\n  7374: a1 = 0x20280\n  7379: i32 a1 = a1 + 0\n  7381: a0 = 0x1\n  7384: a2 = 0\n  7386: ecalli 7 // 'seal_return'\n  7388: jump @219\n      : @218 (gas: 6)\n  7390: a1 = 0x20280\n  7395: i32 a1 = a1 + 0\n  7397: a0 = 0x1\n  7400: a2 = 0\n  7402: ecalli 7 // 'seal_return'\n  7404: fallthrough\n      : @219 (gas: 6)\n  7405: u64 [s1 + 368] = 0\n  7409: u64 [s1 + 360] = 0\n  7413: u64 [s1 + 352] = 0\n  7417: t0 = 0xea\n  7421: a0 = 0x4e487b7100000000\n  7431: fallthrough\n      : @220 [@dyn 117] (gas: 4)\n  7432: a1 = s1 + 0x160\n  7436: u64 [s1 + 0x178] = a0\n  7440: a0 = 0\n  7442: ra = 236, jump @19\n      : @221 [@dyn 118] (gas: 7)\n  7448: u64 [s1 + 344] = 0\n  7452: u64 [s1 + 336] = 0\n  7456: u64 [s1 + 320] = 0x41\n  7461: a0 = 0x4\n  7464: a1 = s1 + 0x140\n  7468: u64 [s1 + 328] = 0\n  7472: ra = 238, jump @19\n      : @222 [@dyn 119] (gas: 2)\n  7478: a1 = i32 [0x2026c]\n  7483: jump @224 if a1 >u 63\n      : @223 (gas: 3)\n  7487: u32 [0x2026c] = 0x40\n  7493: a1 = 0x20280\n  7498: jump @258\n      : @224 (gas: 2)\n  7501: a1 = 0x20280\n  7506: jump @258\n      : @225 (gas: 6)\n  7509: u64 [s1 + 432] = 0\n  7513: u64 [s1 + 424] = 0\n  7517: u64 [s1 + 416] = 0\n  7521: t0 = 0xf0\n  7525: a0 = 0x4e487b7100000000\n  7535: fallthrough\n      : @226 [@dyn 120] (gas: 4)\n  7536: a1 = s1 + 0x1a0\n  7540: u64 [s1 + 0x1b8] = a0\n  7544: a0 = 0\n  7546: ra = 242, jump @19\n      : @227 [@dyn 121] (gas: 7)\n  7552: u64 [s1 + 408] = 0\n  7556: u64 [s1 + 400] = 0\n  7560: u64 [s1 + 384] = 0x22\n  7565: a0 = 0x4\n  7568: a1 = s1 + 0x180\n  7572: u64 [s1 + 392] = 0\n  7576: ra = 244, jump @19\n      : @228 [@dyn 122] (gas: 2)\n  7582: a1 = i32 [0x2026c]\n  7587: jump @230 if a1 >u 63\n      : @229 (gas: 3)\n  7591: u32 [0x2026c] = 0x40\n  7597: a1 = 0x20280\n  7602: jump @258\n      : @230 (gas: 2)\n  7605: a1 = 0x20280\n  7610: jump @258\n      : @231 (gas: 6)\n  7613: u64 [s1 + 528] = 0\n  7617: u64 [s1 + 520] = 0\n  7621: u64 [s1 + 512] = 0\n  7625: t0 = 0xf6\n  7629: a0 = 0x4e487b7100000000\n  7639: fallthrough\n      : @232 [@dyn 123] (gas: 4)\n  7640: a1 = s1 + 0x200\n  7644: u64 [s1 + 0x218] = a0\n  7648: a0 = 0\n  7650: ra = 248, jump @19\n      : @233 [@dyn 124] (gas: 7)\n  7656: u64 [s1 + 504] = 0\n  7660: u64 [s1 + 496] = 0\n  7664: u64 [s1 + 480] = 0x41\n  7669: a0 = 0x4\n  7672: a1 = s1 + 0x1e0\n  7676: u64 [s1 + 488] = 0\n  7680: ra = 250, jump @19\n      : @234 [@dyn 125] (gas: 2)\n  7686: a1 = i32 [0x2026c]\n  7691: jump @236 if a1 >u 63\n      : @235 (gas: 3)\n  7695: u32 [0x2026c] = 0x40\n  7701: a1 = 0x20280\n  7706: jump @258\n      : @236 (gas: 2)\n  7709: a1 = 0x20280\n  7714: jump @258\n      : @237 (gas: 6)\n  7717: u64 [s1 + 592] = 0\n  7721: u64 [s1 + 584] = 0\n  7725: u64 [s1 + 576] = 0\n  7729: t0 = 0xfc\n  7733: a0 = 0x4e487b7100000000\n  7743: fallthrough\n      : @238 [@dyn 126] (gas: 4)\n  7744: a1 = s1 + 0x240\n  7748: u64 [s1 + 0x258] = a0\n  7752: a0 = 0\n  7754: ra = 254, jump @19\n      : @239 [@dyn 127] (gas: 7)\n  7760: u64 [s1 + 568] = 0\n  7764: u64 [s1 + 560] = 0\n  7768: u64 [s1 + 544] = 0x22\n  7773: a0 = 0x4\n  7776: a1 = s1 + 0x220\n  7780: u64 [s1 + 552] = 0\n  7784: ra = 256, jump @19\n      : @240 [@dyn 128] (gas: 2)\n  7790: a1 = i32 [0x2026c]\n  7795: jump @242 if a1 >u 63\n      : @241 (gas: 3)\n  7799: u32 [0x2026c] = 0x40\n  7805: a1 = 0x20280\n  7810: jump @258\n      : @242 (gas: 2)\n  7813: a1 = 0x20280\n  7818: jump @258\n      : @243 (gas: 8)\n  7821: u64 [s1 + 688] = 0\n  7825: u64 [s1 + 680] = 0\n  7829: u64 [s1 + 672] = 0\n  7833: a0 = 0xec442f0500000000\n  7843: a1 = s1 + 0x2a0\n  7847: u64 [s1 + 0x2b8] = a0\n  7851: a0 = 0\n  7853: ra = 258, jump @19\n      : @244 [@dyn 129] (gas: 7)\n  7859: u64 [s1 + 664] = 0\n  7863: u64 [s1 + 656] = 0\n  7867: u64 [s1 + 648] = 0\n  7871: a0 = 0x4\n  7874: a1 = s1 + 0x280\n  7878: u64 [s1 + 640] = 0\n  7882: ra = 260, jump @19\n      : @245 [@dyn 130] (gas: 2)\n  7888: a1 = i32 [0x2026c]\n  7893: jump @247 if a1 >u 63\n      : @246 (gas: 3)\n  7897: u32 [0x2026c] = 0x40\n  7903: a1 = 0x20280\n  7908: jump @258\n      : @247 (gas: 2)\n  7911: a1 = 0x20280\n  7916: jump @258\n      : @248 (gas: 8)\n  7919: u64 [s1 + 1104] = 0\n  7923: u64 [s1 + 1096] = 0\n  7927: u64 [s1 + 1088] = 0\n  7931: a0 = 0xd93c066500000000\n  7941: a1 = s1 + 0x440\n  7945: u64 [s1 + 0x458] = a0\n  7949: a0 = 0\n  7951: ra = 262, jump @19\n      : @249 [@dyn 131] (gas: 2)\n  7957: a1 = i32 [0x2026c]\n  7962: jump @251 if a1 >u 31\n      : @250 (gas: 2)\n  7966: u32 [0x2026c] = 0x20\n  7972: fallthrough\n      : @251 (gas: 6)\n  7973: a1 = 0x20280\n  7978: i32 a1 = a1 + 0\n  7980: a0 = 0x1\n  7983: a2 = 0x4\n  7986: ecalli 7 // 'seal_return'\n  7988: fallthrough\n      : @252 (gas: 6)\n  7989: u64 [s1 + 752] = 0\n  7993: u64 [s1 + 744] = 0\n  7997: u64 [s1 + 736] = 0\n  8001: t0 = 0x108\n  8005: a0 = 0x4e487b7100000000\n  8015: fallthrough\n      : @253 [@dyn 132] (gas: 4)\n  8016: a1 = s1 + 0x2e0\n  8020: u64 [s1 + 0x2f8] = a0\n  8024: a0 = 0\n  8026: ra = 266, jump @19\n      : @254 [@dyn 133] (gas: 7)\n  8032: u64 [s1 + 728] = 0\n  8036: u64 [s1 + 720] = 0\n  8040: u64 [s1 + 704] = 0x11\n  8045: a0 = 0x4\n  8048: a1 = s1 + 0x2c0\n  8052: u64 [s1 + 712] = 0\n  8056: ra = 268, jump @19\n      : @255 [@dyn 134] (gas: 2)\n  8062: a1 = i32 [0x2026c]\n  8067: jump @257 if a1 >u 63\n      : @256 (gas: 3)\n  8071: u32 [0x2026c] = 0x40\n  8077: a1 = 0x20280\n  8082: jump @258\n      : @257 (gas: 2)\n  8084: a1 = 0x20280\n  8089: fallthrough\n      : @258 (gas: 7)\n  8090: i32 a1 = a1 + 0\n  8092: a0 = 0x1\n  8095: a2 = 0x24\n  8098: ecalli 7 // 'seal_return'\n  8100: u64 [s1 + 0x138] = a0\n  8104: ra = 0x10e\n  8108: jump @33\n      : @259 (gas: 2)\n  8111: u64 [s1 + 0x138] = a0\n  8115: ra = 270, jump @33\n      : @260 [@dyn 135] (gas: 5)\n  8121: i32 a0 = a0 + 0\n  8123: a1 = 0\n  8125: a2 = 0\n  8127: ecalli 0 // 'call_data_copy'\n  8128: jump @15\n      : @261 (gas: 3)\n  8131: a0 = u64 [s1 + 0x138]\n  8135: a1 = 0\n  8137: ra = 272, jump @33\n      : @262 [@dyn 136] (gas: 5)\n  8143: i32 a1 = a0 + 0\n  8145: a0 = 0\n  8147: a2 = 0\n  8149: ecalli 7 // 'seal_return'\n  8151: jump @219\n      : @263 [@dyn 137] (gas: 4)\n  8154: a0 = 0x20268\n  8159: u64 [s1 + 0xb8] = a0\n  8163: a0 = i32 [0x20268]\n  8168: jump @265 if a0 >=u 4\n      : @264 (gas: 1)\n  8172: jump @823\n      : @265 (gas: 6)\n  8175: a0 = s1 + 0x1000\n  8179: i32 a0 = a0 + 0x520\n  8183: a1 = 0\n  8185: ra = 0x114\n  8189: ecalli 1 // 'call_data_load'\n  8191: fallthrough\n      : @266 [@dyn 138] (gas: 3)\n  8192: a2 = s1 + 0x1038\n  8196: a0 = i32 [a2 + 0x504]\n  8200: jump @268 if a0 != 2220280665\n      : @267 (gas: 1)\n  8207: jump @557\n      : @268 (gas: 1)\n  8210: jump @304 if a0 == 2446411860\n      : @269 (gas: 1)\n  8218: jump @271 if a0 != 2514000705\n      : @270 (gas: 1)\n  8225: jump @474\n      : @271 (gas: 1)\n  8228: jump @332 if a0 == 2719481311\n      : @272 (gas: 1)\n  8236: jump @274 if a0 != 2835717307\n      : @273 (gas: 1)\n  8243: jump @591\n      : @274 (gas: 1)\n  8246: jump @384 if a0 == 3577287571\n      : @275 (gas: 1)\n  8254: jump @344 if a0 == 3714247998\n      : @276 (gas: 1)\n  8262: jump @278 if a0 != 3862606313\n      : @277 (gas: 1)\n  8269: jump @618\n      : @278 (gas: 1)\n  8272: jump @395 if a0 == 117300739\n      : @279 (gas: 1)\n  8280: jump @281 if a0 != 157198259\n      : @280 (gas: 1)\n  8287: jump @625\n      : @281 (gas: 1)\n  8290: jump @283 if a0 != 404098525\n      : @282 (gas: 1)\n  8297: jump @528\n      : @283 (gas: 1)\n  8300: jump @285 if a0 != 599290589\n      : @284 (gas: 1)\n  8307: jump @605\n      : @285 (gas: 1)\n  8310: jump @287 if a0 != 613063843\n      : @286 (gas: 1)\n  8317: jump @577\n      : @287 (gas: 1)\n  8320: jump @372 if a0 == 826074471\n      : @288 (gas: 1)\n  8328: jump @290 if a0 != 1061922874\n      : @289 (gas: 1)\n  8335: jump @510\n      : @290 (gas: 1)\n  8338: jump @427 if a0 == 1086394137\n      : @291 (gas: 1)\n  8346: jump @293 if a0 == 1553423035\n      : @292 (gas: 1)\n  8353: jump @538\n      : @293 (gas: 9)\n  8356: a0 = s1 + 0x1838\n  8360: u64 [a0 + 160] = 0\n  8364: u64 [a0 + 152] = 0\n  8368: u64 [a0 + 144] = 0\n  8372: u64 [a0 + 136] = 0\n  8376: a0 = s1 + 0x2000\n  8380: i32 a0 = a0 + 0xfffffffffffff8c0\n  8384: ecalli 10 // 'value_transferred'\n  8386: fallthrough\n      : @294 (gas: 9)\n  8387: a3 = s1 + 0x1838\n  8391: a0 = u64 [a3 + 0x98]\n  8395: a1 = u64 [a3 + 0xa0]\n  8399: a2 = u64 [a3 + 0x90]\n  8403: a3 = u64 [a3 + 0x88]\n  8407: a1 = a1 | a2\n  8410: a0 = a0 | a3\n  8413: a0 = a0 | a1\n  8416: jump @296 if a0 == 0\n      : @295 (gas: 1)\n  8419: jump @681\n      : @296 (gas: 3)\n  8422: a0 = u64 [s1 + 0xb8]\n  8426: a0 = i32 [a0]\n  8428: jump @298 if a0 >u 3\n      : @297 (gas: 1)\n  8432: jump @682\n      : @298 (gas: 9)\n  8435: a1 = s1 + 0x1838\n  8439: u64 [a1 + 192] = 0\n  8443: u64 [a1 + 184] = 0\n  8447: u64 [a1 + 176] = 0\n  8451: u64 [a1 + 168] = 0x5\n  8456: a0 = s1 + 0x7ff\n  8460: a0 = a0 + 0x481\n  8464: a1 = s1 + 0x18e0\n  8468: ra = 278, jump @21\n      : @299 [@dyn 139] (gas: 8)\n  8474: a0 = s1 + 0x7ff\n  8478: a0 = a0 + 0x39\n  8481: a0 = u64 [a0 + 0x448]\n  8485: u64 [s1 + 0xb8] = a0\n  8489: a0 = s1 + 0x7ff\n  8493: a0 = a0 + 0x461\n  8497: a1 = 0x40\n  8500: ra = 280, jump @17\n      : @300 [@dyn 140] (gas: 8)\n  8506: a3 = s1 + 0x7ff\n  8510: a3 = a3 + 0x39\n  8513: a5 = a3 + 0x400\n  8517: a4 = u64 [a5 + 0x40]\n  8520: a1 = u64 [a5 + 0x38]\n  8523: a2 = u64 [a5 + 0x30]\n  8526: a0 = u64 [a5 + 0x28]\n  8529: t0 = 282, jump @1341\n      : @301 [@dyn 141] (gas: 1)\n  8535: jump @303 if a1 == 0\n      : @302 (gas: 1)\n  8538: jump @654\n      : @303 (gas: 11)\n  8541: a1 = u8 [s1 + 0xb8]\n  8545: a1 = a1 >u 0\n  8547: u64 [a3 + 1056] = 0\n  8551: u64 [a3 + 1048] = 0\n  8555: u64 [a3 + 0x408] = a1\n  8559: a1 = s1 + 0x7ff\n  8563: a1 = a1 + 0x441\n  8567: u64 [a3 + 1040] = 0\n  8571: u64 [s1 + 0xb8] = a0\n  8575: ra = 0x2d6\n  8579: jump @19\n      : @304 (gas: 11)\n  8582: a0 = s1 + 0x1838\n  8586: u64 [a0 + 480] = 0\n  8590: u64 [a0 + 472] = 0\n  8594: u64 [a0 + 464] = 0\n  8598: u64 [a0 + 456] = 0\n  8602: a0 = s1 + 0x2000\n  8606: i32 a0 = a0 + 0xfffffffffffffa00\n  8610: ra = 0x11c\n  8614: ecalli 10 // 'value_transferred'\n  8616: t0 = 0x11e\n  8620: jump @1376\n      : @305 [@dyn 142] (gas: 1)\n  8623: t0 = 286, jump @1376\n      : @306 [@dyn 143] (gas: 1)\n  8629: t0 = 288, jump @1392\n      : @307 [@dyn 144] (gas: 1)\n  8635: jump @309 if a0 == 0\n      : @308 (gas: 1)\n  8638: jump @683\n      : @309 (gas: 4)\n  8641: a0 = u64 [s1 + 0xb8]\n  8645: a0 = i32 [a0]\n  8647: a1 = 0x43\n  8650: jump @311 if a1 <u a0\n      : @310 (gas: 1)\n  8653: jump @684\n      : @311 (gas: 5)\n  8656: a0 = s1 + 0x7ff\n  8660: a0 = a0 + 0x781\n  8664: ra = 0x122\n  8668: t0 = 0x3fc\n  8672: jump @1397\n      : @312 [@dyn 145] (gas: 16)\n  8675: a1 = s1 + 0x7ff\n  8679: a1 = a1 + 0x39\n  8682: a2 = a1 + 0x700\n  8686: a0 = u64 [a2 + 0x58]\n  8689: u64 [s1 + 0xa8] = a0\n  8693: a0 = u64 [a2 + 0x50]\n  8696: u64 [s1 + 0xb0] = a0\n  8700: a0 = u64 [a2 + 0x48]\n  8703: u64 [s1 + 0xb8] = a0\n  8707: a0 = s1 + 0x2000\n  8711: i32 a0 = a0 + 0xfffffffffffffa20\n  8715: a1 = 0x4\n  8718: ra = 0x124\n  8722: ecalli 1 // 'call_data_load'\n  8724: t0 = 0x126\n  8728: jump @1376\n      : @313 [@dyn 146] (gas: 1)\n  8731: t0 = 294, jump @1376\n      : @314 [@dyn 147] (gas: 15)\n  8737: a0 = u64 [a4 + 0xe8]\n  8741: a1 = u64 [a4 + 0xf0]\n  8745: a2 = u64 [a4 + 0xf8]\n  8749: a3 = u64 [a3 + 0x200]\n  8753: a4 = s1 + 0x7ff\n  8757: a4 = a4 + 0x39\n  8760: a5 = a4 + 0x700\n  8764: u64 [a5 + 0x40] = a3\n  8767: u64 [a5 + 0x38] = a2\n  8770: u64 [a5 + 0x30] = a1\n  8773: a1 = s1 + 0x7ff\n  8777: a1 = a1 + 0x761\n  8781: u64 [a5 + 0x28] = a0\n  8784: a0 = 0\n  8786: ra = 296, jump @19\n      : @315 [@dyn 148] (gas: 11)\n  8792: a1 = s1 + 0x7ff\n  8796: a1 = a1 + 0x39\n  8799: u64 [a1 + 1824] = 0\n  8803: u64 [a1 + 1816] = 0\n  8807: u64 [a1 + 1800] = 0x6\n  8812: a2 = a1\n  8814: a0 = 0x20\n  8817: a1 = s1 + 0x7ff\n  8821: a1 = a1 + 0x741\n  8825: u64 [a2 + 1808] = 0\n  8829: ra = 298, jump @19\n      : @316 [@dyn 149] (gas: 3)\n  8835: a1 = 0x2026c\n  8840: a0 = i32 [0x2026c]\n  8845: jump @318 if a0 >u 63\n      : @317 (gas: 2)\n  8849: u32 [0x2026c] = 0x40\n  8855: fallthrough\n      : @318 (gas: 15)\n  8856: a0 = sp + 0xffffffffffffffe0\n  8859: a2 = a0 & 0xffffffffffffffe0\n  8862: u64 [s1 + 0x90] = a2\n  8866: sp = a2\n  8868: a0 = 0x20280\n  8873: i32 a0 = a0 + 0\n  8875: i32 a2 = a2 + 0\n  8877: u64 [s1 + 0xa0] = a1\n  8881: a1 = 0x40\n  8884: u64 [s1 + 0x98] = a0\n  8888: ra = 0x12c\n  8892: ecalli 6 // 'hash_keccak_256'\n  8894: a3 = u64 [s1 + 0x90]\n  8898: t0 = 0x12e\n  8902: jump @1383\n      : @319 [@dyn 150] (gas: 2)\n  8905: a3 = u64 [s1 + 0x90]\n  8909: t0 = 302, jump @1383\n      : @320 [@dyn 151] (gas: 27)\n  8915: u64 [s1 + 0x88] = a0\n  8919: a0 = reverse a1\n  8921: u64 [s1 + 0x80] = a0\n  8925: a0 = reverse a2\n  8927: u64 [s1 + 0x78] = a0\n  8930: a0 = reverse a3\n  8932: u64 [s1 + 0x70] = a0\n  8935: a0 = sp + 0xffffffffffffffe0\n  8938: a0 = a0 & 0xffffffffffffffe0\n  8941: u64 [s1 + 0x90] = a0\n  8945: sp = a0\n  8947: a0 = u64 [s1 + 0xa8]\n  8951: a0 = a0 << 0x20\n  8954: a0 = a0 >> 0x20\n  8957: a2 = s1 + 0x7ff\n  8961: a2 = a2 + 0x39\n  8964: u64 [a2 + 1792] = 0\n  8968: a3 = a2 + 0x600\n  8972: u64 [a3 + 0xf8] = a0\n  8976: a0 = u64 [s1 + 0xb0]\n  8980: u64 [a3 + 0xf0] = a0\n  8984: a1 = s1 + 0x7ff\n  8988: a1 = a1 + 0x721\n  8992: a0 = u64 [s1 + 0xb8]\n  8996: u64 [a3 + 0xe8] = a0\n  9000: a0 = 0\n  9002: ra = 304, jump @19\n      : @321 [@dyn 152] (gas: 16)\n  9008: a0 = u64 [s1 + 0x70]\n  9011: a1 = s1 + 0x7ff\n  9015: a1 = a1 + 0x39\n  9018: a2 = a1 + 0x600\n  9022: u64 [a2 + 0xe0] = a0\n  9026: a0 = u64 [s1 + 0x78]\n  9029: u64 [a2 + 0xd8] = a0\n  9033: a0 = u64 [s1 + 0x80]\n  9037: u64 [a2 + 0xd0] = a0\n  9041: a3 = a1\n  9043: a0 = 0x20\n  9046: a1 = s1 + 0x7ff\n  9050: a1 = a1 + 0x701\n  9054: a2 = u64 [s1 + 0x88]\n  9058: u64 [a3 + 0x6c8] = a2\n  9062: ra = 306, jump @19\n      : @322 [@dyn 153] (gas: 3)\n  9068: a1 = u64 [s1 + 0xa0]\n  9072: a0 = i32 [a1]\n  9074: jump @324 if a0 >u 63\n      : @323 (gas: 2)\n  9078: u32 [a1 + 0] = 0x40\n  9081: fallthrough\n      : @324 (gas: 12)\n  9082: a0 = sp + 0xffffffffffffffe0\n  9085: a0 = a0 & 0xffffffffffffffe0\n  9088: u64 [s1 + 0xb8] = a0\n  9092: sp = a0\n  9094: i32 a2 = a0 + 0\n  9096: a1 = 0x40\n  9099: a0 = u64 [s1 + 0x98]\n  9103: ra = 0x134\n  9107: ecalli 6 // 'hash_keccak_256'\n  9109: a3 = u64 [s1 + 0xb8]\n  9113: t0 = 0x136\n  9117: jump @1330\n      : @325 [@dyn 154] (gas: 2)\n  9120: a3 = u64 [s1 + 0xb8]\n  9124: t0 = 310, jump @1330\n      : @326 [@dyn 155] (gas: 8)\n  9130: a1 = u64 [s1 + 0x90]\n  9134: u64 [a1 + 0x18] = a3\n  9137: u64 [a1 + 0x10] = a2\n  9140: u64 [a1 + 0x8] = a4\n  9143: u64 [a1] = a0\n  9145: a0 = s1 + 0x7ff\n  9149: a0 = a0 + 0x6e1\n  9153: ra = 312, jump @21\n      : @327 [@dyn 156] (gas: 8)\n  9159: a0 = s1 + 0x7ff\n  9163: a0 = a0 + 0x39\n  9166: a0 = u64 [a0 + 0x6a8]\n  9170: u64 [s1 + 0xb8] = a0\n  9174: a0 = s1 + 0x7ff\n  9178: a0 = a0 + 0x6c1\n  9182: a1 = 0x40\n  9185: ra = 314, jump @17\n      : @328 [@dyn 157] (gas: 8)\n  9191: a3 = s1 + 0x7ff\n  9195: a3 = a3 + 0x39\n  9198: a5 = a3 + 0x600\n  9202: a4 = u64 [a5 + 0xa0]\n  9206: a1 = u64 [a5 + 0x98]\n  9210: a2 = u64 [a5 + 0x90]\n  9214: a0 = u64 [a5 + 0x88]\n  9218: t0 = 316, jump @1341\n      : @329 [@dyn 158] (gas: 1)\n  9224: jump @331 if a1 == 0\n      : @330 (gas: 1)\n  9227: jump @654\n      : @331 (gas: 11)\n  9230: a1 = u8 [s1 + 0xb8]\n  9234: a1 = a1 >u 0\n  9236: u64 [a3 + 1664] = 0\n  9240: u64 [a3 + 1656] = 0\n  9244: u64 [a3 + 0x668] = a1\n  9248: a1 = s1 + 0x7ff\n  9252: a1 = a1 + 0x6a1\n  9256: u64 [a3 + 1648] = 0\n  9260: u64 [s1 + 0xb8] = a0\n  9264: ra = 0x2d6\n  9268: jump @19\n      : @332 (gas: 11)\n  9271: a0 = s1 + 0x1838\n  9275: u64 [a0 + 608] = 0\n  9279: u64 [a0 + 600] = 0\n  9283: u64 [a0 + 592] = 0\n  9287: u64 [a0 + 584] = 0\n  9291: a0 = s1 + 0x2000\n  9295: i32 a0 = a0 + 0xfffffffffffffa80\n  9299: ra = 0x13e\n  9303: ecalli 10 // 'value_transferred'\n  9305: t0 = 0x140\n  9309: jump @1361\n      : @333 [@dyn 159] (gas: 1)\n  9312: t0 = 320, jump @1361\n      : @334 [@dyn 160] (gas: 1)\n  9318: t0 = 322, jump @1374\n      : @335 [@dyn 161] (gas: 1)\n  9324: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  9327: jump @685\n      : @337 (gas: 3)\n  9330: a0 = u64 [s1 + 0xb8]\n  9334: a0 = i32 [a0]\n  9336: jump @339 if a0 >u 3\n      : @338 (gas: 1)\n  9340: jump @686\n      : @339 (gas: 3)\n  9343: a0 = s1 + 0x11a0\n  9347: a1 = 0x40\n  9350: ra = 324, jump @17\n      : @340 [@dyn 162] (gas: 7)\n  9356: a3 = s1 + 0x1038\n  9360: a5 = a3 + 0x100\n  9364: a4 = u64 [a5 + 0x80]\n  9368: a1 = u64 [a5 + 0x78]\n  9371: a2 = u64 [a5 + 0x70]\n  9374: a0 = u64 [a5 + 0x68]\n  9377: t0 = 326, jump @1341\n      : @341 [@dyn 163] (gas: 1)\n  9383: jump @343 if a1 == 0\n      : @342 (gas: 1)\n  9386: jump @654\n      : @343 (gas: 8)\n  9389: u64 [a3 + 352] = 0\n  9393: u64 [a3 + 344] = 0\n  9397: u64 [a3 + 336] = 0\n  9401: a1 = s1 + 0x1180\n  9405: u64 [a3 + 328] = 0\n  9409: u64 [s1 + 0xb8] = a0\n  9413: ra = 0x2d6\n  9417: jump @19\n      : @344 (gas: 10)\n  9420: a0 = s1 + 0x1838\n  9424: u64 [a0 + 800] = 0\n  9428: u64 [a0 + 792] = 0\n  9432: u64 [a0 + 784] = 0\n  9436: u64 [a0 + 776] = 0\n  9440: a0 = s1 + 0x2000\n  9444: i32 a0 = a0 + 0xfffffffffffffb40\n  9448: ra = 0x148\n  9452: ecalli 10 // 'value_transferred'\n  9454: fallthrough\n      : @345 [@dyn 164] (gas: 3)\n  9455: a3 = s1 + 0x1838\n  9459: a4 = a3 + 0x300\n  9463: t0 = 330, jump @1362\n      : @346 [@dyn 165] (gas: 1)\n  9469: jump @348 if a0 == 0\n      : @347 (gas: 1)\n  9472: jump @687\n      : @348 (gas: 4)\n  9475: a0 = u64 [s1 + 0xb8]\n  9479: a0 = i32 [a0]\n  9481: a1 = 0x43\n  9484: jump @350 if a1 <u a0\n      : @349 (gas: 1)\n  9487: jump @688\n      : @350 (gas: 6)\n  9490: a0 = 0xffffffff\n  9500: u64 [s1 + 0xb8] = a0\n  9504: a0 = s1 + 0x14a0\n  9508: ra = 0x14c\n  9512: t0 = 0x3f2\n  9516: jump @1397\n      : @351 [@dyn 166] (gas: 11)\n  9519: a1 = s1 + 0x1038\n  9523: a0 = u64 [a1 + 0x468]\n  9527: u64 [s1 + 0xb0] = a0\n  9531: a0 = u64 [a1 + 0x470]\n  9535: u64 [s1 + 0x90] = a0\n  9539: a0 = u32 [a1 + 0x478]\n  9543: u64 [s1 + 0x88] = a0\n  9547: a0 = s1 + 0x1480\n  9551: ra = 0x14e\n  9555: t0 = 0x3fc\n  9559: jump @1397\n      : @352 [@dyn 167] (gas: 3)\n  9562: t0 = 0x150\n  9566: a1 = s1 + 0x1038\n  9570: fallthrough\n      : @353 [@dyn 168] (gas: 18)\n  9571: a2 = a1 + 0x400\n  9575: a0 = u64 [a2 + 0x58]\n  9578: u64 [s1 + 0xa8] = a0\n  9582: a0 = u64 [a2 + 0x50]\n  9585: u64 [s1 + 0xa0] = a0\n  9589: a0 = u64 [a2 + 0x48]\n  9592: u64 [s1 + 0x98] = a0\n  9596: u64 [a1 + 1088] = 0\n  9600: a0 = u64 [s1 + 0x88]\n  9604: u64 [a2 + 0x38] = a0\n  9607: a0 = u64 [s1 + 0x90]\n  9611: u64 [a2 + 0x30] = a0\n  9614: a2 = a1\n  9616: a1 = s1 + 0x1460\n  9620: a0 = u64 [s1 + 0xb0]\n  9624: u64 [a2 + 0x428] = a0\n  9628: a0 = 0\n  9630: ra = 338, jump @19\n      : @354 [@dyn 169] (gas: 3)\n  9636: t0 = 0x154\n  9640: a1 = s1 + 0x1038\n  9644: fallthrough\n      : @355 [@dyn 170] (gas: 8)\n  9645: u64 [a1 + 1056] = 0\n  9649: u64 [a1 + 1048] = 0\n  9653: u64 [a1 + 1032] = 0x1\n  9658: a2 = a1\n  9660: a0 = 0x20\n  9663: a1 = s1 + 0x1440\n  9667: u64 [a2 + 1040] = 0\n  9671: ra = 342, jump @19\n      : @356 [@dyn 171] (gas: 3)\n  9677: a1 = 0x2026c\n  9682: a0 = i32 [0x2026c]\n  9687: jump @358 if a0 >u 63\n      : @357 (gas: 2)\n  9691: u32 [0x2026c] = 0x40\n  9697: fallthrough\n      : @358 (gas: 15)\n  9698: a0 = sp + 0xffffffffffffffe0\n  9701: a2 = a0 & 0xffffffffffffffe0\n  9704: u64 [s1 + 0x88] = a2\n  9708: sp = a2\n  9710: a0 = 0x20280\n  9715: i32 a0 = a0 + 0\n  9717: i32 a2 = a2 + 0\n  9719: u64 [s1 + 0xb0] = a1\n  9723: a1 = 0x40\n  9726: u64 [s1 + 0x90] = a0\n  9730: ra = 0x158\n  9734: ecalli 6 // 'hash_keccak_256'\n  9736: a3 = u64 [s1 + 0x88]\n  9740: t0 = 0x15a\n  9744: jump @1383\n      : @359 [@dyn 172] (gas: 2)\n  9747: a3 = u64 [s1 + 0x88]\n  9751: t0 = 346, jump @1383\n      : @360 [@dyn 173] (gas: 27)\n  9757: u64 [s1 + 0x80] = a0\n  9761: a0 = reverse a1\n  9763: u64 [s1 + 0x78] = a0\n  9766: a0 = reverse a2\n  9768: u64 [s1 + 0x70] = a0\n  9771: a0 = reverse a3\n  9773: u64 [s1 + 0x68] = a0\n  9776: a0 = sp + 0xffffffffffffffe0\n  9779: a0 = a0 & 0xffffffffffffffe0\n  9782: u64 [s1 + 0x88] = a0\n  9786: sp = a0\n  9788: a0 = u64 [s1 + 0x98]\n  9792: a0 = a0 & 0xffffffffffffffff\n  9795: a2 = u64 [s1 + 0xa0]\n  9799: a1 = a2 & 0xffffffffffffffff\n  9802: a2 = u64 [s1 + 0xb8]\n  9806: a3 = u64 [s1 + 0xa8]\n  9810: a2 = a2 & a3\n  9813: a3 = s1 + 0x1038\n  9817: u64 [a3 + 1024] = 0\n  9821: a4 = a3 + 0x300\n  9825: u64 [a4 + 0xf8] = a2\n  9829: u64 [a4 + 0xf0] = a1\n  9833: a1 = s1 + 0x1420\n  9837: u64 [a4 + 0xe8] = a0\n  9841: a0 = 0\n  9843: ra = 348, jump @19\n      : @361 [@dyn 174] (gas: 14)\n  9849: a0 = u64 [s1 + 0x68]\n  9852: a1 = s1 + 0x1038\n  9856: a2 = a1 + 0x300\n  9860: u64 [a2 + 0xe0] = a0\n  9864: a0 = u64 [s1 + 0x70]\n  9867: u64 [a2 + 0xd8] = a0\n  9871: a0 = u64 [s1 + 0x78]\n  9874: u64 [a2 + 0xd0] = a0\n  9878: a3 = a1\n  9880: a0 = 0x20\n  9883: a1 = s1 + 0x1400\n  9887: a2 = u64 [s1 + 0x80]\n  9891: u64 [a3 + 0x3c8] = a2\n  9895: ra = 350, jump @19\n      : @362 [@dyn 175] (gas: 3)\n  9901: a1 = u64 [s1 + 0xb0]\n  9905: a0 = i32 [a1]\n  9907: jump @364 if a0 >u 63\n      : @363 (gas: 2)\n  9911: u32 [a1 + 0] = 0x40\n  9914: fallthrough\n      : @364 (gas: 12)\n  9915: a0 = sp + 0xffffffffffffffe0\n  9918: a0 = a0 & 0xffffffffffffffe0\n  9921: u64 [s1 + 0xb8] = a0\n  9925: sp = a0\n  9927: i32 a2 = a0 + 0\n  9929: a1 = 0x40\n  9932: a0 = u64 [s1 + 0x90]\n  9936: ra = 0x160\n  9940: ecalli 6 // 'hash_keccak_256'\n  9942: a3 = u64 [s1 + 0xb8]\n  9946: t0 = 0x162\n  9950: jump @1330\n      : @365 [@dyn 176] (gas: 2)\n  9953: a3 = u64 [s1 + 0xb8]\n  9957: t0 = 354, jump @1330\n      : @366 [@dyn 177] (gas: 7)\n  9963: a1 = u64 [s1 + 0x88]\n  9967: u64 [a1 + 0x18] = a3\n  9970: u64 [a1 + 0x10] = a2\n  9973: u64 [a1 + 0x8] = a4\n  9976: u64 [a1] = a0\n  9978: a0 = s1 + 0x13e0\n  9982: ra = 356, jump @21\n      : @367 [@dyn 178] (gas: 13)\n  9988: a1 = s1 + 0x1038\n  9992: a2 = a1 + 0x300\n  9996: a0 = u64 [a2 + 0xc0]\n 10000: u64 [s1 + 0xb8] = a0\n 10004: a0 = u64 [a2 + 0xb8]\n 10008: u64 [s1 + 0xb0] = a0\n 10012: a0 = u64 [a2 + 0xb0]\n 10016: u64 [s1 + 0xa8] = a0\n 10020: a0 = u64 [a2 + 0xa8]\n 10024: u64 [s1 + 0xa0] = a0\n 10028: a0 = s1 + 0x13c0\n 10032: a1 = 0x40\n 10035: ra = 358, jump @17\n      : @368 [@dyn 179] (gas: 3)\n 10041: a3 = s1 + 0x1038\n 10045: a5 = a3 + 0x300\n 10049: t0 = 360, jump @1386\n      : @369 [@dyn 180] (gas: 1)\n 10055: jump @371 if a0 == 0\n      : @370 (gas: 1)\n 10058: jump @654\n      : @371 (gas: 14)\n 10061: a0 = u64 [s1 + 0xa0]\n 10065: a2 = a3 + 0x300\n 10069: u64 [a2 + 0x68] = a0\n 10072: a0 = u64 [s1 + 0xa8]\n 10076: u64 [a2 + 0x70] = a0\n 10079: a0 = u64 [s1 + 0xb0]\n 10083: u64 [a2 + 0x78] = a0\n 10086: a1 = s1 + 0x13a0\n 10090: a0 = u64 [s1 + 0xb8]\n 10094: u64 [a2 + 0x80] = a0\n 10098: a0 = a4\n 10100: u64 [s1 + 0xb8] = a4\n 10104: ra = 0x2d6\n 10108: jump @19\n      : @372 (gas: 10)\n 10111: u64 [a2 + 1760] = 0\n 10115: u64 [a2 + 1752] = 0\n 10119: u64 [a2 + 1744] = 0\n 10123: u64 [a2 + 1736] = 0\n 10127: a0 = s1 + 0x1000\n 10131: i32 a0 = a0 + 0x700\n 10135: ra = 0x16a\n 10139: ecalli 10 // 'value_transferred'\n 10141: t0 = 0x16c\n 10145: jump @1354\n      : @373 [@dyn 181] (gas: 1)\n 10148: t0 = 364, jump @1354\n      : @374 [@dyn 182] (gas: 1)\n 10154: t0 = 366, jump @1392\n      : @375 [@dyn 183] (gas: 1)\n 10160: jump @377 if a0 == 0\n      : @376 (gas: 1)\n 10163: jump @689\n      : @377 (gas: 3)\n 10166: a0 = u64 [s1 + 0xb8]\n 10170: a0 = i32 [a0]\n 10172: jump @379 if a0 >u 3\n      : @378 (gas: 1)\n 10176: jump @690\n      : @379 (gas: 3)\n 10179: a0 = s1 + 0x7e0\n 10183: a1 = 0x40\n 10186: ra = 368, jump @17\n      : @380 [@dyn 184] (gas: 6)\n 10192: a4 = s1 + 0x700\n 10196: a3 = u64 [a4 + 0xf8]\n 10200: a1 = u64 [a4 + 0xf0]\n 10204: a2 = u64 [a4 + 0xe8]\n 10208: a0 = u64 [a4 + 0xe0]\n 10212: t0 = 370, jump @1332\n      : @381 [@dyn 185] (gas: 1)\n 10218: jump @383 if a1 == 0\n      : @382 (gas: 1)\n 10221: jump @654\n      : @383 (gas: 8)\n 10224: u64 [s1 + 2008] = 0\n 10228: u64 [s1 + 2000] = 0\n 10232: u64 [s1 + 1992] = 0\n 10236: a1 = s1 + 0x7c0\n 10240: u64 [s1 + 1984] = 0x12\n 10245: u64 [s1 + 0xb8] = a0\n 10249: ra = 0x2d6\n 10253: jump @19\n      : @384 (gas: 11)\n 10256: a0 = s1 + 0x1838\n 10260: u64 [a0 + 704] = 0\n 10264: u64 [a0 + 696] = 0\n 10268: u64 [a0 + 688] = 0\n 10272: u64 [a0 + 680] = 0\n 10276: a0 = s1 + 0x2000\n 10280: i32 a0 = a0 + 0xfffffffffffffae0\n 10284: ra = 0x174\n 10288: ecalli 10 // 'value_transferred'\n 10290: t0 = 0x176\n 10294: jump @1361\n      : @385 [@dyn 186] (gas: 1)\n 10297: t0 = 374, jump @1361\n      : @386 [@dyn 187] (gas: 8)\n 10303: a0 = u64 [a4 + 0xb8]\n 10307: a1 = u64 [a4 + 0xc0]\n 10311: a2 = u64 [a4 + 0xb0]\n 10315: a3 = u64 [a4 + 0xa8]\n 10319: a1 = a1 | a2\n 10322: a0 = a0 | a3\n 10325: a0 = a0 | a1\n 10328: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 10331: jump @691\n      : @388 (gas: 3)\n 10334: a0 = u64 [s1 + 0xb8]\n 10338: a0 = i32 [a0]\n 10340: jump @390 if a0 >u 3\n      : @389 (gas: 1)\n 10344: jump @692\n      : @390 (gas: 3)\n 10347: a0 = s1 + 0x12a0\n 10351: a1 = 0x40\n 10354: ra = 376, jump @17\n      : @391 [@dyn 188] (gas: 7)\n 10360: a3 = s1 + 0x1038\n 10364: a5 = a3 + 0x200\n 10368: a4 = u64 [a5 + 0x80]\n 10372: a1 = u64 [a5 + 0x78]\n 10375: a2 = u64 [a5 + 0x70]\n 10378: a0 = u64 [a5 + 0x68]\n 10381: t0 = 378, jump @1341\n      : @392 [@dyn 189] (gas: 1)\n 10387: jump @394 if a1 == 0\n      : @393 (gas: 1)\n 10390: jump @654\n      : @394 (gas: 13)\n 10393: a1 = u64 [0x20048]\n 10398: a5 = a3 + 0x200\n 10402: u64 [a5 + 0x60] = a1\n 10405: a4 = u64 [0x20050]\n 10410: a1 = u64 [0x20058]\n 10415: a2 = u64 [0x20060]\n 10420: u64 [a5 + 0x58] = a4\n 10423: u64 [a5 + 0x50] = a1\n 10426: a1 = s1 + 0x1280\n 10430: u64 [a5 + 0x48] = a2\n 10433: u64 [s1 + 0xb8] = a0\n 10437: ra = 0x2d6\n 10441: jump @19\n      : @395 (gas: 10)\n 10444: u64 [a2 + 1376] = 0\n 10448: u64 [a2 + 1368] = 0\n 10452: u64 [a2 + 1360] = 0\n 10456: u64 [a2 + 1352] = 0\n 10460: a0 = s1 + 0x1000\n 10464: i32 a0 = a0 + 0x580\n 10468: ra = 0x17c\n 10472: ecalli 10 // 'value_transferred'\n 10474: t0 = 0x17e\n 10478: jump @1398\n      : @396 [@dyn 190] (gas: 1)\n 10481: t0 = 382, jump @1398\n      : @397 [@dyn 191] (gas: 1)\n 10487: t0 = 384, jump @1374\n      : @398 [@dyn 192] (gas: 1)\n 10493: jump @400 if a0 == 0\n      : @399 (gas: 1)\n 10496: jump @693\n      : @400 (gas: 3)\n 10499: a0 = u64 [s1 + 0xb8]\n 10503: a0 = i32 [a0]\n 10505: jump @402 if a0 >u 3\n      : @401 (gas: 1)\n 10509: jump @694\n      : @402 (gas: 3)\n 10512: a0 = s1 + 0x2a0\n 10516: a1 = 0x40\n 10519: ra = 386, jump @17\n      : @403 [@dyn 193] (gas: 16)\n 10525: a0 = u64 [s1 + 0x2b8]\n 10529: u64 [s1 + 0x18] = a0\n 10532: a0 = u64 [s1 + 0x2b0]\n 10536: u64 [s1 + 0x28] = a0\n 10539: a0 = u64 [s1 + 0x2a8]\n 10543: u64 [s1 + 0x20] = a0\n 10546: a0 = u64 [s1 + 0x2a0]\n 10550: u64 [s1 + 0x30] = a0\n 10553: a0 = s1 + 0x1038\n 10557: u64 [a0 + 1408] = 0\n 10561: u64 [a0 + 1400] = 0\n 10565: u64 [a0 + 1392] = 0\n 10569: u64 [a0 + 1384] = 0x3\n 10574: a0 = s1 + 0x280\n 10578: a1 = s1 + 0x15a0\n 10582: ra = 388, jump @21\n      : @404 [@dyn 194] (gas: 34)\n 10588: a2 = u64 [s1 + 0x290]\n 10592: t2 = u64 [s1 + 0x288]\n 10596: t0 = u64 [s1 + 0x298]\n 10600: a5 = u64 [s1 + 0x280]\n 10604: a0 = a2 << 0x3f\n 10607: a1 = t2 >> 0x1\n 10610: a0 = a0 | a1\n 10613: a1 = t0 << 0x3f\n 10616: u64 [s1 + 0xb0] = a2\n 10620: a2 = a2 >> 0x1\n 10623: a1 = a1 | a2\n 10626: a2 = t2 << 0x3f\n 10629: a3 = a5 >> 0x1\n 10632: a4 = a3 | a2\n 10635: a2 = t0 >> 0x1\n 10638: u64 [s1 + 0xa8] = a5\n 10642: a5 = a5 & 0x1\n 10645: a3 = -a5\n 10647: a1 = a1 & a3\n 10650: t1 = a3 & a0\n 10653: a2 = a2 & a3\n 10656: ra = a4 & 0x7f\n 10659: a4 = ra if a5 == 0\n 10662: u64 [s1 + 0x70] = a4\n 10665: a0 = a4 <u 0x20\n 10668: u64 [s1 + 0x60] = t1\n 10671: a0 = 0 if t1 != 0\n 10673: u64 [s1 + 0x68] = a1\n 10676: u64 [s1 + 0x58] = a2\n 10679: a1 = a1 | a2\n 10682: a0 = 0 if a1 != 0\n 10684: u64 [s1 + 0xb8] = a5\n 10688: a1 = a5 <u 0x1\n 10691: jump @406 if a1 == a0\n      : @405 (gas: 1)\n 10694: jump @695\n      : @406 (gas: 12)\n 10697: a2 = u64 [s1 + 0x28]\n 10700: a4 = u64 [s1 + 0x30]\n 10703: a0 = a4 | a2\n 10706: a1 = u64 [s1 + 0x18]\n 10709: a3 = u64 [s1 + 0x20]\n 10712: a1 = a1 | a3\n 10715: a0 = a0 | a1\n 10718: a0 = a0 >> 0x20\n 10721: a1 = a1 | a2\n 10724: a1 = a1 << 0x20\n 10727: a1 = a1 | a0\n 10730: jump @408 if a1 == 0\n      : @407 (gas: 1)\n 10733: jump @654\n      : @408 (gas: 15)\n 10736: a0 = a4\n 10738: u64 [s1 + 0x90] = ra\n 10742: u64 [s1 + 0x98] = t2\n 10746: u64 [s1 + 0xa0] = t0\n 10750: a1 = u64 [s1 + 0x70]\n 10753: a3 = s1 + 0x200\n 10757: u64 [a3 + 0x60] = a1\n 10760: a1 = u64 [s1 + 0x60]\n 10763: u64 [a3 + 0x68] = a1\n 10766: a1 = u64 [s1 + 0x68]\n 10769: u64 [a3 + 0x70] = a1\n 10772: a1 = s1 + 0x260\n 10776: a2 = u64 [s1 + 0x58]\n 10779: u64 [a3 + 0x78] = a2\n 10782: ra = 390, jump @19\n      : @409 [@dyn 195] (gas: 2)\n 10788: a0 = u64 [s1 + 0xb8]\n 10792: jump @411 if a0 == 0\n      : @410 (gas: 1)\n 10795: jump @655\n      : @411 (gas: 1)\n 10798: t0 = 392, jump @1372\n      : @412 [@dyn 196] (gas: 1)\n 10804: jump @414 if a1 != 0\n      : @413 (gas: 1)\n 10807: jump @654\n      : @414 (gas: 13)\n 10810: a1 = u64 [s1 + 0xa8]\n 10814: a1 = a1 & 0xffffffffffffff00\n 10818: i32 a0 = a3 + 0x20\n 10821: a3 = u64 [s1 + 0x98]\n 10825: a2 = s1 + 0x100\n 10829: u64 [a2 + 0xe8] = a3\n 10833: u64 [a2 + 0xe0] = a1\n 10837: a1 = u64 [s1 + 0xb0]\n 10841: u64 [a2 + 0xf0] = a1\n 10845: a1 = s1 + 0x1e0\n 10849: a3 = u64 [s1 + 0xa0]\n 10853: u64 [a2 + 0xf8] = a3\n 10857: ra = 394, jump @19\n      : @415 [@dyn 197] (gas: 9)\n 10863: t2 = 0\n 10865: t1 = 0\n 10867: u64 [s1 + 176] = 0\n 10871: a0 = u64 [s1 + 0x90]\n 10875: a0 = a0 >u 0\n 10877: a0 = a0 << 0x5\n 10880: u64 [s1 + 0xb8] = a0\n 10884: t0 = 0x18c\n 10888: jump @1366\n      : @416 (gas: 1)\n 10891: t0 = 396, jump @1366\n      : @417 [@dyn 198] (gas: 28)\n 10897: t0 = u64 [s1 + 0x20]\n 10900: a3 = a2 + t0\n 10903: ra = a3 + a0\n 10906: a3 = ra ^ a2\n 10909: a4 = ra <u a2\n 10912: a4 = a0 if a3 == 0\n 10915: a0 = a2 <u t2\n 10918: a0 = a1 if a1 == 0\n 10921: a0 = a0 + t1\n 10924: a1 = a0 <u t1\n 10927: a2 = u64 [s1 + 0x28]\n 10930: a2 = a2 + a0\n 10933: a4 = a4 + a2\n 10936: a0 = a2 <u a0\n 10939: a2 = a4 <u a2\n 10942: t1 = u64 [s1 + 0x18]\n 10945: a3 = u64 [s1 + 0xb0]\n 10949: a3 = a3 + t1\n 10952: a1 = a1 + a3\n 10955: a0 = a0 + a1\n 10958: a5 = a0 + a2\n 10961: a0 = a5 >u 0\n 10963: a1 = a4 >u 0\n 10965: a1 = a0 if a5 != 0\n 10968: a0 = a4 | a5\n 10971: a2 = ra >u 0\n 10973: a2 = a1 if a0 != 0\n 10976: jump @419 if a2 == 0\n      : @418 (gas: 1)\n 10979: jump @764\n      : @419 (gas: 6)\n 10982: a0 = u64 [s1 + 0x30]\n 10985: a1 = u64 [s1 + 0xb8]\n 10989: a0 = a1 <u a0\n 10992: a1 = ra ^ t0\n 10995: a2 = ra <u t0\n 10998: t0 = 398, jump @1364\n      : @420 [@dyn 199] (gas: 1)\n 11004: jump @422 if a3 == 0\n      : @421 (gas: 1)\n 11007: jump @764\n      : @422 (gas: 11)\n 11010: a0 = u64 [s1 + 0xb8]\n 11014: u64 [s1 + 0x1c0] = a0\n 11018: u64 [s1 + 0x1c8] = ra\n 11022: u64 [s1 + 0x1d0] = a4\n 11026: a0 = 0x40\n 11029: a1 = s1 + 0x1c0\n 11033: u64 [s1 + 0x1d8] = a5\n 11037: u64 [s1 + 0xa8] = ra\n 11041: u64 [s1 + 0xa0] = a4\n 11045: u64 [s1 + 0xb0] = a5\n 11049: ra = 400, jump @19\n      : @423 [@dyn 200] (gas: 21)\n 11055: a0 = u64 [s1 + 0x18]\n 11058: a4 = s1 + 0x100\n 11062: u64 [a4 + 0x78] = a0\n 11065: a0 = u64 [s1 + 0x28]\n 11068: u64 [a4 + 0x70] = a0\n 11071: a0 = u64 [s1 + 0x20]\n 11074: u64 [a4 + 0x68] = a0\n 11077: a0 = u64 [s1 + 0x30]\n 11080: u64 [a4 + 0x60] = a0\n 11083: a0 = u64 [s1 + 0xb0]\n 11087: u64 [a4 + 0x98] = a0\n 11091: a0 = u64 [s1 + 0xa0]\n 11095: u64 [a4 + 0x90] = a0\n 11099: a0 = u64 [s1 + 0xa8]\n 11103: u64 [a4 + 0x88] = a0\n 11107: a0 = s1 + 0x1a0\n 11111: a1 = s1 + 0x180\n 11115: a2 = s1 + 0x160\n 11119: a3 = u64 [s1 + 0xb8]\n 11123: u64 [a4 + 0x80] = a3\n 11127: ra = 402, jump @995\n      : @424 [@dyn 201] (gas: 12)\n 11133: a2 = u64 [s1 + 0xa0]\n 11137: a4 = u64 [s1 + 0xa8]\n 11141: t0 = u64 [s1 + 0xb8]\n 11145: a0 = t0 | a2\n 11148: a1 = u64 [s1 + 0xb0]\n 11152: a1 = a1 | a4\n 11155: a0 = a0 | a1\n 11158: a0 = a0 >> 0x20\n 11161: a1 = a1 | a2\n 11164: a1 = a1 << 0x20\n 11167: a0 = a0 | a1\n 11170: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 11173: jump @654\n      : @426 (gas: 7)\n 11176: a5 = s1 + 0x100\n 11180: a0 = u64 [a5 + 0xa8]\n 11184: a1 = u64 [a5 + 0xb8]\n 11188: u64 [s1 + 0x98] = a1\n 11192: t1 = u64 [s1 + 0x1a0]\n 11196: a3 = u64 [a5 + 0xb0]\n 11200: jump @506\n      : @427 (gas: 8)\n 11203: u64 [a2 + 1984] = 0\n 11207: u64 [a2 + 1976] = 0\n 11211: u64 [a2 + 1968] = 0\n 11215: u64 [a2 + 1960] = 0\n 11219: a0 = s1 + 0x1000\n 11223: i32 a0 = a0 + 0x7e0\n 11227: ecalli 10 // 'value_transferred'\n 11229: fallthrough\n      : @428 (gas: 10)\n 11230: a3 = s1 + 0x1038\n 11234: a4 = a3 + 0x700\n 11238: a0 = u64 [a4 + 0xb8]\n 11242: a1 = u64 [a4 + 0xc0]\n 11246: a2 = u64 [a4 + 0xb0]\n 11250: a3 = u64 [a4 + 0xa8]\n 11254: a1 = a1 | a2\n 11257: a0 = a0 | a3\n 11260: a0 = a0 | a1\n 11263: jump @430 if a0 == 0\n      : @429 (gas: 1)\n 11266: jump @701\n      : @430 (gas: 4)\n 11269: a0 = u64 [s1 + 0xb8]\n 11273: a0 = i32 [a0]\n 11275: a1 = 0x43\n 11278: jump @432 if a1 <u a0\n      : @431 (gas: 1)\n 11281: jump @702\n      : @432 (gas: 5)\n 11284: a0 = s1 + 0x7ff\n 11288: a0 = a0 + 0x3e1\n 11292: ra = 0x194\n 11296: t0 = 0x3f2\n 11300: jump @1397\n      : @433 [@dyn 202] (gas: 42)\n 11303: a1 = s1 + 0x7ff\n 11307: a1 = a1 + 0x39\n 11310: a2 = a1 + 0x300\n 11314: a0 = u64 [a2 + 0xb8]\n 11318: u64 [s1 + 0x78] = a0\n 11321: a0 = u64 [a2 + 0xb0]\n 11325: u64 [s1 + 0xa8] = a0\n 11329: a0 = u64 [a2 + 0xa8]\n 11333: u64 [s1 + 0xb0] = a0\n 11337: a0 = s1 + 0x2000\n 11341: i32 a0 = a0 + 0xfffffffffffff800\n 11345: a1 = 0x24\n 11348: ecalli 1 // 'call_data_load'\n 11350: a0 = s1 + 0x1038\n 11354: a2 = a0 + 0x700\n 11358: a1 = u64 [a2 + 0xe0]\n 11362: u64 [s1 + 0xa0] = a1\n 11366: a1 = u64 [a2 + 0xd8]\n 11370: u64 [s1 + 0x90] = a1\n 11374: a1 = u64 [a2 + 0xd0]\n 11378: u64 [s1 + 0x88] = a1\n 11382: a0 = u64 [a2 + 0xc8]\n 11386: u64 [s1 + 0x80] = a0\n 11390: a0 = u64 [0x20048]\n 11395: u64 [s1 + 0x40] = a0\n 11398: a3 = s1 + 0x7ff\n 11402: a3 = a3 + 0x39\n 11405: a4 = a3 + 0x300\n 11409: u64 [a4 + 0xa0] = a0\n 11413: a1 = u64 [0x20050]\n 11418: a2 = u64 [0x20058]\n 11423: a0 = u64 [0x20060]\n 11428: u64 [s1 + 0x30] = a1\n 11431: u64 [a4 + 0x98] = a1\n 11435: u64 [s1 + 0x28] = a2\n 11438: u64 [a4 + 0x90] = a2\n 11442: a1 = s1 + 0x7ff\n 11446: a1 = a1 + 0x3c1\n 11450: u64 [s1 + 0x38] = a0\n 11453: u64 [a4 + 0x88] = a0\n 11457: a0 = 0\n 11459: ra = 406, jump @19\n      : @434 [@dyn 203] (gas: 11)\n 11465: a1 = s1 + 0x7ff\n 11469: a1 = a1 + 0x39\n 11472: u64 [a1 + 896] = 0\n 11476: u64 [a1 + 888] = 0\n 11480: u64 [a1 + 872] = 0x6\n 11485: a2 = a1\n 11487: a0 = 0x20\n 11490: a1 = s1 + 0x7ff\n 11494: a1 = a1 + 0x3a1\n 11498: u64 [a2 + 880] = 0\n 11502: ra = 408, jump @19\n      : @435 [@dyn 204] (gas: 3)\n 11508: a1 = 0x2026c\n 11513: a0 = i32 [0x2026c]\n 11518: jump @437 if a0 >u 63\n      : @436 (gas: 2)\n 11522: u32 [0x2026c] = 0x40\n 11528: fallthrough\n      : @437 (gas: 15)\n 11529: a0 = sp + 0xffffffffffffffe0\n 11532: a2 = a0 & 0xffffffffffffffe0\n 11535: u64 [s1 + 0x70] = a2\n 11538: sp = a2\n 11540: a0 = 0x20280\n 11545: i32 a0 = a0 + 0\n 11547: u64 [s1 + 0x98] = a1\n 11551: i32 a2 = a2 + 0\n 11553: a1 = 0x40\n 11556: u64 [s1 + 0xb8] = a0\n 11560: ra = 0x19a\n 11564: ecalli 6 // 'hash_keccak_256'\n 11566: a3 = u64 [s1 + 0x70]\n 11569: t0 = 0x19c\n 11573: jump @1349\n      : @438 [@dyn 205] (gas: 2)\n 11576: a3 = u64 [s1 + 0x70]\n 11579: t0 = 412, jump @1349\n      : @439 [@dyn 206] (gas: 9)\n 11585: a0 = 0x30280\n 11590: u64 [s1 + 0x70] = a0\n 11593: i32 a0 = a0 + 0\n 11595: u64 [s1 + 0x20] = a0\n 11598: ra = 0x19e\n 11602: ecalli 3 // 'caller'\n 11604: a2 = u64 [s1 + 0x70]\n 11607: t0 = 0x1a0\n 11611: jump @1321\n      : @440 [@dyn 207] (gas: 2)\n 11614: a2 = u64 [s1 + 0x70]\n 11617: t0 = 416, jump @1321\n      : @441 [@dyn 208] (gas: 9)\n 11623: u64 [a2 + 864] = 0\n 11627: a4 = a2 + 0x300\n 11631: u64 [a4 + 0x58] = a1\n 11634: u64 [a4 + 0x50] = a0\n 11637: a1 = s1 + 0x7ff\n 11641: a1 = a1 + 0x381\n 11645: u64 [a4 + 0x48] = a3\n 11648: a0 = 0\n 11650: ra = 418, jump @19\n      : @442 [@dyn 209] (gas: 16)\n 11656: a0 = u64 [s1 + 0x48]\n 11659: a1 = s1 + 0x7ff\n 11663: a1 = a1 + 0x39\n 11666: a2 = a1 + 0x300\n 11670: u64 [a2 + 0x40] = a0\n 11673: a0 = u64 [s1 + 0x50]\n 11676: u64 [a2 + 0x38] = a0\n 11679: a0 = u64 [s1 + 0x58]\n 11682: u64 [a2 + 0x30] = a0\n 11685: a3 = a1\n 11687: a0 = 0x20\n 11690: a1 = s1 + 0x7ff\n 11694: a1 = a1 + 0x361\n 11698: a2 = u64 [s1 + 0x60]\n 11701: u64 [a3 + 0x328] = a2\n 11705: ra = 420, jump @19\n      : @443 [@dyn 210] (gas: 3)\n 11711: a1 = u64 [s1 + 0x98]\n 11715: a0 = i32 [a1]\n 11717: jump @445 if a0 >u 63\n      : @444 (gas: 2)\n 11721: u32 [a1 + 0] = 0x40\n 11724: fallthrough\n      : @445 (gas: 4)\n 11725: a0 = sp + 0xffffffffffffffe0\n 11728: a0 = a0 & 0xffffffffffffffe0\n 11731: u64 [s1 + 0x60] = a0\n 11734: t0 = 422, jump @1385\n      : @446 [@dyn 211] (gas: 5)\n 11740: ra = 0x1a8\n 11744: ecalli 6 // 'hash_keccak_256'\n 11746: a3 = u64 [s1 + 0x60]\n 11749: t0 = 0x1aa\n 11753: jump @1359\n      : @447 [@dyn 212] (gas: 2)\n 11756: a3 = u64 [s1 + 0x60]\n 11759: t0 = 426, jump @1359\n      : @448 [@dyn 213] (gas: 3)\n 11765: a0 = s1 + 0x7ff\n 11769: a0 = a0 + 0x341\n 11773: ra = 428, jump @21\n      : @449 [@dyn 214] (gas: 4)\n 11779: a2 = s1 + 0x7ff\n 11783: a2 = a2 + 0x39\n 11786: a0 = u8 [a2 + 0x308]\n 11790: jump @451 if a0 != 0\n      : @450 (gas: 1)\n 11793: jump @703\n      : @451 (gas: 9)\n 11796: a0 = u64 [s1 + 0x78]\n 11799: a0 = a0 << 0x20\n 11802: a2 = a0 >> 0x20\n 11805: a0 = u64 [s1 + 0xb0]\n 11809: a1 = u64 [s1 + 0xa8]\n 11813: a0 = a0 | a1\n 11816: u64 [s1 + 0x70] = a2\n 11819: a0 = a0 | a2\n 11822: jump @453 if a0 != 0\n      : @452 (gas: 1)\n 11825: jump @711\n      : @453 (gas: 1)\n 11828: ra = 430, jump @1312\n      : @454 [@dyn 215] (gas: 9)\n 11834: a0 = s1 + 0x1838\n 11838: u64 [a0 + 0] = 0\n 11840: u64 [a0 + 4294967288] = 0\n 11843: u64 [a0 + 4294967280] = 0\n 11846: u64 [a0 + 4294967272] = 0x2\n 11850: a0 = s1 + 0x7ff\n 11854: a0 = a0 + 0x321\n 11858: a1 = s1 + 0x1820\n 11862: ra = 432, jump @21\n      : @455 [@dyn 216] (gas: 40)\n 11868: a1 = s1 + 0x7ff\n 11872: a1 = a1 + 0x39\n 11875: t2 = u64 [a1 + 0x300]\n 11879: a2 = a1 + 0x200\n 11883: a0 = u64 [a2 + 0xf8]\n 11887: a4 = u64 [a2 + 0xe8]\n 11891: a5 = u64 [a2 + 0xf0]\n 11895: a1 = sp + 0xffffffffffffffe0\n 11898: a1 = a1 & 0xffffffffffffffe0\n 11901: sp = a1\n 11903: a3 = u64 [s1 + 0x88]\n 11907: a3 = a3 + a5\n 11910: t0 = u64 [s1 + 0x80]\n 11914: t0 = t0 + a4\n 11917: a4 = t0 <u a4\n 11920: a3 = a3 + a4\n 11923: t1 = a3 ^ a5\n 11926: a2 = a3 <u a5\n 11929: a2 = a4 if t1 == 0\n 11932: a4 = u64 [s1 + 0x90]\n 11936: a4 = a4 + a0\n 11939: a5 = a4 + a2\n 11942: t1 = a5 <u a4\n 11945: ra = u64 [s1 + 0xa0]\n 11949: ra = ra + t2\n 11952: a4 = a4 <u a0\n 11955: a4 = a4 + ra\n 11958: ra = a4 + t1\n 11961: t1 = a5 <u a0\n 11964: a4 = t2 ^ ra\n 11967: t2 = ra <u t2\n 11970: t2 = t1 if a4 == 0\n 11973: a0 = a0 ^ a5\n 11976: a0 = a0 | a4\n 11979: t2 = a2 if a0 == 0\n 11982: u64 [a1 + 0x10] = a5\n 11985: u64 [a1 + 0x8] = a3\n 11988: u64 [a1] = t0\n 11990: u64 [a1 + 0x18] = ra\n 11993: jump @457 if t2 == 0\n      : @456 (gas: 1)\n 11996: jump @713\n      : @457 (gas: 7)\n 11999: a0 = s1 + 0x1838\n 12003: u64 [a0 + 32] = 0\n 12006: u64 [a0 + 24] = 0\n 12009: u64 [a0 + 16] = 0\n 12012: u64 [a0 + 8] = 0x2\n 12016: a0 = s1 + 0x1840\n 12020: ra = 434, jump @24\n      : @458 [@dyn 217] (gas: 14)\n 12026: a2 = s1 + 0x7ff\n 12030: a2 = a2 + 0x39\n 12033: u64 [a2 + 736] = 0\n 12037: a0 = u64 [s1 + 0x70]\n 12040: a3 = a2 + 0x200\n 12044: u64 [a3 + 0xd8] = a0\n 12048: a0 = u64 [s1 + 0xa8]\n 12052: u64 [a3 + 0xd0] = a0\n 12056: a1 = s1 + 0x7ff\n 12060: a1 = a1 + 0x301\n 12064: a0 = u64 [s1 + 0xb0]\n 12068: u64 [a3 + 0xc8] = a0\n 12072: a0 = 0\n 12074: ra = 436, jump @19\n      : @459 [@dyn 218] (gas: 11)\n 12080: a0 = s1 + 0x7ff\n 12084: a0 = a0 + 0x39\n 12087: u64 [a0 + 704] = 0\n 12091: u64 [a0 + 696] = 0\n 12095: u64 [a0 + 688] = 0\n 12099: a2 = a0\n 12101: a0 = 0x20\n 12104: a1 = s1 + 0x7ff\n 12108: a1 = a1 + 0x2e1\n 12112: u64 [a2 + 680] = 0\n 12116: ra = 438, jump @19\n      : @460 [@dyn 219] (gas: 7)\n 12122: a0 = sp + 0xffffffffffffffe0\n 12125: a0 = a0 & 0xffffffffffffffe0\n 12128: u64 [s1 + 0x78] = a0\n 12131: sp = a0\n 12133: a2 = u64 [s1 + 0x98]\n 12137: a0 = i32 [a2]\n 12139: jump @462 if a0 >u 63\n      : @461 (gas: 2)\n 12143: u32 [a2 + 0] = 0x40\n 12146: fallthrough\n      : @462 (gas: 4)\n 12147: a0 = sp + 0xffffffffffffffe0\n 12150: a0 = a0 & 0xffffffffffffffe0\n 12153: u64 [s1 + 0x98] = a0\n 12157: t0 = 440, jump @1385\n      : @463 [@dyn 220] (gas: 5)\n 12163: ra = 0x1ba\n 12167: ecalli 6 // 'hash_keccak_256'\n 12169: a3 = u64 [s1 + 0x98]\n 12173: t0 = 0x1bc\n 12177: jump @1330\n      : @464 [@dyn 221] (gas: 2)\n 12180: a3 = u64 [s1 + 0x98]\n 12184: t0 = 444, jump @1330\n      : @465 [@dyn 222] (gas: 8)\n 12190: a1 = u64 [s1 + 0x78]\n 12193: u64 [a1 + 0x18] = a3\n 12196: u64 [a1 + 0x10] = a2\n 12199: u64 [a1 + 0x8] = a4\n 12202: u64 [a1] = a0\n 12204: a0 = s1 + 0x7ff\n 12208: a0 = a0 + 0x2c1\n 12212: ra = 446, jump @21\n      : @466 [@dyn 223] (gas: 33)\n 12218: a2 = s1 + 0x7ff\n 12222: a2 = a2 + 0x39\n 12225: a4 = a2 + 0x200\n 12229: a0 = u64 [a4 + 0x90]\n 12233: a1 = u64 [a4 + 0x88]\n 12237: t0 = u64 [a2 + 0x2a0]\n 12241: a3 = u64 [a4 + 0x98]\n 12245: a4 = u64 [s1 + 0x88]\n 12249: a4 = a4 + a0\n 12252: a5 = u64 [s1 + 0x80]\n 12256: a5 = a5 + a1\n 12259: a1 = a5 <u a1\n 12262: a4 = a4 + a1\n 12265: a2 = a4 ^ a0\n 12268: a0 = a4 <u a0\n 12271: a0 = a1 if a2 == 0\n 12274: a1 = u64 [s1 + 0x90]\n 12278: a1 = a1 + a3\n 12281: a2 = u64 [s1 + 0xa0]\n 12285: t0 = t0 + a2\n 12288: a2 = a1 <u a3\n 12291: a2 = a2 + t0\n 12294: a0 = a0 + a1\n 12297: a1 = a0 <u a1\n 12300: a1 = a1 + a2\n 12303: a2 = s1 + 0x1838\n 12307: u64 [a2 + 0x28] = a5\n 12310: u64 [a2 + 0x30] = a4\n 12313: u64 [a2 + 0x38] = a0\n 12316: u64 [a2 + 0x40] = a1\n 12319: a1 = s1 + 0x1860\n 12323: a0 = u64 [s1 + 0x78]\n 12326: ra = 448, jump @24\n      : @467 [@dyn 224] (gas: 4)\n 12332: a0 = s1 + 0x7ff\n 12336: a0 = a0 + 0x2a1\n 12340: a1 = 0x40\n 12343: ra = 450, jump @17\n      : @468 [@dyn 225] (gas: 8)\n 12349: a3 = s1 + 0x7ff\n 12353: a3 = a3 + 0x39\n 12356: a5 = a3 + 0x200\n 12360: a4 = u64 [a5 + 0x80]\n 12364: a1 = u64 [a5 + 0x78]\n 12367: a2 = u64 [a5 + 0x70]\n 12370: a0 = u64 [a5 + 0x68]\n 12373: t0 = 452, jump @1341\n      : @469 [@dyn 226] (gas: 1)\n 12379: jump @471 if a1 == 0\n      : @470 (gas: 1)\n 12382: jump @654\n      : @471 (gas: 13)\n 12385: a1 = u64 [s1 + 0x80]\n 12389: a4 = a3 + 0x200\n 12393: u64 [a4 + 0x48] = a1\n 12396: a1 = u64 [s1 + 0x88]\n 12400: u64 [a4 + 0x50] = a1\n 12403: a1 = u64 [s1 + 0x90]\n 12407: u64 [a4 + 0x58] = a1\n 12410: a1 = s1 + 0x7ff\n 12414: a1 = a1 + 0x281\n 12418: a2 = u64 [s1 + 0xa0]\n 12422: u64 [a4 + 0x60] = a2\n 12425: u64 [s1 + 0xa0] = a0\n 12429: ra = 454, jump @19\n      : @472 [@dyn 227] (gas: 32)\n 12435: a5 = s1 + 0x7ff\n 12439: a5 = a5 + 0x39\n 12442: u64 [a5 + 512] = 0\n 12446: a0 = u64 [s1 + 0x70]\n 12449: a1 = a5 + 0x100\n 12453: u64 [a1 + 0xf8] = a0\n 12457: a0 = u64 [s1 + 0xa8]\n 12461: u64 [a1 + 0xf0] = a0\n 12465: a0 = u64 [s1 + 0xb0]\n 12469: u64 [a1 + 0xe8] = a0\n 12473: u64 [a5 + 544] = 0\n 12477: u64 [a5 + 536] = 0\n 12481: u64 [a5 + 528] = 0\n 12485: a0 = u64 [0x200a8]\n 12490: a1 = u64 [0x200b0]\n 12495: a2 = u64 [0x200b8]\n 12500: a3 = u64 [0x200c0]\n 12505: a4 = a5 + 0x200\n 12509: u64 [a4 + 0x40] = a0\n 12512: u64 [a4 + 0x38] = a1\n 12515: u64 [a4 + 0x30] = a2\n 12518: u64 [a4 + 0x28] = a3\n 12521: a1 = 0x20\n 12524: a2 = s1 + 0x7ff\n 12528: a2 = a2 + 0x261\n 12532: a3 = s1 + 0x7ff\n 12536: a3 = a3 + 0x241\n 12540: a4 = s1 + 0x7ff\n 12544: a4 = a4 + 0x221\n 12548: u64 [a5 + 520] = 0\n 12552: a0 = u64 [s1 + 0xa0]\n 12556: ra = 456, jump @27\n      : @473 [@dyn 228] (gas: 5)\n 12562: a0 = 0\n 12564: a1 = u64 [s1 + 0xb8]\n 12568: a2 = 0\n 12570: ecalli 7 // 'seal_return'\n 12572: jump @825\n      : @474 (gas: 11)\n 12575: a0 = s1 + 0x1838\n 12579: u64 [a0 + 544] = 0\n 12583: u64 [a0 + 536] = 0\n 12587: u64 [a0 + 528] = 0\n 12591: u64 [a0 + 520] = 0\n 12595: a0 = s1 + 0x2000\n 12599: i32 a0 = a0 + 0xfffffffffffffa40\n 12603: ra = 0x1ca\n 12607: ecalli 10 // 'value_transferred'\n 12609: t0 = 0x1cc\n 12613: jump @1361\n      : @475 [@dyn 229] (gas: 1)\n 12616: t0 = 460, jump @1361\n      : @476 [@dyn 230] (gas: 1)\n 12622: t0 = 462, jump @1362\n      : @477 [@dyn 231] (gas: 1)\n 12628: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 12631: jump @718\n      : @479 (gas: 3)\n 12634: a0 = u64 [s1 + 0xb8]\n 12638: a0 = i32 [a0]\n 12640: jump @481 if a0 >u 3\n      : @480 (gas: 1)\n 12644: jump @719\n      : @481 (gas: 3)\n 12647: a0 = s1 + 0x1160\n 12651: a1 = 0x40\n 12654: ra = 464, jump @17\n      : @482 [@dyn 232] (gas: 18)\n 12660: a1 = s1 + 0x1038\n 12664: a2 = a1 + 0x100\n 12668: a0 = u64 [a2 + 0x40]\n 12671: u64 [s1 + 0x18] = a0\n 12674: a0 = u64 [a2 + 0x38]\n 12677: u64 [s1 + 0x28] = a0\n 12680: a0 = u64 [a2 + 0x30]\n 12683: u64 [s1 + 0x20] = a0\n 12686: a0 = u64 [a2 + 0x28]\n 12689: u64 [s1 + 0x30] = a0\n 12692: a1 = s1 + 0x1838\n 12696: u64 [a1 + 576] = 0\n 12700: u64 [a1 + 568] = 0\n 12704: u64 [a1 + 560] = 0\n 12708: u64 [a1 + 552] = 0x4\n 12713: a0 = s1 + 0x1140\n 12717: a1 = s1 + 0x1a60\n 12721: ra = 466, jump @21\n      : @483 [@dyn 233] (gas: 35)\n 12727: a0 = s1 + 0x1038\n 12731: t2 = u64 [a0 + 0x118]\n 12735: ra = u64 [a0 + 0x110]\n 12739: t1 = u64 [a0 + 0x120]\n 12743: a4 = u64 [a0 + 0x108]\n 12747: a0 = t2 << 0x3f\n 12750: a1 = ra >> 0x1\n 12753: a0 = a0 | a1\n 12756: a1 = t1 << 0x3f\n 12759: a2 = t2 >> 0x1\n 12762: a1 = a1 | a2\n 12765: a2 = ra << 0x3f\n 12768: a3 = a4 >> 0x1\n 12771: a5 = a3 | a2\n 12774: a2 = t1 >> 0x1\n 12777: u64 [s1 + 0xb0] = a4\n 12781: a4 = a4 & 0x1\n 12784: a3 = -a4\n 12786: a1 = a1 & a3\n 12789: t0 = a3 & a0\n 12792: a2 = a2 & a3\n 12795: a0 = a5 & 0x7f\n 12798: u64 [s1 + 0xa8] = a0\n 12802: a5 = a0 if a4 == 0\n 12805: u64 [s1 + 0x70] = a5\n 12808: a0 = a5 <u 0x20\n 12811: u64 [s1 + 0x60] = t0\n 12814: a0 = 0 if t0 != 0\n 12816: u64 [s1 + 0x68] = a1\n 12819: u64 [s1 + 0x58] = a2\n 12822: a1 = a1 | a2\n 12825: a0 = 0 if a1 != 0\n 12827: u64 [s1 + 0xb8] = a4\n 12831: a1 = a4 <u 0x1\n 12834: jump @485 if a1 == a0\n      : @484 (gas: 1)\n 12837: jump @720\n      : @485 (gas: 12)\n 12840: a2 = u64 [s1 + 0x28]\n 12843: a3 = u64 [s1 + 0x30]\n 12846: a0 = a3 | a2\n 12849: a1 = u64 [s1 + 0x20]\n 12852: a4 = u64 [s1 + 0x18]\n 12855: a1 = a1 | a4\n 12858: a0 = a0 | a1\n 12861: a0 = a0 >> 0x20\n 12864: a1 = a1 | a2\n 12867: a1 = a1 << 0x20\n 12870: a1 = a1 | a0\n 12873: jump @487 if a1 == 0\n      : @486 (gas: 1)\n 12876: jump @654\n      : @487 (gas: 15)\n 12879: a0 = a3\n 12881: u64 [s1 + 0x90] = ra\n 12885: u64 [s1 + 0x98] = t2\n 12889: u64 [s1 + 0xa0] = t1\n 12893: a1 = u64 [s1 + 0x70]\n 12896: a3 = s1 + 0x1038\n 12900: u64 [a3 + 0xe8] = a1\n 12904: a1 = u64 [s1 + 0x60]\n 12907: u64 [a3 + 0xf0] = a1\n 12911: a1 = u64 [s1 + 0x68]\n 12914: u64 [a3 + 0xf8] = a1\n 12918: a1 = s1 + 0x1120\n 12922: a2 = u64 [s1 + 0x58]\n 12925: u64 [a3 + 0x100] = a2\n 12929: ra = 468, jump @19\n      : @488 [@dyn 234] (gas: 2)\n 12935: a0 = u64 [s1 + 0xb8]\n 12939: jump @490 if a0 == 0\n      : @489 (gas: 1)\n 12942: jump @668\n      : @490 (gas: 1)\n 12945: t0 = 470, jump @1372\n      : @491 [@dyn 235] (gas: 1)\n 12951: jump @493 if a1 != 0\n      : @492 (gas: 1)\n 12954: jump @654\n      : @493 (gas: 13)\n 12957: a1 = u64 [s1 + 0xb0]\n 12961: a1 = a1 & 0xffffffffffffff00\n 12965: i32 a0 = a3 + 0x20\n 12968: a2 = s1 + 0x1038\n 12972: a3 = u64 [s1 + 0x90]\n 12976: u64 [a2 + 0x70] = a3\n 12979: u64 [a2 + 0x68] = a1\n 12982: a1 = u64 [s1 + 0x98]\n 12986: u64 [a2 + 0x78] = a1\n 12989: a1 = s1 + 0x10a0\n 12993: a3 = u64 [s1 + 0xa0]\n 12997: u64 [a2 + 0x80] = a3\n 13001: ra = 472, jump @19\n      : @494 [@dyn 236] (gas: 9)\n 13007: t2 = 0\n 13009: t1 = 0\n 13011: u64 [s1 + 176] = 0\n 13015: a0 = u64 [s1 + 0xa8]\n 13019: a0 = a0 >u 0\n 13021: a0 = a0 << 0x5\n 13024: u64 [s1 + 0xb8] = a0\n 13028: t0 = 0x1da\n 13032: jump @1366\n      : @495 (gas: 1)\n 13035: t0 = 474, jump @1366\n      : @496 [@dyn 237] (gas: 28)\n 13041: t0 = u64 [s1 + 0x20]\n 13044: a3 = a2 + t0\n 13047: ra = a3 + a0\n 13050: a3 = ra ^ a2\n 13053: a4 = ra <u a2\n 13056: a4 = a0 if a3 == 0\n 13059: a0 = a2 <u t2\n 13062: a0 = a1 if a1 == 0\n 13065: a0 = a0 + t1\n 13068: a1 = a0 <u t1\n 13071: a2 = u64 [s1 + 0x28]\n 13074: a2 = a2 + a0\n 13077: a4 = a4 + a2\n 13080: a0 = a2 <u a0\n 13083: a2 = a4 <u a2\n 13086: t1 = u64 [s1 + 0x18]\n 13089: a3 = u64 [s1 + 0xb0]\n 13093: a3 = a3 + t1\n 13096: a1 = a1 + a3\n 13099: a0 = a0 + a1\n 13102: a5 = a0 + a2\n 13105: a0 = a5 >u 0\n 13107: a1 = a4 >u 0\n 13109: a1 = a0 if a5 != 0\n 13112: a0 = a4 | a5\n 13115: a2 = ra >u 0\n 13117: a2 = a1 if a0 != 0\n 13120: jump @498 if a2 == 0\n      : @497 (gas: 1)\n 13123: jump @770\n      : @498 (gas: 6)\n 13126: a0 = u64 [s1 + 0x30]\n 13129: a1 = u64 [s1 + 0xb8]\n 13133: a0 = a1 <u a0\n 13136: a1 = ra ^ t0\n 13139: a2 = ra <u t0\n 13142: t0 = 476, jump @1364\n      : @499 [@dyn 238] (gas: 1)\n 13148: jump @501 if a3 == 0\n      : @500 (gas: 1)\n 13151: jump @770\n      : @501 (gas: 13)\n 13154: a2 = s1 + 0x1038\n 13158: a0 = u64 [s1 + 0xb8]\n 13162: u64 [a2 + 0x48] = a0\n 13165: a3 = ra\n 13167: u64 [a2 + 0x50] = a3\n 13170: u64 [a2 + 0x58] = a4\n 13173: a0 = 0x40\n 13176: a1 = s1 + 0x1080\n 13180: u64 [a2 + 0x60] = a5\n 13183: u64 [s1 + 0xa8] = a3\n 13187: u64 [s1 + 0xa0] = a4\n 13191: u64 [s1 + 0xb0] = a5\n 13195: ra = 478, jump @19\n      : @502 [@dyn 239] (gas: 23)\n 13201: a1 = s1 + 0x1038\n 13205: a0 = u64 [s1 + 0x18]\n 13208: u64 [a1] = a0\n 13210: a0 = u64 [s1 + 0x28]\n 13213: a2 = a1 + 0xffffffffffffff00\n 13217: u64 [a2 + 0xf8] = a0\n 13221: a0 = u64 [s1 + 0x20]\n 13224: u64 [a2 + 0xf0] = a0\n 13228: a0 = u64 [s1 + 0x30]\n 13231: u64 [a2 + 0xe8] = a0\n 13235: a0 = u64 [s1 + 0xb0]\n 13239: u64 [a1 + 0x20] = a0\n 13242: a0 = u64 [s1 + 0xa0]\n 13246: u64 [a1 + 0x18] = a0\n 13249: a0 = u64 [s1 + 0xa8]\n 13253: u64 [a1 + 0x10] = a0\n 13256: a4 = a1\n 13258: a0 = s1 + 0x1060\n 13262: a1 = s1 + 0x1040\n 13266: a2 = s1 + 0x1020\n 13270: a3 = u64 [s1 + 0xb8]\n 13274: u64 [a4 + 0x8] = a3\n 13277: ra = 480, jump @995\n      : @503 [@dyn 240] (gas: 12)\n 13283: a3 = u64 [s1 + 0xa0]\n 13287: a4 = u64 [s1 + 0xa8]\n 13291: t0 = u64 [s1 + 0xb8]\n 13295: a0 = t0 | a3\n 13298: a1 = u64 [s1 + 0xb0]\n 13302: a1 = a1 | a4\n 13305: a0 = a0 | a1\n 13308: a0 = a0 >> 0x20\n 13311: a1 = a1 | a3\n 13314: a1 = a1 << 0x20\n 13317: a0 = a0 | a1\n 13320: jump @505 if a0 == 0\n      : @504 (gas: 1)\n 13323: jump @654\n      : @505 (gas: 8)\n 13326: a1 = s1 + 0x1038\n 13330: a0 = u64 [a1 + 0x30]\n 13333: a2 = u64 [a1 + 0x40]\n 13336: u64 [s1 + 0x98] = a2\n 13340: a2 = a3\n 13342: t1 = u64 [a1 + 0x28]\n 13345: a3 = u64 [a1 + 0x38]\n 13348: fallthrough\n      : @506 (gas: 24)\n 13349: t2 = a0 ^ a4\n 13352: a5 = a0 <u a4\n 13355: ra = t1 <u t0\n 13358: a5 = ra if t2 == 0\n 13361: a1 = a3 - a2\n 13364: t2 = a1 - a5\n 13367: a1 = a1 <u a5\n 13370: a3 = a3 <u a2\n 13373: a2 = u64 [s1 + 0x98]\n 13377: a3 = a2 - a3\n 13380: a2 = u64 [s1 + 0xb0]\n 13384: a3 = a3 - a2\n 13387: a3 = a3 - a1\n 13390: a0 = a0 - a4\n 13393: a0 = a0 - ra\n 13396: a1 = t1 - t0\n 13399: a0 = a0 | a3\n 13402: a2 = a1 | t2\n 13405: a2 = a2 | a0\n 13408: a0 = a0 | t2\n 13411: a2 = a2 >> 0x20\n 13414: a0 = a0 << 0x20\n 13417: a0 = a0 | a2\n 13420: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 13423: jump @654\n      : @508 (gas: 3)\n 13426: a0 = t0\n 13428: u64 [s1 + 0xb8] = a1\n 13432: ra = 482, jump @33\n      : @509 [@dyn 241] (gas: 6)\n 13438: i32 a1 = a0 + 0\n 13440: a2 = i32 [s1 + 0xb8]\n 13444: a0 = 0\n 13446: ra = 0x2da\n 13450: ecalli 7 // 'seal_return'\n 13452: jump @781\n      : @510 (gas: 8)\n 13455: u64 [a2 + 1856] = 0\n 13459: u64 [a2 + 1848] = 0\n 13463: u64 [a2 + 1840] = 0\n 13467: u64 [a2 + 1832] = 0\n 13471: a0 = s1 + 0x1000\n 13475: i32 a0 = a0 + 0x760\n 13479: ecalli 10 // 'value_transferred'\n 13481: fallthrough\n      : @511 (gas: 10)\n 13482: a3 = s1 + 0x1038\n 13486: a4 = a3 + 0x700\n 13490: a0 = u64 [a4 + 0x38]\n 13493: a1 = u64 [a4 + 0x40]\n 13496: a2 = u64 [a4 + 0x30]\n 13499: a3 = u64 [a4 + 0x28]\n 13502: a1 = a1 | a2\n 13505: a0 = a0 | a3\n 13508: a0 = a0 | a1\n 13511: jump @513 if a0 == 0\n      : @512 (gas: 1)\n 13514: jump @725\n      : @513 (gas: 3)\n 13517: a0 = u64 [s1 + 0xb8]\n 13521: a0 = i32 [a0]\n 13523: jump @515 if a0 >u 3\n      : @514 (gas: 1)\n 13527: jump @726\n      : @515 (gas: 1)\n 13530: ra = 484, jump @1131\n      : @516 [@dyn 242] (gas: 9)\n 13536: a0 = s1 + 0x1038\n 13540: u64 [a0 + 1888] = 0\n 13544: u64 [a0 + 1880] = 0\n 13548: u64 [a0 + 1872] = 0\n 13552: u64 [a0 + 1864] = 0x5\n 13557: a0 = s1 + 0x7ff\n 13561: a0 = a0 + 0x121\n 13565: a1 = s1 + 0x1780\n 13569: ra = 486, jump @21\n      : @517 [@dyn 243] (gas: 5)\n 13575: a3 = s1 + 0x7ff\n 13579: a3 = a3 + 0x39\n 13582: a0 = u64 [a3 + 0xe8]\n 13586: a1 = a0 & 0xff\n 13590: jump @519 if a1 != 0\n      : @518 (gas: 1)\n 13593: jump @727\n      : @519 (gas: 17)\n 13596: a1 = u64 [a3 + 0x100]\n 13600: a2 = u64 [a3 + 0xf8]\n 13604: a3 = u64 [a3 + 0xf0]\n 13608: a0 = a0 & 0xffffffffffffff00\n 13612: a4 = s1 + 0x1038\n 13616: u64 [a4 + 1920] = 0\n 13620: u64 [a4 + 1912] = 0\n 13624: u64 [a4 + 1904] = 0\n 13628: u64 [a4 + 1896] = 0x5\n 13633: a5 = a4 + 0x700\n 13637: u64 [a5 + 0x90] = a3\n 13641: u64 [a5 + 0x88] = a0\n 13645: u64 [a5 + 0x98] = a2\n 13649: u64 [a5 + 0xa0] = a1\n 13653: a0 = s1 + 0x17a0\n 13657: a1 = s1 + 0x17c0\n 13661: ra = 488, jump @24\n      : @520 [@dyn 244] (gas: 4)\n 13667: a0 = s1 + 0x7ff\n 13671: a0 = a0 + 0x101\n 13675: a1 = 0x40\n 13678: ra = 490, jump @17\n      : @521 [@dyn 245] (gas: 17)\n 13684: a0 = s1 + 0x7ff\n 13688: a0 = a0 + 0x39\n 13691: a1 = u64 [a0 + 0xe0]\n 13695: u64 [s1 + 0xb0] = a1\n 13699: a1 = u64 [a0 + 0xd8]\n 13703: u64 [s1 + 0xa8] = a1\n 13707: a1 = u64 [a0 + 0xd0]\n 13711: u64 [s1 + 0xa0] = a1\n 13715: a0 = u64 [a0 + 0xc8]\n 13719: u64 [s1 + 0xb8] = a0\n 13723: a0 = 0x30280\n 13728: u64 [s1 + 0x98] = a0\n 13732: i32 a0 = a0 + 0\n 13734: ra = 0x1ec\n 13738: ecalli 3 // 'caller'\n 13740: t0 = 0x1ee\n 13744: jump @1387\n      : @522 [@dyn 246] (gas: 1)\n 13747: t0 = 494, jump @1387\n      : @523 [@dyn 247] (gas: 1)\n 13753: jump @654 if a0 != 0\n      : @524 (gas: 2)\n 13757: a2 = u64 [s1 + 0x98]\n 13761: t0 = 496, jump @1321\n      : @525 [@dyn 248] (gas: 8)\n 13767: u64 [a2 + 192] = 0\n 13771: u64 [a2 + 0xb8] = a1\n 13775: u64 [a2 + 0xb0] = a0\n 13779: a1 = s1 + 0x7ff\n 13783: a1 = a1 + 0xe1\n 13787: u64 [a2 + 0xa8] = a3\n 13791: a0 = a4\n 13793: ra = 498, jump @19\n      : @526 [@dyn 249] (gas: 16)\n 13799: a0 = u64 [0x200c8]\n 13804: a1 = u64 [0x200d0]\n 13809: a2 = s1 + 0x7ff\n 13813: a2 = a2 + 0x39\n 13816: u64 [a2 + 0xa0] = a0\n 13820: a0 = u64 [0x200d8]\n 13825: u64 [a2 + 0x98] = a1\n 13829: a3 = u64 [0x200e0]\n 13834: u64 [a2 + 0x90] = a0\n 13838: a0 = a2\n 13840: a1 = 0x20\n 13843: a2 = s1 + 0x7ff\n 13847: a2 = a2 + 0xc1\n 13851: u64 [a0 + 0x88] = a3\n 13855: a0 = u64 [s1 + 0xb8]\n 13859: ra = 500, jump @25\n      : @527 [@dyn 250] (gas: 6)\n 13865: a1 = 0x20280\n 13870: i32 a1 = a1 + 0\n 13872: a0 = 0\n 13874: a2 = 0\n 13876: ecalli 7 // 'seal_return'\n 13878: jump @825\n      : @528 (gas: 8)\n 13881: u64 [a2 + 1504] = 0\n 13885: u64 [a2 + 1496] = 0\n 13889: u64 [a2 + 1488] = 0\n 13893: u64 [a2 + 1480] = 0\n 13897: a0 = s1 + 0x1000\n 13901: i32 a0 = a0 + 0x600\n 13905: ecalli 10 // 'value_transferred'\n 13907: fallthrough\n      : @529 (gas: 10)\n 13908: a4 = s1 + 0x1038\n 13912: a5 = a4 + 0x500\n 13916: a0 = u64 [a5 + 0xd8]\n 13920: a1 = u64 [a5 + 0xe0]\n 13924: a2 = u64 [a5 + 0xd0]\n 13928: a3 = u64 [a5 + 0xc8]\n 13932: a1 = a1 | a2\n 13935: a0 = a0 | a3\n 13938: a0 = a0 | a1\n 13941: jump @531 if a0 == 0\n      : @530 (gas: 1)\n 13944: jump @732\n      : @531 (gas: 3)\n 13947: a0 = u64 [s1 + 0xb8]\n 13951: a0 = i32 [a0]\n 13953: jump @533 if a0 >u 3\n      : @532 (gas: 1)\n 13957: jump @733\n      : @533 (gas: 7)\n 13960: u64 [a4 + 1536] = 0\n 13964: u64 [a4 + 1528] = 0\n 13968: u64 [a4 + 1520] = 0\n 13972: u64 [a4 + 1512] = 0x2\n 13977: a0 = s1 + 0x500\n 13981: a1 = s1 + 0x1620\n 13985: ra = 502, jump @21\n      : @534 [@dyn 251] (gas: 12)\n 13991: a1 = s1 + 0x500\n 13995: a0 = u64 [a1 + 0x18]\n 13998: u64 [s1 + 0xb8] = a0\n 14002: a0 = u64 [a1 + 0x10]\n 14005: u64 [s1 + 0xb0] = a0\n 14009: a0 = u64 [a1 + 0x8]\n 14012: u64 [s1 + 0xa8] = a0\n 14016: a0 = u64 [a1]\n 14018: u64 [s1 + 0xa0] = a0\n 14022: a0 = s1 + 0x4e0\n 14026: a1 = 0x40\n 14029: ra = 504, jump @17\n      : @535 [@dyn 252] (gas: 6)\n 14035: a4 = s1 + 0x400\n 14039: a0 = u64 [a4 + 0xf8]\n 14043: a1 = u64 [a4 + 0xf0]\n 14047: a2 = u64 [a4 + 0xe8]\n 14051: a3 = u64 [a4 + 0xe0]\n 14055: t0 = 506, jump @1384\n      : @536 [@dyn 253] (gas: 1)\n 14061: jump @654 if a0 != 0\n      : @537 (gas: 14)\n 14065: a0 = u64 [s1 + 0xa0]\n 14069: a2 = s1 + 0x400\n 14073: u64 [a2 + 0xc0] = a0\n 14077: a0 = u64 [s1 + 0xa8]\n 14081: u64 [a2 + 0xc8] = a0\n 14085: a0 = u64 [s1 + 0xb0]\n 14089: u64 [a2 + 0xd0] = a0\n 14093: a1 = s1 + 0x4c0\n 14097: a0 = u64 [s1 + 0xb8]\n 14101: u64 [a2 + 0xd8] = a0\n 14105: a0 = a3\n 14107: u64 [s1 + 0xb8] = a3\n 14111: ra = 0x2d6\n 14115: jump @19\n      : @538 (gas: 2)\n 14118: a2 = s1 + 0x1838\n 14122: jump @540 if a0 == 1889567281\n      : @539 (gas: 1)\n 14129: jump @734\n      : @540 (gas: 8)\n 14132: u64 [a2 + 224] = 0\n 14136: u64 [a2 + 216] = 0\n 14140: u64 [a2 + 208] = 0\n 14144: u64 [a2 + 200] = 0\n 14148: a0 = s1 + 0x2000\n 14152: i32 a0 = a0 + 0xfffffffffffff900\n 14156: ecalli 10 // 'value_transferred'\n 14158: fallthrough\n      : @541 (gas: 9)\n 14159: a3 = s1 + 0x1838\n 14163: a0 = u64 [a3 + 0xd8]\n 14167: a1 = u64 [a3 + 0xe0]\n 14171: a2 = u64 [a3 + 0xd0]\n 14175: a3 = u64 [a3 + 0xc8]\n 14179: a1 = a1 | a2\n 14182: a0 = a0 | a3\n 14185: a0 = a0 | a1\n 14188: jump @543 if a0 == 0\n      : @542 (gas: 1)\n 14191: jump @740\n      : @543 (gas: 4)\n 14194: a0 = u64 [s1 + 0xb8]\n 14198: a0 = i32 [a0]\n 14200: a1 = 0x23\n 14203: jump @545 if a1 <u a0\n      : @544 (gas: 1)\n 14206: jump @741\n      : @545 (gas: 5)\n 14209: a0 = s1 + 0x7ff\n 14213: a0 = a0 + 0x541\n 14217: ra = 0x1fc\n 14221: t0 = 0x3f2\n 14225: jump @1397\n      : @546 [@dyn 254] (gas: 14)\n 14228: a3 = s1 + 0x7ff\n 14232: a3 = a3 + 0x39\n 14235: a0 = u64 [a3 + 0x508]\n 14239: a1 = u64 [a3 + 0x510]\n 14243: a2 = u32 [a3 + 0x518]\n 14247: u64 [a3 + 1280] = 0\n 14251: a4 = a3 + 0x400\n 14255: u64 [a4 + 0xf8] = a2\n 14259: u64 [a4 + 0xf0] = a1\n 14263: a1 = s1 + 0x7ff\n 14267: a1 = a1 + 0x521\n 14271: u64 [a4 + 0xe8] = a0\n 14275: a0 = 0\n 14277: ra = 510, jump @19\n      : @547 [@dyn 255] (gas: 11)\n 14283: a0 = s1 + 0x7ff\n 14287: a0 = a0 + 0x39\n 14290: u64 [a0 + 1248] = 0\n 14294: u64 [a0 + 1240] = 0\n 14298: u64 [a0 + 1232] = 0\n 14302: a2 = a0\n 14304: a0 = 0x20\n 14307: a1 = s1 + 0x7ff\n 14311: a1 = a1 + 0x501\n 14315: u64 [a2 + 1224] = 0\n 14319: ra = 512, jump @19\n      : @548 [@dyn 256] (gas: 2)\n 14325: a1 = i32 [0x2026c]\n 14330: jump @550 if a1 >u 63\n      : @549 (gas: 2)\n 14334: u32 [0x2026c] = 0x40\n 14340: fallthrough\n      : @550 (gas: 11)\n 14341: a0 = sp + 0xffffffffffffffe0\n 14344: a2 = a0 & 0xffffffffffffffe0\n 14347: u64 [s1 + 0xb8] = a2\n 14351: sp = a2\n 14353: a0 = 0x20280\n 14358: i32 a0 = a0 + 0\n 14360: i32 a2 = a2 + 0\n 14362: a1 = 0x40\n 14365: ra = 0x202\n 14369: ecalli 6 // 'hash_keccak_256'\n 14371: fallthrough\n      : @551 [@dyn 257] (gas: 6)\n 14372: a3 = u64 [s1 + 0xb8]\n 14376: a0 = u64 [a3 + 0x18]\n 14379: a1 = u64 [a3 + 0x10]\n 14382: a2 = u64 [a3 + 0x8]\n 14385: a3 = u64 [a3]\n 14387: t0 = 516, jump @1351\n      : @552 [@dyn 258] (gas: 9)\n 14393: a4 = s1 + 0x1838\n 14397: u64 [a4 + 0x100] = a3\n 14401: u64 [a4 + 0xf8] = a2\n 14405: u64 [a4 + 0xf0] = a1\n 14409: u64 [a4 + 0xe8] = a0\n 14413: a0 = s1 + 0x7ff\n 14417: a0 = a0 + 0x4e1\n 14421: a1 = s1 + 0x1920\n 14425: ra = 518, jump @21\n      : @553 [@dyn 259] (gas: 15)\n 14431: a1 = s1 + 0x7ff\n 14435: a1 = a1 + 0x39\n 14438: a2 = a1 + 0x400\n 14442: a0 = u64 [a2 + 0xc0]\n 14446: u64 [s1 + 0xb8] = a0\n 14450: a0 = u64 [a2 + 0xb8]\n 14454: u64 [s1 + 0xb0] = a0\n 14458: a0 = u64 [a2 + 0xb0]\n 14462: u64 [s1 + 0xa8] = a0\n 14466: a0 = u64 [a2 + 0xa8]\n 14470: u64 [s1 + 0xa0] = a0\n 14474: a0 = s1 + 0x7ff\n 14478: a0 = a0 + 0x4c1\n 14482: a1 = 0x40\n 14485: ra = 520, jump @17\n      : @554 [@dyn 260] (gas: 4)\n 14491: a3 = s1 + 0x7ff\n 14495: a3 = a3 + 0x39\n 14498: a5 = a3 + 0x400\n 14502: t0 = 522, jump @1386\n      : @555 [@dyn 261] (gas: 1)\n 14508: jump @654 if a0 != 0\n      : @556 (gas: 15)\n 14512: a0 = u64 [s1 + 0xa0]\n 14516: a2 = a3 + 0x400\n 14520: u64 [a2 + 0x68] = a0\n 14523: a0 = u64 [s1 + 0xa8]\n 14527: u64 [a2 + 0x70] = a0\n 14530: a0 = u64 [s1 + 0xb0]\n 14534: u64 [a2 + 0x78] = a0\n 14537: a1 = s1 + 0x7ff\n 14541: a1 = a1 + 0x4a1\n 14545: a0 = u64 [s1 + 0xb8]\n 14549: u64 [a2 + 0x80] = a0\n 14553: a0 = a4\n 14555: u64 [s1 + 0xb8] = a4\n 14559: ra = 0x2d6\n 14563: jump @19\n      : @557 (gas: 11)\n 14566: a0 = s1 + 0x1838\n 14570: u64 [a0 + 352] = 0\n 14574: u64 [a0 + 344] = 0\n 14578: u64 [a0 + 336] = 0\n 14582: u64 [a0 + 328] = 0\n 14586: a0 = s1 + 0x2000\n 14590: i32 a0 = a0 + 0xfffffffffffff980\n 14594: ra = 0x20c\n 14598: ecalli 10 // 'value_transferred'\n 14600: t0 = 0x20e\n 14604: jump @1376\n      : @558 [@dyn 262] (gas: 1)\n 14607: t0 = 526, jump @1376\n      : @559 [@dyn 263] (gas: 1)\n 14613: t0 = 528, jump @1374\n      : @560 [@dyn 264] (gas: 1)\n 14619: jump @562 if a0 == 0\n      : @561 (gas: 1)\n 14622: jump @742\n      : @562 (gas: 3)\n 14625: a0 = u64 [s1 + 0xb8]\n 14629: a0 = i32 [a0]\n 14631: jump @564 if a0 >u 3\n      : @563 (gas: 1)\n 14635: jump @743\n      : @564 (gas: 1)\n 14638: ra = 530, jump @1131\n      : @565 [@dyn 265] (gas: 1)\n 14644: ra = 532, jump @1312\n      : @566 [@dyn 266] (gas: 9)\n 14650: a1 = s1 + 0x1838\n 14654: u64 [a1 + 384] = 0\n 14658: u64 [a1 + 376] = 0\n 14662: u64 [a1 + 368] = 0\n 14666: u64 [a1 + 360] = 0x5\n 14671: a0 = s1 + 0x7ff\n 14675: a0 = a0 + 0x681\n 14679: a1 = s1 + 0x19a0\n 14683: ra = 534, jump @21\n      : @567 [@dyn 267] (gas: 22)\n 14689: a3 = s1 + 0x7ff\n 14693: a3 = a3 + 0x39\n 14696: a4 = a3 + 0x600\n 14700: a0 = u64 [a4 + 0x48]\n 14703: a1 = u64 [a4 + 0x50]\n 14706: a2 = u64 [a4 + 0x58]\n 14709: a3 = u64 [a4 + 0x60]\n 14712: a0 = a0 & 0xffffffffffffff00\n 14716: a0 = a0 | 0x1\n 14719: a4 = s1 + 0x1838\n 14723: u64 [a4 + 416] = 0\n 14727: u64 [a4 + 408] = 0\n 14731: u64 [a4 + 400] = 0\n 14735: u64 [a4 + 392] = 0x5\n 14740: a5 = a4 + 0x100\n 14744: u64 [a5 + 0xc0] = a3\n 14748: u64 [a5 + 0xb8] = a2\n 14752: u64 [a5 + 0xb0] = a1\n 14756: u64 [a5 + 0xa8] = a0\n 14760: a0 = s1 + 0x19c0\n 14764: a1 = s1 + 0x19e0\n 14768: ra = 536, jump @24\n      : @568 [@dyn 268] (gas: 4)\n 14774: a0 = s1 + 0x7ff\n 14778: a0 = a0 + 0x661\n 14782: a1 = 0x40\n 14785: ra = 538, jump @17\n      : @569 [@dyn 269] (gas: 18)\n 14791: a0 = s1 + 0x7ff\n 14795: a0 = a0 + 0x39\n 14798: a2 = a0 + 0x600\n 14802: a1 = u64 [a2 + 0x40]\n 14805: u64 [s1 + 0xb0] = a1\n 14809: a1 = u64 [a2 + 0x38]\n 14812: u64 [s1 + 0xa8] = a1\n 14816: a1 = u64 [a2 + 0x30]\n 14819: u64 [s1 + 0xa0] = a1\n 14823: a0 = u64 [a2 + 0x28]\n 14826: u64 [s1 + 0xb8] = a0\n 14830: a0 = 0x30280\n 14835: u64 [s1 + 0x98] = a0\n 14839: i32 a0 = a0 + 0\n 14841: ra = 0x21c\n 14845: ecalli 3 // 'caller'\n 14847: t0 = 0x21e\n 14851: jump @1387\n      : @570 [@dyn 270] (gas: 1)\n 14854: t0 = 542, jump @1387\n      : @571 [@dyn 271] (gas: 1)\n 14860: jump @654 if a0 != 0\n      : @572 (gas: 2)\n 14864: a2 = u64 [s1 + 0x98]\n 14868: t0 = 544, jump @1321\n      : @573 [@dyn 272] (gas: 9)\n 14874: u64 [a2 + 1568] = 0\n 14878: a5 = a2 + 0x600\n 14882: u64 [a5 + 0x18] = a1\n 14885: u64 [a5 + 0x10] = a0\n 14888: a1 = s1 + 0x7ff\n 14892: a1 = a1 + 0x641\n 14896: u64 [a5 + 0x8] = a3\n 14899: a0 = a4\n 14901: ra = 546, jump @19\n      : @574 [@dyn 273] (gas: 16)\n 14907: a0 = u64 [0x20088]\n 14912: a1 = u64 [0x20090]\n 14917: a2 = s1 + 0x7ff\n 14921: a2 = a2 + 0x39\n 14924: u64 [a2 + 0x600] = a0\n 14928: a0 = u64 [0x20098]\n 14933: u64 [a2 + 0x5f8] = a1\n 14937: a3 = u64 [0x200a0]\n 14942: u64 [a2 + 0x5f0] = a0\n 14946: a0 = a2\n 14948: a1 = 0x20\n 14951: a2 = s1 + 0x7ff\n 14955: a2 = a2 + 0x621\n 14959: u64 [a0 + 0x5e8] = a3\n 14963: a0 = u64 [s1 + 0xb8]\n 14967: ra = 548, jump @25\n      : @575 [@dyn 274] (gas: 6)\n 14973: a1 = 0x20280\n 14978: i32 a1 = a1 + 0\n 14980: a0 = 0\n 14982: a2 = 0\n 14984: ecalli 7 // 'seal_return'\n 14986: jump @825\n      : @576 (gas: 5)\n 14989: i32 a1 = a1 + 0\n 14991: a0 = 0\n 14993: a2 = 0\n 14995: ecalli 7 // 'seal_return'\n 14997: jump @825\n      : @577 (gas: 10)\n 15000: u64 [a2 + 1632] = 0\n 15004: u64 [a2 + 1624] = 0\n 15008: u64 [a2 + 1616] = 0\n 15012: u64 [a2 + 1608] = 0\n 15016: a0 = s1 + 0x1000\n 15020: i32 a0 = a0 + 0x680\n 15024: ra = 0x226\n 15028: ecalli 10 // 'value_transferred'\n 15030: t0 = 0x228\n 15034: jump @1354\n      : @578 [@dyn 275] (gas: 1)\n 15037: t0 = 552, jump @1354\n      : @579 [@dyn 276] (gas: 1)\n 15043: t0 = 554, jump @1374\n      : @580 [@dyn 277] (gas: 1)\n 15049: jump @582 if a0 == 0\n      : @581 (gas: 1)\n 15052: jump @744\n      : @582 (gas: 3)\n 15055: a0 = u64 [s1 + 0xb8]\n 15059: a0 = i32 [a0]\n 15061: jump @584 if a0 >u 35\n      : @583 (gas: 1)\n 15065: jump @745\n      : @584 (gas: 7)\n 15068: a0 = s1 + 0x1000\n 15072: i32 a0 = a0 + 0x6a0\n 15076: a1 = 0x4\n 15079: ra = 0x22c\n 15083: ecalli 1 // 'call_data_load'\n 15085: t0 = 0x22e\n 15089: jump @1354\n      : @585 [@dyn 278] (gas: 1)\n 15092: t0 = 558, jump @1354\n      : @586 [@dyn 279] (gas: 11)\n 15098: a2 = u64 [a4 + 0x68]\n 15101: a0 = u64 [a4 + 0x70]\n 15104: a1 = u64 [a4 + 0x78]\n 15107: a3 = u64 [a4 + 0x80]\n 15111: u64 [s1 + 0x6b8] = a3\n 15115: u64 [s1 + 0x6b0] = a1\n 15119: u64 [s1 + 0x6a8] = a0\n 15123: a0 = s1 + 0x6c0\n 15127: a1 = s1 + 0x6a0\n 15131: u64 [s1 + 0x6a0] = a2\n 15135: ra = 560, jump @1024\n      : @587 [@dyn 280] (gas: 11)\n 15141: a0 = u64 [s1 + 0x6d8]\n 15145: u64 [s1 + 0xb8] = a0\n 15149: a0 = u64 [s1 + 0x6d0]\n 15153: u64 [s1 + 0xb0] = a0\n 15157: a0 = u64 [s1 + 0x6c8]\n 15161: u64 [s1 + 0xa8] = a0\n 15165: a0 = u64 [s1 + 0x6c0]\n 15169: u64 [s1 + 0xa0] = a0\n 15173: a0 = s1 + 0x680\n 15177: a1 = 0x40\n 15180: ra = 562, jump @17\n      : @588 [@dyn 281] (gas: 6)\n 15186: a4 = s1 + 0x600\n 15190: a0 = u64 [a4 + 0x98]\n 15194: a1 = u64 [a4 + 0x90]\n 15198: a2 = u64 [a4 + 0x88]\n 15202: a3 = u64 [a4 + 0x80]\n 15206: t0 = 564, jump @1384\n      : @589 [@dyn 282] (gas: 1)\n 15212: jump @654 if a0 != 0\n      : @590 (gas: 14)\n 15216: a0 = u64 [s1 + 0xa0]\n 15220: a2 = s1 + 0x600\n 15224: u64 [a2 + 0x60] = a0\n 15227: a0 = u64 [s1 + 0xa8]\n 15231: u64 [a2 + 0x68] = a0\n 15234: a0 = u64 [s1 + 0xb0]\n 15238: u64 [a2 + 0x70] = a0\n 15241: a1 = s1 + 0x660\n 15245: a0 = u64 [s1 + 0xb8]\n 15249: u64 [a2 + 0x78] = a0\n 15252: a0 = a3\n 15254: u64 [s1 + 0xb8] = a3\n 15258: ra = 0x2d6\n 15262: jump @19\n      : @591 (gas: 11)\n 15265: a0 = s1 + 0x1838\n 15269: u64 [a0 + 640] = 0\n 15273: u64 [a0 + 632] = 0\n 15277: u64 [a0 + 624] = 0\n 15281: u64 [a0 + 616] = 0\n 15285: a0 = s1 + 0x2000\n 15289: i32 a0 = a0 + 0xfffffffffffffaa0\n 15293: ra = 0x236\n 15297: ecalli 10 // 'value_transferred'\n 15299: t0 = 0x238\n 15303: jump @1361\n      : @592 [@dyn 283] (gas: 1)\n 15306: t0 = 568, jump @1361\n      : @593 [@dyn 284] (gas: 8)\n 15312: a0 = u64 [a4 + 0x78]\n 15315: a1 = u64 [a4 + 0x80]\n 15319: a2 = u64 [a4 + 0x70]\n 15322: a3 = u64 [a4 + 0x68]\n 15325: a1 = a1 | a2\n 15328: a0 = a0 | a3\n 15331: a0 = a0 | a1\n 15334: jump @595 if a0 == 0\n      : @594 (gas: 1)\n 15337: jump @746\n      : @595 (gas: 4)\n 15340: a0 = u64 [s1 + 0xb8]\n 15344: a0 = i32 [a0]\n 15346: a1 = 0x43\n 15349: jump @597 if a1 <u a0\n      : @596 (gas: 1)\n 15352: jump @747\n      : @597 (gas: 4)\n 15355: a0 = s1 + 0x1260\n 15359: ra = 0x23a\n 15363: t0 = 0x3f2\n 15367: jump @1397\n      : @598 [@dyn 285] (gas: 31)\n 15370: a1 = s1 + 0x1038\n 15374: a2 = a1 + 0x200\n 15378: a0 = u64 [a2 + 0x28]\n 15381: u64 [s1 + 0xb8] = a0\n 15385: a0 = u64 [a2 + 0x30]\n 15388: u64 [s1 + 0xb0] = a0\n 15392: a0 = u64 [a2 + 0x38]\n 15395: u64 [s1 + 0xa8] = a0\n 15399: a0 = u64 [a2 + 0x40]\n 15402: u64 [s1 + 0xa0] = a0\n 15406: a0 = s1 + 0x2000\n 15410: i32 a0 = a0 + 0xfffffffffffffac0\n 15414: a1 = 0x24\n 15417: ecalli 1 // 'call_data_load'\n 15419: a0 = s1 + 0x1838\n 15423: a2 = a0 + 0x200\n 15427: a1 = u64 [a2 + 0x88]\n 15431: u64 [s1 + 0x98] = a1\n 15435: a1 = u64 [a2 + 0x90]\n 15439: u64 [s1 + 0x90] = a1\n 15443: a1 = u64 [a2 + 0x98]\n 15447: u64 [s1 + 0x88] = a1\n 15451: a0 = u64 [a2 + 0xa0]\n 15455: u64 [s1 + 0x80] = a0\n 15459: a0 = 0x30280\n 15464: u64 [s1 + 0x78] = a0\n 15467: i32 a0 = a0 + 0\n 15469: ra = 0x23c\n 15473: ecalli 3 // 'caller'\n 15475: t0 = 0x23e\n 15479: jump @1353\n      : @599 [@dyn 286] (gas: 1)\n 15482: t0 = 574, jump @1353\n      : @600 [@dyn 287] (gas: 27)\n 15488: a3 = s1 + 0x1038\n 15492: a4 = u64 [s1 + 0x80]\n 15496: a5 = a3 + 0x100\n 15500: u64 [a5 + 0xe0] = a4\n 15504: a4 = u64 [s1 + 0x88]\n 15508: u64 [a5 + 0xd8] = a4\n 15512: a4 = u64 [s1 + 0x90]\n 15516: u64 [a5 + 0xd0] = a4\n 15520: a4 = u64 [s1 + 0x98]\n 15524: u64 [a5 + 0xc8] = a4\n 15528: a4 = u64 [s1 + 0xa0]\n 15532: u64 [a3 + 0x200] = a4\n 15536: a4 = u64 [s1 + 0xa8]\n 15540: u64 [a5 + 0xf8] = a4\n 15544: a4 = u64 [s1 + 0xb0]\n 15548: u64 [a5 + 0xf0] = a4\n 15552: a4 = u64 [s1 + 0xb8]\n 15556: u64 [a5 + 0xe8] = a4\n 15560: a4 = a3 + 0x200\n 15564: u64 [a4 + 0x18] = a2\n 15567: u64 [a4 + 0x10] = a0\n 15570: u64 [a4 + 0x8] = a1\n 15573: a0 = s1 + 0x1240\n 15577: a1 = s1 + 0x1220\n 15581: a2 = s1 + 0x1200\n 15585: u64 [a3 + 544] = 0\n 15589: ra = 576, jump @1079\n      : @601 [@dyn 288] (gas: 3)\n 15595: a0 = s1 + 0x11e0\n 15599: a1 = 0x40\n 15602: ra = 578, jump @17\n      : @602 [@dyn 289] (gas: 7)\n 15608: a3 = s1 + 0x1038\n 15612: a5 = a3 + 0x100\n 15616: a4 = u64 [a5 + 0xc0]\n 15620: a1 = u64 [a5 + 0xb8]\n 15624: a2 = u64 [a5 + 0xb0]\n 15628: a0 = u64 [a5 + 0xa8]\n 15632: t0 = 580, jump @1341\n      : @603 [@dyn 290] (gas: 1)\n 15638: jump @654 if a1 != 0\n      : @604 (gas: 8)\n 15642: u64 [a3 + 416] = 0\n 15646: u64 [a3 + 408] = 0\n 15650: u64 [a3 + 392] = 0x1\n 15655: a1 = s1 + 0x11c0\n 15659: u64 [a3 + 400] = 0\n 15663: u64 [s1 + 0xb8] = a0\n 15667: ra = 0x2d6\n 15671: jump @19\n      : @605 (gas: 10)\n 15674: u64 [a2 + 1568] = 0\n 15678: u64 [a2 + 1560] = 0\n 15682: u64 [a2 + 1552] = 0\n 15686: u64 [a2 + 1544] = 0\n 15690: a0 = s1 + 0x1000\n 15694: i32 a0 = a0 + 0x640\n 15698: ra = 0x246\n 15702: ecalli 10 // 'value_transferred'\n 15704: t0 = 0x248\n 15708: jump @1354\n      : @606 [@dyn 291] (gas: 1)\n 15711: t0 = 584, jump @1354\n      : @607 [@dyn 292] (gas: 1)\n 15717: t0 = 586, jump @1362\n      : @608 [@dyn 293] (gas: 1)\n 15723: jump @748 if a0 != 0\n      : @609 (gas: 4)\n 15727: a0 = u64 [s1 + 0xb8]\n 15731: a0 = i32 [a0]\n 15733: a1 = 0x63\n 15736: jump @749 if a1 >=u a0\n      : @610 (gas: 4)\n 15740: a0 = s1 + 0x640\n 15744: ra = 0x24c\n 15748: t0 = 0x3f2\n 15752: jump @1397\n      : @611 [@dyn 294] (gas: 12)\n 15755: a0 = u64 [s1 + 0x640]\n 15759: u64 [s1 + 0xb8] = a0\n 15763: a0 = u64 [s1 + 0x648]\n 15767: u64 [s1 + 0xb0] = a0\n 15771: a0 = u64 [s1 + 0x650]\n 15775: u64 [s1 + 0xa8] = a0\n 15779: a0 = u64 [s1 + 0x658]\n 15783: u64 [s1 + 0xa0] = a0\n 15787: a0 = s1 + 0x620\n 15791: ra = 0x24e\n 15795: t0 = 0x3fc\n 15799: jump @1397\n      : @612 [@dyn 295] (gas: 65)\n 15802: a0 = u64 [s1 + 0x620]\n 15806: u64 [s1 + 0x78] = a0\n 15809: a0 = u64 [s1 + 0x628]\n 15813: u64 [s1 + 0x70] = a0\n 15816: a0 = u64 [s1 + 0x630]\n 15820: u64 [s1 + 0x68] = a0\n 15823: a0 = u64 [s1 + 0x638]\n 15827: u64 [s1 + 0x60] = a0\n 15830: a0 = s1 + 0x1000\n 15834: i32 a0 = a0 + 0x660\n 15838: a1 = 0x44\n 15841: ecalli 1 // 'call_data_load'\n 15843: a0 = s1 + 0x1038\n 15847: a2 = a0 + 0x600\n 15851: a1 = u64 [a2 + 0x28]\n 15854: u64 [s1 + 0x98] = a1\n 15858: a1 = u64 [a2 + 0x30]\n 15861: u64 [s1 + 0x90] = a1\n 15865: a1 = u64 [a2 + 0x38]\n 15868: u64 [s1 + 0x88] = a1\n 15872: a0 = u64 [a2 + 0x40]\n 15875: u64 [s1 + 0x80] = a0\n 15879: a0 = 0x30280\n 15884: u64 [s1 + 0x58] = a0\n 15887: i32 a0 = a0 + 0\n 15889: ecalli 3 // 'caller'\n 15891: a2 = u64 [s1 + 0x58]\n 15894: a0 = u64 [a2 + 0x8]\n 15897: a1 = i32 [a2 + 0x10]\n 15900: a2 = u64 [a2]\n 15902: a0 = reverse a0\n 15904: a3 = a0 << 0x20\n 15907: a1 = reverse a1\n 15909: a1 = a1 >> 0x20\n 15912: a3 = a3 | a1\n 15915: a0 = a0 >> 0x20\n 15918: a1 = reverse a2\n 15920: a2 = a1 << 0x20\n 15923: a0 = a0 | a2\n 15926: a1 = a1 >> 0x20\n 15929: a2 = u64 [s1 + 0x80]\n 15933: u64 [s1 + 0x5d8] = a2\n 15937: a2 = u64 [s1 + 0x88]\n 15941: u64 [s1 + 0x5d0] = a2\n 15945: a2 = u64 [s1 + 0x90]\n 15949: u64 [s1 + 0x5c8] = a2\n 15953: a2 = u64 [s1 + 0x98]\n 15957: u64 [s1 + 0x5c0] = a2\n 15961: u64 [s1 + 1528] = 0\n 15965: a2 = u64 [s1 + 0xa0]\n 15969: a4 = s1 + 0x600\n 15973: u64 [a4 + 0x18] = a2\n 15976: a2 = u64 [s1 + 0xa8]\n 15980: u64 [a4 + 0x10] = a2\n 15983: a2 = u64 [s1 + 0xb0]\n 15987: u64 [a4 + 0x8] = a2\n 15990: a2 = u64 [s1 + 0xb8]\n 15994: u64 [a4] = a2\n 15996: u64 [s1 + 0x5f0] = a1\n 16000: u64 [s1 + 0x5e8] = a0\n 16004: a0 = s1 + 0x600\n 16008: a1 = s1 + 0x5e0\n 16012: a2 = s1 + 0x5c0\n 16016: u64 [s1 + 0x5e0] = a3\n 16020: ra = 592, jump @1032\n      : @613 [@dyn 296] (gas: 28)\n 16026: a0 = u64 [s1 + 0x80]\n 16030: u64 [s1 + 0x578] = a0\n 16034: a0 = u64 [s1 + 0x88]\n 16038: u64 [s1 + 0x570] = a0\n 16042: a0 = u64 [s1 + 0x90]\n 16046: u64 [s1 + 0x568] = a0\n 16050: a0 = u64 [s1 + 0x98]\n 16054: u64 [s1 + 0x560] = a0\n 16058: a0 = u64 [s1 + 0x60]\n 16061: u64 [s1 + 0x598] = a0\n 16065: a0 = u64 [s1 + 0x68]\n 16068: u64 [s1 + 0x590] = a0\n 16072: a0 = u64 [s1 + 0x70]\n 16075: u64 [s1 + 0x588] = a0\n 16079: a0 = u64 [s1 + 0x78]\n 16082: u64 [s1 + 0x580] = a0\n 16086: a0 = u64 [s1 + 0xa0]\n 16090: u64 [s1 + 0x5b8] = a0\n 16094: a0 = u64 [s1 + 0xa8]\n 16098: u64 [s1 + 0x5b0] = a0\n 16102: a0 = u64 [s1 + 0xb0]\n 16106: u64 [s1 + 0x5a8] = a0\n 16110: a0 = s1 + 0x5a0\n 16114: a1 = s1 + 0x580\n 16118: a2 = s1 + 0x560\n 16122: a3 = u64 [s1 + 0xb8]\n 16126: u64 [s1 + 0x5a0] = a3\n 16130: ra = 594, jump @1079\n      : @614 [@dyn 297] (gas: 3)\n 16136: a0 = s1 + 0x540\n 16140: a1 = 0x40\n 16143: ra = 596, jump @17\n      : @615 [@dyn 298] (gas: 6)\n 16149: a4 = s1 + 0x500\n 16153: a3 = u64 [a4 + 0x58]\n 16156: a1 = u64 [a4 + 0x50]\n 16159: a2 = u64 [a4 + 0x48]\n 16162: a0 = u64 [a4 + 0x40]\n 16165: t0 = 598, jump @1332\n      : @616 [@dyn 299] (gas: 1)\n 16171: jump @654 if a1 != 0\n      : @617 (gas: 8)\n 16175: u64 [s1 + 1336] = 0\n 16179: u64 [s1 + 1328] = 0\n 16183: u64 [s1 + 1320] = 0\n 16187: a1 = s1 + 0x520\n 16191: u64 [s1 + 1312] = 0x1\n 16196: u64 [s1 + 0xb8] = a0\n 16200: ra = 0x2d6\n 16204: jump @19\n      : @618 (gas: 9)\n 16207: a0 = s1 + 0x1838\n 16211: u64 [a0 + 832] = 0\n 16215: u64 [a0 + 824] = 0\n 16219: u64 [a0 + 816] = 0\n 16223: u64 [a0 + 808] = 0\n 16227: a0 = s1 + 0x2000\n 16231: i32 a0 = a0 + 0xfffffffffffffb60\n 16235: ecalli 10 // 'value_transferred'\n 16237: fallthrough\n      : @619 (gas: 10)\n 16238: a3 = s1 + 0x1838\n 16242: a4 = a3 + 0x300\n 16246: a0 = u64 [a4 + 0x38]\n 16249: a1 = u64 [a4 + 0x40]\n 16252: a2 = u64 [a4 + 0x30]\n 16255: a3 = u64 [a4 + 0x28]\n 16258: a1 = a1 | a2\n 16261: a0 = a0 | a3\n 16264: a0 = a0 | a1\n 16267: jump @750 if a0 != 0\n      : @620 (gas: 3)\n 16271: a0 = u64 [s1 + 0xb8]\n 16275: a0 = i32 [a0]\n 16277: jump @751 if a0 <=u 3\n      : @621 (gas: 3)\n 16282: a0 = s1 + 0x14e0\n 16286: a1 = 0x40\n 16289: ra = 600, jump @17\n      : @622 [@dyn 300] (gas: 7)\n 16295: a3 = s1 + 0x1038\n 16299: a5 = a3 + 0x400\n 16303: a4 = u64 [a5 + 0xc0]\n 16307: a1 = u64 [a5 + 0xb8]\n 16311: a2 = u64 [a5 + 0xb0]\n 16315: a0 = u64 [a5 + 0xa8]\n 16319: t0 = 602, jump @1341\n      : @623 [@dyn 301] (gas: 1)\n 16325: jump @654 if a1 != 0\n      : @624 (gas: 13)\n 16329: a1 = u64 [0x20028]\n 16334: a5 = a3 + 0x400\n 16338: u64 [a5 + 0xa0] = a1\n 16342: a4 = u64 [0x20030]\n 16347: a1 = u64 [0x20038]\n 16352: a2 = u64 [0x20040]\n 16357: u64 [a5 + 0x98] = a4\n 16361: u64 [a5 + 0x90] = a1\n 16365: a1 = s1 + 0x14c0\n 16369: u64 [a5 + 0x88] = a2\n 16373: u64 [s1 + 0xb8] = a0\n 16377: ra = 0x2d6\n 16381: jump @19\n      : @625 (gas: 10)\n 16384: u64 [a2 + 1440] = 0\n 16388: u64 [a2 + 1432] = 0\n 16392: u64 [a2 + 1424] = 0\n 16396: u64 [a2 + 1416] = 0\n 16400: a0 = s1 + 0x1000\n 16404: i32 a0 = a0 + 0x5c0\n 16408: ra = 0x25c\n 16412: ecalli 10 // 'value_transferred'\n 16414: t0 = 0x25e\n 16418: jump @1398\n      : @626 [@dyn 302] (gas: 1)\n 16421: t0 = 606, jump @1398\n      : @627 [@dyn 303] (gas: 8)\n 16427: a0 = u64 [a4 + 0x98]\n 16431: a1 = u64 [a4 + 0xa0]\n 16435: a2 = u64 [a4 + 0x90]\n 16439: a3 = u64 [a4 + 0x88]\n 16443: a1 = a1 | a2\n 16446: a0 = a0 | a3\n 16449: a0 = a0 | a1\n 16452: jump @752 if a0 != 0\n      : @628 (gas: 4)\n 16456: a0 = u64 [s1 + 0xb8]\n 16460: a0 = i32 [a0]\n 16462: a1 = 0x43\n 16465: jump @753 if a1 >=u a0\n      : @629 (gas: 4)\n 16469: a0 = s1 + 0x4a0\n 16473: ra = 0x260\n 16477: t0 = 0x3f2\n 16481: jump @1397\n      : @630 [@dyn 304] (gas: 36)\n 16484: a1 = s1 + 0x400\n 16488: a0 = u64 [a1 + 0xb0]\n 16492: u64 [s1 + 0x98] = a0\n 16496: a0 = u64 [a1 + 0xa8]\n 16500: u64 [s1 + 0xb0] = a0\n 16504: a0 = u64 [a1 + 0xa0]\n 16508: u64 [s1 + 0xb8] = a0\n 16512: a0 = sp + 0xffffffffffffffe0\n 16515: a0 = a0 & 0xffffffffffffffe0\n 16518: u64 [s1 + 0xa0] = a0\n 16522: sp = a0\n 16524: a0 = s1 + 0x1000\n 16528: i32 a0 = a0 + 0x5e0\n 16532: a1 = 0x24\n 16535: ecalli 1 // 'call_data_load'\n 16537: a0 = s1 + 0x1038\n 16541: a4 = a0 + 0x500\n 16545: a1 = u64 [a4 + 0xc0]\n 16549: a2 = u64 [a4 + 0xb8]\n 16553: a3 = u64 [a4 + 0xb0]\n 16557: a0 = u64 [a4 + 0xa8]\n 16561: u64 [s1 + 0x50] = a1\n 16564: a4 = u64 [s1 + 0xa0]\n 16568: u64 [a4 + 0x18] = a1\n 16571: u64 [s1 + 0x48] = a2\n 16574: u64 [a4 + 0x10] = a2\n 16577: u64 [s1 + 0x40] = a3\n 16580: u64 [a4 + 0x8] = a3\n 16583: u64 [s1 + 0x38] = a0\n 16586: u64 [a4] = a0\n 16588: a0 = 0x30280\n 16593: u64 [s1 + 0xa8] = a0\n 16597: i32 a0 = a0 + 0\n 16599: u64 [s1 + 0x90] = a0\n 16603: ecalli 3 // 'caller'\n 16605: fallthrough\n      : @631 (gas: 7)\n 16606: a2 = u64 [s1 + 0xa8]\n 16610: a0 = u32 [a2 + 0x10]\n 16613: a1 = u64 [a2]\n 16615: a2 = u64 [a2 + 0x8]\n 16618: a0 = a0 | a1\n 16621: a0 = a0 | a2\n 16624: jump @754 if a0 == 0\n      : @632 (gas: 9)\n 16628: a0 = u64 [s1 + 0x98]\n 16632: a0 = a0 << 0x20\n 16635: a1 = a0 >> 0x20\n 16638: a0 = u64 [s1 + 0xb0]\n 16642: a2 = u64 [s1 + 0xb8]\n 16646: a0 = a0 | a2\n 16649: u64 [s1 + 0x98] = a1\n 16653: a0 = a0 | a1\n 16656: jump @759 if a0 == 0\n      : @633 (gas: 23)\n 16660: a0 = u64 [s1 + 0x90]\n 16664: ecalli 3 // 'caller'\n 16666: a2 = u64 [s1 + 0xa8]\n 16670: a0 = u64 [a2 + 0x8]\n 16673: a1 = i32 [a2 + 0x10]\n 16676: a2 = u64 [a2]\n 16678: a0 = reverse a0\n 16680: a3 = a0 << 0x20\n 16683: a1 = reverse a1\n 16685: a1 = a1 >> 0x20\n 16688: a3 = a3 | a1\n 16691: a0 = a0 >> 0x20\n 16694: a1 = reverse a2\n 16696: a2 = a1 << 0x20\n 16699: a0 = a0 | a2\n 16702: a1 = a1 >> 0x20\n 16705: u64 [s1 + 1176] = 0\n 16709: u64 [s1 + 0x490] = a1\n 16713: u64 [s1 + 0x488] = a0\n 16717: a1 = s1 + 0x480\n 16721: u64 [s1 + 0x480] = a3\n 16725: a0 = 0\n 16727: ra = 610, jump @19\n      : @634 [@dyn 305] (gas: 7)\n 16733: u64 [s1 + 1144] = 0\n 16737: u64 [s1 + 1136] = 0\n 16741: u64 [s1 + 1120] = 0x1\n 16746: a0 = 0x20\n 16749: a1 = s1 + 0x460\n 16753: u64 [s1 + 1128] = 0\n 16757: ra = 612, jump @19\n      : @635 [@dyn 306] (gas: 3)\n 16763: a1 = 0x2026c\n 16768: a0 = i32 [0x2026c]\n 16773: jump @637 if a0 >u 63\n      : @636 (gas: 2)\n 16777: u32 [0x2026c] = 0x40\n 16783: fallthrough\n      : @637 (gas: 15)\n 16784: a0 = sp + 0xffffffffffffffe0\n 16787: a2 = a0 & 0xffffffffffffffe0\n 16790: u64 [s1 + 0x78] = a2\n 16793: sp = a2\n 16795: a0 = 0x20280\n 16800: i32 a0 = a0 + 0\n 16802: i32 a2 = a2 + 0\n 16804: u64 [s1 + 0x88] = a1\n 16808: a1 = 0x40\n 16811: u64 [s1 + 0x80] = a0\n 16815: ra = 0x266\n 16819: ecalli 6 // 'hash_keccak_256'\n 16821: a3 = u64 [s1 + 0x78]\n 16824: t0 = 0x268\n 16828: jump @1383\n      : @638 [@dyn 307] (gas: 2)\n 16831: a3 = u64 [s1 + 0x78]\n 16834: t0 = 616, jump @1383\n      : @639 [@dyn 308] (gas: 21)\n 16840: u64 [s1 + 0x70] = a0\n 16843: a0 = reverse a1\n 16845: u64 [s1 + 0x68] = a0\n 16848: a0 = reverse a2\n 16850: u64 [s1 + 0x60] = a0\n 16853: a0 = reverse a3\n 16855: u64 [s1 + 0x58] = a0\n 16858: a0 = sp + 0xffffffffffffffe0\n 16861: a0 = a0 & 0xffffffffffffffe0\n 16864: u64 [s1 + 0x78] = a0\n 16867: sp = a0\n 16869: u64 [s1 + 1112] = 0\n 16873: a0 = u64 [s1 + 0x98]\n 16877: u64 [s1 + 0x450] = a0\n 16881: a0 = u64 [s1 + 0xb0]\n 16885: u64 [s1 + 0x448] = a0\n 16889: a1 = s1 + 0x440\n 16893: a0 = u64 [s1 + 0xb8]\n 16897: u64 [s1 + 0x440] = a0\n 16901: a0 = 0\n 16903: ra = 618, jump @19\n      : @640 [@dyn 309] (gas: 12)\n 16909: a0 = u64 [s1 + 0x58]\n 16912: a3 = s1 + 0x400\n 16916: u64 [a3 + 0x38] = a0\n 16919: a0 = u64 [s1 + 0x60]\n 16922: u64 [a3 + 0x30] = a0\n 16925: a0 = u64 [s1 + 0x68]\n 16928: u64 [a3 + 0x28] = a0\n 16931: a0 = 0x20\n 16934: a1 = s1 + 0x420\n 16938: a2 = u64 [s1 + 0x70]\n 16941: u64 [a3 + 0x20] = a2\n 16944: ra = 620, jump @19\n      : @641 [@dyn 310] (gas: 3)\n 16950: a1 = u64 [s1 + 0x88]\n 16954: a0 = i32 [a1]\n 16956: jump @643 if a0 >u 63\n      : @642 (gas: 2)\n 16960: u32 [a1 + 0] = 0x40\n 16963: fallthrough\n      : @643 (gas: 24)\n 16964: a0 = sp + 0xffffffffffffffe0\n 16967: a0 = a0 & 0xffffffffffffffe0\n 16970: u64 [s1 + 0x88] = a0\n 16974: sp = a0\n 16976: i32 a2 = a0 + 0\n 16978: a1 = 0x40\n 16981: a0 = u64 [s1 + 0x80]\n 16985: ecalli 6 // 'hash_keccak_256'\n 16987: a3 = u64 [s1 + 0x88]\n 16991: a0 = u64 [a3 + 0x18]\n 16994: a1 = u64 [a3 + 0x10]\n 16997: a2 = u64 [a3 + 0x8]\n 17000: a3 = u64 [a3]\n 17002: a4 = reverse a0\n 17004: a1 = reverse a1\n 17006: a2 = reverse a2\n 17008: a3 = reverse a3\n 17010: a0 = u64 [s1 + 0x78]\n 17013: u64 [a0 + 0x18] = a3\n 17016: u64 [a0 + 0x10] = a2\n 17019: u64 [a0 + 0x8] = a1\n 17022: u64 [a0] = a4\n 17024: a1 = u64 [s1 + 0xa0]\n 17028: ra = 622, jump @24\n      : @644 [@dyn 311] (gas: 3)\n 17034: a0 = s1 + 0x400\n 17038: a1 = 0x40\n 17041: ra = 624, jump @17\n      : @645 [@dyn 312] (gas: 6)\n 17047: a4 = s1 + 0x400\n 17051: a0 = u64 [a4 + 0x18]\n 17054: a1 = u64 [a4 + 0x10]\n 17057: a2 = u64 [a4 + 0x8]\n 17060: a3 = u64 [a4]\n 17062: t0 = 626, jump @1384\n      : @646 [@dyn 313] (gas: 1)\n 17068: jump @654 if a0 != 0\n      : @647 (gas: 12)\n 17072: a0 = u64 [s1 + 0x38]\n 17075: u64 [s1 + 0x3e0] = a0\n 17079: a0 = u64 [s1 + 0x40]\n 17082: u64 [s1 + 0x3e8] = a0\n 17086: a0 = u64 [s1 + 0x48]\n 17089: u64 [s1 + 0x3f0] = a0\n 17093: a1 = s1 + 0x3e0\n 17097: a0 = u64 [s1 + 0x50]\n 17100: u64 [s1 + 0x3f8] = a0\n 17104: a0 = a3\n 17106: u64 [s1 + 0xa0] = a3\n 17110: ra = 628, jump @19\n      : @648 [@dyn 314] (gas: 6)\n 17116: a0 = u64 [s1 + 0x90]\n 17120: ra = 0x276\n 17124: ecalli 3 // 'caller'\n 17126: a2 = u64 [s1 + 0xa8]\n 17130: t0 = 0x278\n 17134: jump @1325\n      : @649 [@dyn 315] (gas: 2)\n 17137: a2 = u64 [s1 + 0xa8]\n 17141: t0 = 632, jump @1325\n      : @650 [@dyn 316] (gas: 31)\n 17147: t0 = a1 | a0\n 17150: a3 = a3 >> 0x20\n 17153: a2 = reverse a2\n 17155: a1 = a2 << 0x20\n 17158: a1 = a1 | a3\n 17161: a2 = a2 >> 0x20\n 17164: u64 [s1 + 920] = 0\n 17168: a0 = u64 [s1 + 0x98]\n 17172: u64 [s1 + 0x390] = a0\n 17176: a0 = u64 [s1 + 0xb0]\n 17180: u64 [s1 + 0x388] = a0\n 17184: a0 = u64 [s1 + 0xb8]\n 17188: u64 [s1 + 0x380] = a0\n 17192: u64 [s1 + 952] = 0\n 17196: a3 = u64 [0x200e8]\n 17201: a4 = u64 [0x200f0]\n 17206: a5 = u64 [0x200f8]\n 17211: a0 = u64 [0x20100]\n 17216: u64 [s1 + 0x3d8] = a3\n 17220: u64 [s1 + 0x3d0] = a4\n 17224: u64 [s1 + 0x3c8] = a5\n 17228: u64 [s1 + 0x3c0] = a0\n 17232: u64 [s1 + 0x3b0] = a2\n 17236: u64 [s1 + 0x3a8] = a1\n 17240: a1 = 0x20\n 17243: a2 = s1 + 0x3c0\n 17247: a3 = s1 + 0x3a0\n 17251: a4 = s1 + 0x380\n 17255: u64 [s1 + 0x3a0] = t0\n 17259: a0 = u64 [s1 + 0xa0]\n 17263: ra = 634, jump @27\n      : @651 [@dyn 317] (gas: 3)\n 17269: a0 = s1 + 0x360\n 17273: a1 = 0x40\n 17276: ra = 636, jump @17\n      : @652 [@dyn 318] (gas: 6)\n 17282: a4 = s1 + 0x300\n 17286: a3 = u64 [a4 + 0x78]\n 17289: a1 = u64 [a4 + 0x70]\n 17292: a2 = u64 [a4 + 0x68]\n 17295: a0 = u64 [a4 + 0x60]\n 17298: t0 = 638, jump @1332\n      : @653 [@dyn 319] (gas: 1)\n 17304: jump @777 if a1 == 0\n      : @654 (gas: 1)\n 17308: trap\n      : @655 (gas: 7)\n 17309: u64 [s1 + 600] = 0\n 17313: u64 [s1 + 592] = 0\n 17317: u64 [s1 + 584] = 0\n 17321: a1 = s1 + 0x240\n 17325: u64 [s1 + 576] = 0x3\n 17330: a0 = 0\n 17332: ra = 640, jump @19\n      : @656 [@dyn 320] (gas: 1)\n 17338: t0 = 642, jump @1389\n      : @657 [@dyn 321] (gas: 30)\n 17344: t0 = u64 [0x20108]\n 17349: a3 = u64 [0x20110]\n 17354: a1 = u64 [s1 + 0x30]\n 17357: a0 = a1 + 0x20\n 17360: u64 [s1 + 0x50] = a0\n 17363: a0 = a0 <u a1\n 17366: a1 = u64 [s1 + 0x20]\n 17369: a2 = a1 + a0\n 17372: u64 [s1 + 0x48] = a2\n 17375: a1 = a2 <u a1\n 17378: a1 = a0 if a0 == 0\n 17381: a5 = u64 [0x20118]\n 17386: a0 = u64 [0x20120]\n 17391: ra = t0\n 17393: u64 [a4 + 0x18] = t0\n 17396: u64 [s1 + 0x78] = a3\n 17399: u64 [a4 + 0x10] = a3\n 17402: t0 = a5\n 17404: u64 [a4 + 0x8] = a5\n 17407: u64 [s1 + 0x98] = a4\n 17411: a2 = a0\n 17413: u64 [a4] = a0\n 17415: a0 = u64 [s1 + 0x28]\n 17418: a1 = a1 + a0\n 17421: u64 [s1 + 0x40] = a1\n 17424: a0 = a1 <u a0\n 17427: a1 = u64 [s1 + 0x18]\n 17430: a0 = a0 + a1\n 17433: u64 [s1 + 0x38] = a0\n 17436: fallthrough\n      : @658 (gas: 3)\n 17437: u64 [s1 + 0x80] = a2\n 17441: u64 [s1 + 0x88] = t0\n 17445: t0 = 644, jump @1340\n      : @659 [@dyn 322] (gas: 1)\n 17451: jump @661 if a3 != 0\n      : @660 (gas: 1)\n 17454: jump @416\n      : @661 (gas: 5)\n 17457: a0 = s1 + 0x220\n 17461: a1 = u64 [s1 + 0x98]\n 17465: u64 [s1 + 0xa8] = t1\n 17469: u64 [s1 + 0xa0] = t2\n 17473: ra = 646, jump @21\n      : @662 [@dyn 323] (gas: 1)\n 17479: t0 = 648, jump @1344\n      : @663 [@dyn 324] (gas: 6)\n 17485: t0 = a1 <u a5\n 17488: a5 = u64 [s1 + 0xb0]\n 17492: a3 = u64 [s1 + 0x38]\n 17495: a5 = a5 + a3\n 17498: a5 = a5 + t0\n 17501: t0 = 650, jump @1378\n      : @664 [@dyn 325] (gas: 1)\n 17507: jump @654 if a1 != 0\n      : @665 (gas: 12)\n 17511: a3 = s1 + 0x200\n 17515: a2 = u64 [a3 + 0x38]\n 17518: a1 = u64 [a3 + 0x30]\n 17521: a5 = u64 [a3 + 0x28]\n 17524: a4 = u64 [a3 + 0x20]\n 17527: u64 [a3] = a4\n 17529: u64 [a3 + 0x8] = a5\n 17532: u64 [a3 + 0x10] = a1\n 17535: a1 = s1 + 0x200\n 17539: u64 [a3 + 0x18] = a2\n 17542: u64 [s1 + 0xb8] = t2\n 17546: ra = 652, jump @19\n      : @666 [@dyn 326] (gas: 1)\n 17552: t0 = 654, jump @1327\n      : @667 [@dyn 327] (gas: 14)\n 17558: t0 = ra\n 17560: a5 = u64 [s1 + 0x98]\n 17564: u64 [a5 + 0x8] = ra\n 17567: a2 = a3\n 17569: u64 [a5] = a3\n 17571: a3 = t2\n 17573: u64 [a5 + 0x10] = a3\n 17576: ra = a0\n 17578: u64 [a5 + 0x18] = a0\n 17581: u64 [s1 + 0x78] = a3\n 17584: u64 [s1 + 0xb8] = t1\n 17588: t2 = a1\n 17590: t1 = a4\n 17592: jump @658\n      : @668 (gas: 8)\n 17595: a2 = s1 + 0x1038\n 17599: u64 [a2 + 224] = 0\n 17603: u64 [a2 + 216] = 0\n 17607: u64 [a2 + 208] = 0\n 17611: a1 = s1 + 0x1100\n 17615: u64 [a2 + 200] = 0x4\n 17620: a0 = 0\n 17622: ra = 656, jump @19\n      : @669 [@dyn 328] (gas: 1)\n 17628: t0 = 658, jump @1389\n      : @670 [@dyn 329] (gas: 30)\n 17634: t0 = u64 [0x20068]\n 17639: a3 = u64 [0x20070]\n 17644: a1 = u64 [s1 + 0x30]\n 17647: a0 = a1 + 0x20\n 17650: u64 [s1 + 0x50] = a0\n 17653: a0 = a0 <u a1\n 17656: a1 = u64 [s1 + 0x20]\n 17659: a2 = a1 + a0\n 17662: u64 [s1 + 0x48] = a2\n 17665: a1 = a2 <u a1\n 17668: a1 = a0 if a0 == 0\n 17671: a5 = u64 [0x20078]\n 17676: a0 = u64 [0x20080]\n 17681: ra = t0\n 17683: u64 [a4 + 0x18] = t0\n 17686: u64 [s1 + 0x78] = a3\n 17689: u64 [a4 + 0x10] = a3\n 17692: t0 = a5\n 17694: u64 [a4 + 0x8] = a5\n 17697: u64 [s1 + 0x98] = a4\n 17701: a2 = a0\n 17703: u64 [a4] = a0\n 17705: a0 = u64 [s1 + 0x28]\n 17708: a1 = a1 + a0\n 17711: u64 [s1 + 0x40] = a1\n 17714: a0 = a1 <u a0\n 17717: a1 = u64 [s1 + 0x18]\n 17720: a0 = a0 + a1\n 17723: u64 [s1 + 0x38] = a0\n 17726: fallthrough\n      : @671 (gas: 3)\n 17727: u64 [s1 + 0x80] = a2\n 17731: u64 [s1 + 0x88] = t0\n 17735: t0 = 660, jump @1340\n      : @672 [@dyn 330] (gas: 1)\n 17741: jump @674 if a3 != 0\n      : @673 (gas: 1)\n 17744: jump @495\n      : @674 (gas: 5)\n 17747: a0 = s1 + 0x10e0\n 17751: a1 = u64 [s1 + 0x98]\n 17755: u64 [s1 + 0xa8] = t1\n 17759: u64 [s1 + 0xa0] = t2\n 17763: ra = 662, jump @21\n      : @675 [@dyn 331] (gas: 1)\n 17769: t0 = 664, jump @1344\n      : @676 [@dyn 332] (gas: 6)\n 17775: t0 = a1 <u a5\n 17778: a5 = u64 [s1 + 0xb0]\n 17782: a3 = u64 [s1 + 0x38]\n 17785: a5 = a5 + a3\n 17788: a5 = a5 + t0\n 17791: t0 = 666, jump @1378\n      : @677 [@dyn 333] (gas: 1)\n 17797: jump @654 if a1 != 0\n      : @678 (gas: 12)\n 17801: a5 = s1 + 0x1038\n 17805: t0 = u64 [a5 + 0xc0]\n 17809: a1 = u64 [a5 + 0xb8]\n 17813: a2 = u64 [a5 + 0xb0]\n 17817: a4 = u64 [a5 + 0xa8]\n 17821: u64 [a5 + 0x88] = a4\n 17825: u64 [a5 + 0x90] = a2\n 17829: u64 [a5 + 0x98] = a1\n 17833: a1 = s1 + 0x10c0\n 17837: u64 [a5 + 0xa0] = t0\n 17841: u64 [s1 + 0xb8] = t2\n 17845: ra = 668, jump @19\n      : @679 [@dyn 334] (gas: 1)\n 17851: t0 = 670, jump @1327\n      : @680 [@dyn 335] (gas: 14)\n 17857: t0 = ra\n 17859: a5 = u64 [s1 + 0x98]\n 17863: u64 [a5 + 0x8] = ra\n 17866: a2 = a3\n 17868: u64 [a5] = a3\n 17870: a3 = t2\n 17872: u64 [a5 + 0x10] = a3\n 17875: ra = a0\n 17877: u64 [a5 + 0x18] = a0\n 17880: u64 [s1 + 0x78] = a3\n 17883: u64 [s1 + 0xb8] = t1\n 17887: t2 = a1\n 17889: t1 = a4\n 17891: jump @671\n      : @681 (gas: 6)\n 17894: a1 = 0x20280\n 17899: i32 a1 = a1 + 0\n 17901: a0 = 0x1\n 17904: a2 = 0\n 17906: ecalli 7 // 'seal_return'\n 17908: jump @825\n      : @682 (gas: 6)\n 17911: a1 = 0x20280\n 17916: i32 a1 = a1 + 0\n 17918: a0 = 0x1\n 17921: a2 = 0\n 17923: ecalli 7 // 'seal_return'\n 17925: jump @825\n      : @683 (gas: 6)\n 17928: a1 = 0x20280\n 17933: i32 a1 = a1 + 0\n 17935: a0 = 0x1\n 17938: a2 = 0\n 17940: ecalli 7 // 'seal_return'\n 17942: jump @825\n      : @684 (gas: 6)\n 17945: a1 = 0x20280\n 17950: i32 a1 = a1 + 0\n 17952: a0 = 0x1\n 17955: a2 = 0\n 17957: ecalli 7 // 'seal_return'\n 17959: jump @825\n      : @685 (gas: 6)\n 17962: a1 = 0x20280\n 17967: i32 a1 = a1 + 0\n 17969: a0 = 0x1\n 17972: a2 = 0\n 17974: ecalli 7 // 'seal_return'\n 17976: jump @825\n      : @686 (gas: 6)\n 17979: a1 = 0x20280\n 17984: i32 a1 = a1 + 0\n 17986: a0 = 0x1\n 17989: a2 = 0\n 17991: ecalli 7 // 'seal_return'\n 17993: jump @825\n      : @687 (gas: 6)\n 17996: a1 = 0x20280\n 18001: i32 a1 = a1 + 0\n 18003: a0 = 0x1\n 18006: a2 = 0\n 18008: ecalli 7 // 'seal_return'\n 18010: jump @825\n      : @688 (gas: 6)\n 18013: a1 = 0x20280\n 18018: i32 a1 = a1 + 0\n 18020: a0 = 0x1\n 18023: a2 = 0\n 18025: ecalli 7 // 'seal_return'\n 18027: jump @825\n      : @689 (gas: 6)\n 18030: a1 = 0x20280\n 18035: i32 a1 = a1 + 0\n 18037: a0 = 0x1\n 18040: a2 = 0\n 18042: ecalli 7 // 'seal_return'\n 18044: jump @825\n      : @690 (gas: 6)\n 18047: a1 = 0x20280\n 18052: i32 a1 = a1 + 0\n 18054: a0 = 0x1\n 18057: a2 = 0\n 18059: ecalli 7 // 'seal_return'\n 18061: jump @825\n      : @691 (gas: 6)\n 18064: a1 = 0x20280\n 18069: i32 a1 = a1 + 0\n 18071: a0 = 0x1\n 18074: a2 = 0\n 18076: ecalli 7 // 'seal_return'\n 18078: jump @825\n      : @692 (gas: 6)\n 18081: a1 = 0x20280\n 18086: i32 a1 = a1 + 0\n 18088: a0 = 0x1\n 18091: a2 = 0\n 18093: ecalli 7 // 'seal_return'\n 18095: jump @825\n      : @693 (gas: 6)\n 18098: a1 = 0x20280\n 18103: i32 a1 = a1 + 0\n 18105: a0 = 0x1\n 18108: a2 = 0\n 18110: ecalli 7 // 'seal_return'\n 18112: jump @825\n      : @694 (gas: 6)\n 18115: a1 = 0x20280\n 18120: i32 a1 = a1 + 0\n 18122: a0 = 0x1\n 18125: a2 = 0\n 18127: ecalli 7 // 'seal_return'\n 18129: jump @825\n      : @695 (gas: 6)\n 18132: u64 [s1 + 272] = 0\n 18136: u64 [s1 + 264] = 0\n 18140: u64 [s1 + 256] = 0\n 18144: t0 = 0x2a0\n 18148: a0 = 0x4e487b7100000000\n 18158: fallthrough\n      : @696 [@dyn 336] (gas: 4)\n 18159: a1 = s1 + 0x100\n 18163: u64 [s1 + 0x118] = a0\n 18167: a0 = 0\n 18169: ra = 674, jump @19\n      : @697 [@dyn 337] (gas: 7)\n 18175: u64 [s1 + 248] = 0\n 18179: u64 [s1 + 240] = 0\n 18183: u64 [s1 + 224] = 0x22\n 18188: a0 = 0x4\n 18191: a1 = s1 + 0xe0\n 18195: u64 [s1 + 232] = 0\n 18199: ra = 676, jump @19\n      : @698 [@dyn 338] (gas: 2)\n 18205: a1 = i32 [0x2026c]\n 18210: jump @700 if a1 >u 63\n      : @699 (gas: 3)\n 18214: u32 [0x2026c] = 0x40\n 18220: a1 = 0x20280\n 18225: jump @776\n      : @700 (gas: 2)\n 18228: a1 = 0x20280\n 18233: jump @776\n      : @701 (gas: 6)\n 18236: a1 = 0x20280\n 18241: i32 a1 = a1 + 0\n 18243: a0 = 0x1\n 18246: a2 = 0\n 18248: ecalli 7 // 'seal_return'\n 18250: jump @825\n      : @702 (gas: 6)\n 18253: a1 = 0x20280\n 18258: i32 a1 = a1 + 0\n 18260: a0 = 0x1\n 18263: a2 = 0\n 18265: ecalli 7 // 'seal_return'\n 18267: jump @825\n      : @703 (gas: 9)\n 18270: u64 [a2 + 344] = 0\n 18274: u64 [a2 + 336] = 0\n 18278: u64 [a2 + 328] = 0\n 18282: a0 = 0xe2517d3f00000000\n 18292: a1 = s1 + 0x7ff\n 18296: a1 = a1 + 0x181\n 18300: u64 [a2 + 0x160] = a0\n 18304: a0 = 0\n 18306: ra = 678, jump @19\n      : @704 [@dyn 339] (gas: 6)\n 18312: a0 = u64 [s1 + 0x20]\n 18315: ra = 0x2a8\n 18319: ecalli 3 // 'caller'\n 18321: a2 = u64 [s1 + 0x70]\n 18324: t0 = 0x2aa\n 18328: jump @1321\n      : @705 [@dyn 340] (gas: 2)\n 18331: a2 = u64 [s1 + 0x70]\n 18334: t0 = 682, jump @1321\n      : @706 [@dyn 341] (gas: 9)\n 18340: u64 [a2 + 320] = 0\n 18344: a4 = a2 + 0x100\n 18348: u64 [a4 + 0x38] = a1\n 18351: u64 [a4 + 0x30] = a0\n 18354: a0 = 0x4\n 18357: a1 = s1 + 0x7ff\n 18361: a1 = a1 + 0x161\n 18365: u64 [a4 + 0x28] = a3\n 18368: ra = 684, jump @19\n      : @707 [@dyn 342] (gas: 16)\n 18374: a0 = u64 [s1 + 0x40]\n 18377: a1 = s1 + 0x7ff\n 18381: a1 = a1 + 0x39\n 18384: a2 = a1 + 0x100\n 18388: u64 [a2 + 0x20] = a0\n 18391: a0 = u64 [s1 + 0x30]\n 18394: u64 [a2 + 0x18] = a0\n 18397: a0 = u64 [s1 + 0x28]\n 18400: u64 [a2 + 0x10] = a0\n 18403: a3 = a1\n 18405: a0 = 0x24\n 18408: a1 = s1 + 0x7ff\n 18412: a1 = a1 + 0x141\n 18416: a2 = u64 [s1 + 0x38]\n 18419: u64 [a3 + 0x108] = a2\n 18423: ra = 686, jump @19\n      : @708 [@dyn 343] (gas: 3)\n 18429: a0 = u64 [s1 + 0x98]\n 18433: a0 = i32 [a0]\n 18435: jump @710 if a0 >u 95\n      : @709 (gas: 7)\n 18439: a1 = u64 [s1 + 0x98]\n 18443: u32 [a1 + 0] = 0x60\n 18446: a0 = 0x1\n 18449: a2 = 0x44\n 18452: a1 = u64 [s1 + 0xb8]\n 18456: ecalli 7 // 'seal_return'\n 18458: jump @718\n      : @710 (gas: 5)\n 18461: a0 = 0x1\n 18464: a2 = 0x44\n 18467: a1 = u64 [s1 + 0xb8]\n 18471: ecalli 7 // 'seal_return'\n 18473: jump @718\n      : @711 (gas: 12)\n 18476: a0 = s1 + 0x7ff\n 18480: a0 = a0 + 0x39\n 18483: u64 [a0 + 408] = 0\n 18487: u64 [a0 + 400] = 0\n 18491: u64 [a0 + 392] = 0\n 18495: a2 = a0\n 18497: a0 = 0xec442f0500000000\n 18507: a1 = s1 + 0x7ff\n 18511: a1 = a1 + 0x1c1\n 18515: u64 [a2 + 0x1a0] = a0\n 18519: a0 = 0\n 18521: ra = 688, jump @19\n      : @712 [@dyn 344] (gas: 12)\n 18527: a0 = s1 + 0x7ff\n 18531: a0 = a0 + 0x39\n 18534: u64 [a0 + 384] = 0\n 18538: u64 [a0 + 376] = 0\n 18542: u64 [a0 + 368] = 0\n 18546: a2 = a0\n 18548: a0 = 0x4\n 18551: a1 = s1 + 0x7ff\n 18555: a1 = a1 + 0x1a1\n 18559: u64 [a2 + 360] = 0\n 18563: ra = 0x2b4\n 18567: jump @19\n      : @713 (gas: 12)\n 18570: a0 = s1 + 0x7ff\n 18574: a0 = a0 + 0x39\n 18577: u64 [a0 + 472] = 0\n 18581: u64 [a0 + 464] = 0\n 18585: u64 [a0 + 456] = 0\n 18589: a2 = a0\n 18591: a0 = 0x4e487b7100000000\n 18601: a1 = s1 + 0x7ff\n 18605: a1 = a1 + 0x201\n 18609: u64 [a2 + 0x1e0] = a0\n 18613: a0 = 0\n 18615: ra = 690, jump @19\n      : @714 [@dyn 345] (gas: 11)\n 18621: a1 = s1 + 0x7ff\n 18625: a1 = a1 + 0x39\n 18628: u64 [a1 + 448] = 0\n 18632: u64 [a1 + 440] = 0\n 18636: u64 [a1 + 424] = 0x11\n 18641: a2 = a1\n 18643: a0 = 0x4\n 18646: a1 = s1 + 0x7ff\n 18650: a1 = a1 + 0x1e1\n 18654: u64 [a2 + 432] = 0\n 18658: ra = 692, jump @19\n      : @715 [@dyn 346] (gas: 3)\n 18664: a0 = u64 [s1 + 0x98]\n 18668: a0 = i32 [a0]\n 18670: jump @717 if a0 >u 63\n      : @716 (gas: 7)\n 18674: a1 = u64 [s1 + 0x98]\n 18678: u32 [a1 + 0] = 0x40\n 18681: a0 = 0x1\n 18684: a2 = 0x24\n 18687: a1 = u64 [s1 + 0xb8]\n 18691: ecalli 7 // 'seal_return'\n 18693: jump @718\n      : @717 (gas: 5)\n 18695: a0 = 0x1\n 18698: a2 = 0x24\n 18701: a1 = u64 [s1 + 0xb8]\n 18705: ecalli 7 // 'seal_return'\n 18707: fallthrough\n      : @718 (gas: 6)\n 18708: a1 = 0x20280\n 18713: i32 a1 = a1 + 0\n 18715: a0 = 0x1\n 18718: a2 = 0\n 18720: ecalli 7 // 'seal_return'\n 18722: jump @825\n      : @719 (gas: 6)\n 18725: a1 = 0x20280\n 18730: i32 a1 = a1 + 0\n 18732: a0 = 0x1\n 18735: a2 = 0\n 18737: ecalli 7 // 'seal_return'\n 18739: jump @825\n      : @720 (gas: 12)\n 18742: a0 = s1 + 0x7ff\n 18746: a0 = a0 + 0x39\n 18749: u64 [a0 + 1944] = 0\n 18753: u64 [a0 + 1936] = 0\n 18757: u64 [a0 + 1928] = 0\n 18761: a2 = a0\n 18763: a0 = 0x4e487b7100000000\n 18773: a1 = s1 + 0x7ff\n 18777: a1 = a1 + 0x7c1\n 18781: u64 [a2 + 0x7a0] = a0\n 18785: a0 = 0\n 18787: ra = 694, jump @19\n      : @721 [@dyn 347] (gas: 11)\n 18793: a1 = s1 + 0x7ff\n 18797: a1 = a1 + 0x39\n 18800: u64 [a1 + 1920] = 0\n 18804: u64 [a1 + 1912] = 0\n 18808: u64 [a1 + 1896] = 0x22\n 18813: a2 = a1\n 18815: a0 = 0x4\n 18818: a1 = s1 + 0x7ff\n 18822: a1 = a1 + 0x7a1\n 18826: u64 [a2 + 1904] = 0\n 18830: ra = 696, jump @19\n      : @722 [@dyn 348] (gas: 2)\n 18836: a1 = i32 [0x2026c]\n 18841: jump @724 if a1 >u 63\n      : @723 (gas: 3)\n 18845: u32 [0x2026c] = 0x40\n 18851: a1 = 0x20280\n 18856: jump @776\n      : @724 (gas: 2)\n 18859: a1 = 0x20280\n 18864: jump @776\n      : @725 (gas: 6)\n 18867: a1 = 0x20280\n 18872: i32 a1 = a1 + 0\n 18874: a0 = 0x1\n 18877: a2 = 0\n 18879: ecalli 7 // 'seal_return'\n 18881: jump @825\n      : @726 (gas: 6)\n 18884: a1 = 0x20280\n 18889: i32 a1 = a1 + 0\n 18891: a0 = 0x1\n 18894: a2 = 0\n 18896: ecalli 7 // 'seal_return'\n 18898: jump @825\n      : @727 (gas: 9)\n 18901: u64 [a3 + 120] = 0\n 18904: u64 [a3 + 112] = 0\n 18907: a0 = 0x8dfc202b00000000\n 18917: u64 [a3 + 0x80] = a0\n 18921: a1 = s1 + 0x7ff\n 18925: a1 = a1 + 0xa1\n 18929: u64 [a3 + 104] = 0\n 18932: a0 = 0\n 18934: ra = 698, jump @19\n      : @728 [@dyn 349] (gas: 2)\n 18940: a1 = i32 [0x2026c]\n 18945: jump @730 if a1 >u 31\n      : @729 (gas: 3)\n 18949: u32 [0x2026c] = 0x20\n 18955: a1 = 0x20280\n 18960: jump @731\n      : @730 (gas: 2)\n 18962: a1 = 0x20280\n 18967: fallthrough\n      : @731 (gas: 5)\n 18968: i32 a1 = a1 + 0\n 18970: a0 = 0x1\n 18973: a2 = 0x4\n 18976: ecalli 7 // 'seal_return'\n 18978: fallthrough\n      : @732 (gas: 6)\n 18979: a1 = 0x20280\n 18984: i32 a1 = a1 + 0\n 18986: a0 = 0x1\n 18989: a2 = 0\n 18991: ecalli 7 // 'seal_return'\n 18993: jump @825\n      : @733 (gas: 6)\n 18996: a1 = 0x20280\n 19001: i32 a1 = a1 + 0\n 19003: a0 = 0x1\n 19006: a2 = 0\n 19008: ecalli 7 // 'seal_return'\n 19010: jump @825\n      : @734 (gas: 1)\n 19013: jump @781 if a0 != 3578229791\n      : @735 (gas: 11)\n 19021: a0 = s1 + 0x1838\n 19025: u64 [a0 + 736] = 0\n 19029: u64 [a0 + 728] = 0\n 19033: u64 [a0 + 720] = 0\n 19037: u64 [a0 + 712] = 0\n 19041: a0 = s1 + 0x2000\n 19045: i32 a0 = a0 + 0xfffffffffffffb00\n 19049: ra = 0x2bc\n 19053: ecalli 10 // 'value_transferred'\n 19055: t0 = 0x2be\n 19059: jump @1361\n      : @736 [@dyn 350] (gas: 1)\n 19062: t0 = 702, jump @1361\n      : @737 [@dyn 351] (gas: 1)\n 19068: t0 = 704, jump @1392\n      : @738 [@dyn 352] (gas: 1)\n 19074: jump @792 if a0 == 0\n      : @739 (gas: 6)\n 19078: a1 = 0x20280\n 19083: i32 a1 = a1 + 0\n 19085: a0 = 0x1\n 19088: a2 = 0\n 19090: ecalli 7 // 'seal_return'\n 19092: jump @825\n      : @740 (gas: 6)\n 19095: a1 = 0x20280\n 19100: i32 a1 = a1 + 0\n 19102: a0 = 0x1\n 19105: a2 = 0\n 19107: ecalli 7 // 'seal_return'\n 19109: jump @825\n      : @741 (gas: 6)\n 19112: a1 = 0x20280\n 19117: i32 a1 = a1 + 0\n 19119: a0 = 0x1\n 19122: a2 = 0\n 19124: ecalli 7 // 'seal_return'\n 19126: jump @825\n      : @742 (gas: 6)\n 19129: a1 = 0x20280\n 19134: i32 a1 = a1 + 0\n 19136: a0 = 0x1\n 19139: a2 = 0\n 19141: ecalli 7 // 'seal_return'\n 19143: jump @825\n      : @743 (gas: 6)\n 19146: a1 = 0x20280\n 19151: i32 a1 = a1 + 0\n 19153: a0 = 0x1\n 19156: a2 = 0\n 19158: ecalli 7 // 'seal_return'\n 19160: jump @825\n      : @744 (gas: 6)\n 19163: a1 = 0x20280\n 19168: i32 a1 = a1 + 0\n 19170: a0 = 0x1\n 19173: a2 = 0\n 19175: ecalli 7 // 'seal_return'\n 19177: jump @825\n      : @745 (gas: 6)\n 19180: a1 = 0x20280\n 19185: i32 a1 = a1 + 0\n 19187: a0 = 0x1\n 19190: a2 = 0\n 19192: ecalli 7 // 'seal_return'\n 19194: jump @825\n      : @746 (gas: 6)\n 19197: a1 = 0x20280\n 19202: i32 a1 = a1 + 0\n 19204: a0 = 0x1\n 19207: a2 = 0\n 19209: ecalli 7 // 'seal_return'\n 19211: jump @825\n      : @747 (gas: 6)\n 19214: a1 = 0x20280\n 19219: i32 a1 = a1 + 0\n 19221: a0 = 0x1\n 19224: a2 = 0\n 19226: ecalli 7 // 'seal_return'\n 19228: jump @825\n      : @748 (gas: 6)\n 19231: a1 = 0x20280\n 19236: i32 a1 = a1 + 0\n 19238: a0 = 0x1\n 19241: a2 = 0\n 19243: ecalli 7 // 'seal_return'\n 19245: jump @825\n      : @749 (gas: 6)\n 19248: a1 = 0x20280\n 19253: i32 a1 = a1 + 0\n 19255: a0 = 0x1\n 19258: a2 = 0\n 19260: ecalli 7 // 'seal_return'\n 19262: jump @825\n      : @750 (gas: 6)\n 19265: a1 = 0x20280\n 19270: i32 a1 = a1 + 0\n 19272: a0 = 0x1\n 19275: a2 = 0\n 19277: ecalli 7 // 'seal_return'\n 19279: jump @825\n      : @751 (gas: 6)\n 19282: a1 = 0x20280\n 19287: i32 a1 = a1 + 0\n 19289: a0 = 0x1\n 19292: a2 = 0\n 19294: ecalli 7 // 'seal_return'\n 19296: jump @825\n      : @752 (gas: 6)\n 19299: a1 = 0x20280\n 19304: i32 a1 = a1 + 0\n 19306: a0 = 0x1\n 19309: a2 = 0\n 19311: ecalli 7 // 'seal_return'\n 19313: jump @825\n      : @753 (gas: 6)\n 19316: a1 = 0x20280\n 19321: i32 a1 = a1 + 0\n 19323: a0 = 0x1\n 19326: a2 = 0\n 19328: ecalli 7 // 'seal_return'\n 19330: jump @825\n      : @754 (gas: 8)\n 19333: u64 [s1 + 752] = 0\n 19337: u64 [s1 + 744] = 0\n 19341: u64 [s1 + 736] = 0\n 19345: a0 = 0xe602df0500000000\n 19355: a1 = s1 + 0x2e0\n 19359: u64 [s1 + 0x2f8] = a0\n 19363: a0 = 0\n 19365: ra = 706, jump @19\n      : @755 [@dyn 353] (gas: 7)\n 19371: u64 [s1 + 728] = 0\n 19375: u64 [s1 + 720] = 0\n 19379: u64 [s1 + 712] = 0\n 19383: a0 = 0x4\n 19386: a1 = s1 + 0x2c0\n 19390: u64 [s1 + 704] = 0\n 19394: ra = 708, jump @19\n      : @756 [@dyn 354] (gas: 2)\n 19400: a1 = i32 [0x2026c]\n 19405: jump @758 if a1 >u 63\n      : @757 (gas: 3)\n 19409: u32 [0x2026c] = 0x40\n 19415: a1 = 0x20280\n 19420: jump @776\n      : @758 (gas: 2)\n 19423: a1 = 0x20280\n 19428: jump @776\n      : @759 (gas: 8)\n 19431: u64 [s1 + 816] = 0\n 19435: u64 [s1 + 808] = 0\n 19439: u64 [s1 + 800] = 0\n 19443: a0 = 0x94280d6200000000\n 19453: a1 = s1 + 0x320\n 19457: u64 [s1 + 0x338] = a0\n 19461: a0 = 0\n 19463: ra = 710, jump @19\n      : @760 [@dyn 355] (gas: 7)\n 19469: u64 [s1 + 792] = 0\n 19473: u64 [s1 + 784] = 0\n 19477: u64 [s1 + 776] = 0\n 19481: a0 = 0x4\n 19484: a1 = s1 + 0x300\n 19488: u64 [s1 + 768] = 0\n 19492: ra = 712, jump @19\n      : @761 [@dyn 356] (gas: 2)\n 19498: a1 = i32 [0x2026c]\n 19503: jump @763 if a1 >u 63\n      : @762 (gas: 3)\n 19507: u32 [0x2026c] = 0x40\n 19513: a1 = 0x20280\n 19518: jump @776\n      : @763 (gas: 2)\n 19521: a1 = 0x20280\n 19526: jump @776\n      : @764 (gas: 6)\n 19529: u64 [s1 + 336] = 0\n 19533: u64 [s1 + 328] = 0\n 19537: u64 [s1 + 320] = 0\n 19541: t0 = 0x2ca\n 19545: a0 = 0x4e487b7100000000\n 19555: fallthrough\n      : @765 [@dyn 357] (gas: 4)\n 19556: a1 = s1 + 0x140\n 19560: u64 [s1 + 0x158] = a0\n 19564: a0 = 0\n 19566: ra = 716, jump @19\n      : @766 [@dyn 358] (gas: 7)\n 19572: u64 [s1 + 312] = 0\n 19576: u64 [s1 + 304] = 0\n 19580: u64 [s1 + 288] = 0x41\n 19585: a0 = 0x4\n 19588: a1 = s1 + 0x120\n 19592: u64 [s1 + 296] = 0\n 19596: ra = 718, jump @19\n      : @767 [@dyn 359] (gas: 2)\n 19602: a1 = i32 [0x2026c]\n 19607: jump @769 if a1 >u 63\n      : @768 (gas: 3)\n 19611: u32 [0x2026c] = 0x40\n 19617: a1 = 0x20280\n 19622: jump @776\n      : @769 (gas: 2)\n 19625: a1 = 0x20280\n 19630: jump @776\n      : @770 (gas: 9)\n 19632: a0 = s1 + 0x7ff\n 19636: a0 = a0 + 0x39\n 19639: u64 [a0 + 2008] = 0\n 19643: u64 [a0 + 2000] = 0\n 19647: u64 [a0 + 1992] = 0\n 19651: a2 = a0\n 19653: t0 = 0x2d0\n 19657: a0 = 0x4e487b7100000000\n 19667: fallthrough\n      : @771 [@dyn 360] (gas: 4)\n 19668: a1 = s1 + 0x1000\n 19672: u64 [a2 + 0x7e0] = a0\n 19676: a0 = 0\n 19678: ra = 722, jump @19\n      : @772 [@dyn 361] (gas: 11)\n 19684: a1 = s1 + 0x7ff\n 19688: a1 = a1 + 0x39\n 19691: u64 [a1 + 1984] = 0\n 19695: u64 [a1 + 1976] = 0\n 19699: u64 [a1 + 1960] = 0x41\n 19704: a2 = a1\n 19706: a0 = 0x4\n 19709: a1 = s1 + 0x7ff\n 19713: a1 = a1 + 0x7e1\n 19717: u64 [a2 + 1968] = 0\n 19721: ra = 724, jump @19\n      : @773 [@dyn 362] (gas: 2)\n 19727: a1 = i32 [0x2026c]\n 19732: jump @775 if a1 >u 63\n      : @774 (gas: 3)\n 19736: u32 [0x2026c] = 0x40\n 19742: a1 = 0x20280\n 19747: jump @776\n      : @775 (gas: 2)\n 19749: a1 = 0x20280\n 19754: fallthrough\n      : @776 (gas: 5)\n 19755: i32 a1 = a1 + 0\n 19757: a0 = 0x1\n 19760: a2 = 0x24\n 19763: ecalli 7 // 'seal_return'\n 19765: fallthrough\n      : @777 (gas: 7)\n 19766: u64 [s1 + 856] = 0\n 19770: u64 [s1 + 848] = 0\n 19774: u64 [s1 + 840] = 0\n 19778: a1 = s1 + 0x340\n 19782: u64 [s1 + 832] = 0x1\n 19787: u64 [s1 + 0xb8] = a0\n 19791: ra = 726, jump @19\n      : @778 [@dyn 363] (gas: 3)\n 19797: a1 = 0x20\n 19800: a0 = u64 [s1 + 0xb8]\n 19804: ra = 728, jump @33\n      : @779 [@dyn 364] (gas: 6)\n 19810: i32 a1 = a0 + 0\n 19812: a2 = 0x20\n 19815: a0 = 0\n 19817: ra = 0x2da\n 19821: ecalli 7 // 'seal_return'\n 19823: jump @781\n      : @780 (gas: 5)\n 19825: a2 = 0x20\n 19828: a0 = 0\n 19830: ra = 0x2da\n 19834: ecalli 7 // 'seal_return'\n 19836: fallthrough\n      : @781 [@dyn 365] (gas: 1)\n 19837: jump @787 if a0 != 33540519\n      : @782 (gas: 11)\n 19844: a0 = s1 + 0x1038\n 19848: u64 [a0 + 1312] = 0\n 19852: u64 [a0 + 1304] = 0\n 19856: u64 [a0 + 1296] = 0\n 19860: u64 [a0 + 1288] = 0\n 19864: a0 = s1 + 0x1000\n 19868: i32 a0 = a0 + 0x540\n 19872: ra = 0x2dc\n 19876: ecalli 10 // 'value_transferred'\n 19878: t0 = 0x2de\n 19882: jump @1398\n      : @783 [@dyn 366] (gas: 1)\n 19885: t0 = 734, jump @1398\n      : @784 [@dyn 367] (gas: 1)\n 19891: t0 = 736, jump @1362\n      : @785 [@dyn 368] (gas: 1)\n 19897: jump @799 if a0 == 0\n      : @786 (gas: 6)\n 19901: a1 = 0x20280\n 19906: i32 a1 = a1 + 0\n 19908: a0 = 0x1\n 19911: a2 = 0\n 19913: ecalli 7 // 'seal_return'\n 19915: jump @825\n      : @787 (gas: 1)\n 19918: jump @794 if a0 != 791671133\n      : @788 (gas: 11)\n 19926: a0 = s1 + 0x1038\n 19930: u64 [a0 + 1696] = 0\n 19934: u64 [a0 + 1688] = 0\n 19938: u64 [a0 + 1680] = 0\n 19942: u64 [a0 + 1672] = 0\n 19946: a0 = s1 + 0x1000\n 19950: i32 a0 = a0 + 0x6c0\n 19954: ra = 0x2e2\n 19958: ecalli 10 // 'value_transferred'\n 19960: t0 = 0x2e4\n 19964: jump @1354\n      : @789 [@dyn 369] (gas: 1)\n 19967: t0 = 740, jump @1354\n      : @790 [@dyn 370] (gas: 8)\n 19973: a0 = u64 [a4 + 0x98]\n 19977: a1 = u64 [a4 + 0xa0]\n 19981: a2 = u64 [a4 + 0x90]\n 19985: a3 = u64 [a4 + 0x88]\n 19989: a1 = a1 | a2\n 19992: a0 = a0 | a3\n 19995: a0 = a0 | a1\n 19998: jump @810 if a0 == 0\n      : @791 (gas: 6)\n 20002: a1 = 0x20280\n 20007: i32 a1 = a1 + 0\n 20009: a0 = 0x1\n 20012: a2 = 0\n 20014: ecalli 7 // 'seal_return'\n 20016: jump @825\n      : @792 (gas: 3)\n 20019: a0 = u64 [s1 + 0xb8]\n 20023: a0 = i32 [a0]\n 20025: jump @801 if a0 >u 67\n      : @793 (gas: 6)\n 20030: a1 = 0x20280\n 20035: i32 a1 = a1 + 0\n 20037: a0 = 0x1\n 20040: a2 = 0\n 20042: ecalli 7 // 'seal_return'\n 20044: jump @825\n      : @794 (gas: 1)\n 20047: jump @806 if a0 != 911641278\n      : @795 (gas: 11)\n 20055: a0 = s1 + 0x1038\n 20059: u64 [a0 + 1792] = 0\n 20063: u64 [a0 + 1784] = 0\n 20067: u64 [a0 + 1776] = 0\n 20071: u64 [a0 + 1768] = 0\n 20075: a0 = s1 + 0x1000\n 20079: i32 a0 = a0 + 0x720\n 20083: ra = 0x2e6\n 20087: ecalli 10 // 'value_transferred'\n 20089: t0 = 0x2e8\n 20093: jump @1354\n      : @796 [@dyn 371] (gas: 1)\n 20096: t0 = 744, jump @1354\n      : @797 [@dyn 372] (gas: 8)\n 20102: a0 = u64 [a4 + 0xf8]\n 20106: a1 = u64 [a3 + 0x700]\n 20110: a2 = u64 [a4 + 0xf0]\n 20114: a3 = u64 [a4 + 0xe8]\n 20118: a1 = a1 | a2\n 20121: a0 = a0 | a3\n 20124: a0 = a0 | a1\n 20127: jump @815 if a0 == 0\n      : @798 (gas: 6)\n 20131: a1 = 0x20280\n 20136: i32 a1 = a1 + 0\n 20138: a0 = 0x1\n 20141: a2 = 0\n 20143: ecalli 7 // 'seal_return'\n 20145: jump @825\n      : @799 (gas: 3)\n 20148: a0 = u64 [s1 + 0xb8]\n 20152: a0 = i32 [a0]\n 20154: jump @812 if a0 >u 35\n      : @800 (gas: 6)\n 20159: a1 = 0x20280\n 20164: i32 a1 = a1 + 0\n 20166: a0 = 0x1\n 20169: a2 = 0\n 20171: ecalli 7 // 'seal_return'\n 20173: jump @825\n      : @801 (gas: 18)\n 20176: a0 = s1 + 0x2000\n 20180: i32 a0 = a0 + 0xfffffffffffffb20\n 20184: a1 = 0x4\n 20187: ecalli 1 // 'call_data_load'\n 20189: a0 = s1 + 0x1838\n 20193: a2 = a0 + 0x200\n 20197: a1 = u64 [a2 + 0xe8]\n 20201: u64 [s1 + 0xb8] = a1\n 20205: a1 = u64 [a2 + 0xf0]\n 20209: u64 [s1 + 0xb0] = a1\n 20213: a1 = u64 [a2 + 0xf8]\n 20217: u64 [s1 + 0xa8] = a1\n 20221: a0 = u64 [a0 + 0x300]\n 20225: u64 [s1 + 0xa0] = a0\n 20229: a0 = s1 + 0x1380\n 20233: ra = 0x2ea\n 20237: t0 = 0x3fc\n 20241: jump @1397\n      : @802 [@dyn 373] (gas: 22)\n 20244: a1 = s1 + 0x1038\n 20248: a2 = a1 + 0x300\n 20252: a0 = u64 [a2 + 0x48]\n 20255: u64 [s1 + 0x98] = a0\n 20259: a0 = u64 [a2 + 0x50]\n 20262: u64 [s1 + 0x90] = a0\n 20266: a0 = u64 [a2 + 0x58]\n 20269: u64 [s1 + 0x88] = a0\n 20273: a0 = u64 [a2 + 0x60]\n 20276: u64 [s1 + 0x80] = a0\n 20280: a0 = u64 [s1 + 0xa0]\n 20284: u64 [a2 + 0x20] = a0\n 20287: a0 = u64 [s1 + 0xa8]\n 20291: u64 [a2 + 0x18] = a0\n 20294: a0 = u64 [s1 + 0xb0]\n 20298: u64 [a2 + 0x10] = a0\n 20301: a3 = a1\n 20303: a0 = s1 + 0x1360\n 20307: a1 = s1 + 0x1340\n 20311: a2 = u64 [s1 + 0xb8]\n 20315: u64 [a3 + 0x308] = a2\n 20319: ra = 748, jump @1024\n      : @803 [@dyn 374] (gas: 13)\n 20325: a4 = s1 + 0x1038\n 20329: a5 = a4 + 0x300\n 20333: a1 = u64 [a5 + 0x28]\n 20336: a0 = u64 [a5 + 0x30]\n 20339: a2 = u64 [a5 + 0x38]\n 20342: a3 = u64 [a5 + 0x40]\n 20345: u64 [a5] = a3\n 20347: a3 = a4 + 0x200\n 20351: u64 [a3 + 0xf8] = a2\n 20355: u64 [a3 + 0xf0] = a0\n 20359: a0 = s1 + 0x1320\n 20363: u64 [a3 + 0xe8] = a1\n 20367: ra = 750, jump @1160\n      : @804 [@dyn 375] (gas: 25)\n 20373: a0 = s1 + 0x1038\n 20377: a1 = u64 [s1 + 0x80]\n 20381: a2 = a0 + 0x200\n 20385: u64 [a2 + 0xa0] = a1\n 20389: a1 = u64 [s1 + 0x88]\n 20393: u64 [a2 + 0x98] = a1\n 20397: a1 = u64 [s1 + 0x90]\n 20401: u64 [a2 + 0x90] = a1\n 20405: a1 = u64 [s1 + 0x98]\n 20409: u64 [a2 + 0x88] = a1\n 20413: a1 = u64 [s1 + 0xa0]\n 20417: u64 [a2 + 0xc0] = a1\n 20421: a1 = u64 [s1 + 0xa8]\n 20425: u64 [a2 + 0xb8] = a1\n 20429: a1 = u64 [s1 + 0xb0]\n 20433: u64 [a2 + 0xb0] = a1\n 20437: a4 = a0\n 20439: a0 = s1 + 0x1300\n 20443: a1 = s1 + 0x12e0\n 20447: a2 = s1 + 0x12c0\n 20451: a3 = u64 [s1 + 0xb8]\n 20455: u64 [a4 + 0x2a8] = a3\n 20459: ra = 0x2f0\n 20463: t0 = 0x51a\n 20467: jump @1381\n      : @805 [@dyn 376] (gas: 2)\n 20470: a1 = 0x20280\n 20475: jump @576\n      : @806 (gas: 1)\n 20478: jump @817 if a0 != 1117154408\n      : @807 (gas: 9)\n 20486: a0 = s1 + 0x1838\n 20490: u64 [a0 + 96] = 0\n 20493: u64 [a0 + 88] = 0\n 20496: u64 [a0 + 80] = 0\n 20499: u64 [a0 + 72] = 0\n 20502: a0 = s1 + 0x2000\n 20506: i32 a0 = a0 + 0xfffffffffffff880\n 20510: ecalli 10 // 'value_transferred'\n 20512: fallthrough\n      : @808 (gas: 9)\n 20513: a3 = s1 + 0x1838\n 20517: a0 = u64 [a3 + 0x58]\n 20520: a1 = u64 [a3 + 0x60]\n 20523: a2 = u64 [a3 + 0x50]\n 20526: a3 = u64 [a3 + 0x48]\n 20529: a1 = a1 | a2\n 20532: a0 = a0 | a3\n 20535: a0 = a0 | a1\n 20538: jump @825 if a0 == 0\n      : @809 (gas: 6)\n 20542: a1 = 0x20280\n 20547: i32 a1 = a1 + 0\n 20549: a0 = 0x1\n 20552: a2 = 0\n 20554: ecalli 7 // 'seal_return'\n 20556: jump @825\n      : @810 (gas: 3)\n 20559: a0 = u64 [s1 + 0xb8]\n 20563: a0 = i32 [a0]\n 20565: jump @827 if a0 >u 67\n      : @811 (gas: 6)\n 20570: a1 = 0x20280\n 20575: i32 a1 = a1 + 0\n 20577: a0 = 0x1\n 20580: a2 = 0\n 20582: ecalli 7 // 'seal_return'\n 20584: jump @825\n      : @812 (gas: 7)\n 20587: a0 = s1 + 0x1000\n 20591: i32 a0 = a0 + 0x560\n 20595: a1 = 0x4\n 20598: ecalli 1 // 'call_data_load'\n 20600: t0 = 0x2f2\n 20604: a1 = s1 + 0x1038\n 20608: fallthrough\n      : @813 [@dyn 377] (gas: 11)\n 20609: a4 = a1 + 0x500\n 20613: a0 = u64 [a4 + 0x40]\n 20616: a2 = u64 [a4 + 0x38]\n 20619: a3 = u64 [a4 + 0x28]\n 20622: a1 = u64 [a4 + 0x30]\n 20625: a4 = a0 << 0x20\n 20628: a4 = a4 >> 0x20\n 20631: a2 = a2 | a3\n 20634: a4 = a4 | a1\n 20637: a4 = a4 | a2\n 20640: jump @832 if a4 == 0\n      : @814 (gas: 6)\n 20644: a1 = 0x20280\n 20649: i32 a1 = a1 + 0\n 20651: a0 = 0x1\n 20654: a2 = 0\n 20656: ecalli 7 // 'seal_return'\n 20658: jump @825\n      : @815 (gas: 4)\n 20661: a0 = u64 [s1 + 0xb8]\n 20665: a0 = i32 [a0]\n 20667: a1 = 0x43\n 20670: jump @836 if a1 <u a0\n      : @816 (gas: 6)\n 20674: a1 = 0x20280\n 20679: i32 a1 = a1 + 0\n 20681: a0 = 0x1\n 20684: a2 = 0\n 20686: ecalli 7 // 'seal_return'\n 20688: jump @825\n      : @817 (gas: 1)\n 20690: jump @823 if a0 != 2043438992\n      : @818 (gas: 11)\n 20697: a0 = s1 + 0x1838\n 20701: u64 [a0 + 288] = 0\n 20705: u64 [a0 + 280] = 0\n 20709: u64 [a0 + 272] = 0\n 20713: u64 [a0 + 264] = 0\n 20717: a0 = s1 + 0x2000\n 20721: i32 a0 = a0 + 0xfffffffffffff940\n 20725: ra = 0x2f4\n 20729: ecalli 10 // 'value_transferred'\n 20731: t0 = 0x2f6\n 20735: jump @1376\n      : @819 [@dyn 378] (gas: 1)\n 20738: t0 = 758, jump @1376\n      : @820 [@dyn 379] (gas: 1)\n 20744: t0 = 760, jump @1362\n      : @821 [@dyn 380] (gas: 1)\n 20750: jump @841 if a0 == 0\n      : @822 (gas: 6)\n 20754: a1 = 0x20280\n 20759: i32 a1 = a1 + 0\n 20761: a0 = 0x1\n 20764: a2 = 0\n 20766: ecalli 7 // 'seal_return'\n 20768: jump @825\n      : @823 (gas: 6)\n 20770: a1 = 0x20280\n 20775: i32 a1 = a1 + 0\n 20777: a0 = 0x1\n 20780: a2 = 0\n 20782: ecalli 7 // 'seal_return'\n 20784: jump @825\n      : @824 (gas: 5)\n 20786: i32 a1 = a1 + 0\n 20788: a0 = 0x1\n 20791: a2 = 0\n 20793: ecalli 7 // 'seal_return'\n 20795: fallthrough\n      : @825 (gas: 3)\n 20796: a0 = u64 [s1 + 0xb8]\n 20800: a0 = i32 [a0]\n 20802: jump @843 if a0 >u 35\n      : @826 (gas: 2)\n 20807: a1 = 0x20280\n 20812: jump @824\n      : @827 (gas: 18)\n 20814: a0 = s1 + 0x1000\n 20818: i32 a0 = a0 + 0x6e0\n 20822: a1 = 0x4\n 20825: ecalli 1 // 'call_data_load'\n 20827: a0 = s1 + 0x1038\n 20831: a2 = a0 + 0x600\n 20835: a1 = u64 [a2 + 0xa8]\n 20839: u64 [s1 + 0xb8] = a1\n 20843: a1 = u64 [a2 + 0xb0]\n 20847: u64 [s1 + 0xb0] = a1\n 20851: a1 = u64 [a2 + 0xb8]\n 20855: u64 [s1 + 0xa8] = a1\n 20859: a0 = u64 [a2 + 0xc0]\n 20863: u64 [s1 + 0xa0] = a0\n 20867: a0 = s1 + 0x7a0\n 20871: ra = 0x2fa\n 20875: t0 = 0x3fc\n 20879: jump @1397\n      : @828 [@dyn 381] (gas: 19)\n 20882: a0 = u64 [s1 + 0x7a0]\n 20886: u64 [s1 + 0x98] = a0\n 20890: a0 = u64 [s1 + 0x7a8]\n 20894: u64 [s1 + 0x90] = a0\n 20898: a0 = u64 [s1 + 0x7b0]\n 20902: u64 [s1 + 0x88] = a0\n 20906: a0 = u64 [s1 + 0x7b8]\n 20910: u64 [s1 + 0x80] = a0\n 20914: a0 = u64 [s1 + 0xa0]\n 20918: u64 [s1 + 0x778] = a0\n 20922: a0 = u64 [s1 + 0xa8]\n 20926: u64 [s1 + 0x770] = a0\n 20930: a0 = u64 [s1 + 0xb0]\n 20934: u64 [s1 + 0x768] = a0\n 20938: a0 = s1 + 0x780\n 20942: a1 = s1 + 0x760\n 20946: a2 = u64 [s1 + 0xb8]\n 20950: u64 [s1 + 0x760] = a2\n 20954: ra = 764, jump @1024\n      : @829 [@dyn 382] (gas: 10)\n 20960: a1 = u64 [s1 + 0x780]\n 20964: a0 = u64 [s1 + 0x788]\n 20968: a2 = u64 [s1 + 0x790]\n 20972: a3 = u64 [s1 + 0x798]\n 20976: u64 [s1 + 0x758] = a3\n 20980: u64 [s1 + 0x750] = a2\n 20984: u64 [s1 + 0x748] = a0\n 20988: a0 = s1 + 0x740\n 20992: u64 [s1 + 0x740] = a1\n 20996: ra = 766, jump @1160\n      : @830 [@dyn 383] (gas: 24)\n 21002: a0 = u64 [s1 + 0x80]\n 21006: a1 = s1 + 0x600\n 21010: u64 [a1 + 0xf8] = a0\n 21014: a0 = u64 [s1 + 0x88]\n 21018: u64 [a1 + 0xf0] = a0\n 21022: a0 = u64 [s1 + 0x90]\n 21026: u64 [a1 + 0xe8] = a0\n 21030: a0 = u64 [s1 + 0x98]\n 21034: u64 [a1 + 0xe0] = a0\n 21038: a0 = u64 [s1 + 0xa0]\n 21042: a4 = s1 + 0x700\n 21046: u64 [a4 + 0x18] = a0\n 21049: a0 = u64 [s1 + 0xa8]\n 21053: u64 [a4 + 0x10] = a0\n 21056: a0 = u64 [s1 + 0xb0]\n 21060: u64 [a4 + 0x8] = a0\n 21063: a0 = s1 + 0x720\n 21067: a1 = s1 + 0x700\n 21071: a2 = s1 + 0x6e0\n 21075: a3 = u64 [s1 + 0xb8]\n 21079: u64 [a4] = a3\n 21081: ra = 0x300\n 21085: t0 = 0x4d8\n 21089: jump @1381\n      : @831 [@dyn 384] (gas: 2)\n 21092: a1 = 0x20280\n 21097: jump @576\n      : @832 (gas: 18)\n 21100: a3 = 0x7965db0b00000000\n 21110: a3 = a3 ^ a0\n 21113: a3 = a3 | a1\n 21116: a3 = a3 | a2\n 21119: a3 = a3 <u 0x1\n 21122: a4 = 0x1ffc9a700000000\n 21132: a0 = a0 ^ a4\n 21135: a0 = a0 | a1\n 21138: a0 = a0 | a2\n 21141: a0 = a0 <u 0x1\n 21144: a0 = a0 | a3\n 21147: u64 [s1 + 216] = 0\n 21151: u64 [s1 + 208] = 0\n 21155: u64 [s1 + 0xc0] = a0\n 21159: a0 = 0x80\n 21163: a1 = s1 + 0xc0\n 21167: u64 [s1 + 200] = 0\n 21171: ra = 770, jump @19\n      : @833 [@dyn 385] (gas: 2)\n 21177: a1 = i32 [0x2026c]\n 21182: jump @835 if a1 >u 159\n      : @834 (gas: 4)\n 21187: u32 [0x2026c] = 0xa0\n 21194: a0 = 0x20280\n 21199: i32 a1 = a0 + 0x80\n 21203: jump @780\n      : @835 (gas: 3)\n 21206: a0 = 0x20280\n 21211: i32 a1 = a0 + 0x80\n 21215: jump @780\n      : @836 (gas: 5)\n 21218: a0 = s1 + 0x7ff\n 21222: a0 = a0 + 0x81\n 21226: ra = 0x304\n 21230: t0 = 0x3fc\n 21234: jump @1397\n      : @837 [@dyn 386] (gas: 15)\n 21237: a0 = s1 + 0x7ff\n 21241: a0 = a0 + 0x39\n 21244: a1 = u64 [a0 + 0x60]\n 21247: u64 [s1 + 0xa0] = a1\n 21251: a1 = u64 [a0 + 0x58]\n 21254: u64 [s1 + 0xa8] = a1\n 21258: a1 = u64 [a0 + 0x50]\n 21261: u64 [s1 + 0xb0] = a1\n 21265: a0 = u64 [a0 + 0x48]\n 21268: u64 [s1 + 0xb8] = a0\n 21272: a0 = 0x30280\n 21277: u64 [s1 + 0x98] = a0\n 21281: i32 a0 = a0 + 0\n 21283: ecalli 3 // 'caller'\n 21285: fallthrough\n      : @838 (gas: 25)\n 21286: a2 = u64 [s1 + 0x98]\n 21290: a0 = u64 [a2 + 0x8]\n 21293: a1 = u64 [a2]\n 21295: a2 = i32 [a2 + 0x10]\n 21298: a0 = reverse a0\n 21300: a3 = a0 >> 0x20\n 21303: a1 = reverse a1\n 21305: a4 = a1 << 0x20\n 21308: a3 = a3 | a4\n 21311: a0 = a0 << 0x20\n 21314: a2 = reverse a2\n 21316: a2 = a2 >> 0x20\n 21319: a0 = a0 | a2\n 21322: a1 = a1 >> 0x20\n 21325: a2 = u64 [s1 + 0xa8]\n 21329: a2 = a2 << 0x20\n 21332: a2 = a2 >> 0x20\n 21335: a1 = a1 ^ a2\n 21338: a2 = u64 [s1 + 0xb8]\n 21342: a0 = a0 ^ a2\n 21345: a0 = a0 | a1\n 21348: a1 = u64 [s1 + 0xb0]\n 21352: a1 = a1 ^ a3\n 21355: a0 = a0 | a1\n 21358: jump @847 if a0 != 0\n      : @839 (gas: 39)\n 21362: a0 = s1 + 0x1000\n 21366: i32 a0 = a0 + 0x740\n 21370: a1 = 0x4\n 21373: ecalli 1 // 'call_data_load'\n 21375: a2 = s1 + 0x1038\n 21379: a4 = a2 + 0x700\n 21383: a3 = u64 [a4 + 0x8]\n 21386: a0 = u64 [a4 + 0x10]\n 21389: a1 = u64 [a4 + 0x18]\n 21392: a2 = u64 [a4 + 0x20]\n 21395: a4 = u64 [s1 + 0xa0]\n 21399: a5 = s1 + 0x1000\n 21403: u64 [a5 + 0xfffffffffffff818] = a4\n 21407: a4 = u64 [s1 + 0xa8]\n 21411: a5 = s1 + 0x1000\n 21415: u64 [a5 + 0xfffffffffffff810] = a4\n 21419: a4 = u64 [s1 + 0xb0]\n 21423: a5 = s1 + 0x1000\n 21427: u64 [a5 + 0xfffffffffffff808] = a4\n 21431: a4 = u64 [s1 + 0xb8]\n 21435: a5 = s1 + 0x1000\n 21439: u64 [a5 + 0xfffffffffffff800] = a4\n 21443: a4 = s1 + 0x7ff\n 21447: a4 = a4 + 0x39\n 21450: u64 [a4] = a2\n 21452: u64 [a4 + 0xfffffffffffffff8] = a1\n 21455: a1 = s1 + 0x1000\n 21459: u64 [a1 + 0xfffffffffffff828] = a0\n 21463: a0 = s1 + 0x7ff\n 21467: a0 = a0 + 0x41\n 21470: a1 = s1 + 0x7ff\n 21474: a1 = a1 + 0x21\n 21477: a2 = s1 + 0x7ff\n 21481: a2 = a2 + 0x1\n 21484: a4 = s1 + 0x1000\n 21488: u64 [a4 + 0xfffffffffffff820] = a3\n 21492: ra = 0x306\n 21496: t0 = 0x51a\n 21500: jump @1381\n      : @840 [@dyn 387] (gas: 2)\n 21503: a1 = 0x20280\n 21508: jump @576\n      : @841 (gas: 4)\n 21511: a0 = u64 [s1 + 0xb8]\n 21515: a0 = i32 [a0]\n 21517: a1 = 0x43\n 21520: jump @851 if a1 <u a0\n      : @842 (gas: 2)\n 21524: a1 = 0x20280\n 21529: jump @824\n      : @843 (gas: 21)\n 21532: a0 = s1 + 0x2000\n 21536: i32 a0 = a0 + 0xfffffffffffff8a0\n 21540: a1 = 0x4\n 21543: ecalli 1 // 'call_data_load'\n 21545: a0 = s1 + 0x1838\n 21549: a1 = u64 [a0 + 0x68]\n 21552: u64 [s1 + 0xb8] = a1\n 21556: a1 = u64 [a0 + 0x70]\n 21559: u64 [s1 + 0xb0] = a1\n 21563: a1 = u64 [a0 + 0x78]\n 21566: u64 [s1 + 0xa8] = a1\n 21570: a0 = u64 [a0 + 0x80]\n 21574: u64 [s1 + 0xa0] = a0\n 21578: a0 = 0x30280\n 21583: u64 [s1 + 0x98] = a0\n 21587: i32 a0 = a0 + 0\n 21589: ra = 0x308\n 21593: ecalli 3 // 'caller'\n 21595: a2 = u64 [s1 + 0x98]\n 21599: t0 = 0x30a\n 21603: jump @1321\n      : @844 [@dyn 388] (gas: 2)\n 21606: a2 = u64 [s1 + 0x98]\n 21610: t0 = 778, jump @1321\n      : @845 [@dyn 389] (gas: 18)\n 21616: a4 = u64 [s1 + 0xa0]\n 21620: a5 = a2 + 0x300\n 21624: u64 [a5 + 0xe0] = a4\n 21628: a4 = u64 [s1 + 0xa8]\n 21632: u64 [a5 + 0xd8] = a4\n 21636: a4 = u64 [s1 + 0xb0]\n 21640: u64 [a5 + 0xd0] = a4\n 21644: a4 = u64 [s1 + 0xb8]\n 21648: u64 [a5 + 0xc8] = a4\n 21652: u64 [a2 + 1024] = 0\n 21656: u64 [a5 + 0xf8] = a1\n 21660: u64 [a5 + 0xf0] = a0\n 21664: a0 = s1 + 0x7ff\n 21668: a0 = a0 + 0x421\n 21672: a1 = s1 + 0x7ff\n 21676: a1 = a1 + 0x401\n 21680: u64 [a5 + 0xe8] = a3\n 21684: ra = 780, jump @1273\n      : @846 [@dyn 390] (gas: 2)\n 21690: a1 = 0x20280\n 21695: jump @576\n      : @847 (gas: 11)\n 21698: a2 = s1 + 0x7ff\n 21702: a2 = a2 + 0x39\n 21705: u64 [a2 + 56] = 0\n 21708: u64 [a2 + 48] = 0\n 21711: a0 = 0x6697b23200000000\n 21721: u64 [a2 + 0x40] = a0\n 21724: a1 = s1 + 0x7ff\n 21728: a1 = a1 + 0x61\n 21731: u64 [a2 + 40] = 0\n 21734: a0 = 0\n 21736: ra = 782, jump @19\n      : @848 [@dyn 391] (gas: 2)\n 21742: a1 = i32 [0x2026c]\n 21747: jump @850 if a1 >u 31\n      : @849 (gas: 3)\n 21751: u32 [0x2026c] = 0x20\n 21757: a1 = 0x20280\n 21762: jump @731\n      : @850 (gas: 2)\n 21765: a1 = 0x20280\n 21770: jump @731\n      : @851 (gas: 5)\n 21773: a0 = s1 + 0x7ff\n 21777: a0 = a0 + 0x601\n 21781: ra = 0x310\n 21785: t0 = 0x3f2\n 21789: jump @1397\n      : @852 [@dyn 392] (gas: 32)\n 21792: a1 = s1 + 0x7ff\n 21796: a1 = a1 + 0x39\n 21799: a2 = a1 + 0x500\n 21803: a0 = u64 [a2 + 0xc8]\n 21807: u64 [s1 + 0xb8] = a0\n 21811: a0 = u64 [a2 + 0xd0]\n 21815: u64 [s1 + 0xb0] = a0\n 21819: a0 = u64 [a2 + 0xd8]\n 21823: u64 [s1 + 0xa8] = a0\n 21827: a0 = u64 [a2 + 0xe0]\n 21831: u64 [s1 + 0xa0] = a0\n 21835: a0 = s1 + 0x2000\n 21839: i32 a0 = a0 + 0xfffffffffffff960\n 21843: a1 = 0x24\n 21846: ecalli 1 // 'call_data_load'\n 21848: a0 = s1 + 0x1838\n 21852: a2 = a0 + 0x100\n 21856: a1 = u64 [a2 + 0x28]\n 21859: u64 [s1 + 0x98] = a1\n 21863: a1 = u64 [a2 + 0x30]\n 21866: u64 [s1 + 0x90] = a1\n 21870: a1 = u64 [a2 + 0x38]\n 21873: u64 [s1 + 0x88] = a1\n 21877: a0 = u64 [a2 + 0x40]\n 21880: u64 [s1 + 0x80] = a0\n 21884: a0 = 0x30280\n 21889: u64 [s1 + 0x78] = a0\n 21892: i32 a0 = a0 + 0\n 21894: ra = 0x312\n 21898: ecalli 3 // 'caller'\n 21900: t0 = 0x314\n 21904: jump @1353\n      : @853 [@dyn 393] (gas: 1)\n 21907: t0 = 788, jump @1353\n      : @854 [@dyn 394] (gas: 31)\n 21913: a3 = s1 + 0x7ff\n 21917: a3 = a3 + 0x39\n 21920: a4 = u64 [s1 + 0x80]\n 21924: a5 = a3 + 0x500\n 21928: u64 [a5 + 0x80] = a4\n 21932: a4 = u64 [s1 + 0x88]\n 21936: u64 [a5 + 0x78] = a4\n 21939: a4 = u64 [s1 + 0x90]\n 21943: u64 [a5 + 0x70] = a4\n 21946: a4 = u64 [s1 + 0x98]\n 21950: u64 [a5 + 0x68] = a4\n 21953: u64 [a3 + 1440] = 0\n 21957: a4 = u64 [s1 + 0xa0]\n 21961: u64 [a5 + 0xc0] = a4\n 21965: a4 = u64 [s1 + 0xa8]\n 21969: u64 [a5 + 0xb8] = a4\n 21973: a4 = u64 [s1 + 0xb0]\n 21977: u64 [a5 + 0xb0] = a4\n 21981: u64 [a5 + 0x98] = a2\n 21985: u64 [a5 + 0x90] = a0\n 21989: u64 [a5 + 0x88] = a1\n 21993: a4 = a3\n 21995: a0 = s1 + 0x7ff\n 21999: a0 = a0 + 0x5e1\n 22003: a1 = s1 + 0x7ff\n 22007: a1 = a1 + 0x5c1\n 22011: a2 = s1 + 0x7ff\n 22015: a2 = a2 + 0x5a1\n 22019: a3 = u64 [s1 + 0xb8]\n 22023: u64 [a4 + 0x5a8] = a3\n 22027: ra = 790, jump @1032\n      : @855 [@dyn 395] (gas: 25)\n 22033: a0 = u64 [s1 + 0x80]\n 22037: a1 = s1 + 0x7ff\n 22041: a1 = a1 + 0x39\n 22044: a2 = a1 + 0x500\n 22048: u64 [a2 + 0x40] = a0\n 22051: a0 = u64 [s1 + 0x88]\n 22055: u64 [a2 + 0x38] = a0\n 22058: a0 = u64 [s1 + 0x90]\n 22062: u64 [a2 + 0x30] = a0\n 22065: a0 = u64 [s1 + 0x98]\n 22069: u64 [a2 + 0x28] = a0\n 22072: a0 = u64 [s1 + 0xa0]\n 22076: u64 [a2 + 0x60] = a0\n 22079: a0 = u64 [s1 + 0xa8]\n 22083: u64 [a2 + 0x58] = a0\n 22086: a0 = u64 [s1 + 0xb0]\n 22090: u64 [a2 + 0x50] = a0\n 22093: a3 = a1\n 22095: a0 = s1 + 0x7ff\n 22099: a0 = a0 + 0x581\n 22103: a1 = s1 + 0x7ff\n 22107: a1 = a1 + 0x561\n 22111: a2 = u64 [s1 + 0xb8]\n 22115: u64 [a3 + 0x548] = a2\n 22119: ra = 792, jump @1273\n      : @856 [@dyn 396] (gas: 2)\n 22125: a1 = 0x20280\n 22130: jump @576\n      : @857 (gas: 17)\n 22133: sp = sp + 0xffffffffffffff30\n 22137: u64 [sp + 0xc8] = ra\n 22141: u64 [sp + 0xc0] = s0\n 22145: u64 [sp + 0xb8] = s1\n 22149: s0 = sp + 0xd0\n 22153: sp = sp & 0xfffffffffffffff0\n 22156: a2 = u64 [a1 + 0x18]\n 22159: u64 [sp + 0x10] = a2\n 22162: a2 = u64 [a1 + 0x10]\n 22165: u64 [sp + 0x8] = a2\n 22168: a2 = u64 [a1 + 0x8]\n 22171: u64 [sp] = a2\n 22173: s1 = u64 [a1]\n 22175: u64 [sp + 0x28] = a0\n 22178: a0 = sp + 0x90\n 22182: a1 = 0x40\n 22185: ra = 794, jump @17\n      : @858 [@dyn 397] (gas: 39)\n 22191: a1 = u64 [sp + 0x98]\n 22195: a2 = u64 [sp + 0x90]\n 22199: a0 = s1 + 0x1f\n 22202: ra = a0 <u s1\n 22205: a3 = u64 [sp]\n 22207: a4 = a3 + ra\n 22210: a0 = a0 & 0xffffffffffffffe0\n 22213: t1 = a1 + a4\n 22216: t0 = a2 + a0\n 22219: u64 [sp + 0x20] = a2\n 22222: a5 = t0 <u a2\n 22225: t1 = t1 + a5\n 22228: s1 = t1 ^ a1\n 22231: u64 [sp + 0x18] = a1\n 22234: a2 = t1 <u a1\n 22237: a2 = a5 if s1 == 0\n 22240: t2 = u64 [sp + 0xa8]\n 22244: a4 = a4 <u a3\n 22247: s1 = u64 [sp + 0xa0]\n 22251: a4 = ra if ra == 0\n 22254: a0 = u64 [sp + 0x8]\n 22257: a4 = a4 + a0\n 22260: a5 = a4 <u a0\n 22263: a4 = a4 + s1\n 22266: a3 = a4 + a2\n 22269: a0 = u64 [sp + 0x10]\n 22272: a0 = a0 + t2\n 22275: a0 = a0 + a5\n 22278: a5 = a3 <u a4\n 22281: a4 = a4 <u s1\n 22284: a0 = a0 + a4\n 22287: a4 = a0 + a5\n 22290: a0 = a4 >u 0\n 22292: a5 = a3 >u 0\n 22294: a5 = a0 if a4 != 0\n 22297: a0 = a3 | a4\n 22300: a1 = t1 >u 0\n 22302: a1 = a5 if a0 != 0\n 22305: jump @862 if a1 != 0\n      : @859 (gas: 8)\n 22308: a0 = a3 <u s1\n 22311: a1 = a4 ^ t2\n 22314: a5 = a4 <u t2\n 22317: a5 = a0 if a1 == 0\n 22320: a0 = a3 ^ s1\n 22323: a0 = a0 | a1\n 22326: a2 = a5 if a0 != 0\n 22329: jump @862 if a2 != 0\n      : @860 (gas: 8)\n 22332: u64 [sp + 0x70] = t0\n 22335: u64 [sp + 0x78] = t1\n 22338: u64 [sp + 0x80] = a3\n 22342: a0 = 0x40\n 22345: a1 = sp + 0x70\n 22348: u64 [sp + 0x88] = a4\n 22352: u64 [sp + 0x10] = t2\n 22355: ra = 796, jump @19\n      : @861 [@dyn 398] (gas: 14)\n 22361: a0 = u64 [sp + 0x28]\n 22364: a1 = u64 [sp + 0x10]\n 22367: u64 [a0 + 0x18] = a1\n 22370: u64 [a0 + 0x10] = s1\n 22373: a1 = u64 [sp + 0x18]\n 22376: u64 [a0 + 0x8] = a1\n 22379: a1 = u64 [sp + 0x20]\n 22382: u64 [a0] = a1\n 22384: sp = s0 + 0xffffffffffffff30\n 22388: ra = u64 [sp + 0xc8]\n 22392: s0 = u64 [sp + 0xc0]\n 22396: s1 = u64 [sp + 0xb8]\n 22400: sp = sp + 0xd0\n 22404: ret\n      : @862 (gas: 6)\n 22406: u64 [sp + 96] = 0\n 22409: u64 [sp + 88] = 0\n 22412: u64 [sp + 80] = 0\n 22415: t0 = 0x31e\n 22419: a0 = 0x4e487b7100000000\n 22429: fallthrough\n      : @863 [@dyn 399] (gas: 4)\n 22430: a1 = sp + 0x50\n 22433: u64 [sp + 0x68] = a0\n 22436: a0 = 0\n 22438: ra = 800, jump @19\n      : @864 [@dyn 400] (gas: 7)\n 22444: u64 [sp + 72] = 0\n 22447: u64 [sp + 64] = 0\n 22450: u64 [sp + 48] = 0x41\n 22454: a0 = 0x4\n 22457: a1 = sp + 0x30\n 22460: u64 [sp + 56] = 0\n 22463: ra = 802, jump @19\n      : @865 [@dyn 401] (gas: 2)\n 22469: a1 = i32 [0x2026c]\n 22474: jump @867 if a1 >u 63\n      : @866 (gas: 2)\n 22478: u32 [0x2026c] = 0x40\n 22484: fallthrough\n      : @867 (gas: 7)\n 22485: a1 = 0x20280\n 22490: i32 a1 = a1 + 0\n 22492: a0 = 0x1\n 22495: a2 = 0x24\n 22498: ra = 0x324\n 22502: ecalli 7 // 'seal_return'\n 22504: fallthrough\n      : @868 [@dyn 402] (gas: 22)\n 22505: sp = sp + 0xfffffffffffffda0\n 22509: a2 = sp + 0x200\n 22513: u64 [a2 + 0x58] = ra\n 22516: u64 [a2 + 0x50] = s0\n 22519: u64 [a2 + 0x48] = s1\n 22522: s0 = sp + 0x260\n 22526: sp = sp & 0xffffffffffffffe0\n 22529: s1 = sp\n 22531: a2 = u64 [a1 + 0x10]\n 22534: u64 [s1 + 0x30] = a2\n 22537: a2 = u64 [a1 + 0x8]\n 22540: u64 [s1 + 0x50] = a2\n 22543: a1 = u64 [a1]\n 22545: u64 [s1 + 0x58] = a1\n 22548: u64 [s1 + 0x38] = a0\n 22551: u64 [s1 + 536] = 0\n 22555: u64 [s1 + 528] = 0\n 22559: u64 [s1 + 520] = 0\n 22563: a1 = s1 + 0x200\n 22567: u64 [s1 + 512] = 0\n 22571: a0 = 0\n 22573: ra = 806, jump @19\n      : @869 [@dyn 403] (gas: 7)\n 22579: u64 [s1 + 504] = 0\n 22583: u64 [s1 + 496] = 0\n 22587: u64 [s1 + 480] = 0x6\n 22592: a0 = 0x20\n 22595: a1 = s1 + 0x1e0\n 22599: u64 [s1 + 488] = 0\n 22603: ra = 808, jump @19\n      : @870 [@dyn 404] (gas: 3)\n 22609: a1 = 0x2026c\n 22614: a0 = i32 [0x2026c]\n 22619: jump @872 if a0 >u 63\n      : @871 (gas: 2)\n 22623: u32 [0x2026c] = 0x40\n 22629: fallthrough\n      : @872 (gas: 14)\n 22630: a0 = sp + 0xffffffffffffffe0\n 22633: a2 = a0 & 0xffffffffffffffe0\n 22636: u64 [s1 + 0x28] = a2\n 22639: sp = a2\n 22641: a0 = 0x20280\n 22646: i32 a0 = a0 + 0\n 22648: i32 a2 = a2 + 0\n 22650: u64 [s1 + 0x48] = a1\n 22653: a1 = 0x40\n 22656: u64 [s1 + 0x40] = a0\n 22659: ra = 0x32a\n 22663: ecalli 6 // 'hash_keccak_256'\n 22665: t0 = 0x32c\n 22669: jump @1326\n      : @873 [@dyn 405] (gas: 1)\n 22672: t0 = 812, jump @1326\n      : @874 [@dyn 406] (gas: 13)\n 22678: a0 = u64 [s1 + 0x30]\n 22681: a0 = a0 << 0x20\n 22684: a0 = a0 >> 0x20\n 22687: u64 [s1 + 472] = 0\n 22691: u64 [s1] = a0\n 22693: u64 [s1 + 0x1d0] = a0\n 22697: a0 = u64 [s1 + 0x50]\n 22700: u64 [s1 + 0x1c8] = a0\n 22704: a1 = s1 + 0x1c0\n 22708: a0 = u64 [s1 + 0x58]\n 22711: u64 [s1 + 0x1c0] = a0\n 22715: a0 = 0\n 22717: ra = 814, jump @19\n      : @875 [@dyn 407] (gas: 12)\n 22723: a0 = u64 [s1 + 0x8]\n 22726: a3 = s1 + 0x100\n 22730: u64 [a3 + 0xb8] = a0\n 22734: a0 = u64 [s1 + 0x10]\n 22737: u64 [a3 + 0xb0] = a0\n 22741: a0 = u64 [s1 + 0x18]\n 22744: u64 [a3 + 0xa8] = a0\n 22748: a0 = 0x20\n 22751: a1 = s1 + 0x1a0\n 22755: a2 = u64 [s1 + 0x20]\n 22758: u64 [a3 + 0xa0] = a2\n 22762: ra = 816, jump @19\n      : @876 [@dyn 408] (gas: 3)\n 22768: a1 = u64 [s1 + 0x48]\n 22771: a0 = i32 [a1]\n 22773: jump @878 if a0 >u 63\n      : @877 (gas: 3)\n 22777: u32 [a1 + 0] = 0x40\n 22780: t0 = 0x332\n 22784: jump @1391\n      : @878 (gas: 1)\n 22787: t0 = 818, jump @1391\n      : @879 [@dyn 409] (gas: 5)\n 22793: ra = 0x334\n 22797: ecalli 6 // 'hash_keccak_256'\n 22799: a3 = u64 [s1 + 0x30]\n 22802: t0 = 0x336\n 22806: jump @1338\n      : @880 [@dyn 410] (gas: 2)\n 22809: a3 = u64 [s1 + 0x30]\n 22812: t0 = 822, jump @1338\n      : @881 [@dyn 411] (gas: 2)\n 22818: a0 = s1 + 0x180\n 22822: ra = 824, jump @21\n      : @882 [@dyn 412] (gas: 2)\n 22828: a0 = u8 [s1 + 0x180]\n 22832: jump @884 if a0 == 0\n      : @883 (gas: 2)\n 22835: a1 = 0\n 22837: jump @904\n      : @884 (gas: 6)\n 22840: u64 [s1 + 376] = 0\n 22844: u64 [s1 + 368] = 0\n 22848: u64 [s1 + 360] = 0\n 22852: a1 = s1 + 0x160\n 22856: u64 [s1 + 352] = 0\n 22860: ra = 826, jump @19\n      : @885 [@dyn 413] (gas: 1)\n 22866: t0 = 828, jump @1347\n      : @886 [@dyn 414] (gas: 1)\n 22872: ra = 830, jump @19\n      : @887 [@dyn 415] (gas: 3)\n 22878: a1 = u64 [s1 + 0x48]\n 22881: a0 = i32 [a1]\n 22883: jump @889 if a0 >u 63\n      : @888 (gas: 3)\n 22887: u32 [a1 + 0] = 0x40\n 22890: t0 = 0x340\n 22894: jump @1391\n      : @889 (gas: 1)\n 22897: t0 = 832, jump @1391\n      : @890 [@dyn 416] (gas: 5)\n 22903: ra = 0x342\n 22907: ecalli 6 // 'hash_keccak_256'\n 22909: a3 = u64 [s1 + 0x30]\n 22912: t0 = 0x344\n 22916: jump @1383\n      : @891 [@dyn 417] (gas: 2)\n 22919: a3 = u64 [s1 + 0x30]\n 22922: t0 = 836, jump @1383\n      : @892 [@dyn 418] (gas: 21)\n 22928: u64 [s1 + 0x28] = a0\n 22931: a0 = reverse a1\n 22933: u64 [s1 + 0x20] = a0\n 22936: a0 = reverse a2\n 22938: u64 [s1 + 0x18] = a0\n 22941: a0 = reverse a3\n 22943: u64 [s1 + 0x10] = a0\n 22946: a0 = sp + 0xffffffffffffffe0\n 22949: a0 = a0 & 0xffffffffffffffe0\n 22952: u64 [s1 + 0x30] = a0\n 22955: sp = a0\n 22957: u64 [s1 + 312] = 0\n 22961: a0 = u64 [s1]\n 22963: u64 [s1 + 0x130] = a0\n 22967: a0 = u64 [s1 + 0x50]\n 22970: u64 [s1 + 0x128] = a0\n 22974: a1 = s1 + 0x120\n 22978: a0 = u64 [s1 + 0x58]\n 22981: u64 [s1 + 0x120] = a0\n 22985: a0 = 0\n 22987: ra = 838, jump @19\n      : @893 [@dyn 419] (gas: 12)\n 22993: a0 = u64 [s1 + 0x10]\n 22996: a3 = s1 + 0x100\n 23000: u64 [a3 + 0x18] = a0\n 23003: a0 = u64 [s1 + 0x18]\n 23006: u64 [a3 + 0x10] = a0\n 23009: a0 = u64 [s1 + 0x20]\n 23012: u64 [a3 + 0x8] = a0\n 23015: a0 = 0x20\n 23018: a1 = s1 + 0x100\n 23022: a2 = u64 [s1 + 0x28]\n 23025: u64 [a3] = a2\n 23027: ra = 840, jump @19\n      : @894 [@dyn 420] (gas: 3)\n 23033: a1 = u64 [s1 + 0x48]\n 23036: a0 = i32 [a1]\n 23038: jump @896 if a0 >u 63\n      : @895 (gas: 2)\n 23042: u32 [a1 + 0] = 0x40\n 23045: fallthrough\n      : @896 (gas: 12)\n 23046: a0 = sp + 0xffffffffffffffe0\n 23049: a0 = a0 & 0xffffffffffffffe0\n 23052: u64 [s1 + 0x48] = a0\n 23055: sp = a0\n 23057: i32 a2 = a0 + 0\n 23059: a1 = 0x40\n 23062: a0 = u64 [s1 + 0x40]\n 23065: ra = 0x34a\n 23069: ecalli 6 // 'hash_keccak_256'\n 23071: a3 = u64 [s1 + 0x48]\n 23074: t0 = 0x34c\n 23078: jump @1330\n      : @897 [@dyn 421] (gas: 2)\n 23081: a3 = u64 [s1 + 0x48]\n 23084: t0 = 844, jump @1330\n      : @898 [@dyn 422] (gas: 7)\n 23090: a1 = u64 [s1 + 0x30]\n 23093: u64 [a1 + 0x18] = a3\n 23096: u64 [a1 + 0x10] = a2\n 23099: u64 [a1 + 0x8] = a4\n 23102: u64 [a1] = a0\n 23104: a0 = s1 + 0xe0\n 23108: ra = 846, jump @21\n      : @899 [@dyn 423] (gas: 14)\n 23114: a0 = u64 [s1 + 0xe0]\n 23118: a1 = u64 [s1 + 0xe8]\n 23122: a2 = u64 [s1 + 0xf8]\n 23126: a3 = u64 [s1 + 0xf0]\n 23130: a0 = a0 & 0xffffffffffffff00\n 23134: a0 = a0 | 0x1\n 23137: a4 = s1 + 0x200\n 23141: u64 [a4 + 0x38] = a2\n 23144: u64 [a4 + 0x30] = a3\n 23147: u64 [a4 + 0x28] = a1\n 23150: u64 [a4 + 0x20] = a0\n 23153: a1 = s1 + 0x220\n 23157: a0 = u64 [s1 + 0x30]\n 23160: ra = 848, jump @24\n      : @900 [@dyn 424] (gas: 8)\n 23166: a0 = 0x30280\n 23171: u64 [s1 + 0x48] = a0\n 23174: i32 a0 = a0 + 0\n 23176: ra = 0x352\n 23180: ecalli 3 // 'caller'\n 23182: a2 = u64 [s1 + 0x48]\n 23185: t0 = 0x354\n 23189: jump @1325\n      : @901 [@dyn 425] (gas: 2)\n 23192: a2 = u64 [s1 + 0x48]\n 23195: t0 = 852, jump @1325\n      : @902 [@dyn 426] (gas: 36)\n 23201: t0 = a1 | a0\n 23204: a3 = a3 >> 0x20\n 23207: a2 = reverse a2\n 23209: a1 = a2 << 0x20\n 23212: a1 = a1 | a3\n 23215: a2 = a2 >> 0x20\n 23218: u64 [s1 + 120] = 0\n 23221: u64 [s1 + 152] = 0\n 23225: a0 = u64 [s1]\n 23227: u64 [s1 + 0x90] = a0\n 23231: a0 = u64 [s1 + 0x50]\n 23234: u64 [s1 + 0x88] = a0\n 23238: a0 = u64 [s1 + 0x58]\n 23241: u64 [s1 + 0x80] = a0\n 23245: u64 [s1 + 184] = 0\n 23249: u64 [s1 + 176] = 0\n 23253: u64 [s1 + 168] = 0\n 23257: u64 [s1 + 160] = 0\n 23261: a3 = u64 [0x20128]\n 23266: a4 = u64 [0x20130]\n 23271: a5 = u64 [0x20138]\n 23276: a0 = u64 [0x20140]\n 23281: u64 [s1 + 0xd8] = a3\n 23285: u64 [s1 + 0xd0] = a4\n 23289: u64 [s1 + 0xc8] = a5\n 23293: u64 [s1 + 0xc0] = a0\n 23297: u64 [s1 + 0x70] = a2\n 23300: u64 [s1 + 0x68] = a1\n 23303: a2 = s1 + 0xc0\n 23307: a3 = s1 + 0xa0\n 23311: a4 = s1 + 0x80\n 23315: a5 = s1 + 0x60\n 23318: u64 [s1 + 0x60] = t0\n 23321: a0 = 0\n 23323: a1 = 0\n 23325: ra = 854, jump @30\n      : @903 [@dyn 427] (gas: 2)\n 23331: a1 = 0x1\n 23334: fallthrough\n      : @904 (gas: 12)\n 23335: a2 = u64 [s1 + 0x38]\n 23338: u64 [a2] = a1\n 23340: u64 [a2 + 8] = 0\n 23343: u64 [a2 + 16] = 0\n 23346: u64 [a2 + 24] = 0\n 23349: sp = s0 + 0xfffffffffffffda0\n 23353: a0 = sp + 0x200\n 23357: ra = u64 [a0 + 0x58]\n 23360: s0 = u64 [a0 + 0x50]\n 23363: s1 = u64 [a0 + 0x48]\n 23366: sp = sp + 0x260\n 23370: ret\n      : @905 [@dyn 428] (gas: 7)\n 23372: a0 = u64 [0x20148]\n 23377: u64 [s1 + 0x20] = a0\n 23380: u64 [s1 + 0x238] = a0\n 23384: a1 = u64 [0x20150]\n 23389: a2 = u64 [0x20158]\n 23394: a0 = u64 [0x20160]\n 23399: t0 = 858, jump @1380\n      : @906 [@dyn 429] (gas: 1)\n 23405: ra = 860, jump @19\n      : @907 [@dyn 430] (gas: 1)\n 23411: t0 = 862, jump @1336\n      : @908 [@dyn 431] (gas: 1)\n 23417: ra = 864, jump @19\n      : @909 [@dyn 432] (gas: 3)\n 23423: a1 = 0x2026c\n 23428: a0 = i32 [0x2026c]\n 23433: jump @911 if a0 >u 63\n      : @910 (gas: 2)\n 23437: u32 [0x2026c] = 0x40\n 23443: fallthrough\n      : @911 (gas: 6)\n 23444: a0 = sp + 0xffffffffffffffe0\n 23447: a2 = a0 & 0xffffffffffffffe0\n 23450: u64 [s1 + 0x48] = a2\n 23453: sp = a2\n 23455: a0 = 0x20280\n 23460: t0 = 866, jump @1395\n      : @912 [@dyn 433] (gas: 4)\n 23466: ra = 0x364\n 23470: ecalli 6 // 'hash_keccak_256'\n 23472: t0 = 0x366\n 23476: jump @1322\n      : @913 [@dyn 434] (gas: 1)\n 23479: t0 = 870, jump @1322\n      : @914 [@dyn 435] (gas: 1)\n 23485: ra = 872, jump @19\n      : @915 [@dyn 436] (gas: 1)\n 23491: t0 = 874, jump @1346\n      : @916 [@dyn 437] (gas: 1)\n 23497: ra = 876, jump @19\n      : @917 [@dyn 438] (gas: 3)\n 23503: a1 = u64 [s1 + 0x68]\n 23506: a0 = i32 [a1]\n 23508: jump @919 if a0 >u 63\n      : @918 (gas: 3)\n 23512: u32 [a1 + 0] = 0x40\n 23515: t0 = 0x36e\n 23519: jump @1331\n      : @919 (gas: 1)\n 23522: t0 = 878, jump @1331\n      : @920 [@dyn 439] (gas: 4)\n 23528: ra = 0x370\n 23532: ecalli 6 // 'hash_keccak_256'\n 23534: t0 = 0x372\n 23538: jump @1329\n      : @921 [@dyn 440] (gas: 1)\n 23541: t0 = 882, jump @1329\n      : @922 [@dyn 441] (gas: 1)\n 23547: ra = 884, jump @21\n      : @923 [@dyn 442] (gas: 2)\n 23553: a0 = u8 [s1 + 0x1a0]\n 23557: jump @925 if a0 == 0\n      : @924 (gas: 5)\n 23560: a1 = 0\n 23562: a0 = 0\n 23564: a2 = u64 [s1 + 0x58]\n 23567: t0 = 0x39c\n 23571: jump @1334\n      : @925 (gas: 1)\n 23574: t0 = 886, jump @1365\n      : @926 [@dyn 443] (gas: 1)\n 23580: ra = 888, jump @19\n      : @927 [@dyn 444] (gas: 1)\n 23586: t0 = 890, jump @1335\n      : @928 [@dyn 445] (gas: 1)\n 23592: ra = 892, jump @19\n      : @929 [@dyn 446] (gas: 3)\n 23598: a1 = u64 [s1 + 0x68]\n 23601: a0 = i32 [a1]\n 23603: jump @931 if a0 >u 63\n      : @930 (gas: 3)\n 23607: u32 [a1 + 0] = 0x40\n 23610: t0 = 0x37e\n 23614: jump @1331\n      : @931 (gas: 1)\n 23617: t0 = 894, jump @1331\n      : @932 [@dyn 447] (gas: 4)\n 23623: ra = 0x380\n 23627: ecalli 6 // 'hash_keccak_256'\n 23629: t0 = 0x382\n 23633: jump @1323\n      : @933 [@dyn 448] (gas: 1)\n 23636: t0 = 898, jump @1323\n      : @934 [@dyn 449] (gas: 1)\n 23642: ra = 900, jump @19\n      : @935 [@dyn 450] (gas: 1)\n 23648: t0 = 902, jump @1345\n      : @936 [@dyn 451] (gas: 1)\n 23654: ra = 904, jump @19\n      : @937 [@dyn 452] (gas: 3)\n 23660: a1 = u64 [s1 + 0x68]\n 23663: a0 = i32 [a1]\n 23665: jump @939 if a0 >u 63\n      : @938 (gas: 2)\n 23669: u32 [a1 + 0] = 0x40\n 23672: fallthrough\n      : @939 (gas: 4)\n 23673: a0 = sp + 0xffffffffffffffe0\n 23676: a0 = a0 & 0xffffffffffffffe0\n 23679: u64 [s1 + 0x68] = a0\n 23682: t0 = 906, jump @1339\n      : @940 [@dyn 453] (gas: 4)\n 23688: ra = 0x38c\n 23692: ecalli 6 // 'hash_keccak_256'\n 23694: t0 = 0x38e\n 23698: jump @1328\n      : @941 [@dyn 454] (gas: 1)\n 23701: t0 = 910, jump @1328\n      : @942 [@dyn 455] (gas: 1)\n 23707: ra = 912, jump @21\n      : @943 [@dyn 456] (gas: 1)\n 23713: t0 = 914, jump @1333\n      : @944 [@dyn 457] (gas: 1)\n 23719: ra = 916, jump @24\n      : @945 [@dyn 458] (gas: 8)\n 23725: a0 = 0x30280\n 23730: u64 [s1 + 0x68] = a0\n 23733: i32 a0 = a0 + 0\n 23735: ra = 0x396\n 23739: ecalli 3 // 'caller'\n 23741: a2 = u64 [s1 + 0x68]\n 23744: t0 = 0x398\n 23748: jump @1325\n      : @946 [@dyn 459] (gas: 2)\n 23751: a2 = u64 [s1 + 0x68]\n 23754: t0 = 920, jump @1325\n      : @947 [@dyn 460] (gas: 40)\n 23760: t0 = a1 | a0\n 23763: a3 = a3 >> 0x20\n 23766: a2 = reverse a2\n 23768: a1 = a2 << 0x20\n 23771: a1 = a1 | a3\n 23774: a2 = a2 >> 0x20\n 23777: u64 [s1 + 152] = 0\n 23781: u64 [s1 + 184] = 0\n 23785: a0 = u64 [s1]\n 23787: u64 [s1 + 0xb0] = a0\n 23791: a0 = u64 [s1 + 0x70]\n 23794: u64 [s1 + 0xa8] = a0\n 23798: a0 = u64 [s1 + 0x78]\n 23801: u64 [s1 + 0xa0] = a0\n 23805: a0 = u64 [s1 + 0x20]\n 23808: u64 [s1 + 0xd8] = a0\n 23812: a0 = u64 [s1 + 0x18]\n 23815: u64 [s1 + 0xd0] = a0\n 23819: a0 = u64 [s1 + 0x10]\n 23822: u64 [s1 + 0xc8] = a0\n 23826: a0 = u64 [s1 + 0x8]\n 23829: u64 [s1 + 0xc0] = a0\n 23833: a3 = u64 [0x20168]\n 23838: a4 = u64 [0x20170]\n 23843: a5 = u64 [0x20178]\n 23848: a0 = u64 [0x20180]\n 23853: u64 [s1 + 0xf8] = a3\n 23857: u64 [s1 + 0xf0] = a4\n 23861: u64 [s1 + 0xe8] = a5\n 23865: u64 [s1 + 0xe0] = a0\n 23869: u64 [s1 + 0x90] = a2\n 23873: u64 [s1 + 0x88] = a1\n 23877: a2 = s1 + 0xe0\n 23881: a3 = s1 + 0xc0\n 23885: a4 = s1 + 0xa0\n 23889: a5 = s1 + 0x80\n 23893: u64 [s1 + 0x80] = t0\n 23897: a0 = 0\n 23899: a1 = 0\n 23901: ra = 922, jump @30\n      : @948 [@dyn 461] (gas: 4)\n 23907: a0 = 0\n 23909: a1 = 0x1\n 23912: a2 = u64 [s1 + 0x58]\n 23915: t0 = 924, jump @1334\n      : @949 [@dyn 462] (gas: 1)\n 23921: ret\n      : @950 [@dyn 463] (gas: 7)\n 23923: a0 = u64 [0x20188]\n 23928: u64 [s1 + 0x20] = a0\n 23931: u64 [s1 + 0x238] = a0\n 23935: a1 = u64 [0x20190]\n 23940: a2 = u64 [0x20198]\n 23945: a0 = u64 [0x201a0]\n 23950: t0 = 928, jump @1380\n      : @951 [@dyn 464] (gas: 1)\n 23956: ra = 930, jump @19\n      : @952 [@dyn 465] (gas: 1)\n 23962: t0 = 932, jump @1336\n      : @953 [@dyn 466] (gas: 1)\n 23968: ra = 934, jump @19\n      : @954 [@dyn 467] (gas: 3)\n 23974: a1 = 0x2026c\n 23979: a0 = i32 [0x2026c]\n 23984: jump @956 if a0 >u 63\n      : @955 (gas: 2)\n 23988: u32 [0x2026c] = 0x40\n 23994: fallthrough\n      : @956 (gas: 6)\n 23995: a0 = sp + 0xffffffffffffffe0\n 23998: a2 = a0 & 0xffffffffffffffe0\n 24001: u64 [s1 + 0x48] = a2\n 24004: sp = a2\n 24006: a0 = 0x20280\n 24011: t0 = 936, jump @1395\n      : @957 [@dyn 468] (gas: 4)\n 24017: ra = 0x3aa\n 24021: ecalli 6 // 'hash_keccak_256'\n 24023: t0 = 0x3ac\n 24027: jump @1322\n      : @958 [@dyn 469] (gas: 1)\n 24030: t0 = 940, jump @1322\n      : @959 [@dyn 470] (gas: 1)\n 24036: ra = 942, jump @19\n      : @960 [@dyn 471] (gas: 1)\n 24042: t0 = 944, jump @1346\n      : @961 [@dyn 472] (gas: 1)\n 24048: ra = 946, jump @19\n      : @962 [@dyn 473] (gas: 3)\n 24054: a1 = u64 [s1 + 0x68]\n 24057: a0 = i32 [a1]\n 24059: jump @964 if a0 >u 63\n      : @963 (gas: 3)\n 24063: u32 [a1 + 0] = 0x40\n 24066: t0 = 0x3b4\n 24070: jump @1331\n      : @964 (gas: 1)\n 24073: t0 = 948, jump @1331\n      : @965 [@dyn 474] (gas: 4)\n 24079: ra = 0x3b6\n 24083: ecalli 6 // 'hash_keccak_256'\n 24085: t0 = 0x3b8\n 24089: jump @1329\n      : @966 [@dyn 475] (gas: 1)\n 24092: t0 = 952, jump @1329\n      : @967 [@dyn 476] (gas: 1)\n 24098: ra = 954, jump @21\n      : @968 [@dyn 477] (gas: 2)\n 24104: a0 = u8 [s1 + 0x1a0]\n 24108: jump @970 if a0 == 0\n      : @969 (gas: 5)\n 24111: a1 = 0\n 24113: a0 = 0\n 24115: a2 = u64 [s1 + 0x58]\n 24118: t0 = 0x3e2\n 24122: jump @1334\n      : @970 (gas: 1)\n 24125: t0 = 956, jump @1365\n      : @971 [@dyn 478] (gas: 1)\n 24131: ra = 958, jump @19\n      : @972 [@dyn 479] (gas: 1)\n 24137: t0 = 960, jump @1335\n      : @973 [@dyn 480] (gas: 1)\n 24143: ra = 962, jump @19\n      : @974 [@dyn 481] (gas: 3)\n 24149: a1 = u64 [s1 + 0x68]\n 24152: a0 = i32 [a1]\n 24154: jump @976 if a0 >u 63\n      : @975 (gas: 3)\n 24158: u32 [a1 + 0] = 0x40\n 24161: t0 = 0x3c4\n 24165: jump @1331\n      : @976 (gas: 1)\n 24168: t0 = 964, jump @1331\n      : @977 [@dyn 482] (gas: 4)\n 24174: ra = 0x3c6\n 24178: ecalli 6 // 'hash_keccak_256'\n 24180: t0 = 0x3c8\n 24184: jump @1323\n      : @978 [@dyn 483] (gas: 1)\n 24187: t0 = 968, jump @1323\n      : @979 [@dyn 484] (gas: 1)\n 24193: ra = 970, jump @19\n      : @980 [@dyn 485] (gas: 1)\n 24199: t0 = 972, jump @1345\n      : @981 [@dyn 486] (gas: 1)\n 24205: ra = 974, jump @19\n      : @982 [@dyn 487] (gas: 3)\n 24211: a1 = u64 [s1 + 0x68]\n 24214: a0 = i32 [a1]\n 24216: jump @984 if a0 >u 63\n      : @983 (gas: 2)\n 24220: u32 [a1 + 0] = 0x40\n 24223: fallthrough\n      : @984 (gas: 4)\n 24224: a0 = sp + 0xffffffffffffffe0\n 24227: a0 = a0 & 0xffffffffffffffe0\n 24230: u64 [s1 + 0x68] = a0\n 24233: t0 = 976, jump @1339\n      : @985 [@dyn 488] (gas: 4)\n 24239: ra = 0x3d2\n 24243: ecalli 6 // 'hash_keccak_256'\n 24245: t0 = 0x3d4\n 24249: jump @1328\n      : @986 [@dyn 489] (gas: 1)\n 24252: t0 = 980, jump @1328\n      : @987 [@dyn 490] (gas: 1)\n 24258: ra = 982, jump @21\n      : @988 [@dyn 491] (gas: 1)\n 24264: t0 = 984, jump @1333\n      : @989 [@dyn 492] (gas: 1)\n 24270: ra = 986, jump @24\n      : @990 [@dyn 493] (gas: 8)\n 24276: a0 = 0x30280\n 24281: u64 [s1 + 0x68] = a0\n 24284: i32 a0 = a0 + 0\n 24286: ra = 0x3dc\n 24290: ecalli 3 // 'caller'\n 24292: a2 = u64 [s1 + 0x68]\n 24295: t0 = 0x3de\n 24299: jump @1325\n      : @991 [@dyn 494] (gas: 2)\n 24302: a2 = u64 [s1 + 0x68]\n 24305: t0 = 990, jump @1325\n      : @992 [@dyn 495] (gas: 40)\n 24311: t0 = a1 | a0\n 24314: a3 = a3 >> 0x20\n 24317: a2 = reverse a2\n 24319: a1 = a2 << 0x20\n 24322: a1 = a1 | a3\n 24325: a2 = a2 >> 0x20\n 24328: u64 [s1 + 152] = 0\n 24332: u64 [s1 + 184] = 0\n 24336: a0 = u64 [s1]\n 24338: u64 [s1 + 0xb0] = a0\n 24342: a0 = u64 [s1 + 0x70]\n 24345: u64 [s1 + 0xa8] = a0\n 24349: a0 = u64 [s1 + 0x78]\n 24352: u64 [s1 + 0xa0] = a0\n 24356: a0 = u64 [s1 + 0x20]\n 24359: u64 [s1 + 0xd8] = a0\n 24363: a0 = u64 [s1 + 0x18]\n 24366: u64 [s1 + 0xd0] = a0\n 24370: a0 = u64 [s1 + 0x10]\n 24373: u64 [s1 + 0xc8] = a0\n 24377: a0 = u64 [s1 + 0x8]\n 24380: u64 [s1 + 0xc0] = a0\n 24384: a3 = u64 [0x201a8]\n 24389: a4 = u64 [0x201b0]\n 24394: a5 = u64 [0x201b8]\n 24399: a0 = u64 [0x201c0]\n 24404: u64 [s1 + 0xf8] = a3\n 24408: u64 [s1 + 0xf0] = a4\n 24412: u64 [s1 + 0xe8] = a5\n 24416: u64 [s1 + 0xe0] = a0\n 24420: u64 [s1 + 0x90] = a2\n 24424: u64 [s1 + 0x88] = a1\n 24428: a2 = s1 + 0xe0\n 24432: a3 = s1 + 0xc0\n 24436: a4 = s1 + 0xa0\n 24440: a5 = s1 + 0x80\n 24444: u64 [s1 + 0x80] = t0\n 24448: a0 = 0\n 24450: a1 = 0\n 24452: ra = 992, jump @30\n      : @993 [@dyn 496] (gas: 4)\n 24458: a0 = 0\n 24460: a1 = 0x1\n 24463: a2 = u64 [s1 + 0x58]\n 24466: t0 = 994, jump @1334\n      : @994 [@dyn 497] (gas: 1)\n 24472: ret\n      : @995 (gas: 22)\n 24474: sp = sp + 0xfffffffffffffee0\n 24478: u64 [sp + 0x118] = ra\n 24482: u64 [sp + 0x110] = s0\n 24486: u64 [sp + 0x108] = s1\n 24490: s0 = sp + 0x120\n 24494: sp = sp & 0xfffffffffffffff0\n 24497: a4 = u64 [a1 + 0x10]\n 24500: a3 = u64 [a1 + 0x18]\n 24503: a5 = u64 [a1 + 0x8]\n 24506: t0 = u64 [a1]\n 24508: u64 [sp + 0x68] = a3\n 24511: u64 [sp + 0x78] = a5\n 24514: a1 = a5 | a3\n 24517: a3 = t0 | a4\n 24520: a3 = a3 | a1\n 24523: a3 = a3 >> 0x20\n 24526: u64 [sp + 0x70] = a4\n 24529: a1 = a1 | a4\n 24532: a1 = a1 << 0x20\n 24535: a1 = a1 | a3\n 24538: u64 [sp + 0x8] = a0\n 24541: jump @1010 if a1 != 0\n      : @996 (gas: 15)\n 24545: a0 = u64 [a2 + 0x18]\n 24548: u64 [sp + 0x48] = a0\n 24551: s1 = u64 [a2 + 0x10]\n 24554: a0 = u64 [a2 + 0x8]\n 24557: u64 [sp + 0x50] = a0\n 24560: a0 = u64 [a2]\n 24562: u64 [sp + 0x58] = a0\n 24565: u64 [sp + 248] = 0\n 24569: u64 [sp + 240] = 0\n 24573: u64 [sp + 232] = 0\n 24577: a1 = sp + 0xe0\n 24581: u64 [sp + 224] = 0x20\n 24586: a0 = t0\n 24588: u64 [sp + 0x60] = t0\n 24591: ra = 996, jump @19\n      : @997 [@dyn 498] (gas: 12)\n 24597: a1 = u64 [sp + 0x58]\n 24600: a0 = a1 | s1\n 24603: a2 = u64 [sp + 0x48]\n 24606: a3 = u64 [sp + 0x50]\n 24609: a2 = a2 | a3\n 24612: a0 = a0 | a2\n 24615: a0 = a0 >> 0x20\n 24618: u64 [sp + 0x20] = s1\n 24621: a2 = a2 | s1\n 24624: a2 = a2 << 0x20\n 24627: a0 = a0 | a2\n 24630: jump @1010 if a0 != 0\n      : @998 (gas: 2)\n 24634: a0 = sp + 0xc0\n 24638: ra = 998, jump @17\n      : @999 [@dyn 499] (gas: 13)\n 24644: a0 = u64 [sp + 0x70]\n 24647: a1 = u64 [sp + 0x68]\n 24650: a1 = a1 | a0\n 24653: a0 = 0x100000000\n 24663: u64 [sp + 0x10] = a0\n 24666: a0 = 0xffffffe0\n 24676: a2 = u64 [sp + 0x60]\n 24679: a0 = a2 <u a0\n 24682: a3 = u64 [sp + 0x78]\n 24685: a0 = 0 if a3 != 0\n 24687: u64 [sp + 0x18] = a1\n 24690: a0 = 0 if a1 != 0\n 24692: jump @1010 if a0 == 0\n      : @1000 (gas: 16)\n 24696: a3 = u64 [sp + 0xd8]\n 24700: a4 = u64 [sp + 0xd0]\n 24704: a5 = u64 [sp + 0xc8]\n 24708: a1 = u64 [sp + 0xc0]\n 24712: i32 a0 = a2 + 0x20\n 24715: u64 [sp + 0x28] = a1\n 24718: u64 [sp + 0xa0] = a1\n 24722: u64 [sp + 0x30] = a5\n 24725: u64 [sp + 0xa8] = a5\n 24729: u64 [sp + 0x38] = a4\n 24732: u64 [sp + 0xb0] = a4\n 24736: a1 = sp + 0xa0\n 24740: u64 [sp + 0x40] = a3\n 24743: u64 [sp + 0xb8] = a3\n 24747: s1 = a2\n 24749: ra = 1000, jump @19\n      : @1001 [@dyn 500] (gas: 8)\n 24755: a0 = u64 [sp + 0x10]\n 24758: a0 = a0 + 0xffffffffffffffc0\n 24761: a0 = s1 <u a0\n 24764: a1 = u64 [sp + 0x78]\n 24767: a0 = 0 if a1 != 0\n 24769: a1 = u64 [sp + 0x18]\n 24772: a0 = 0 if a1 != 0\n 24774: jump @1010 if a0 == 0\n      : @1002 (gas: 10)\n 24778: a0 = u64 [sp + 0x48]\n 24781: a1 = u64 [sp + 0x20]\n 24784: a0 = a0 | a1\n 24787: a1 = 0xffffffe0\n 24797: a3 = u64 [sp + 0x58]\n 24800: a1 = a3 <u a1\n 24803: a4 = u64 [sp + 0x50]\n 24806: a1 = 0 if a4 != 0\n 24808: a1 = 0 if a0 != 0\n 24810: jump @1010 if a1 == 0\n      : @1003 (gas: 13)\n 24814: a2 = s1\n 24816: a1 = u64 [sp + 0x28]\n 24819: a5 = u64 [sp + 0x38]\n 24822: a0 = a1 | a5\n 24825: a4 = u64 [sp + 0x40]\n 24828: s1 = u64 [sp + 0x30]\n 24831: a4 = a4 | s1\n 24834: a0 = a0 | a4\n 24837: a0 = a0 >> 0x20\n 24840: a4 = a4 | a5\n 24843: a4 = a4 << 0x20\n 24846: a0 = a0 | a4\n 24849: jump @1010 if a0 != 0\n      : @1004 (gas: 5)\n 24853: i32 a0 = a2 + 0x40\n 24856: i32 a3 = a3 + 0x20\n 24859: u64 [sp + 0x58] = a3\n 24862: s1 = a1\n 24864: ra = 1002, jump @33\n      : @1005 [@dyn 501] (gas: 4)\n 24870: u64 [sp + 0x50] = a0\n 24873: a0 = u64 [sp + 0x58]\n 24876: a1 = s1\n 24878: ra = 1004, jump @33\n      : @1006 [@dyn 502] (gas: 4)\n 24884: a1 = a0\n 24886: a0 = u64 [sp + 0x50]\n 24889: a2 = s1\n 24891: ra = 1006, jump @0\n      : @1007 [@dyn 503] (gas: 27)\n 24897: a0 = u64 [sp + 0x60]\n 24900: a0 = a0 + s1\n 24903: a1 = a0 <u s1\n 24906: a2 = u64 [sp + 0x78]\n 24909: a4 = u64 [sp + 0x30]\n 24912: a2 = a2 + a4\n 24915: a2 = a2 + a1\n 24918: a3 = a2 ^ a4\n 24921: a4 = a2 <u a4\n 24924: a4 = a1 if a3 == 0\n 24927: a1 = u64 [sp + 0x70]\n 24930: a3 = u64 [sp + 0x38]\n 24933: a1 = a1 + a3\n 24936: a3 = a1 <u a3\n 24939: a5 = u64 [sp + 0x68]\n 24942: s1 = u64 [sp + 0x40]\n 24945: a5 = a5 + s1\n 24948: a3 = a3 + a5\n 24951: a4 = a4 + a1\n 24954: a1 = a4 <u a1\n 24957: a1 = a1 + a3\n 24960: a1 = a1 | a4\n 24963: a3 = 0xffffffc0\n 24973: a3 = a0 <u a3\n 24976: a3 = 0 if a2 != 0\n 24978: a3 = 0 if a1 != 0\n 24980: jump @1010 if a3 == 0\n      : @1008 (gas: 7)\n 24984: i32 a0 = a0 + 0x40\n 24987: u64 [sp + 152] = 0\n 24991: u64 [sp + 144] = 0\n 24995: u64 [sp + 136] = 0\n 24999: a1 = sp + 0x80\n 25003: u64 [sp + 128] = 0\n 25007: ra = 1008, jump @19\n      : @1009 [@dyn 504] (gas: 35)\n 25013: s1 = u64 [sp + 0x28]\n 25016: s1 = s1 + 0x1f\n 25019: a0 = 0x1ffffffe0\n 25029: a0 = a0 & s1\n 25032: a1 = u64 [sp + 0x60]\n 25035: a0 = a0 + a1\n 25038: a1 = a0 <u a1\n 25041: a3 = u64 [sp + 0x78]\n 25044: a2 = a3 + a1\n 25047: a3 = a2 <u a3\n 25050: a3 = a1 if a1 == 0\n 25053: a1 = u64 [sp + 0x70]\n 25056: a3 = a3 + a1\n 25059: a1 = a3 <u a1\n 25062: a4 = u64 [sp + 0x68]\n 25065: a1 = a1 + a4\n 25068: a4 = a0 + 0x40\n 25071: a0 = a4 <u a0\n 25074: a5 = a2 + a0\n 25077: a2 = a5 <u a2\n 25080: a2 = a0 if a0 == 0\n 25083: a2 = a2 + a3\n 25086: a0 = a2 <u a3\n 25089: a0 = a0 + a1\n 25092: a1 = u64 [sp + 0x8]\n 25095: u64 [a1] = a4\n 25097: u64 [a1 + 0x8] = a5\n 25100: u64 [a1 + 0x10] = a2\n 25103: u64 [a1 + 0x18] = a0\n 25106: sp = s0 + 0xfffffffffffffee0\n 25110: ra = u64 [sp + 0x118]\n 25114: s0 = u64 [sp + 0x110]\n 25118: s1 = u64 [sp + 0x108]\n 25122: sp = sp + 0x120\n 25126: ret\n      : @1010 (gas: 1)\n 25128: trap\n      : @1011 [@dyn 505] (gas: 5)\n 25129: a1 = 0x4\n 25132: ra = 0x3f4\n 25136: ecalli 1 // 'call_data_load'\n 25138: t0 = 0x3f6\n 25142: jump @1370\n      : @1012 [@dyn 506] (gas: 1)\n 25145: t0 = 1014, jump @1370\n      : @1013 [@dyn 507] (gas: 1)\n 25151: jump @1016 if a3 == 0\n      : @1014 (gas: 1)\n 25154: t0 = 1016, jump @1382\n      : @1015 [@dyn 508] (gas: 1)\n 25160: ret\n      : @1016 (gas: 8)\n 25162: a1 = 0x20280\n 25167: i32 a1 = a1 + 0\n 25169: a0 = 0x1\n 25172: a2 = 0\n 25174: ra = 0x3fa\n 25178: ecalli 7 // 'seal_return'\n 25180: t0 = 0x3fc\n 25184: jump @1397\n      : @1017 [@dyn 509] (gas: 1)\n 25187: t0 = 1020, jump @1397\n      : @1018 [@dyn 510] (gas: 5)\n 25193: a1 = 0x24\n 25196: ra = 0x3fe\n 25200: ecalli 1 // 'call_data_load'\n 25202: t0 = 0x400\n 25206: jump @1370\n      : @1019 [@dyn 511] (gas: 1)\n 25209: t0 = 1024, jump @1370\n      : @1020 [@dyn 512] (gas: 1)\n 25215: jump @1023 if a3 == 0\n      : @1021 (gas: 1)\n 25218: t0 = 1026, jump @1382\n      : @1022 [@dyn 513] (gas: 1)\n 25224: ret\n      : @1023 (gas: 7)\n 25226: a1 = 0x20280\n 25231: i32 a1 = a1 + 0\n 25233: a0 = 0x1\n 25236: a2 = 0\n 25238: ra = 0x404\n 25242: ecalli 7 // 'seal_return'\n 25244: fallthrough\n      : @1024 [@dyn 514] (gas: 19)\n 25245: sp = sp + 0xffffffffffffff40\n 25249: u64 [sp + 0xb8] = ra\n 25253: u64 [sp + 0xb0] = s0\n 25257: u64 [sp + 0xa8] = s1\n 25261: s0 = sp + 0xc0\n 25265: sp = sp & 0xffffffffffffffe0\n 25268: s1 = sp\n 25270: a2 = u64 [a1]\n 25272: a3 = u64 [a1 + 0x8]\n 25275: a4 = u64 [a1 + 0x10]\n 25278: a1 = u64 [a1 + 0x18]\n 25281: u64 [s1 + 0x18] = a0\n 25284: u64 [s1 + 0x78] = a1\n 25287: u64 [s1 + 0x70] = a4\n 25290: u64 [s1 + 0x68] = a3\n 25293: a1 = s1 + 0x60\n 25296: u64 [s1 + 0x60] = a2\n 25299: a0 = 0\n 25301: ra = 1030, jump @19\n      : @1025 [@dyn 515] (gas: 7)\n 25307: u64 [s1 + 88] = 0\n 25310: u64 [s1 + 80] = 0\n 25313: u64 [s1 + 64] = 0x6\n 25317: a0 = 0x20\n 25320: a1 = s1 + 0x40\n 25323: u64 [s1 + 72] = 0\n 25326: ra = 1032, jump @19\n      : @1026 [@dyn 516] (gas: 2)\n 25332: a1 = i32 [0x2026c]\n 25337: jump @1028 if a1 >u 63\n      : @1027 (gas: 2)\n 25341: u32 [0x2026c] = 0x40\n 25347: fallthrough\n      : @1028 (gas: 11)\n 25348: a0 = sp + 0xffffffffffffffe0\n 25351: a2 = a0 & 0xffffffffffffffe0\n 25354: u64 [s1 + 0x10] = a2\n 25357: sp = a2\n 25359: a0 = 0x20280\n 25364: i32 a0 = a0 + 0\n 25366: i32 a2 = a2 + 0\n 25368: a1 = 0x40\n 25371: ra = 0x40a\n 25375: ecalli 6 // 'hash_keccak_256'\n 25377: fallthrough\n      : @1029 [@dyn 517] (gas: 6)\n 25378: a3 = u64 [s1 + 0x10]\n 25381: a0 = u64 [a3]\n 25383: a1 = u64 [a3 + 0x8]\n 25386: a2 = u64 [a3 + 0x10]\n 25389: a3 = u64 [a3 + 0x18]\n 25392: t0 = 1036, jump @1351\n      : @1030 [@dyn 518] (gas: 15)\n 25398: a3 = a3 + 0x1\n 25401: a4 = a3 <u 0x1\n 25404: a2 = a2 + a4\n 25407: a4 = a3 | a2\n 25410: a4 = a4 <u 0x1\n 25413: a4 = a4 + a1\n 25416: a1 = a4 <u a1\n 25419: a0 = a0 + a1\n 25422: u64 [s1 + 0x80] = a3\n 25426: u64 [s1 + 0x88] = a2\n 25430: u64 [s1 + 0x90] = a4\n 25434: u64 [s1 + 0x98] = a0\n 25438: a0 = s1 + 0x20\n 25441: a1 = s1 + 0x80\n 25445: ra = 1038, jump @21\n      : @1031 [@dyn 519] (gas: 15)\n 25451: a0 = u64 [s1 + 0x30]\n 25454: a1 = u64 [s1 + 0x38]\n 25457: a2 = u64 [s1 + 0x20]\n 25460: a3 = u64 [s1 + 0x28]\n 25463: a4 = u64 [s1 + 0x18]\n 25466: u64 [a4 + 0x10] = a0\n 25469: u64 [a4 + 0x18] = a1\n 25472: u64 [a4] = a2\n 25474: u64 [a4 + 0x8] = a3\n 25477: sp = s0 + 0xffffffffffffff40\n 25481: ra = u64 [sp + 0xb8]\n 25485: s0 = u64 [sp + 0xb0]\n 25489: s1 = u64 [sp + 0xa8]\n 25493: sp = sp + 0xc0\n 25497: ret\n      : @1032 (gas: 37)\n 25499: sp = sp + 0xfffffffffffffce0\n 25503: a3 = sp + 0x300\n 25507: u64 [a3 + 0x18] = ra\n 25510: u64 [a3 + 0x10] = s0\n 25513: u64 [a3 + 0x8] = s1\n 25516: s0 = sp + 0x320\n 25520: sp = sp & 0xffffffffffffffe0\n 25523: s1 = sp\n 25525: a3 = u64 [a2 + 0x18]\n 25528: u64 [s1 + 0x98] = a3\n 25532: a3 = u64 [a2 + 0x10]\n 25535: u64 [s1 + 0x90] = a3\n 25539: a3 = u64 [a2 + 0x8]\n 25542: u64 [s1 + 0xa0] = a3\n 25546: a2 = u64 [a2]\n 25548: u64 [s1 + 0xa8] = a2\n 25552: a2 = u64 [a1 + 0x10]\n 25555: u64 [s1 + 0x88] = a2\n 25559: a2 = u64 [a1 + 0x8]\n 25562: u64 [s1 + 0x80] = a2\n 25566: a1 = u64 [a1]\n 25568: u64 [s1 + 0x78] = a1\n 25571: a2 = u64 [a0]\n 25573: a1 = u64 [a0 + 0x8]\n 25576: a0 = u32 [a0 + 0x10]\n 25579: a3 = 0xffffffff\n 25589: u64 [s1 + 0x70] = a3\n 25592: u64 [s1 + 728] = 0\n 25596: u64 [s1 + 0x40] = a0\n 25599: u64 [s1 + 0x2d0] = a0\n 25603: u64 [s1 + 0x30] = a1\n 25606: u64 [s1 + 0x2c8] = a1\n 25610: a1 = s1 + 0x2c0\n 25614: u64 [s1 + 0x38] = a2\n 25617: u64 [s1 + 0x2c0] = a2\n 25621: a0 = 0\n 25623: ra = 1040, jump @19\n      : @1033 [@dyn 520] (gas: 7)\n 25629: u64 [s1 + 696] = 0\n 25633: u64 [s1 + 688] = 0\n 25637: u64 [s1 + 672] = 0x1\n 25642: a0 = 0x20\n 25645: a1 = s1 + 0x2a0\n 25649: u64 [s1 + 680] = 0\n 25653: ra = 1042, jump @19\n      : @1034 [@dyn 521] (gas: 3)\n 25659: a1 = 0x2026c\n 25664: a0 = i32 [0x2026c]\n 25669: jump @1036 if a0 >u 63\n      : @1035 (gas: 2)\n 25673: u32 [0x2026c] = 0x40\n 25679: fallthrough\n      : @1036 (gas: 15)\n 25680: a0 = sp + 0xffffffffffffffe0\n 25683: a2 = a0 & 0xffffffffffffffe0\n 25686: u64 [s1 + 0x68] = a2\n 25689: sp = a2\n 25691: a0 = 0x20280\n 25696: i32 a0 = a0 + 0\n 25698: i32 a2 = a2 + 0\n 25700: u64 [s1 + 0xb0] = a1\n 25704: a1 = 0x40\n 25707: u64 [s1 + 0xb8] = a0\n 25711: ra = 0x414\n 25715: ecalli 6 // 'hash_keccak_256'\n 25717: a3 = u64 [s1 + 0x68]\n 25720: t0 = 0x416\n 25724: jump @1349\n      : @1037 [@dyn 522] (gas: 2)\n 25727: a3 = u64 [s1 + 0x68]\n 25730: t0 = 1046, jump @1349\n      : @1038 [@dyn 523] (gas: 17)\n 25736: a0 = u64 [s1 + 0x78]\n 25739: a0 = a0 & 0xffffffffffffffff\n 25742: a1 = u64 [s1 + 0x80]\n 25746: a1 = a1 & 0xffffffffffffffff\n 25749: a2 = u64 [s1 + 0x88]\n 25753: a3 = u64 [s1 + 0x70]\n 25756: a2 = a2 & a3\n 25759: u64 [s1 + 664] = 0\n 25763: u64 [s1 + 0x78] = a2\n 25766: u64 [s1 + 0x290] = a2\n 25770: u64 [s1 + 0x80] = a1\n 25774: u64 [s1 + 0x288] = a1\n 25778: a1 = s1 + 0x280\n 25782: u64 [s1 + 0x88] = a0\n 25786: u64 [s1 + 0x280] = a0\n 25790: a0 = 0\n 25792: ra = 1048, jump @19\n      : @1039 [@dyn 524] (gas: 12)\n 25798: a0 = u64 [s1 + 0x48]\n 25801: a3 = s1 + 0x200\n 25805: u64 [a3 + 0x78] = a0\n 25808: a0 = u64 [s1 + 0x50]\n 25811: u64 [a3 + 0x70] = a0\n 25814: a0 = u64 [s1 + 0x58]\n 25817: u64 [a3 + 0x68] = a0\n 25820: a0 = 0x20\n 25823: a1 = s1 + 0x260\n 25827: a2 = u64 [s1 + 0x60]\n 25830: u64 [a3 + 0x60] = a2\n 25833: ra = 1050, jump @19\n      : @1040 [@dyn 525] (gas: 3)\n 25839: a1 = u64 [s1 + 0xb0]\n 25843: a0 = i32 [a1]\n 25845: jump @1042 if a0 >u 63\n      : @1041 (gas: 2)\n 25849: u32 [a1 + 0] = 0x40\n 25852: fallthrough\n      : @1042 (gas: 4)\n 25853: a0 = sp + 0xffffffffffffffe0\n 25856: a0 = a0 & 0xffffffffffffffe0\n 25859: u64 [s1 + 0x70] = a0\n 25862: t0 = 1052, jump @1385\n      : @1043 [@dyn 526] (gas: 5)\n 25868: ra = 0x41e\n 25872: ecalli 6 // 'hash_keccak_256'\n 25874: a3 = u64 [s1 + 0x70]\n 25877: t0 = 0x420\n 25881: jump @1359\n      : @1044 [@dyn 527] (gas: 2)\n 25884: a3 = u64 [s1 + 0x70]\n 25887: t0 = 1056, jump @1359\n      : @1045 [@dyn 528] (gas: 2)\n 25893: a0 = s1 + 0x240\n 25897: ra = 1058, jump @21\n      : @1046 [@dyn 529] (gas: 9)\n 25903: ra = u64 [s1 + 0x258]\n 25907: t1 = u64 [s1 + 0x250]\n 25911: a4 = u64 [s1 + 0x248]\n 25915: t0 = u64 [s1 + 0x240]\n 25919: a0 = a4 & ra\n 25922: a1 = t0 & t1\n 25925: a0 = a0 & a1\n 25928: a1 = 0xffffffffffffffff\n 25931: jump @1063 if a0 == a1\n      : @1047 (gas: 23)\n 25935: a0 = u64 [s1 + 0xa8]\n 25939: a2 = t0 <u a0\n 25942: a1 = u64 [s1 + 0xa0]\n 25946: a0 = a4 ^ a1\n 25949: a5 = a4 <u a1\n 25952: u64 [s1 + 0x50] = a2\n 25955: a5 = a2 if a0 == 0\n 25958: a2 = u64 [s1 + 0x90]\n 25962: a3 = t1 <u a2\n 25965: a1 = u64 [s1 + 0x98]\n 25969: a0 = ra ^ a1\n 25972: a1 = ra <u a1\n 25975: u64 [s1 + 0x28] = a3\n 25978: a1 = a3 if a0 == 0\n 25981: a2 = t1 ^ a2\n 25984: a0 = a0 | a2\n 25987: u64 [s1 + 0x48] = a5\n 25990: a1 = a5 if a0 == 0\n 25993: u64 [s1 + 0x70] = t0\n 25996: u64 [s1 + 0x68] = a4\n 25999: u64 [s1 + 0x60] = ra\n 26002: u64 [s1 + 0x58] = t1\n 26005: jump @1064 if a1 != 0\n      : @1048 (gas: 6)\n 26009: a3 = u64 [s1 + 0x40]\n 26012: a2 = u64 [s1 + 0x38]\n 26015: a0 = a2 | a3\n 26018: t2 = u64 [s1 + 0x30]\n 26021: a0 = a0 | t2\n 26024: jump @1071 if a0 == 0\n      : @1049 (gas: 6)\n 26028: a0 = u64 [s1 + 0x88]\n 26032: a1 = u64 [s1 + 0x78]\n 26035: a0 = a0 | a1\n 26038: a1 = u64 [s1 + 0x80]\n 26042: a0 = a0 | a1\n 26045: jump @1073 if a0 == 0\n      : @1050 (gas: 7)\n 26049: u64 [s1 + 568] = 0\n 26053: u64 [s1 + 0x220] = a2\n 26057: u64 [s1 + 0x228] = t2\n 26061: a1 = s1 + 0x220\n 26065: u64 [s1 + 0x230] = a3\n 26069: a0 = 0\n 26071: ra = 1060, jump @19\n      : @1051 [@dyn 530] (gas: 7)\n 26077: u64 [s1 + 536] = 0\n 26081: u64 [s1 + 528] = 0\n 26085: u64 [s1 + 512] = 0x1\n 26090: a0 = 0x20\n 26093: a1 = s1 + 0x200\n 26097: u64 [s1 + 520] = 0\n 26101: ra = 1062, jump @19\n      : @1052 [@dyn 531] (gas: 3)\n 26107: a1 = u64 [s1 + 0xb0]\n 26111: a0 = i32 [a1]\n 26113: jump @1054 if a0 >u 63\n      : @1053 (gas: 2)\n 26117: u32 [a1 + 0] = 0x40\n 26120: fallthrough\n      : @1054 (gas: 4)\n 26121: a0 = sp + 0xffffffffffffffe0\n 26124: a0 = a0 & 0xffffffffffffffe0\n 26127: u64 [s1 + 0x40] = a0\n 26130: t0 = 1064, jump @1385\n      : @1055 [@dyn 532] (gas: 5)\n 26136: ra = 0x42a\n 26140: ecalli 6 // 'hash_keccak_256'\n 26142: a3 = u64 [s1 + 0x40]\n 26145: t0 = 0x42c\n 26149: jump @1383\n      : @1056 [@dyn 533] (gas: 2)\n 26152: a3 = u64 [s1 + 0x40]\n 26155: t0 = 1068, jump @1383\n      : @1057 [@dyn 534] (gas: 21)\n 26161: u64 [s1 + 0x38] = a0\n 26164: a0 = reverse a1\n 26166: u64 [s1 + 0x30] = a0\n 26169: a0 = reverse a2\n 26171: u64 [s1 + 0x20] = a0\n 26174: a0 = reverse a3\n 26176: u64 [s1 + 0x18] = a0\n 26179: a0 = sp + 0xffffffffffffffe0\n 26182: a0 = a0 & 0xffffffffffffffe0\n 26185: u64 [s1 + 0x40] = a0\n 26188: sp = a0\n 26190: u64 [s1 + 504] = 0\n 26194: a0 = u64 [s1 + 0x78]\n 26197: u64 [s1 + 0x1f0] = a0\n 26201: a0 = u64 [s1 + 0x80]\n 26205: u64 [s1 + 0x1e8] = a0\n 26209: a1 = s1 + 0x1e0\n 26213: a0 = u64 [s1 + 0x88]\n 26217: u64 [s1 + 0x1e0] = a0\n 26221: a0 = 0\n 26223: ra = 1070, jump @19\n      : @1058 [@dyn 535] (gas: 12)\n 26229: a0 = u64 [s1 + 0x18]\n 26232: a3 = s1 + 0x100\n 26236: u64 [a3 + 0xd8] = a0\n 26240: a0 = u64 [s1 + 0x20]\n 26243: u64 [a3 + 0xd0] = a0\n 26247: a0 = u64 [s1 + 0x30]\n 26250: u64 [a3 + 0xc8] = a0\n 26254: a0 = 0x20\n 26257: a1 = s1 + 0x1c0\n 26261: a2 = u64 [s1 + 0x38]\n 26264: u64 [a3 + 0xc0] = a2\n 26268: ra = 1072, jump @19\n      : @1059 [@dyn 536] (gas: 3)\n 26274: a1 = u64 [s1 + 0xb0]\n 26278: a0 = i32 [a1]\n 26280: jump @1061 if a0 >u 63\n      : @1060 (gas: 2)\n 26284: u32 [a1 + 0] = 0x40\n 26287: fallthrough\n      : @1061 (gas: 4)\n 26288: a0 = sp + 0xffffffffffffffe0\n 26291: a0 = a0 & 0xffffffffffffffe0\n 26294: u64 [s1 + 0xb0] = a0\n 26298: t0 = 1074, jump @1385\n      : @1062 [@dyn 537] (gas: 43)\n 26304: ecalli 6 // 'hash_keccak_256'\n 26306: a2 = u64 [s1 + 0xb0]\n 26310: a0 = u64 [a2]\n 26312: a0 = reverse a0\n 26314: a1 = u64 [a2 + 0x8]\n 26317: a5 = u64 [s1 + 0x40]\n 26320: u64 [a5 + 0x18] = a0\n 26323: a0 = u64 [a2 + 0x10]\n 26326: a2 = u64 [a2 + 0x18]\n 26329: a1 = reverse a1\n 26331: u64 [a5 + 0x10] = a1\n 26334: a0 = reverse a0\n 26336: u64 [a5 + 0x8] = a0\n 26339: a0 = reverse a2\n 26341: u64 [a5] = a0\n 26343: a0 = u64 [s1 + 0x90]\n 26347: a1 = u64 [s1 + 0x58]\n 26350: a0 = a1 - a0\n 26353: a2 = u64 [s1 + 0x48]\n 26356: a1 = a0 - a2\n 26359: a0 = a0 <u a2\n 26362: a2 = u64 [s1 + 0x98]\n 26366: a3 = u64 [s1 + 0x60]\n 26369: a2 = a3 - a2\n 26372: a3 = u64 [s1 + 0x28]\n 26375: a2 = a2 - a3\n 26378: a2 = a2 - a0\n 26381: a0 = u64 [s1 + 0xa0]\n 26385: a3 = u64 [s1 + 0x68]\n 26388: a0 = a3 - a0\n 26391: a3 = u64 [s1 + 0x50]\n 26394: a0 = a0 - a3\n 26397: a3 = u64 [s1 + 0xa8]\n 26401: a4 = u64 [s1 + 0x70]\n 26404: a3 = a4 - a3\n 26407: a4 = s1 + 0x200\n 26411: u64 [a4 + 0xf8] = a2\n 26415: u64 [a4 + 0xf0] = a1\n 26419: u64 [a4 + 0xe8] = a0\n 26423: u64 [a4 + 0xe0] = a3\n 26427: a1 = s1 + 0x2e0\n 26431: a0 = a5\n 26433: ra = 1076, jump @24\n      : @1063 [@dyn 538] (gas: 7)\n 26439: sp = s0 + 0xfffffffffffffce0\n 26443: a0 = sp + 0x300\n 26447: ra = u64 [a0 + 0x18]\n 26450: s0 = u64 [a0 + 0x10]\n 26453: s1 = u64 [a0 + 0x8]\n 26456: sp = sp + 0x320\n 26460: ret\n      : @1064 (gas: 8)\n 26462: u64 [s1 + 304] = 0\n 26466: u64 [s1 + 296] = 0\n 26470: u64 [s1 + 288] = 0\n 26474: a0 = 0xfb8f41b200000000\n 26484: a1 = s1 + 0x120\n 26488: u64 [s1 + 0x138] = a0\n 26492: a0 = 0\n 26494: ra = 1078, jump @19\n      : @1065 [@dyn 539] (gas: 11)\n 26500: u64 [s1 + 280] = 0\n 26504: a0 = u64 [s1 + 0x78]\n 26507: a3 = s1 + 0x100\n 26511: u64 [a3 + 0x10] = a0\n 26514: a0 = u64 [s1 + 0x80]\n 26518: u64 [a3 + 0x8] = a0\n 26521: a0 = 0x4\n 26524: a1 = s1 + 0x100\n 26528: a2 = u64 [s1 + 0x88]\n 26532: u64 [a3] = a2\n 26534: ra = 1080, jump @19\n      : @1066 [@dyn 540] (gas: 11)\n 26540: a0 = u64 [s1 + 0x60]\n 26543: u64 [s1 + 0xf8] = a0\n 26547: a0 = u64 [s1 + 0x58]\n 26550: u64 [s1 + 0xf0] = a0\n 26554: a0 = u64 [s1 + 0x68]\n 26557: u64 [s1 + 0xe8] = a0\n 26561: a0 = 0x24\n 26564: a1 = s1 + 0xe0\n 26568: a2 = u64 [s1 + 0x70]\n 26571: u64 [s1 + 0xe0] = a2\n 26575: ra = 1082, jump @19\n      : @1067 [@dyn 541] (gas: 11)\n 26581: a0 = u64 [s1 + 0x98]\n 26585: u64 [s1 + 0xd8] = a0\n 26589: a0 = u64 [s1 + 0x90]\n 26593: u64 [s1 + 0xd0] = a0\n 26597: a0 = u64 [s1 + 0xa0]\n 26601: u64 [s1 + 0xc8] = a0\n 26605: a0 = 0x44\n 26608: a1 = s1 + 0xc0\n 26612: a2 = u64 [s1 + 0xa8]\n 26616: u64 [s1 + 0xc0] = a2\n 26620: ra = 1084, jump @19\n      : @1068 [@dyn 542] (gas: 3)\n 26626: a0 = u64 [s1 + 0xb0]\n 26630: a0 = i32 [a0]\n 26632: jump @1070 if a0 >u 127\n      : @1069 (gas: 5)\n 26636: a1 = u64 [s1 + 0xb0]\n 26640: u32 [a1 + 0] = 0x80\n 26644: a0 = 0x1\n 26647: a2 = 0x64\n 26650: jump @1078\n      : @1070 (gas: 6)\n 26653: a0 = 0x1\n 26656: a2 = 0x64\n 26659: a1 = u64 [s1 + 0xb8]\n 26663: ra = 0x444\n 26667: ecalli 7 // 'seal_return'\n 26669: jump @1079\n      : @1071 (gas: 8)\n 26672: u64 [s1 + 368] = 0\n 26676: u64 [s1 + 360] = 0\n 26680: u64 [s1 + 352] = 0\n 26684: a0 = 0xe602df0500000000\n 26694: a1 = s1 + 0x160\n 26698: u64 [s1 + 0x178] = a0\n 26702: a0 = 0\n 26704: ra = 1086, jump @19\n      : @1072 [@dyn 543] (gas: 8)\n 26710: u64 [s1 + 344] = 0\n 26714: u64 [s1 + 336] = 0\n 26718: u64 [s1 + 328] = 0\n 26722: a0 = 0x4\n 26725: a1 = s1 + 0x140\n 26729: u64 [s1 + 320] = 0\n 26733: ra = 0x442\n 26737: jump @19\n      : @1073 (gas: 8)\n 26740: u64 [s1 + 432] = 0\n 26744: u64 [s1 + 424] = 0\n 26748: u64 [s1 + 416] = 0\n 26752: a0 = 0x94280d6200000000\n 26762: a1 = s1 + 0x1a0\n 26766: u64 [s1 + 0x1b8] = a0\n 26770: a0 = 0\n 26772: ra = 1088, jump @19\n      : @1074 [@dyn 544] (gas: 7)\n 26778: u64 [s1 + 408] = 0\n 26782: u64 [s1 + 400] = 0\n 26786: u64 [s1 + 392] = 0\n 26790: a0 = 0x4\n 26793: a1 = s1 + 0x180\n 26797: u64 [s1 + 384] = 0\n 26801: ra = 1090, jump @19\n      : @1075 [@dyn 545] (gas: 3)\n 26807: a0 = u64 [s1 + 0xb0]\n 26811: a0 = i32 [a0]\n 26813: jump @1077 if a0 >u 63\n      : @1076 (gas: 5)\n 26817: a1 = u64 [s1 + 0xb0]\n 26821: u32 [a1 + 0] = 0x40\n 26824: a0 = 0x1\n 26827: a2 = 0x24\n 26830: jump @1078\n      : @1077 (gas: 6)\n 26832: a0 = 0x1\n 26835: a2 = 0x24\n 26838: a1 = u64 [s1 + 0xb8]\n 26842: ra = 0x444\n 26846: ecalli 7 // 'seal_return'\n 26848: jump @1079\n      : @1078 (gas: 4)\n 26850: a1 = u64 [s1 + 0xb8]\n 26854: ra = 0x444\n 26858: ecalli 7 // 'seal_return'\n 26860: fallthrough\n      : @1079 [@dyn 546] (gas: 17)\n 26861: sp = sp + 0xfffffffffffffc20\n 26865: a3 = sp + 0x300\n 26869: u64 [a3 + 0xd8] = ra\n 26873: u64 [a3 + 0xd0] = s0\n 26877: u64 [a3 + 0xc8] = s1\n 26881: s0 = sp + 0x3e0\n 26885: sp = sp & 0xffffffffffffffe0\n 26888: s1 = sp\n 26890: a5 = u32 [a0 + 0x10]\n 26893: a3 = u64 [a0]\n 26895: a4 = u64 [a0 + 0x8]\n 26898: u64 [s1 + 0x78] = a3\n 26901: u64 [s1 + 0x68] = a5\n 26904: a0 = a3 | a5\n 26907: u64 [s1 + 0x70] = a4\n 26910: a0 = a0 | a4\n 26913: jump @1113 if a0 == 0\n      : @1080 (gas: 14)\n 26917: a0 = u64 [a1 + 0x10]\n 26920: a3 = u64 [a1 + 0x8]\n 26923: a1 = u64 [a1]\n 26925: a4 = 0xffffffffffffffff\n 26928: a5 = 0xffffffff\n 26938: a3 = a3 & a4\n 26941: a1 = a1 & a4\n 26944: a0 = a0 & a5\n 26947: u64 [s1 + 0x48] = a1\n 26950: u64 [s1 + 0x38] = a0\n 26953: a0 = a0 | a1\n 26956: u64 [s1 + 0x40] = a3\n 26959: a0 = a0 | a3\n 26962: jump @1118 if a0 == 0\n      : @1081 (gas: 9)\n 26966: a0 = u64 [a2 + 0x18]\n 26969: u64 [s1 + 0x98] = a0\n 26973: a0 = u64 [a2 + 0x10]\n 26976: u64 [s1 + 0x88] = a0\n 26980: a0 = u64 [a2 + 0x8]\n 26983: u64 [s1 + 0x80] = a0\n 26987: a0 = u64 [a2]\n 26989: u64 [s1 + 0x90] = a0\n 26993: ra = 1094, jump @1312\n      : @1082 [@dyn 547] (gas: 11)\n 26999: u64 [s1 + 824] = 0\n 27003: a0 = u64 [s1 + 0x68]\n 27006: a2 = s1 + 0x300\n 27010: u64 [a2 + 0x30] = a0\n 27013: a0 = u64 [s1 + 0x70]\n 27016: u64 [a2 + 0x28] = a0\n 27019: a1 = s1 + 0x320\n 27023: a0 = u64 [s1 + 0x78]\n 27026: u64 [a2 + 0x20] = a0\n 27029: a0 = 0\n 27031: ra = 1096, jump @19\n      : @1083 [@dyn 548] (gas: 7)\n 27037: u64 [s1 + 792] = 0\n 27041: u64 [s1 + 784] = 0\n 27045: u64 [s1 + 776] = 0\n 27049: a0 = 0x20\n 27052: a1 = s1 + 0x300\n 27056: u64 [s1 + 768] = 0\n 27060: ra = 1098, jump @19\n      : @1084 [@dyn 549] (gas: 3)\n 27066: a2 = 0x2026c\n 27071: a0 = i32 [0x2026c]\n 27076: jump @1086 if a0 >u 63\n      : @1085 (gas: 2)\n 27080: u32 [0x2026c] = 0x40\n 27086: fallthrough\n      : @1086 (gas: 15)\n 27087: u64 [s1 + 0x58] = a2\n 27090: a0 = sp + 0xffffffffffffffe0\n 27093: a2 = a0 & 0xffffffffffffffe0\n 27096: u64 [s1 + 0x50] = a2\n 27099: sp = a2\n 27101: a0 = 0x20280\n 27106: i32 a0 = a0 + 0\n 27108: i32 a2 = a2 + 0\n 27110: a1 = 0x40\n 27113: u64 [s1 + 0x60] = a0\n 27116: ra = 0x44c\n 27120: ecalli 6 // 'hash_keccak_256'\n 27122: a3 = u64 [s1 + 0x50]\n 27125: t0 = 0x44e\n 27129: jump @1373\n      : @1087 [@dyn 550] (gas: 2)\n 27132: a3 = u64 [s1 + 0x50]\n 27135: t0 = 1102, jump @1373\n      : @1088 [@dyn 551] (gas: 7)\n 27141: u64 [a4 + 0x58] = a3\n 27144: u64 [a4 + 0x50] = a2\n 27147: u64 [a4 + 0x48] = a1\n 27150: u64 [a4 + 0x40] = a0\n 27153: a0 = s1 + 0x2e0\n 27157: a1 = s1 + 0x340\n 27161: ra = 1104, jump @21\n      : @1089 [@dyn 552] (gas: 28)\n 27167: a1 = s1 + 0x200\n 27171: a2 = u64 [a1 + 0xf8]\n 27175: a0 = u64 [a1 + 0xf0]\n 27179: a5 = u64 [a1 + 0xe8]\n 27183: a4 = u64 [a1 + 0xe0]\n 27187: a1 = u64 [s1 + 0x98]\n 27191: t1 = a2 ^ a1\n 27194: u64 [s1 + 0x28] = a2\n 27197: a1 = a2 <u a1\n 27200: a2 = u64 [s1 + 0x88]\n 27204: a3 = a0 <u a2\n 27207: u64 [s1 + 0x10] = a3\n 27210: a1 = a3 if t1 == 0\n 27213: a3 = u64 [s1 + 0x80]\n 27217: t0 = a5 ^ a3\n 27220: u64 [s1 + 0x30] = a5\n 27223: a5 = a5 <u a3\n 27226: a3 = u64 [s1 + 0x90]\n 27230: u64 [s1 + 0x50] = a4\n 27233: a3 = a4 <u a3\n 27236: u64 [s1 + 0x18] = a3\n 27239: a5 = a3 if t0 == 0\n 27242: u64 [s1 + 0x20] = a0\n 27245: a2 = a2 ^ a0\n 27248: a0 = a2 | t1\n 27251: u64 [s1 + 0x8] = a5\n 27254: a1 = a5 if a0 == 0\n 27257: jump @1124 if a1 != 0\n      : @1090 (gas: 11)\n 27261: u64 [s1 + 728] = 0\n 27265: a0 = u64 [s1 + 0x78]\n 27268: a2 = s1 + 0x200\n 27272: u64 [a2 + 0xc0] = a0\n 27276: a0 = u64 [s1 + 0x70]\n 27279: u64 [a2 + 0xc8] = a0\n 27283: a1 = s1 + 0x2c0\n 27287: a0 = u64 [s1 + 0x68]\n 27290: u64 [a2 + 0xd0] = a0\n 27294: a0 = 0\n 27296: ra = 1106, jump @19\n      : @1091 [@dyn 553] (gas: 7)\n 27302: u64 [s1 + 696] = 0\n 27306: u64 [s1 + 688] = 0\n 27310: u64 [s1 + 680] = 0\n 27314: a0 = 0x20\n 27317: a1 = s1 + 0x2a0\n 27321: u64 [s1 + 672] = 0\n 27325: ra = 1108, jump @19\n      : @1092 [@dyn 554] (gas: 28)\n 27331: a0 = u64 [s1 + 0x88]\n 27335: a1 = u64 [s1 + 0x20]\n 27338: a0 = a1 - a0\n 27341: a2 = u64 [s1 + 0x8]\n 27344: a1 = a0 - a2\n 27347: u64 [s1 + 0x20] = a1\n 27350: a0 = a0 <u a2\n 27353: a1 = u64 [s1 + 0x98]\n 27357: a2 = u64 [s1 + 0x28]\n 27360: a1 = a2 - a1\n 27363: a2 = u64 [s1 + 0x10]\n 27366: a1 = a1 - a2\n 27369: a1 = a1 - a0\n 27372: u64 [s1 + 0x28] = a1\n 27375: a2 = u64 [s1 + 0x58]\n 27378: a0 = i32 [a2]\n 27380: a1 = u64 [s1 + 0x80]\n 27384: a3 = u64 [s1 + 0x30]\n 27387: a1 = a3 - a1\n 27390: a3 = u64 [s1 + 0x18]\n 27393: a1 = a1 - a3\n 27396: u64 [s1 + 0x30] = a1\n 27399: a4 = 0x3f\n 27402: a1 = u64 [s1 + 0x90]\n 27406: a3 = u64 [s1 + 0x50]\n 27409: a3 = a3 - a1\n 27412: u64 [s1 + 0x50] = a3\n 27415: jump @1094 if a4 <u a0\n      : @1093 (gas: 2)\n 27418: u32 [a2 + 0] = 0x40\n 27421: fallthrough\n      : @1094 (gas: 4)\n 27422: a0 = sp + 0xffffffffffffffe0\n 27425: a0 = a0 & 0xffffffffffffffe0\n 27428: u64 [s1 + 0x18] = a0\n 27431: t0 = 1110, jump @1339\n      : @1095 [@dyn 555] (gas: 5)\n 27437: ra = 0x458\n 27441: ecalli 6 // 'hash_keccak_256'\n 27443: a3 = u64 [s1 + 0x18]\n 27446: t0 = 0x45a\n 27450: jump @1373\n      : @1096 [@dyn 556] (gas: 2)\n 27453: a3 = u64 [s1 + 0x18]\n 27456: t0 = 1114, jump @1373\n      : @1097 [@dyn 557] (gas: 15)\n 27462: u64 [a4 + 0x78] = a3\n 27465: u64 [a4 + 0x70] = a2\n 27468: u64 [a4 + 0x68] = a1\n 27471: u64 [a4 + 0x60] = a0\n 27474: a0 = u64 [s1 + 0x28]\n 27477: u64 [a4 + 0x98] = a0\n 27481: a0 = u64 [s1 + 0x20]\n 27484: u64 [a4 + 0x90] = a0\n 27488: a0 = u64 [s1 + 0x30]\n 27491: u64 [a4 + 0x88] = a0\n 27495: a0 = u64 [s1 + 0x50]\n 27498: u64 [a4 + 0x80] = a0\n 27502: a0 = s1 + 0x360\n 27506: a1 = s1 + 0x380\n 27510: ra = 1116, jump @24\n      : @1098 [@dyn 558] (gas: 11)\n 27516: u64 [s1 + 664] = 0\n 27520: a0 = u64 [s1 + 0x38]\n 27523: a2 = s1 + 0x200\n 27527: u64 [a2 + 0x90] = a0\n 27531: a0 = u64 [s1 + 0x40]\n 27534: u64 [a2 + 0x88] = a0\n 27538: a1 = s1 + 0x280\n 27542: a0 = u64 [s1 + 0x48]\n 27545: u64 [a2 + 0x80] = a0\n 27549: a0 = 0\n 27551: ra = 1118, jump @19\n      : @1099 [@dyn 559] (gas: 1)\n 27557: t0 = 1120, jump @1377\n      : @1100 [@dyn 560] (gas: 1)\n 27563: ra = 1122, jump @19\n      : @1101 [@dyn 561] (gas: 7)\n 27569: a1 = u64 [s1 + 0x58]\n 27572: a0 = sp + 0xffffffffffffffe0\n 27575: a0 = a0 & 0xffffffffffffffe0\n 27578: u64 [s1 + 0x50] = a0\n 27581: sp = a0\n 27583: a0 = i32 [a1]\n 27585: jump @1103 if a0 >u 63\n      : @1102 (gas: 2)\n 27589: u32 [a1 + 0] = 0x40\n 27592: fallthrough\n      : @1103 (gas: 4)\n 27593: a0 = sp + 0xffffffffffffffe0\n 27596: a0 = a0 & 0xffffffffffffffe0\n 27599: u64 [s1 + 0x58] = a0\n 27602: t0 = 1124, jump @1339\n      : @1104 [@dyn 562] (gas: 17)\n 27608: ecalli 6 // 'hash_keccak_256'\n 27610: a3 = u64 [s1 + 0x58]\n 27613: a0 = u64 [a3 + 0x18]\n 27616: a1 = u64 [a3 + 0x10]\n 27619: a2 = u64 [a3 + 0x8]\n 27622: a3 = u64 [a3]\n 27624: a0 = reverse a0\n 27626: a4 = reverse a1\n 27628: a2 = reverse a2\n 27630: a3 = reverse a3\n 27632: a1 = u64 [s1 + 0x50]\n 27635: u64 [a1 + 0x18] = a3\n 27638: u64 [a1 + 0x10] = a2\n 27641: u64 [a1 + 0x8] = a4\n 27644: u64 [a1] = a0\n 27646: a0 = s1 + 0x240\n 27650: ra = 1126, jump @21\n      : @1105 [@dyn 563] (gas: 30)\n 27656: a0 = u64 [s1 + 0x248]\n 27660: a1 = u64 [s1 + 0x240]\n 27664: t0 = u64 [s1 + 0x258]\n 27668: a3 = u64 [s1 + 0x250]\n 27672: a4 = u64 [s1 + 0x80]\n 27676: a4 = a4 + a0\n 27679: a5 = u64 [s1 + 0x90]\n 27683: a5 = a5 + a1\n 27686: a1 = a5 <u a1\n 27689: a4 = a4 + a1\n 27692: a2 = a4 ^ a0\n 27695: a0 = a4 <u a0\n 27698: a0 = a1 if a2 == 0\n 27701: a1 = u64 [s1 + 0x88]\n 27705: a1 = a1 + a3\n 27708: a2 = u64 [s1 + 0x98]\n 27712: t0 = t0 + a2\n 27715: a2 = a1 <u a3\n 27718: a2 = a2 + t0\n 27721: a0 = a0 + a1\n 27724: a1 = a0 <u a1\n 27727: a1 = a1 + a2\n 27730: a2 = s1 + 0x300\n 27734: u64 [a2 + 0xa0] = a5\n 27738: u64 [a2 + 0xa8] = a4\n 27742: u64 [a2 + 0xb0] = a0\n 27746: u64 [a2 + 0xb8] = a1\n 27750: a1 = s1 + 0x3a0\n 27754: a0 = u64 [s1 + 0x50]\n 27757: ra = 1128, jump @24\n      : @1106 [@dyn 564] (gas: 3)\n 27763: a0 = s1 + 0x220\n 27767: a1 = 0x40\n 27770: ra = 1130, jump @17\n      : @1107 [@dyn 565] (gas: 6)\n 27776: a4 = s1 + 0x200\n 27780: a3 = u64 [a4 + 0x38]\n 27783: a1 = u64 [a4 + 0x30]\n 27786: a2 = u64 [a4 + 0x28]\n 27789: a0 = u64 [a4 + 0x20]\n 27792: t0 = 1132, jump @1332\n      : @1108 [@dyn 566] (gas: 1)\n 27798: jump @1112 if a1 != 0\n      : @1109 (gas: 12)\n 27802: a1 = u64 [s1 + 0x90]\n 27806: a3 = s1 + 0x200\n 27810: u64 [a3] = a1\n 27812: a1 = u64 [s1 + 0x80]\n 27816: u64 [a3 + 0x8] = a1\n 27819: a1 = u64 [s1 + 0x88]\n 27823: u64 [a3 + 0x10] = a1\n 27826: a1 = s1 + 0x200\n 27830: a2 = u64 [s1 + 0x98]\n 27834: u64 [a3 + 0x18] = a2\n 27837: u64 [s1 + 0x98] = a0\n 27841: ra = 1134, jump @19\n      : @1110 [@dyn 567] (gas: 29)\n 27847: u64 [s1 + 440] = 0\n 27851: a0 = u64 [s1 + 0x38]\n 27854: a5 = s1 + 0x100\n 27858: u64 [a5 + 0xb0] = a0\n 27862: a0 = u64 [s1 + 0x40]\n 27865: u64 [a5 + 0xa8] = a0\n 27869: a0 = u64 [s1 + 0x48]\n 27872: u64 [a5 + 0xa0] = a0\n 27876: u64 [s1 + 472] = 0\n 27880: a0 = u64 [s1 + 0x68]\n 27883: u64 [a5 + 0xd0] = a0\n 27887: a0 = u64 [s1 + 0x70]\n 27890: u64 [a5 + 0xc8] = a0\n 27894: a0 = u64 [0x201c8]\n 27899: a1 = u64 [0x201d0]\n 27904: a2 = u64 [0x201d8]\n 27909: a3 = u64 [s1 + 0x78]\n 27912: u64 [a5 + 0xc0] = a3\n 27916: u64 [a5 + 0xf8] = a0\n 27920: u64 [a5 + 0xf0] = a1\n 27924: u64 [a5 + 0xe8] = a2\n 27928: a0 = u64 [0x201e0]\n 27933: a1 = 0x20\n 27936: a2 = s1 + 0x1e0\n 27940: a3 = s1 + 0x1c0\n 27944: a4 = s1 + 0x1a0\n 27948: u64 [a5 + 0xe0] = a0\n 27952: a0 = u64 [s1 + 0x98]\n 27956: ra = 1136, jump @27\n      : @1111 [@dyn 568] (gas: 7)\n 27962: sp = s0 + 0xfffffffffffffc20\n 27966: a0 = sp + 0x300\n 27970: ra = u64 [a0 + 0xd8]\n 27974: s0 = u64 [a0 + 0xd0]\n 27978: s1 = u64 [a0 + 0xc8]\n 27982: sp = sp + 0x3e0\n 27986: ret\n      : @1112 (gas: 1)\n 27988: trap\n      : @1113 (gas: 8)\n 27989: u64 [s1 + 208] = 0\n 27993: u64 [s1 + 200] = 0\n 27997: u64 [s1 + 192] = 0\n 28001: a0 = 0x96c6fd1e00000000\n 28011: a1 = s1 + 0xc0\n 28015: u64 [s1 + 0xd8] = a0\n 28019: a0 = 0\n 28021: ra = 1138, jump @19\n      : @1114 [@dyn 569] (gas: 7)\n 28027: u64 [s1 + 184] = 0\n 28031: u64 [s1 + 176] = 0\n 28035: u64 [s1 + 168] = 0\n 28039: a0 = 0x4\n 28042: a1 = s1 + 0xa0\n 28046: u64 [s1 + 160] = 0\n 28050: ra = 1140, jump @19\n      : @1115 [@dyn 570] (gas: 2)\n 28056: a1 = i32 [0x2026c]\n 28061: jump @1117 if a1 >u 63\n      : @1116 (gas: 3)\n 28065: u32 [0x2026c] = 0x40\n 28071: a1 = 0x20280\n 28076: jump @1123\n      : @1117 (gas: 2)\n 28078: a1 = 0x20280\n 28083: jump @1123\n      : @1118 (gas: 8)\n 28085: u64 [s1 + 272] = 0\n 28089: u64 [s1 + 264] = 0\n 28093: u64 [s1 + 256] = 0\n 28097: a0 = 0xec442f0500000000\n 28107: a1 = s1 + 0x100\n 28111: u64 [s1 + 0x118] = a0\n 28115: a0 = 0\n 28117: ra = 1142, jump @19\n      : @1119 [@dyn 571] (gas: 7)\n 28123: u64 [s1 + 248] = 0\n 28127: u64 [s1 + 240] = 0\n 28131: u64 [s1 + 232] = 0\n 28135: a0 = 0x4\n 28138: a1 = s1 + 0xe0\n 28142: u64 [s1 + 224] = 0\n 28146: ra = 1144, jump @19\n      : @1120 [@dyn 572] (gas: 2)\n 28152: a1 = i32 [0x2026c]\n 28157: jump @1122 if a1 >u 63\n      : @1121 (gas: 3)\n 28161: u32 [0x2026c] = 0x40\n 28167: a1 = 0x20280\n 28172: jump @1123\n      : @1122 (gas: 2)\n 28174: a1 = 0x20280\n 28179: fallthrough\n      : @1123 (gas: 5)\n 28180: i32 a1 = a1 + 0\n 28182: a0 = 0x1\n 28185: a2 = 0x24\n 28188: ecalli 7 // 'seal_return'\n 28190: fallthrough\n      : @1124 (gas: 8)\n 28191: u64 [s1 + 400] = 0\n 28195: u64 [s1 + 392] = 0\n 28199: u64 [s1 + 384] = 0\n 28203: a0 = 0xe450d38c00000000\n 28213: a1 = s1 + 0x180\n 28217: u64 [s1 + 0x198] = a0\n 28221: a0 = 0\n 28223: ra = 1146, jump @19\n      : @1125 [@dyn 573] (gas: 10)\n 28229: u64 [s1 + 376] = 0\n 28233: a0 = u64 [s1 + 0x68]\n 28236: u64 [s1 + 0x170] = a0\n 28240: a0 = u64 [s1 + 0x70]\n 28243: u64 [s1 + 0x168] = a0\n 28247: a0 = 0x4\n 28250: a1 = s1 + 0x160\n 28254: a2 = u64 [s1 + 0x78]\n 28257: u64 [s1 + 0x160] = a2\n 28261: ra = 1148, jump @19\n      : @1126 [@dyn 574] (gas: 11)\n 28267: a0 = u64 [s1 + 0x28]\n 28270: u64 [s1 + 0x158] = a0\n 28274: a0 = u64 [s1 + 0x20]\n 28277: u64 [s1 + 0x150] = a0\n 28281: a0 = u64 [s1 + 0x30]\n 28284: u64 [s1 + 0x148] = a0\n 28288: a0 = 0x24\n 28291: a1 = s1 + 0x140\n 28295: a2 = u64 [s1 + 0x50]\n 28298: u64 [s1 + 0x140] = a2\n 28302: ra = 1150, jump @19\n      : @1127 [@dyn 575] (gas: 12)\n 28308: a0 = u64 [s1 + 0x98]\n 28312: a3 = s1 + 0x100\n 28316: u64 [a3 + 0x38] = a0\n 28319: a0 = u64 [s1 + 0x88]\n 28323: u64 [a3 + 0x30] = a0\n 28326: a0 = u64 [s1 + 0x80]\n 28330: u64 [a3 + 0x28] = a0\n 28333: a0 = 0x44\n 28336: a1 = s1 + 0x120\n 28340: a2 = u64 [s1 + 0x90]\n 28344: u64 [a3 + 0x20] = a2\n 28347: ra = 1152, jump @19\n      : @1128 [@dyn 576] (gas: 3)\n 28353: a0 = u64 [s1 + 0x58]\n 28356: a0 = i32 [a0]\n 28358: jump @1130 if a0 >u 127\n      : @1129 (gas: 3)\n 28362: a1 = u64 [s1 + 0x58]\n 28365: u32 [a1 + 0] = 0x80\n 28369: fallthrough\n      : @1130 (gas: 6)\n 28370: a0 = 0x1\n 28373: a2 = 0x64\n 28376: a1 = u64 [s1 + 0x60]\n 28379: ra = 0x482\n 28383: ecalli 7 // 'seal_return'\n 28385: fallthrough\n      : @1131 [@dyn 577] (gas: 22)\n 28386: sp = sp + 0xfffffffffffffe60\n 28390: u64 [sp + 0x198] = ra\n 28394: u64 [sp + 0x190] = s0\n 28398: u64 [sp + 0x188] = s1\n 28402: s0 = sp + 0x1a0\n 28406: sp = sp & 0xffffffffffffffe0\n 28409: s1 = sp\n 28411: a0 = u64 [0x201e8]\n 28416: u64 [s1 + 0x38] = a0\n 28419: u64 [s1 + 0x178] = a0\n 28423: a1 = u64 [0x201f0]\n 28428: a2 = u64 [0x201f8]\n 28433: a0 = u64 [0x20200]\n 28438: u64 [s1 + 0x28] = a1\n 28441: u64 [s1 + 0x170] = a1\n 28445: u64 [s1 + 0x20] = a2\n 28448: u64 [s1 + 0x168] = a2\n 28452: a1 = s1 + 0x160\n 28456: u64 [s1 + 0x30] = a0\n 28459: u64 [s1 + 0x160] = a0\n 28463: a0 = 0\n 28465: ra = 1156, jump @19\n      : @1132 [@dyn 578] (gas: 1)\n 28471: t0 = 1158, jump @1347\n      : @1133 [@dyn 579] (gas: 1)\n 28477: ra = 1160, jump @19\n      : @1134 [@dyn 580] (gas: 3)\n 28483: a1 = 0x2026c\n 28488: a0 = i32 [0x2026c]\n 28493: jump @1136 if a0 >u 63\n      : @1135 (gas: 2)\n 28497: u32 [0x2026c] = 0x40\n 28503: fallthrough\n      : @1136 (gas: 14)\n 28504: a0 = sp + 0xffffffffffffffe0\n 28507: a2 = a0 & 0xffffffffffffffe0\n 28510: u64 [s1 + 0x68] = a2\n 28513: sp = a2\n 28515: a0 = 0x20280\n 28520: i32 a0 = a0 + 0\n 28522: i32 a2 = a2 + 0\n 28524: u64 [s1 + 0x78] = a1\n 28527: a1 = 0x40\n 28530: u64 [s1 + 0x70] = a0\n 28533: ra = 0x48a\n 28537: ecalli 6 // 'hash_keccak_256'\n 28539: t0 = 0x48c\n 28543: jump @1348\n      : @1137 [@dyn 581] (gas: 1)\n 28546: t0 = 1164, jump @1348\n      : @1138 [@dyn 582] (gas: 8)\n 28552: a0 = 0x30280\n 28557: u64 [s1 + 0x68] = a0\n 28560: i32 a0 = a0 + 0\n 28562: u64 [s1 + 0x18] = a0\n 28565: ra = 0x48e\n 28569: ecalli 3 // 'caller'\n 28571: t0 = 0x490\n 28575: jump @1337\n      : @1139 [@dyn 583] (gas: 1)\n 28578: t0 = 1168, jump @1337\n      : @1140 [@dyn 584] (gas: 1)\n 28584: ra = 1170, jump @19\n      : @1141 [@dyn 585] (gas: 1)\n 28590: t0 = 1172, jump @1369\n      : @1142 [@dyn 586] (gas: 1)\n 28596: ra = 1174, jump @19\n      : @1143 [@dyn 587] (gas: 3)\n 28602: a1 = u64 [s1 + 0x78]\n 28605: a0 = i32 [a1]\n 28607: jump @1145 if a0 >u 63\n      : @1144 (gas: 3)\n 28611: u32 [a1 + 0] = 0x40\n 28614: t0 = 0x498\n 28618: jump @1390\n      : @1145 (gas: 1)\n 28621: t0 = 1176, jump @1390\n      : @1146 [@dyn 588] (gas: 4)\n 28627: ra = 0x49a\n 28631: ecalli 6 // 'hash_keccak_256'\n 28633: t0 = 0x49c\n 28637: jump @1350\n      : @1147 [@dyn 589] (gas: 1)\n 28640: t0 = 1180, jump @1350\n      : @1148 [@dyn 590] (gas: 1)\n 28646: ra = 1182, jump @21\n      : @1149 [@dyn 591] (gas: 2)\n 28652: a0 = u8 [s1 + 0xe0]\n 28656: jump @1151 if a0 == 0\n      : @1150 (gas: 6)\n 28659: sp = s0 + 0xfffffffffffffe60\n 28663: ra = u64 [sp + 0x198]\n 28667: s0 = u64 [sp + 0x190]\n 28671: s1 = u64 [sp + 0x188]\n 28675: sp = sp + 0x1a0\n 28679: ret\n      : @1151 (gas: 1)\n 28681: t0 = 1184, jump @1363\n      : @1152 [@dyn 592] (gas: 1)\n 28687: ra = 1186, jump @19\n      : @1153 [@dyn 593] (gas: 5)\n 28693: a0 = u64 [s1 + 0x18]\n 28696: ra = 0x4a4\n 28700: ecalli 3 // 'caller'\n 28702: t0 = 0x4a6\n 28706: jump @1343\n      : @1154 [@dyn 594] (gas: 1)\n 28709: t0 = 1190, jump @1343\n      : @1155 [@dyn 595] (gas: 1)\n 28715: ra = 1192, jump @19\n      : @1156 [@dyn 596] (gas: 11)\n 28721: a0 = u64 [s1 + 0x38]\n 28724: u64 [s1 + 0x98] = a0\n 28728: a0 = u64 [s1 + 0x28]\n 28731: u64 [s1 + 0x90] = a0\n 28735: a0 = u64 [s1 + 0x20]\n 28738: u64 [s1 + 0x88] = a0\n 28742: a0 = 0x24\n 28745: a1 = s1 + 0x80\n 28749: a2 = u64 [s1 + 0x30]\n 28752: u64 [s1 + 0x80] = a2\n 28756: ra = 1194, jump @19\n      : @1157 [@dyn 597] (gas: 3)\n 28762: a0 = u64 [s1 + 0x78]\n 28765: a0 = i32 [a0]\n 28767: jump @1159 if a0 >u 95\n      : @1158 (gas: 3)\n 28771: a1 = u64 [s1 + 0x78]\n 28774: u32 [a1 + 0] = 0x60\n 28777: fallthrough\n      : @1159 (gas: 6)\n 28778: a0 = 0x1\n 28781: a2 = 0x44\n 28784: a1 = u64 [s1 + 0x70]\n 28787: ra = 0x4ac\n 28791: ecalli 7 // 'seal_return'\n 28793: fallthrough\n      : @1160 [@dyn 598] (gas: 22)\n 28794: sp = sp + 0xfffffffffffffe60\n 28798: u64 [sp + 0x198] = ra\n 28802: u64 [sp + 0x190] = s0\n 28806: u64 [sp + 0x188] = s1\n 28810: s0 = sp + 0x1a0\n 28814: sp = sp & 0xffffffffffffffe0\n 28817: s1 = sp\n 28819: a2 = u64 [a0]\n 28821: a1 = u64 [a0 + 0x8]\n 28824: a3 = u64 [a0 + 0x10]\n 28827: a0 = u64 [a0 + 0x18]\n 28830: u64 [s1 + 0x20] = a0\n 28833: u64 [s1 + 0x178] = a0\n 28837: u64 [s1 + 0x28] = a3\n 28840: u64 [s1 + 0x170] = a3\n 28844: u64 [s1 + 0x30] = a1\n 28847: u64 [s1 + 0x168] = a1\n 28851: a1 = s1 + 0x160\n 28855: u64 [s1 + 0x38] = a2\n 28858: u64 [s1 + 0x160] = a2\n 28862: a0 = 0\n 28864: ra = 1198, jump @19\n      : @1161 [@dyn 599] (gas: 1)\n 28870: t0 = 1200, jump @1347\n      : @1162 [@dyn 600] (gas: 1)\n 28876: ra = 1202, jump @19\n      : @1163 [@dyn 601] (gas: 3)\n 28882: a1 = 0x2026c\n 28887: a0 = i32 [0x2026c]\n 28892: jump @1165 if a0 >u 63\n      : @1164 (gas: 2)\n 28896: u32 [0x2026c] = 0x40\n 28902: fallthrough\n      : @1165 (gas: 14)\n 28903: a0 = sp + 0xffffffffffffffe0\n 28906: a2 = a0 & 0xffffffffffffffe0\n 28909: u64 [s1 + 0x68] = a2\n 28912: sp = a2\n 28914: a0 = 0x20280\n 28919: i32 a0 = a0 + 0\n 28921: i32 a2 = a2 + 0\n 28923: u64 [s1 + 0x78] = a1\n 28926: a1 = 0x40\n 28929: u64 [s1 + 0x70] = a0\n 28932: ra = 0x4b4\n 28936: ecalli 6 // 'hash_keccak_256'\n 28938: t0 = 0x4b6\n 28942: jump @1348\n      : @1166 [@dyn 602] (gas: 1)\n 28945: t0 = 1206, jump @1348\n      : @1167 [@dyn 603] (gas: 8)\n 28951: a0 = 0x30280\n 28956: u64 [s1 + 0x68] = a0\n 28959: i32 a0 = a0 + 0\n 28961: u64 [s1 + 0x18] = a0\n 28964: ra = 0x4b8\n 28968: ecalli 3 // 'caller'\n 28970: t0 = 0x4ba\n 28974: jump @1337\n      : @1168 [@dyn 604] (gas: 1)\n 28977: t0 = 1210, jump @1337\n      : @1169 [@dyn 605] (gas: 1)\n 28983: ra = 1212, jump @19\n      : @1170 [@dyn 606] (gas: 1)\n 28989: t0 = 1214, jump @1369\n      : @1171 [@dyn 607] (gas: 1)\n 28995: ra = 1216, jump @19\n      : @1172 [@dyn 608] (gas: 3)\n 29001: a1 = u64 [s1 + 0x78]\n 29004: a0 = i32 [a1]\n 29006: jump @1174 if a0 >u 63\n      : @1173 (gas: 3)\n 29010: u32 [a1 + 0] = 0x40\n 29013: t0 = 0x4c2\n 29017: jump @1390\n      : @1174 (gas: 1)\n 29020: t0 = 1218, jump @1390\n      : @1175 [@dyn 609] (gas: 4)\n 29026: ra = 0x4c4\n 29030: ecalli 6 // 'hash_keccak_256'\n 29032: t0 = 0x4c6\n 29036: jump @1350\n      : @1176 [@dyn 610] (gas: 1)\n 29039: t0 = 1222, jump @1350\n      : @1177 [@dyn 611] (gas: 1)\n 29045: ra = 1224, jump @21\n      : @1178 [@dyn 612] (gas: 2)\n 29051: a0 = u8 [s1 + 0xe0]\n 29055: jump @1180 if a0 == 0\n      : @1179 (gas: 6)\n 29058: sp = s0 + 0xfffffffffffffe60\n 29062: ra = u64 [sp + 0x198]\n 29066: s0 = u64 [sp + 0x190]\n 29070: s1 = u64 [sp + 0x188]\n 29074: sp = sp + 0x1a0\n 29078: ret\n      : @1180 (gas: 1)\n 29080: t0 = 1226, jump @1363\n      : @1181 [@dyn 613] (gas: 1)\n 29086: ra = 1228, jump @19\n      : @1182 [@dyn 614] (gas: 5)\n 29092: a0 = u64 [s1 + 0x18]\n 29095: ra = 0x4ce\n 29099: ecalli 3 // 'caller'\n 29101: t0 = 0x4d0\n 29105: jump @1343\n      : @1183 [@dyn 615] (gas: 1)\n 29108: t0 = 1232, jump @1343\n      : @1184 [@dyn 616] (gas: 1)\n 29114: ra = 1234, jump @19\n      : @1185 [@dyn 617] (gas: 11)\n 29120: a0 = u64 [s1 + 0x20]\n 29123: u64 [s1 + 0x98] = a0\n 29127: a0 = u64 [s1 + 0x28]\n 29130: u64 [s1 + 0x90] = a0\n 29134: a0 = u64 [s1 + 0x30]\n 29137: u64 [s1 + 0x88] = a0\n 29141: a0 = 0x24\n 29144: a1 = s1 + 0x80\n 29148: a2 = u64 [s1 + 0x38]\n 29151: u64 [s1 + 0x80] = a2\n 29155: ra = 1236, jump @19\n      : @1186 [@dyn 618] (gas: 3)\n 29161: a0 = u64 [s1 + 0x78]\n 29164: a0 = i32 [a0]\n 29166: jump @1188 if a0 >u 95\n      : @1187 (gas: 3)\n 29170: a1 = u64 [s1 + 0x78]\n 29173: u32 [a1 + 0] = 0x60\n 29176: fallthrough\n      : @1188 (gas: 7)\n 29177: a0 = 0x1\n 29180: a2 = 0x44\n 29183: a1 = u64 [s1 + 0x70]\n 29186: ra = 0x4d6\n 29190: ecalli 7 // 'seal_return'\n 29192: t0 = 0x4d8\n 29196: jump @1381\n      : @1189 [@dyn 619] (gas: 1)\n 29199: t0 = 1240, jump @1381\n      : @1190 [@dyn 620] (gas: 21)\n 29205: u64 [s1 + 0x50] = a3\n 29208: a3 = u64 [a2 + 0x8]\n 29211: u64 [s1 + 0x70] = a3\n 29214: a2 = u64 [a2]\n 29216: u64 [s1 + 0x78] = a2\n 29219: a2 = u64 [a1]\n 29221: a3 = u64 [a1 + 0x8]\n 29224: a4 = u64 [a1 + 0x10]\n 29227: a1 = u64 [a1 + 0x18]\n 29230: u64 [s1 + 0x58] = a0\n 29233: u64 [s1 + 0x8] = a1\n 29236: u64 [s1 + 0x238] = a1\n 29240: u64 [s1 + 0x10] = a4\n 29243: u64 [s1 + 0x230] = a4\n 29247: u64 [s1 + 0x18] = a3\n 29250: u64 [s1 + 0x228] = a3\n 29254: a1 = s1 + 0x220\n 29258: u64 [s1 + 0x20] = a2\n 29261: u64 [s1 + 0x220] = a2\n 29265: a0 = 0\n 29267: ra = 1242, jump @19\n      : @1191 [@dyn 621] (gas: 1)\n 29273: t0 = 1244, jump @1336\n      : @1192 [@dyn 622] (gas: 1)\n 29279: ra = 1246, jump @19\n      : @1193 [@dyn 623] (gas: 3)\n 29285: a1 = 0x2026c\n 29290: a0 = i32 [0x2026c]\n 29295: jump @1195 if a0 >u 63\n      : @1194 (gas: 2)\n 29299: u32 [0x2026c] = 0x40\n 29305: fallthrough\n      : @1195 (gas: 6)\n 29306: a0 = sp + 0xffffffffffffffe0\n 29309: a2 = a0 & 0xffffffffffffffe0\n 29312: u64 [s1 + 0x48] = a2\n 29315: sp = a2\n 29317: a0 = 0x20280\n 29322: t0 = 1248, jump @1395\n      : @1196 [@dyn 624] (gas: 4)\n 29328: ra = 0x4e2\n 29332: ecalli 6 // 'hash_keccak_256'\n 29334: t0 = 0x4e4\n 29338: jump @1322\n      : @1197 [@dyn 625] (gas: 1)\n 29341: t0 = 1252, jump @1322\n      : @1198 [@dyn 626] (gas: 1)\n 29347: ra = 1254, jump @19\n      : @1199 [@dyn 627] (gas: 1)\n 29353: t0 = 1256, jump @1346\n      : @1200 [@dyn 628] (gas: 1)\n 29359: ra = 1258, jump @19\n      : @1201 [@dyn 629] (gas: 3)\n 29365: a1 = u64 [s1 + 0x68]\n 29368: a0 = i32 [a1]\n 29370: jump @1203 if a0 >u 63\n      : @1202 (gas: 3)\n 29374: u32 [a1 + 0] = 0x40\n 29377: t0 = 0x4ec\n 29381: jump @1331\n      : @1203 (gas: 1)\n 29384: t0 = 1260, jump @1331\n      : @1204 [@dyn 630] (gas: 4)\n 29390: ra = 0x4ee\n 29394: ecalli 6 // 'hash_keccak_256'\n 29396: t0 = 0x4f0\n 29400: jump @1329\n      : @1205 [@dyn 631] (gas: 1)\n 29403: t0 = 1264, jump @1329\n      : @1206 [@dyn 632] (gas: 1)\n 29409: ra = 1266, jump @21\n      : @1207 [@dyn 633] (gas: 2)\n 29415: a0 = u8 [s1 + 0x1a0]\n 29419: jump @1209 if a0 == 0\n      : @1208 (gas: 5)\n 29422: a1 = 0\n 29424: a0 = 0\n 29426: a2 = u64 [s1 + 0x58]\n 29429: t0 = 0x518\n 29433: jump @1334\n      : @1209 (gas: 11)\n 29436: a0 = u64 [s1 + 0x20]\n 29439: u64 [s1 + 0x180] = a0\n 29443: a0 = u64 [s1 + 0x18]\n 29446: u64 [s1 + 0x188] = a0\n 29450: a0 = u64 [s1 + 0x10]\n 29453: u64 [s1 + 0x190] = a0\n 29457: a1 = s1 + 0x180\n 29461: a0 = u64 [s1 + 0x8]\n 29464: u64 [s1 + 0x198] = a0\n 29468: a0 = 0\n 29470: ra = 1268, jump @19\n      : @1210 [@dyn 634] (gas: 1)\n 29476: t0 = 1270, jump @1335\n      : @1211 [@dyn 635] (gas: 1)\n 29482: ra = 1272, jump @19\n      : @1212 [@dyn 636] (gas: 3)\n 29488: a1 = u64 [s1 + 0x68]\n 29491: a0 = i32 [a1]\n 29493: jump @1214 if a0 >u 63\n      : @1213 (gas: 3)\n 29497: u32 [a1 + 0] = 0x40\n 29500: t0 = 0x4fa\n 29504: jump @1331\n      : @1214 (gas: 1)\n 29507: t0 = 1274, jump @1331\n      : @1215 [@dyn 637] (gas: 4)\n 29513: ra = 0x4fc\n 29517: ecalli 6 // 'hash_keccak_256'\n 29519: t0 = 0x4fe\n 29523: jump @1323\n      : @1216 [@dyn 638] (gas: 1)\n 29526: t0 = 1278, jump @1323\n      : @1217 [@dyn 639] (gas: 1)\n 29532: ra = 1280, jump @19\n      : @1218 [@dyn 640] (gas: 1)\n 29538: t0 = 1282, jump @1345\n      : @1219 [@dyn 641] (gas: 1)\n 29544: ra = 1284, jump @19\n      : @1220 [@dyn 642] (gas: 3)\n 29550: a1 = u64 [s1 + 0x68]\n 29553: a0 = i32 [a1]\n 29555: jump @1222 if a0 >u 63\n      : @1221 (gas: 2)\n 29559: u32 [a1 + 0] = 0x40\n 29562: fallthrough\n      : @1222 (gas: 4)\n 29563: a0 = sp + 0xffffffffffffffe0\n 29566: a0 = a0 & 0xffffffffffffffe0\n 29569: u64 [s1 + 0x68] = a0\n 29572: t0 = 1286, jump @1339\n      : @1223 [@dyn 643] (gas: 4)\n 29578: ra = 0x508\n 29582: ecalli 6 // 'hash_keccak_256'\n 29584: t0 = 0x50a\n 29588: jump @1328\n      : @1224 [@dyn 644] (gas: 1)\n 29591: t0 = 1290, jump @1328\n      : @1225 [@dyn 645] (gas: 1)\n 29597: ra = 1292, jump @21\n      : @1226 [@dyn 646] (gas: 1)\n 29603: t0 = 1294, jump @1333\n      : @1227 [@dyn 647] (gas: 1)\n 29609: ra = 1296, jump @24\n      : @1228 [@dyn 648] (gas: 8)\n 29615: a0 = 0x30280\n 29620: u64 [s1 + 0x68] = a0\n 29623: i32 a0 = a0 + 0\n 29625: ra = 0x512\n 29629: ecalli 3 // 'caller'\n 29631: a2 = u64 [s1 + 0x68]\n 29634: t0 = 0x514\n 29638: jump @1325\n      : @1229 [@dyn 649] (gas: 2)\n 29641: a2 = u64 [s1 + 0x68]\n 29644: t0 = 1300, jump @1325\n      : @1230 [@dyn 650] (gas: 40)\n 29650: t0 = a1 | a0\n 29653: a3 = a3 >> 0x20\n 29656: a2 = reverse a2\n 29658: a1 = a2 << 0x20\n 29661: a1 = a1 | a3\n 29664: a2 = a2 >> 0x20\n 29667: u64 [s1 + 152] = 0\n 29671: u64 [s1 + 184] = 0\n 29675: a0 = u64 [s1]\n 29677: u64 [s1 + 0xb0] = a0\n 29681: a0 = u64 [s1 + 0x70]\n 29684: u64 [s1 + 0xa8] = a0\n 29688: a0 = u64 [s1 + 0x78]\n 29691: u64 [s1 + 0xa0] = a0\n 29695: a0 = u64 [s1 + 0x8]\n 29698: u64 [s1 + 0xd8] = a0\n 29702: a0 = u64 [s1 + 0x10]\n 29705: u64 [s1 + 0xd0] = a0\n 29709: a0 = u64 [s1 + 0x18]\n 29712: u64 [s1 + 0xc8] = a0\n 29716: a0 = u64 [s1 + 0x20]\n 29719: u64 [s1 + 0xc0] = a0\n 29723: a3 = u64 [0x20208]\n 29728: a4 = u64 [0x20210]\n 29733: a5 = u64 [0x20218]\n 29738: a0 = u64 [0x20220]\n 29743: u64 [s1 + 0xf8] = a3\n 29747: u64 [s1 + 0xf0] = a4\n 29751: u64 [s1 + 0xe8] = a5\n 29755: u64 [s1 + 0xe0] = a0\n 29759: u64 [s1 + 0x90] = a2\n 29763: u64 [s1 + 0x88] = a1\n 29767: a2 = s1 + 0xe0\n 29771: a3 = s1 + 0xc0\n 29775: a4 = s1 + 0xa0\n 29779: a5 = s1 + 0x80\n 29783: u64 [s1 + 0x80] = t0\n 29787: a0 = 0\n 29789: a1 = 0\n 29791: ra = 1302, jump @30\n      : @1231 [@dyn 651] (gas: 4)\n 29797: a0 = 0\n 29799: a1 = 0x1\n 29802: a2 = u64 [s1 + 0x58]\n 29805: t0 = 1304, jump @1334\n      : @1232 [@dyn 652] (gas: 1)\n 29811: ret\n      : @1233 [@dyn 653] (gas: 21)\n 29813: u64 [s1 + 0x38] = a3\n 29816: a3 = u64 [a2 + 0x8]\n 29819: u64 [s1 + 0x70] = a3\n 29822: a2 = u64 [a2]\n 29824: u64 [s1 + 0x78] = a2\n 29827: a2 = u64 [a1]\n 29829: a3 = u64 [a1 + 0x8]\n 29832: a4 = u64 [a1 + 0x10]\n 29835: a1 = u64 [a1 + 0x18]\n 29838: u64 [s1 + 0x30] = a0\n 29841: u64 [s1 + 0x40] = a1\n 29844: u64 [s1 + 0x238] = a1\n 29848: u64 [s1 + 0x48] = a4\n 29851: u64 [s1 + 0x230] = a4\n 29855: u64 [s1 + 0x50] = a3\n 29858: u64 [s1 + 0x228] = a3\n 29862: a1 = s1 + 0x220\n 29866: u64 [s1 + 0x58] = a2\n 29869: u64 [s1 + 0x220] = a2\n 29873: a0 = 0\n 29875: ra = 1308, jump @19\n      : @1234 [@dyn 654] (gas: 1)\n 29881: t0 = 1310, jump @1336\n      : @1235 [@dyn 655] (gas: 1)\n 29887: ra = 1312, jump @19\n      : @1236 [@dyn 656] (gas: 3)\n 29893: a1 = 0x2026c\n 29898: a0 = i32 [0x2026c]\n 29903: jump @1238 if a0 >u 63\n      : @1237 (gas: 2)\n 29907: u32 [0x2026c] = 0x40\n 29913: fallthrough\n      : @1238 (gas: 6)\n 29914: a0 = sp + 0xffffffffffffffe0\n 29917: a2 = a0 & 0xffffffffffffffe0\n 29920: u64 [s1 + 0x28] = a2\n 29923: sp = a2\n 29925: a0 = 0x20280\n 29930: t0 = 1314, jump @1395\n      : @1239 [@dyn 657] (gas: 4)\n 29936: ra = 0x524\n 29940: ecalli 6 // 'hash_keccak_256'\n 29942: t0 = 0x526\n 29946: jump @1326\n      : @1240 [@dyn 658] (gas: 1)\n 29949: t0 = 1318, jump @1326\n      : @1241 [@dyn 659] (gas: 13)\n 29955: a0 = u64 [s1 + 0x38]\n 29958: a0 = a0 << 0x20\n 29961: a0 = a0 >> 0x20\n 29964: u64 [s1 + 504] = 0\n 29968: u64 [s1 + 0x38] = a0\n 29971: u64 [s1 + 0x1f0] = a0\n 29975: a0 = u64 [s1 + 0x70]\n 29978: u64 [s1 + 0x1e8] = a0\n 29982: a1 = s1 + 0x1e0\n 29986: a0 = u64 [s1 + 0x78]\n 29989: u64 [s1 + 0x1e0] = a0\n 29993: a0 = 0\n 29995: ra = 1320, jump @19\n      : @1242 [@dyn 660] (gas: 12)\n 30001: a0 = u64 [s1 + 0x8]\n 30004: a3 = s1 + 0x100\n 30008: u64 [a3 + 0xd8] = a0\n 30012: a0 = u64 [s1 + 0x10]\n 30015: u64 [a3 + 0xd0] = a0\n 30019: a0 = u64 [s1 + 0x18]\n 30022: u64 [a3 + 0xc8] = a0\n 30026: a0 = 0x20\n 30029: a1 = s1 + 0x1c0\n 30033: a2 = u64 [s1 + 0x20]\n 30036: u64 [a3 + 0xc0] = a2\n 30040: ra = 1322, jump @19\n      : @1243 [@dyn 661] (gas: 3)\n 30046: a1 = u64 [s1 + 0x68]\n 30049: a0 = i32 [a1]\n 30051: jump @1245 if a0 >u 63\n      : @1244 (gas: 2)\n 30055: u32 [a1 + 0] = 0x40\n 30058: fallthrough\n      : @1245 (gas: 4)\n 30059: a0 = sp + 0xffffffffffffffe0\n 30062: a0 = a0 & 0xffffffffffffffe0\n 30065: u64 [s1 + 0x20] = a0\n 30068: t0 = 1324, jump @1339\n      : @1246 [@dyn 662] (gas: 5)\n 30074: ra = 0x52e\n 30078: ecalli 6 // 'hash_keccak_256'\n 30080: a3 = u64 [s1 + 0x20]\n 30083: t0 = 0x530\n 30087: jump @1338\n      : @1247 [@dyn 663] (gas: 2)\n 30090: a3 = u64 [s1 + 0x20]\n 30093: t0 = 1328, jump @1338\n      : @1248 [@dyn 664] (gas: 2)\n 30099: a0 = s1 + 0x1a0\n 30103: ra = 1330, jump @21\n      : @1249 [@dyn 665] (gas: 2)\n 30109: a0 = u8 [s1 + 0x1a0]\n 30113: jump @1271 if a0 == 0\n      : @1250 (gas: 11)\n 30117: a0 = u64 [s1 + 0x58]\n 30120: u64 [s1 + 0x180] = a0\n 30124: a0 = u64 [s1 + 0x50]\n 30127: u64 [s1 + 0x188] = a0\n 30131: a0 = u64 [s1 + 0x48]\n 30134: u64 [s1 + 0x190] = a0\n 30138: a1 = s1 + 0x180\n 30142: a0 = u64 [s1 + 0x40]\n 30145: u64 [s1 + 0x198] = a0\n 30149: a0 = 0\n 30151: ra = 1332, jump @19\n      : @1251 [@dyn 666] (gas: 1)\n 30157: t0 = 1334, jump @1335\n      : @1252 [@dyn 667] (gas: 1)\n 30163: ra = 1336, jump @19\n      : @1253 [@dyn 668] (gas: 3)\n 30169: a1 = u64 [s1 + 0x68]\n 30172: a0 = i32 [a1]\n 30174: jump @1255 if a0 >u 63\n      : @1254 (gas: 2)\n 30178: u32 [a1 + 0] = 0x40\n 30181: fallthrough\n      : @1255 (gas: 4)\n 30182: a0 = sp + 0xffffffffffffffe0\n 30185: a0 = a0 & 0xffffffffffffffe0\n 30188: u64 [s1 + 0x28] = a0\n 30191: t0 = 1338, jump @1339\n      : @1256 [@dyn 669] (gas: 4)\n 30197: ra = 0x53c\n 30201: ecalli 6 // 'hash_keccak_256'\n 30203: t0 = 0x53e\n 30207: jump @1326\n      : @1257 [@dyn 670] (gas: 1)\n 30210: t0 = 1342, jump @1326\n      : @1258 [@dyn 671] (gas: 10)\n 30216: u64 [s1 + 344] = 0\n 30220: a0 = u64 [s1 + 0x38]\n 30223: u64 [s1 + 0x150] = a0\n 30227: a0 = u64 [s1 + 0x70]\n 30230: u64 [s1 + 0x148] = a0\n 30234: a1 = s1 + 0x140\n 30238: a0 = u64 [s1 + 0x78]\n 30241: u64 [s1 + 0x140] = a0\n 30245: a0 = 0\n 30247: ra = 1344, jump @19\n      : @1259 [@dyn 672] (gas: 12)\n 30253: a0 = u64 [s1 + 0x8]\n 30256: a3 = s1 + 0x100\n 30260: u64 [a3 + 0x38] = a0\n 30263: a0 = u64 [s1 + 0x10]\n 30266: u64 [a3 + 0x30] = a0\n 30269: a0 = u64 [s1 + 0x18]\n 30272: u64 [a3 + 0x28] = a0\n 30275: a0 = 0x20\n 30278: a1 = s1 + 0x120\n 30282: a2 = u64 [s1 + 0x20]\n 30285: u64 [a3 + 0x20] = a2\n 30288: ra = 1346, jump @19\n      : @1260 [@dyn 673] (gas: 3)\n 30294: a1 = u64 [s1 + 0x68]\n 30297: a0 = i32 [a1]\n 30299: jump @1262 if a0 >u 63\n      : @1261 (gas: 2)\n 30303: u32 [a1 + 0] = 0x40\n 30306: fallthrough\n      : @1262 (gas: 4)\n 30307: a0 = sp + 0xffffffffffffffe0\n 30310: a0 = a0 & 0xffffffffffffffe0\n 30313: u64 [s1 + 0x68] = a0\n 30316: t0 = 1348, jump @1339\n      : @1263 [@dyn 674] (gas: 5)\n 30322: ra = 0x546\n 30326: ecalli 6 // 'hash_keccak_256'\n 30328: a3 = u64 [s1 + 0x68]\n 30331: t0 = 0x548\n 30335: jump @1338\n      : @1264 [@dyn 675] (gas: 2)\n 30338: a3 = u64 [s1 + 0x68]\n 30341: t0 = 1352, jump @1338\n      : @1265 [@dyn 676] (gas: 2)\n 30347: a0 = s1 + 0x100\n 30351: ra = 1354, jump @21\n      : @1266 [@dyn 677] (gas: 14)\n 30357: a4 = s1 + 0x100\n 30361: a0 = u64 [a4]\n 30363: a1 = u64 [a4 + 0x18]\n 30366: a2 = u64 [a4 + 0x10]\n 30369: a3 = u64 [a4 + 0x8]\n 30372: a0 = a0 & 0xffffffffffffff00\n 30376: a4 = s1 + 0x200\n 30380: u64 [a4 + 0x58] = a1\n 30383: u64 [a4 + 0x50] = a2\n 30386: u64 [a4 + 0x48] = a3\n 30389: u64 [a4 + 0x40] = a0\n 30392: a1 = s1 + 0x240\n 30396: a0 = u64 [s1 + 0x28]\n 30399: ra = 1356, jump @24\n      : @1267 [@dyn 678] (gas: 8)\n 30405: a0 = 0x30280\n 30410: u64 [s1 + 0x68] = a0\n 30413: i32 a0 = a0 + 0\n 30415: ra = 0x54e\n 30419: ecalli 3 // 'caller'\n 30421: a2 = u64 [s1 + 0x68]\n 30424: t0 = 0x550\n 30428: jump @1325\n      : @1268 [@dyn 679] (gas: 2)\n 30431: a2 = u64 [s1 + 0x68]\n 30434: t0 = 1360, jump @1325\n      : @1269 [@dyn 680] (gas: 40)\n 30440: t0 = a1 | a0\n 30443: a3 = a3 >> 0x20\n 30446: a2 = reverse a2\n 30448: a1 = a2 << 0x20\n 30451: a1 = a1 | a3\n 30454: a2 = a2 >> 0x20\n 30457: u64 [s1 + 152] = 0\n 30461: u64 [s1 + 184] = 0\n 30465: a0 = u64 [s1 + 0x38]\n 30468: u64 [s1 + 0xb0] = a0\n 30472: a0 = u64 [s1 + 0x70]\n 30475: u64 [s1 + 0xa8] = a0\n 30479: a0 = u64 [s1 + 0x78]\n 30482: u64 [s1 + 0xa0] = a0\n 30486: a0 = u64 [s1 + 0x40]\n 30489: u64 [s1 + 0xd8] = a0\n 30493: a0 = u64 [s1 + 0x48]\n 30496: u64 [s1 + 0xd0] = a0\n 30500: a0 = u64 [s1 + 0x50]\n 30503: u64 [s1 + 0xc8] = a0\n 30507: a0 = u64 [s1 + 0x58]\n 30510: u64 [s1 + 0xc0] = a0\n 30514: a3 = u64 [0x20228]\n 30519: a4 = u64 [0x20230]\n 30524: a5 = u64 [0x20238]\n 30529: a0 = u64 [0x20240]\n 30534: u64 [s1 + 0xf8] = a3\n 30538: u64 [s1 + 0xf0] = a4\n 30542: u64 [s1 + 0xe8] = a5\n 30546: u64 [s1 + 0xe0] = a0\n 30550: u64 [s1 + 0x90] = a2\n 30554: u64 [s1 + 0x88] = a1\n 30558: a2 = s1 + 0xe0\n 30562: a3 = s1 + 0xc0\n 30566: a4 = s1 + 0xa0\n 30570: a5 = s1 + 0x80\n 30574: u64 [s1 + 0x80] = t0\n 30578: a0 = 0\n 30580: a1 = 0\n 30582: ra = 1362, jump @30\n      : @1270 [@dyn 681] (gas: 5)\n 30588: a0 = 0\n 30590: a1 = 0x1\n 30593: a2 = u64 [s1 + 0x30]\n 30596: t0 = 0x554\n 30600: jump @1334\n      : @1271 (gas: 3)\n 30603: a1 = 0\n 30605: a2 = u64 [s1 + 0x30]\n 30608: t0 = 1364, jump @1334\n      : @1272 [@dyn 682] (gas: 1)\n 30614: ret\n      : @1273 (gas: 17)\n 30616: sp = sp + 0xfffffffffffffc80\n 30620: a2 = sp + 0x300\n 30624: u64 [a2 + 0x78] = ra\n 30627: u64 [a2 + 0x70] = s0\n 30630: u64 [a2 + 0x68] = s1\n 30633: s0 = sp + 0x380\n 30637: sp = sp & 0xffffffffffffffe0\n 30640: s1 = sp\n 30642: a3 = u32 [a0 + 0x10]\n 30645: a2 = u64 [a0]\n 30647: a4 = u64 [a0 + 0x8]\n 30650: u64 [s1 + 0x58] = a2\n 30653: u64 [s1 + 0x48] = a3\n 30656: a0 = a2 | a3\n 30659: u64 [s1 + 0x50] = a4\n 30662: a0 = a0 | a4\n 30665: jump @1300 if a0 == 0\n      : @1274 (gas: 9)\n 30669: a0 = u64 [a1 + 0x18]\n 30672: u64 [s1 + 0x78] = a0\n 30675: a0 = u64 [a1 + 0x10]\n 30678: u64 [s1 + 0x68] = a0\n 30681: a0 = u64 [a1 + 0x8]\n 30684: u64 [s1 + 0x60] = a0\n 30687: a0 = u64 [a1]\n 30689: u64 [s1 + 0x70] = a0\n 30692: ra = 1366, jump @1312\n      : @1275 [@dyn 683] (gas: 11)\n 30698: u64 [s1 + 664] = 0\n 30702: a0 = u64 [s1 + 0x48]\n 30705: a2 = s1 + 0x200\n 30709: u64 [a2 + 0x90] = a0\n 30713: a0 = u64 [s1 + 0x50]\n 30716: u64 [a2 + 0x88] = a0\n 30720: a1 = s1 + 0x280\n 30724: a0 = u64 [s1 + 0x58]\n 30727: u64 [a2 + 0x80] = a0\n 30731: a0 = 0\n 30733: ra = 1368, jump @19\n      : @1276 [@dyn 684] (gas: 1)\n 30739: t0 = 1370, jump @1377\n      : @1277 [@dyn 685] (gas: 1)\n 30745: ra = 1372, jump @19\n      : @1278 [@dyn 686] (gas: 3)\n 30751: a2 = 0x2026c\n 30756: a0 = i32 [0x2026c]\n 30761: jump @1280 if a0 >u 63\n      : @1279 (gas: 2)\n 30765: u32 [0x2026c] = 0x40\n 30771: fallthrough\n      : @1280 (gas: 13)\n 30772: u64 [s1 + 0x38] = a2\n 30775: a0 = sp + 0xffffffffffffffe0\n 30778: a2 = a0 & 0xffffffffffffffe0\n 30781: u64 [s1 + 0x30] = a2\n 30784: sp = a2\n 30786: a0 = 0x20280\n 30791: i32 a0 = a0 + 0\n 30793: i32 a2 = a2 + 0\n 30795: a1 = 0x40\n 30798: u64 [s1 + 0x40] = a0\n 30801: ra = 0x55e\n 30805: ecalli 6 // 'hash_keccak_256'\n 30807: fallthrough\n      : @1281 [@dyn 687] (gas: 6)\n 30808: a3 = u64 [s1 + 0x30]\n 30811: a0 = u64 [a3 + 0x18]\n 30814: a1 = u64 [a3 + 0x10]\n 30817: a2 = u64 [a3 + 0x8]\n 30820: a3 = u64 [a3]\n 30822: t0 = 1376, jump @1351\n      : @1282 [@dyn 688] (gas: 7)\n 30828: u64 [s1 + 0x2b8] = a3\n 30832: u64 [s1 + 0x2b0] = a2\n 30836: u64 [s1 + 0x2a8] = a1\n 30840: u64 [s1 + 0x2a0] = a0\n 30844: a0 = s1 + 0x240\n 30848: a1 = s1 + 0x2a0\n 30852: ra = 1378, jump @21\n      : @1283 [@dyn 689] (gas: 28)\n 30858: a1 = s1 + 0x200\n 30862: a2 = u64 [a1 + 0x58]\n 30865: a0 = u64 [a1 + 0x50]\n 30868: a5 = u64 [a1 + 0x48]\n 30871: a4 = u64 [a1 + 0x40]\n 30874: a1 = u64 [s1 + 0x78]\n 30877: t1 = a2 ^ a1\n 30880: u64 [s1 + 0x20] = a2\n 30883: a1 = a2 <u a1\n 30886: a2 = u64 [s1 + 0x68]\n 30889: a3 = a0 <u a2\n 30892: u64 [s1 + 0x8] = a3\n 30895: a1 = a3 if t1 == 0\n 30898: a3 = u64 [s1 + 0x60]\n 30901: t0 = a5 ^ a3\n 30904: u64 [s1 + 0x28] = a5\n 30907: a5 = a5 <u a3\n 30910: a3 = u64 [s1 + 0x70]\n 30913: u64 [s1 + 0x30] = a4\n 30916: a3 = a4 <u a3\n 30919: u64 [s1 + 0x10] = a3\n 30922: a5 = a3 if t0 == 0\n 30925: u64 [s1 + 0x18] = a0\n 30928: a2 = a2 ^ a0\n 30931: a0 = a2 | t1\n 30934: u64 [s1] = a5\n 30936: a1 = a5 if a0 == 0\n 30939: jump @1305 if a1 != 0\n      : @1284 (gas: 11)\n 30943: u64 [s1 + 568] = 0\n 30947: a0 = u64 [s1 + 0x58]\n 30950: a2 = s1 + 0x200\n 30954: u64 [a2 + 0x20] = a0\n 30957: a0 = u64 [s1 + 0x50]\n 30960: u64 [a2 + 0x28] = a0\n 30963: a1 = s1 + 0x220\n 30967: a0 = u64 [s1 + 0x48]\n 30970: u64 [a2 + 0x30] = a0\n 30973: a0 = 0\n 30975: ra = 1380, jump @19\n      : @1285 [@dyn 690] (gas: 7)\n 30981: u64 [s1 + 536] = 0\n 30985: u64 [s1 + 528] = 0\n 30989: u64 [s1 + 520] = 0\n 30993: a0 = 0x20\n 30996: a1 = s1 + 0x200\n 31000: u64 [s1 + 512] = 0\n 31004: ra = 1382, jump @19\n      : @1286 [@dyn 691] (gas: 27)\n 31010: a0 = u64 [s1 + 0x68]\n 31013: a1 = u64 [s1 + 0x18]\n 31016: a0 = a1 - a0\n 31019: a2 = u64 [s1]\n 31021: a1 = a0 - a2\n 31024: u64 [s1 + 0x18] = a1\n 31027: a0 = a0 <u a2\n 31030: a1 = u64 [s1 + 0x78]\n 31033: a2 = u64 [s1 + 0x20]\n 31036: a1 = a2 - a1\n 31039: a2 = u64 [s1 + 0x8]\n 31042: a1 = a1 - a2\n 31045: a1 = a1 - a0\n 31048: u64 [s1 + 0x20] = a1\n 31051: a2 = u64 [s1 + 0x38]\n 31054: a0 = i32 [a2]\n 31056: a1 = u64 [s1 + 0x60]\n 31059: a3 = u64 [s1 + 0x28]\n 31062: a1 = a3 - a1\n 31065: a3 = u64 [s1 + 0x10]\n 31068: a1 = a1 - a3\n 31071: u64 [s1 + 0x28] = a1\n 31074: a3 = u64 [s1 + 0x70]\n 31077: a4 = u64 [s1 + 0x30]\n 31080: a4 = a4 - a3\n 31083: u64 [s1 + 0x30] = a4\n 31086: jump @1288 if a0 >u 63\n      : @1287 (gas: 2)\n 31090: u32 [a2 + 0] = 0x40\n 31093: fallthrough\n      : @1288 (gas: 10)\n 31094: a0 = sp + 0xffffffffffffffe0\n 31097: a0 = a0 & 0xffffffffffffffe0\n 31100: u64 [s1 + 0x38] = a0\n 31103: sp = a0\n 31105: i32 a2 = a0 + 0\n 31107: a1 = 0x40\n 31110: a0 = u64 [s1 + 0x40]\n 31113: ra = 0x568\n 31117: ecalli 6 // 'hash_keccak_256'\n 31119: fallthrough\n      : @1289 [@dyn 692] (gas: 6)\n 31120: a3 = u64 [s1 + 0x38]\n 31123: a0 = u64 [a3 + 0x18]\n 31126: a1 = u64 [a3 + 0x10]\n 31129: a2 = u64 [a3 + 0x8]\n 31132: a3 = u64 [a3]\n 31134: t0 = 1386, jump @1351\n      : @1290 [@dyn 693] (gas: 16)\n 31140: a4 = s1 + 0x200\n 31144: u64 [a4 + 0xd8] = a3\n 31148: u64 [a4 + 0xd0] = a2\n 31152: u64 [a4 + 0xc8] = a1\n 31156: u64 [a4 + 0xc0] = a0\n 31160: a0 = u64 [s1 + 0x20]\n 31163: u64 [a4 + 0xf8] = a0\n 31167: a0 = u64 [s1 + 0x18]\n 31170: u64 [a4 + 0xf0] = a0\n 31174: a0 = u64 [s1 + 0x28]\n 31177: u64 [a4 + 0xe8] = a0\n 31181: a0 = u64 [s1 + 0x30]\n 31184: u64 [a4 + 0xe0] = a0\n 31188: a0 = s1 + 0x2c0\n 31192: a1 = s1 + 0x2e0\n 31196: ra = 1388, jump @24\n      : @1291 [@dyn 694] (gas: 7)\n 31202: u64 [s1 + 792] = 0\n 31206: u64 [s1 + 784] = 0\n 31210: u64 [s1 + 776] = 0\n 31214: u64 [s1 + 768] = 0x2\n 31219: a0 = s1 + 0x1e0\n 31223: a1 = s1 + 0x300\n 31227: ra = 1390, jump @21\n      : @1292 [@dyn 695] (gas: 34)\n 31233: a1 = u64 [s1 + 0x1e8]\n 31237: t0 = u64 [s1 + 0x1f8]\n 31241: t1 = u64 [s1 + 0x1e0]\n 31245: a3 = u64 [s1 + 0x1f0]\n 31249: a4 = u64 [s1 + 0x60]\n 31252: a0 = a1 ^ a4\n 31255: a5 = a1 <u a4\n 31258: ra = u64 [s1 + 0x70]\n 31261: t2 = t1 <u ra\n 31264: a5 = t2 if a0 == 0\n 31267: a0 = u64 [s1 + 0x68]\n 31270: a2 = a3 - a0\n 31273: a3 = a3 <u a0\n 31276: a0 = u64 [s1 + 0x78]\n 31279: a0 = t0 - a0\n 31282: a0 = a0 - a3\n 31285: a3 = a2 <u a5\n 31288: a0 = a0 - a3\n 31291: a3 = a2 - a5\n 31294: a1 = a1 - a4\n 31297: a1 = a1 - t2\n 31300: a4 = s1 + 0x300\n 31304: u64 [a4 + 32] = 0x2\n 31308: a2 = t1 - ra\n 31311: u64 [a4 + 0x40] = a2\n 31314: u64 [a4 + 0x48] = a1\n 31317: u64 [a4 + 0x50] = a3\n 31320: u64 [a4 + 0x58] = a0\n 31323: u64 [s1 + 824] = 0\n 31327: u64 [s1 + 816] = 0\n 31331: u64 [s1 + 808] = 0\n 31335: a0 = s1 + 0x320\n 31339: a1 = s1 + 0x340\n 31343: ra = 1392, jump @24\n      : @1293 [@dyn 696] (gas: 3)\n 31349: a0 = s1 + 0x1c0\n 31353: a1 = 0x40\n 31356: ra = 1394, jump @17\n      : @1294 [@dyn 697] (gas: 6)\n 31362: a4 = s1 + 0x100\n 31366: a3 = u64 [a4 + 0xd8]\n 31370: a1 = u64 [a4 + 0xd0]\n 31374: a2 = u64 [a4 + 0xc8]\n 31378: a0 = u64 [a4 + 0xc0]\n 31382: t0 = 1396, jump @1332\n      : @1295 [@dyn 698] (gas: 1)\n 31388: jump @1299 if a1 != 0\n      : @1296 (gas: 11)\n 31392: a1 = u64 [s1 + 0x70]\n 31395: u64 [s1 + 0x1a0] = a1\n 31399: a1 = u64 [s1 + 0x60]\n 31402: u64 [s1 + 0x1a8] = a1\n 31406: a1 = u64 [s1 + 0x68]\n 31409: u64 [s1 + 0x1b0] = a1\n 31413: a1 = s1 + 0x1a0\n 31417: a2 = u64 [s1 + 0x78]\n 31420: u64 [s1 + 0x1b8] = a2\n 31424: u64 [s1 + 0x78] = a0\n 31427: ra = 1398, jump @19\n      : @1297 [@dyn 699] (gas: 26)\n 31433: u64 [s1 + 344] = 0\n 31437: u64 [s1 + 336] = 0\n 31441: u64 [s1 + 328] = 0\n 31445: u64 [s1 + 320] = 0\n 31449: u64 [s1 + 376] = 0\n 31453: a0 = u64 [s1 + 0x48]\n 31456: a5 = s1 + 0x100\n 31460: u64 [a5 + 0x70] = a0\n 31463: a0 = u64 [s1 + 0x50]\n 31466: u64 [a5 + 0x68] = a0\n 31469: a0 = u64 [0x20248]\n 31474: a1 = u64 [0x20250]\n 31479: a2 = u64 [0x20258]\n 31484: a3 = u64 [s1 + 0x58]\n 31487: u64 [a5 + 0x60] = a3\n 31490: u64 [a5 + 0x98] = a0\n 31494: u64 [a5 + 0x90] = a1\n 31498: u64 [a5 + 0x88] = a2\n 31502: a0 = u64 [0x20260]\n 31507: a1 = 0x20\n 31510: a2 = s1 + 0x180\n 31514: a3 = s1 + 0x160\n 31518: a4 = s1 + 0x140\n 31522: u64 [a5 + 0x80] = a0\n 31526: a0 = u64 [s1 + 0x78]\n 31529: ra = 1400, jump @27\n      : @1298 [@dyn 700] (gas: 7)\n 31535: sp = s0 + 0xfffffffffffffc80\n 31539: a0 = sp + 0x300\n 31543: ra = u64 [a0 + 0x78]\n 31546: s0 = u64 [a0 + 0x70]\n 31549: s1 = u64 [a0 + 0x68]\n 31552: sp = sp + 0x380\n 31556: ret\n      : @1299 (gas: 1)\n 31558: trap\n      : @1300 (gas: 8)\n 31559: u64 [s1 + 176] = 0\n 31563: u64 [s1 + 168] = 0\n 31567: u64 [s1 + 160] = 0\n 31571: a0 = 0x96c6fd1e00000000\n 31581: a1 = s1 + 0xa0\n 31585: u64 [s1 + 0xb8] = a0\n 31589: a0 = 0\n 31591: ra = 1402, jump @19\n      : @1301 [@dyn 701] (gas: 7)\n 31597: u64 [s1 + 152] = 0\n 31601: u64 [s1 + 144] = 0\n 31605: u64 [s1 + 136] = 0\n 31609: a0 = 0x4\n 31612: a1 = s1 + 0x80\n 31616: u64 [s1 + 128] = 0\n 31620: ra = 1404, jump @19\n      : @1302 [@dyn 702] (gas: 2)\n 31626: a1 = i32 [0x2026c]\n 31631: jump @1304 if a1 >u 63\n      : @1303 (gas: 2)\n 31635: u32 [0x2026c] = 0x40\n 31641: fallthrough\n      : @1304 (gas: 6)\n 31642: a1 = 0x20280\n 31647: i32 a1 = a1 + 0\n 31649: a0 = 0x1\n 31652: a2 = 0x24\n 31655: ecalli 7 // 'seal_return'\n 31657: fallthrough\n      : @1305 (gas: 8)\n 31658: u64 [s1 + 304] = 0\n 31662: u64 [s1 + 296] = 0\n 31666: u64 [s1 + 288] = 0\n 31670: a0 = 0xe450d38c00000000\n 31680: a1 = s1 + 0x120\n 31684: u64 [s1 + 0x138] = a0\n 31688: a0 = 0\n 31690: ra = 1406, jump @19\n      : @1306 [@dyn 703] (gas: 11)\n 31696: u64 [s1 + 280] = 0\n 31700: a0 = u64 [s1 + 0x48]\n 31703: a3 = s1 + 0x100\n 31707: u64 [a3 + 0x10] = a0\n 31710: a0 = u64 [s1 + 0x50]\n 31713: u64 [a3 + 0x8] = a0\n 31716: a0 = 0x4\n 31719: a1 = s1 + 0x100\n 31723: a2 = u64 [s1 + 0x58]\n 31726: u64 [a3] = a2\n 31728: ra = 1408, jump @19\n      : @1307 [@dyn 704] (gas: 11)\n 31734: a0 = u64 [s1 + 0x20]\n 31737: u64 [s1 + 0xf8] = a0\n 31741: a0 = u64 [s1 + 0x18]\n 31744: u64 [s1 + 0xf0] = a0\n 31748: a0 = u64 [s1 + 0x28]\n 31751: u64 [s1 + 0xe8] = a0\n 31755: a0 = 0x24\n 31758: a1 = s1 + 0xe0\n 31762: a2 = u64 [s1 + 0x30]\n 31765: u64 [s1 + 0xe0] = a2\n 31769: ra = 1410, jump @19\n      : @1308 [@dyn 705] (gas: 11)\n 31775: a0 = u64 [s1 + 0x78]\n 31778: u64 [s1 + 0xd8] = a0\n 31782: a0 = u64 [s1 + 0x68]\n 31785: u64 [s1 + 0xd0] = a0\n 31789: a0 = u64 [s1 + 0x60]\n 31792: u64 [s1 + 0xc8] = a0\n 31796: a0 = 0x44\n 31799: a1 = s1 + 0xc0\n 31803: a2 = u64 [s1 + 0x70]\n 31806: u64 [s1 + 0xc0] = a2\n 31810: ra = 1412, jump @19\n      : @1309 [@dyn 706] (gas: 3)\n 31816: a0 = u64 [s1 + 0x38]\n 31819: a0 = i32 [a0]\n 31821: jump @1311 if a0 >u 127\n      : @1310 (gas: 3)\n 31825: a1 = u64 [s1 + 0x38]\n 31828: u32 [a1 + 0] = 0x80\n 31832: fallthrough\n      : @1311 (gas: 6)\n 31833: a0 = 0x1\n 31836: a2 = 0x64\n 31839: a1 = u64 [s1 + 0x40]\n 31842: ra = 0x586\n 31846: ecalli 7 // 'seal_return'\n 31848: fallthrough\n      : @1312 [@dyn 707] (gas: 12)\n 31849: sp = sp + 0xffffffffffffff80\n 31852: u64 [sp + 0x78] = ra\n 31855: u64 [sp + 0x70] = s0\n 31858: s0 = sp + 0x80\n 31862: sp = sp & 0xffffffffffffffe0\n 31865: u64 [sp + 88] = 0\n 31868: u64 [sp + 80] = 0\n 31871: u64 [sp + 72] = 0\n 31874: u64 [sp + 64] = 0x5\n 31878: a0 = sp + 0x20\n 31881: a1 = sp + 0x40\n 31884: ra = 1416, jump @21\n      : @1313 [@dyn 708] (gas: 2)\n 31890: a0 = u8 [sp + 0x20]\n 31893: jump @1315 if a0 != 0\n      : @1314 (gas: 5)\n 31896: sp = s0 + 0xffffffffffffff80\n 31899: ra = u64 [sp + 0x78]\n 31902: s0 = u64 [sp + 0x70]\n 31905: sp = sp + 0x80\n 31909: ret\n      : @1315 (gas: 8)\n 31911: u64 [sp + 16] = 0\n 31914: u64 [sp + 8] = 0\n 31917: u64 [sp + 0] = 0\n 31919: a0 = 0xd93c066500000000\n 31929: a1 = sp\n 31931: u64 [sp + 0x18] = a0\n 31934: a0 = 0\n 31936: ra = 1418, jump @19\n      : @1316 [@dyn 709] (gas: 2)\n 31942: a1 = i32 [0x2026c]\n 31947: jump @1318 if a1 >u 31\n      : @1317 (gas: 2)\n 31951: u32 [0x2026c] = 0x20\n 31957: fallthrough\n      : @1318 (gas: 8)\n 31958: a1 = 0x20280\n 31963: i32 a1 = a1 + 0\n 31965: a0 = 0x1\n 31968: a2 = 0x4\n 31971: ecalli 7 // 'seal_return'\n 31973: a0 = 0\n 31975: ra = 0x58c\n 31979: jump @39\n      : @1319 [export #0: 'call'] (gas: 2)\n 31982: a0 = 0\n 31984: ra = 1420, jump @39\n      : @1320 [@dyn 710] [export #1: 'deploy'] (gas: 2)\n 31990: a0 = 0x1\n 31993: ra = 1422, jump @39\n      : @1321 [@dyn 711] (gas: 16)\n 31999: a0 = u64 [a2 + 0x8]\n 32002: a1 = i32 [a2 + 0x10]\n 32005: a2 = u64 [a2]\n 32007: a0 = reverse a0\n 32009: a3 = a0 << 0x20\n 32012: a1 = reverse a1\n 32014: a1 = a1 >> 0x20\n 32017: a3 = a3 | a1\n 32020: a0 = a0 >> 0x20\n 32023: a1 = reverse a2\n 32025: a2 = a1 << 0x20\n 32028: a0 = a0 | a2\n 32031: a1 = a1 >> 0x20\n 32034: a2 = s1 + 0x7ff\n 32038: a2 = a2 + 0x39\n 32041: jump [t0]\n      : @1322 (gas: 30)\n 32043: a3 = u64 [s1 + 0x48]\n 32046: a0 = u64 [a3 + 0x18]\n 32049: a1 = u64 [a3 + 0x10]\n 32052: a2 = u64 [a3 + 0x8]\n 32055: a3 = u64 [a3]\n 32057: a0 = reverse a0\n 32059: u64 [s1 + 0x40] = a0\n 32062: a0 = reverse a1\n 32064: u64 [s1 + 0x38] = a0\n 32067: a0 = reverse a2\n 32069: u64 [s1 + 0x30] = a0\n 32072: a0 = reverse a3\n 32074: u64 [s1 + 0x28] = a0\n 32077: a0 = sp + 0xffffffffffffffe0\n 32080: a0 = a0 & 0xffffffffffffffe0\n 32083: u64 [s1 + 0x48] = a0\n 32086: sp = a0\n 32088: a0 = u64 [s1 + 0x50]\n 32091: a0 = a0 << 0x20\n 32094: a0 = a0 >> 0x20\n 32097: u64 [s1 + 504] = 0\n 32101: u64 [s1] = a0\n 32103: u64 [s1 + 0x1f0] = a0\n 32107: a0 = u64 [s1 + 0x70]\n 32110: u64 [s1 + 0x1e8] = a0\n 32114: a1 = s1 + 0x1e0\n 32118: a0 = u64 [s1 + 0x78]\n 32121: u64 [s1 + 0x1e0] = a0\n 32125: a0 = 0\n 32127: jump [t0]\n      : @1323 (gas: 27)\n 32129: a3 = u64 [s1 + 0x50]\n 32132: a0 = u64 [a3 + 0x18]\n 32135: a1 = u64 [a3 + 0x10]\n 32138: a2 = u64 [a3 + 0x8]\n 32141: a3 = u64 [a3]\n 32143: a0 = reverse a0\n 32145: u64 [s1 + 0x48] = a0\n 32148: a0 = reverse a1\n 32150: u64 [s1 + 0x40] = a0\n 32153: a0 = reverse a2\n 32155: u64 [s1 + 0x38] = a0\n 32158: a0 = reverse a3\n 32160: u64 [s1 + 0x30] = a0\n 32163: a0 = sp + 0xffffffffffffffe0\n 32166: a0 = a0 & 0xffffffffffffffe0\n 32169: u64 [s1 + 0x50] = a0\n 32172: sp = a0\n 32174: u64 [s1 + 344] = 0\n 32178: a0 = u64 [s1]\n 32180: u64 [s1 + 0x150] = a0\n 32184: a0 = u64 [s1 + 0x70]\n 32187: u64 [s1 + 0x148] = a0\n 32191: a1 = s1 + 0x140\n 32195: a0 = u64 [s1 + 0x78]\n 32198: u64 [s1 + 0x140] = a0\n 32202: a0 = 0\n 32204: jump [t0]\n      : @1324 (gas: 15)\n 32206: a2 = u64 [s1 + 0x138]\n 32210: a0 = u64 [a2 + 0x8]\n 32213: a1 = i32 [a2 + 0x10]\n 32216: a2 = u64 [a2]\n 32218: a0 = reverse a0\n 32220: a3 = a0 << 0x20\n 32223: a1 = reverse a1\n 32225: a1 = a1 >> 0x20\n 32228: a3 = a3 | a1\n 32231: a0 = a0 >> 0x20\n 32234: a1 = reverse a2\n 32236: a2 = a1 << 0x20\n 32239: a0 = a0 | a2\n 32242: a1 = a1 >> 0x20\n 32245: jump [t0]\n      : @1325 (gas: 8)\n 32247: a0 = u64 [a2 + 0x8]\n 32250: a1 = i32 [a2 + 0x10]\n 32253: a2 = u64 [a2]\n 32255: a3 = reverse a0\n 32257: a0 = a3 << 0x20\n 32260: a1 = reverse a1\n 32262: a1 = a1 >> 0x20\n 32265: jump [t0]\n      : @1326 (gas: 18)\n 32267: a3 = u64 [s1 + 0x28]\n 32270: a0 = u64 [a3 + 0x18]\n 32273: a1 = u64 [a3 + 0x10]\n 32276: a2 = u64 [a3 + 0x8]\n 32279: a3 = u64 [a3]\n 32281: a0 = reverse a0\n 32283: u64 [s1 + 0x20] = a0\n 32286: a0 = reverse a1\n 32288: u64 [s1 + 0x18] = a0\n 32291: a0 = reverse a2\n 32293: u64 [s1 + 0x10] = a0\n 32296: a0 = reverse a3\n 32298: u64 [s1 + 0x8] = a0\n 32301: a0 = sp + 0xffffffffffffffe0\n 32304: a0 = a0 & 0xffffffffffffffe0\n 32307: u64 [s1 + 0x28] = a0\n 32310: sp = a0\n 32312: jump [t0]\n      : @1327 (gas: 26)\n 32314: a3 = u64 [s1 + 0x80]\n 32318: a3 = a3 + 0x1\n 32321: a0 = a3 <u 0x1\n 32324: ra = u64 [s1 + 0x88]\n 32328: ra = ra + a0\n 32331: a0 = a3 | ra\n 32334: a0 = a0 <u 0x1\n 32337: a1 = u64 [s1 + 0x78]\n 32340: t2 = a1 + a0\n 32343: a1 = t2 <u a1\n 32346: a0 = u64 [s1 + 0x90]\n 32350: a0 = a0 + a1\n 32353: a1 = u64 [s1 + 0xb8]\n 32357: t1 = a1 + 0x20\n 32360: a2 = t1 <u a1\n 32363: a4 = u64 [s1 + 0xa0]\n 32367: a1 = a4 + a2\n 32370: a4 = a1 <u a4\n 32373: a4 = a2 if a2 == 0\n 32376: a2 = u64 [s1 + 0xa8]\n 32380: a4 = a4 + a2\n 32383: a2 = a4 <u a2\n 32386: a5 = u64 [s1 + 0xb0]\n 32390: a5 = a5 + a2\n 32393: u64 [s1 + 0xb0] = a5\n 32397: jump [t0]\n      : @1328 (gas: 16)\n 32399: a3 = u64 [s1 + 0x68]\n 32402: a0 = u64 [a3 + 0x18]\n 32405: a1 = u64 [a3 + 0x10]\n 32408: a2 = u64 [a3 + 0x8]\n 32411: a3 = u64 [a3]\n 32413: a0 = reverse a0\n 32415: a4 = reverse a1\n 32417: a2 = reverse a2\n 32419: a3 = reverse a3\n 32421: a1 = u64 [s1 + 0x50]\n 32424: u64 [a1 + 0x18] = a3\n 32427: u64 [a1 + 0x10] = a2\n 32430: u64 [a1 + 0x8] = a4\n 32433: u64 [a1] = a0\n 32435: a0 = s1 + 0x100\n 32439: jump [t0]\n      : @1329 (gas: 16)\n 32441: a3 = u64 [s1 + 0x50]\n 32444: a0 = u64 [a3 + 0x18]\n 32447: a1 = u64 [a3 + 0x10]\n 32450: a2 = u64 [a3 + 0x8]\n 32453: a3 = u64 [a3]\n 32455: a0 = reverse a0\n 32457: a4 = reverse a1\n 32459: a2 = reverse a2\n 32461: a3 = reverse a3\n 32463: a1 = u64 [s1 + 0x48]\n 32466: u64 [a1 + 0x18] = a3\n 32469: u64 [a1 + 0x10] = a2\n 32472: u64 [a1 + 0x8] = a4\n 32475: u64 [a1] = a0\n 32477: a0 = s1 + 0x1a0\n 32481: jump [t0]\n      : @1330 (gas: 9)\n 32483: a0 = u64 [a3 + 0x18]\n 32486: a1 = u64 [a3 + 0x10]\n 32489: a2 = u64 [a3 + 0x8]\n 32492: a3 = u64 [a3]\n 32494: a0 = reverse a0\n 32496: a4 = reverse a1\n 32498: a2 = reverse a2\n 32500: a3 = reverse a3\n 32502: jump [t0]\n      : @1331 (gas: 8)\n 32504: a0 = sp + 0xffffffffffffffe0\n 32507: a0 = a0 & 0xffffffffffffffe0\n 32510: u64 [s1 + 0x50] = a0\n 32513: sp = a0\n 32515: i32 a2 = a0 + 0\n 32517: a1 = 0x40\n 32520: a0 = u64 [s1 + 0x60]\n 32523: jump [t0]\n      : @1332 (gas: 8)\n 32525: a3 = a3 | a2\n 32528: a2 = a0 | a1\n 32531: a2 = a2 | a3\n 32534: a2 = a2 >> 0x20\n 32537: a1 = a1 | a3\n 32540: a1 = a1 << 0x20\n 32543: a1 = a1 | a2\n 32546: jump [t0]\n      : @1333 (gas: 15)\n 32548: a4 = s1 + 0x100\n 32552: a0 = u64 [a4]\n 32554: a1 = u64 [a4 + 0x8]\n 32557: a2 = u64 [a4 + 0x18]\n 32560: a3 = u64 [a4 + 0x10]\n 32563: a0 = a0 & 0xffffffffffffff00\n 32567: a0 = a0 | 0x1\n 32570: a4 = s1 + 0x200\n 32574: u64 [a4 + 0x58] = a2\n 32577: u64 [a4 + 0x50] = a3\n 32580: u64 [a4 + 0x48] = a1\n 32583: u64 [a4 + 0x40] = a0\n 32586: a1 = s1 + 0x240\n 32590: a0 = u64 [s1 + 0x50]\n 32593: jump [t0]\n      : @1334 (gas: 11)\n 32595: u64 [a2] = a1\n 32597: u64 [a2 + 0x8] = a0\n 32600: u64 [a2 + 0x10] = a0\n 32603: u64 [a2 + 0x18] = a0\n 32606: sp = s0 + 0xfffffffffffffd80\n 32610: a0 = sp + 0x200\n 32614: ra = u64 [a0 + 0x78]\n 32617: s0 = u64 [a0 + 0x70]\n 32620: s1 = u64 [a0 + 0x68]\n 32623: sp = sp + 0x280\n 32627: jump [t0]\n      : @1335 (gas: 7)\n 32629: u64 [s1 + 376] = 0\n 32633: u64 [s1 + 368] = 0\n 32637: u64 [s1 + 352] = 0x6\n 32642: a0 = 0x20\n 32645: a1 = s1 + 0x160\n 32649: u64 [s1 + 360] = 0\n 32653: jump [t0]\n      : @1336 (gas: 7)\n 32655: u64 [s1 + 536] = 0\n 32659: u64 [s1 + 528] = 0\n 32663: u64 [s1 + 512] = 0x6\n 32668: a0 = 0x20\n 32671: a1 = s1 + 0x200\n 32675: u64 [s1 + 520] = 0\n 32679: jump [t0]\n      : @1337 (gas: 21)\n 32681: a2 = u64 [s1 + 0x68]\n 32684: a0 = u64 [a2 + 0x8]\n 32687: a1 = i32 [a2 + 0x10]\n 32690: a2 = u64 [a2]\n 32692: a0 = reverse a0\n 32694: a3 = a0 << 0x20\n 32697: a1 = reverse a1\n 32699: a1 = a1 >> 0x20\n 32702: a3 = a3 | a1\n 32705: a0 = a0 >> 0x20\n 32708: a1 = reverse a2\n 32710: a2 = a1 << 0x20\n 32713: a0 = a0 | a2\n 32716: a1 = a1 >> 0x20\n 32719: u64 [s1 + 312] = 0\n 32723: u64 [s1 + 0x130] = a1\n 32727: u64 [s1 + 0x128] = a0\n 32731: a1 = s1 + 0x120\n 32735: u64 [s1 + 0x120] = a3\n 32739: a0 = 0\n 32741: jump [t0]\n      : @1338 (gas: 14)\n 32743: a0 = u64 [a3 + 0x18]\n 32746: a1 = u64 [a3 + 0x10]\n 32749: a2 = u64 [a3 + 0x8]\n 32752: a3 = u64 [a3]\n 32754: a0 = reverse a0\n 32756: a4 = reverse a1\n 32758: a2 = reverse a2\n 32760: a3 = reverse a3\n 32762: a1 = u64 [s1 + 0x28]\n 32765: u64 [a1 + 0x18] = a3\n 32768: u64 [a1 + 0x10] = a2\n 32771: u64 [a1 + 0x8] = a4\n 32774: u64 [a1] = a0\n 32776: jump [t0]\n      : @1339 (gas: 5)\n 32778: sp = a0\n 32780: i32 a2 = a0 + 0\n 32782: a1 = 0x40\n 32785: a0 = u64 [s1 + 0x60]\n 32788: jump [t0]\n      : @1340 (gas: 19)\n 32790: u64 [s1 + 0x90] = ra\n 32794: a0 = u64 [s1 + 0x70]\n 32797: a1 = u64 [s1 + 0xb8]\n 32801: a0 = a1 <u a0\n 32804: a2 = u64 [s1 + 0x60]\n 32807: a1 = t2 ^ a2\n 32810: a2 = t2 <u a2\n 32813: a2 = a0 if a1 == 0\n 32816: a4 = u64 [s1 + 0x68]\n 32819: a0 = t1 <u a4\n 32822: a3 = u64 [s1 + 0x58]\n 32825: a1 = u64 [s1 + 0xb0]\n 32829: a5 = a1 ^ a3\n 32832: a3 = a1 <u a3\n 32835: a3 = a0 if a5 == 0\n 32838: a0 = t1 ^ a4\n 32841: a0 = a0 | a5\n 32844: a3 = a2 if a0 == 0\n 32847: jump [t0]\n      : @1341 (gas: 8)\n 32849: a4 = a4 | a2\n 32852: a2 = a0 | a1\n 32855: a2 = a2 | a4\n 32858: a2 = a2 >> 0x20\n 32861: a1 = a1 | a4\n 32864: a1 = a1 << 0x20\n 32867: a1 = a1 | a2\n 32870: jump [t0]\n      : @1342 (gas: 16)\n 32872: a4 = u64 [s1 + 0x138]\n 32876: a2 = a4 <u 0x80\n 32880: a3 = u64 [s1 + 0xf0]\n 32884: a1 = a3 if a2 != 0\n 32887: a5 = u64 [s1 + 0xf8]\n 32891: a3 = u64 [s1 + 0x108]\n 32895: a3 = a3 | a5\n 32898: a3 = a0 if a2 == 0\n 32901: a1 = 0xffffffffffffffff if a4 == 0\n 32904: a3 = 0xffffffffffffffff if a4 == 0\n 32907: a4 = u64 [s1 + 0x100]\n 32911: a4 = 0 if a2 == 0\n 32913: a5 = 0 if a2 == 0\n 32915: a0 = u64 [s1 + 0x110]\n 32919: a0 = a0 & ~a3\n 32922: jump [t0]\n      : @1343 (gas: 21)\n 32924: a2 = u64 [s1 + 0x68]\n 32927: a0 = u64 [a2 + 0x8]\n 32930: a1 = i32 [a2 + 0x10]\n 32933: a2 = u64 [a2]\n 32935: a0 = reverse a0\n 32937: a3 = a0 << 0x20\n 32940: a1 = reverse a1\n 32942: a1 = a1 >> 0x20\n 32945: a3 = a3 | a1\n 32948: a0 = a0 >> 0x20\n 32951: a1 = reverse a2\n 32953: a2 = a1 << 0x20\n 32956: a0 = a0 | a2\n 32959: a1 = a1 >> 0x20\n 32962: u64 [s1 + 184] = 0\n 32966: u64 [s1 + 0xb0] = a1\n 32970: u64 [s1 + 0xa8] = a0\n 32974: a0 = 0x4\n 32977: a1 = s1 + 0xa0\n 32981: u64 [s1 + 0xa0] = a3\n 32985: jump [t0]\n      : @1344 (gas: 15)\n 32987: t2 = u64 [s1 + 0xb8]\n 32991: t1 = u64 [s1 + 0xa0]\n 32995: ra = u64 [s1 + 0xa8]\n 32999: a1 = u64 [s1 + 0x50]\n 33002: a0 = a1 + t2\n 33005: a1 = a0 <u a1\n 33008: a4 = u64 [s1 + 0x48]\n 33011: a2 = a4 + t1\n 33014: a2 = a2 + a1\n 33017: a5 = a2 ^ a4\n 33020: a4 = a2 <u a4\n 33023: a4 = a1 if a5 == 0\n 33026: a5 = u64 [s1 + 0x40]\n 33029: a1 = a5 + ra\n 33032: jump [t0]\n      : @1345 (gas: 12)\n 33034: a0 = u64 [s1 + 0x30]\n 33037: a3 = s1 + 0x100\n 33041: u64 [a3 + 0x38] = a0\n 33044: a0 = u64 [s1 + 0x38]\n 33047: u64 [a3 + 0x30] = a0\n 33050: a0 = u64 [s1 + 0x40]\n 33053: u64 [a3 + 0x28] = a0\n 33056: a0 = 0x20\n 33059: a1 = s1 + 0x120\n 33063: a2 = u64 [s1 + 0x48]\n 33066: u64 [a3 + 0x20] = a2\n 33069: jump [t0]\n      : @1346 (gas: 12)\n 33071: a0 = u64 [s1 + 0x28]\n 33074: a3 = s1 + 0x100\n 33078: u64 [a3 + 0xd8] = a0\n 33082: a0 = u64 [s1 + 0x30]\n 33085: u64 [a3 + 0xd0] = a0\n 33089: a0 = u64 [s1 + 0x38]\n 33092: u64 [a3 + 0xc8] = a0\n 33096: a0 = 0x20\n 33099: a1 = s1 + 0x1c0\n 33103: a2 = u64 [s1 + 0x40]\n 33106: u64 [a3 + 0xc0] = a2\n 33110: jump [t0]\n      : @1347 (gas: 7)\n 33112: u64 [s1 + 344] = 0\n 33116: u64 [s1 + 336] = 0\n 33120: u64 [s1 + 320] = 0x6\n 33125: a0 = 0x20\n 33128: a1 = s1 + 0x140\n 33132: u64 [s1 + 328] = 0\n 33136: jump [t0]\n      : @1348 (gas: 18)\n 33138: a3 = u64 [s1 + 0x68]\n 33141: a0 = u64 [a3 + 0x18]\n 33144: a1 = u64 [a3 + 0x10]\n 33147: a2 = u64 [a3 + 0x8]\n 33150: a3 = u64 [a3]\n 33152: a0 = reverse a0\n 33154: u64 [s1 + 0x58] = a0\n 33157: a0 = reverse a1\n 33159: u64 [s1 + 0x50] = a0\n 33162: a0 = reverse a2\n 33164: u64 [s1 + 0x48] = a0\n 33167: a0 = reverse a3\n 33169: u64 [s1 + 0x40] = a0\n 33172: a0 = sp + 0xffffffffffffffe0\n 33175: a0 = a0 & 0xffffffffffffffe0\n 33178: u64 [s1 + 0x60] = a0\n 33181: sp = a0\n 33183: jump [t0]\n      : @1349 (gas: 17)\n 33185: a0 = u64 [a3 + 0x18]\n 33188: a1 = u64 [a3 + 0x10]\n 33191: a2 = u64 [a3 + 0x8]\n 33194: a3 = u64 [a3]\n 33196: a0 = reverse a0\n 33198: u64 [s1 + 0x60] = a0\n 33201: a0 = reverse a1\n 33203: u64 [s1 + 0x58] = a0\n 33206: a0 = reverse a2\n 33208: u64 [s1 + 0x50] = a0\n 33211: a0 = reverse a3\n 33213: u64 [s1 + 0x48] = a0\n 33216: a0 = sp + 0xffffffffffffffe0\n 33219: a0 = a0 & 0xffffffffffffffe0\n 33222: u64 [s1 + 0x68] = a0\n 33225: sp = a0\n 33227: jump [t0]\n      : @1350 (gas: 16)\n 33229: a3 = u64 [s1 + 0x58]\n 33232: a0 = u64 [a3 + 0x18]\n 33235: a1 = u64 [a3 + 0x10]\n 33238: a2 = u64 [a3 + 0x8]\n 33241: a3 = u64 [a3]\n 33243: a0 = reverse a0\n 33245: a4 = reverse a1\n 33247: a2 = reverse a2\n 33249: a3 = reverse a3\n 33251: a1 = u64 [s1 + 0x60]\n 33254: u64 [a1 + 0x18] = a3\n 33257: u64 [a1 + 0x10] = a2\n 33260: u64 [a1 + 0x8] = a4\n 33263: u64 [a1] = a0\n 33265: a0 = s1 + 0xe0\n 33269: jump [t0]\n      : @1351 (gas: 5)\n 33271: a0 = reverse a0\n 33273: a1 = reverse a1\n 33275: a2 = reverse a2\n 33277: a3 = reverse a3\n 33279: jump [t0]\n      : @1352 (gas: 14)\n 33281: a3 = a3 + a4\n 33284: u64 [s1 + 0x108] = a3\n 33288: a3 = a3 << 0x3b\n 33291: a4 = a2 >> 0x5\n 33294: a4 = a4 | a3\n 33297: a0 = u64 [s1 + 0x128]\n 33301: t1 = u64 [a0 + 0x18]\n 33304: a2 = a2 << 0x3b\n 33307: a3 = u64 [a0 + 0x10]\n 33310: a1 = a1 >> 0x5\n 33313: a0 = a1 | a2\n 33316: t2 = reverse t1\n 33318: a2 = reverse a3\n 33320: jump [t0]\n      : @1353 (gas: 15)\n 33322: a2 = u64 [s1 + 0x78]\n 33325: a0 = u64 [a2 + 0x8]\n 33328: a1 = i32 [a2 + 0x10]\n 33331: a2 = u64 [a2]\n 33333: a0 = reverse a0\n 33335: a3 = a0 << 0x20\n 33338: a1 = reverse a1\n 33340: a1 = a1 >> 0x20\n 33343: a1 = a1 | a3\n 33346: a0 = a0 >> 0x20\n 33349: a2 = reverse a2\n 33351: a3 = a2 << 0x20\n 33354: a0 = a0 | a3\n 33357: a2 = a2 >> 0x20\n 33360: jump [t0]\n      : @1354 (gas: 4)\n 33362: a0 = 0x1038\n 33366: a3 = s1 + a0\n 33369: a4 = a3 + 0x600\n 33373: jump [t0]\n      : @1355 (gas: 14)\n 33375: a5 = a5 + a2\n 33378: a4 = a5 <u a2\n 33381: a0 = u64 [s1 + 0x130]\n 33385: a2 = a2 <u a0\n 33388: a0 = t2 + a2\n 33391: a0 = a0 + a4\n 33394: a2 = a1 | a5\n 33397: a0 = a0 | a3\n 33400: a2 = a2 | a0\n 33403: a2 = a2 >> 0x20\n 33406: a0 = a0 | a5\n 33409: a0 = a0 << 0x20\n 33412: a0 = a0 | a2\n 33415: jump [t0]\n      : @1356 (gas: 10)\n 33417: a4 = 0 if a2 == 0\n 33419: a1 = u64 [s1 + 0x118]\n 33423: a1 = a1 & ~a3\n 33426: a2 = u64 [s1 + 0x120]\n 33430: a0 = a2 & ~a0\n 33433: a2 = u64 [s1 + 0x128]\n 33437: a2 = a2 & ~a4\n 33440: a3 = u64 [s1 + 0x130]\n 33444: a3 = a3 & ~a5\n 33447: jump [t0]\n      : @1357 (gas: 13)\n 33449: a4 = a0 << 0x3f\n 33452: a5 = a1 >> 0x1\n 33455: t1 = a5 | a4\n 33458: a5 = a3 << 0x3f\n 33461: a0 = a0 >> 0x1\n 33464: a0 = a0 | a5\n 33467: a1 = a1 << 0x3f\n 33470: a5 = a2 >> 0x1\n 33473: a1 = a1 | a5\n 33476: a3 = a3 >> 0x1\n 33479: a2 = a2 & 0x1\n 33482: a5 = -a2\n 33484: jump [t0]\n      : @1358 (gas: 16)\n 33486: sp = sp + 0xfffffffffffffd80\n 33490: a2 = sp + 0x200\n 33494: u64 [a2 + 0x78] = ra\n 33497: u64 [a2 + 0x70] = s0\n 33500: u64 [a2 + 0x68] = s1\n 33503: s0 = sp + 0x280\n 33507: sp = sp & 0xffffffffffffffe0\n 33510: s1 = sp\n 33512: a2 = u64 [a1 + 0x10]\n 33515: u64 [s1 + 0x50] = a2\n 33518: a2 = u64 [a1 + 0x8]\n 33521: u64 [s1 + 0x70] = a2\n 33524: a1 = u64 [a1]\n 33526: u64 [s1 + 0x78] = a1\n 33529: u64 [s1 + 0x58] = a0\n 33532: jump [t0]\n      : @1359 (gas: 14)\n 33534: a0 = u64 [a3 + 0x18]\n 33537: a1 = u64 [a3 + 0x10]\n 33540: a2 = u64 [a3 + 0x8]\n 33543: a3 = u64 [a3]\n 33545: a0 = reverse a0\n 33547: a4 = reverse a1\n 33549: a2 = reverse a2\n 33551: a3 = reverse a3\n 33553: a1 = u64 [s1 + 0x68]\n 33556: u64 [a1 + 0x18] = a3\n 33559: u64 [a1 + 0x10] = a2\n 33562: u64 [a1 + 0x8] = a4\n 33565: u64 [a1] = a0\n 33567: jump [t0]\n      : @1360 (gas: 13)\n 33569: a5 = a5 + a2\n 33572: a3 = a5 <u a2\n 33575: a2 = a2 <u t2\n 33578: a0 = t1 + a2\n 33581: a0 = a0 + a3\n 33584: a2 = a1 | a5\n 33587: a0 = a0 | a4\n 33590: a2 = a2 | a0\n 33593: a2 = a2 >> 0x20\n 33596: a0 = a0 | a5\n 33599: a0 = a0 << 0x20\n 33602: a0 = a0 | a2\n 33605: jump [t0]\n      : @1361 (gas: 4)\n 33607: a0 = 0x1838\n 33611: a3 = s1 + a0\n 33614: a4 = a3 + 0x200\n 33618: jump [t0]\n      : @1362 (gas: 8)\n 33620: a0 = u64 [a4 + 0x18]\n 33623: a1 = u64 [a4 + 0x20]\n 33626: a2 = u64 [a4 + 0x10]\n 33629: a3 = u64 [a4 + 0x8]\n 33632: a1 = a1 | a2\n 33635: a0 = a0 | a3\n 33638: a0 = a0 | a1\n 33641: jump [t0]\n      : @1363 (gas: 8)\n 33643: u64 [s1 + 208] = 0\n 33647: u64 [s1 + 200] = 0\n 33651: u64 [s1 + 192] = 0\n 33655: a0 = 0xe2517d3f00000000\n 33665: a1 = s1 + 0xc0\n 33669: u64 [s1 + 0xd8] = a0\n 33673: a0 = 0\n 33675: jump [t0]\n      : @1364 (gas: 10)\n 33677: a2 = a0 if a1 == 0\n 33680: a0 = u64 [s1 + 0x28]\n 33683: t2 = a4 <u a0\n 33686: a1 = a5 ^ t1\n 33689: a3 = a5 <u t1\n 33692: a3 = t2 if a1 == 0\n 33695: a0 = a0 ^ a4\n 33698: a0 = a0 | a1\n 33701: a3 = a2 if a0 == 0\n 33704: jump [t0]\n      : @1365 (gas: 11)\n 33706: a0 = u64 [s1 + 0x20]\n 33709: u64 [s1 + 0x198] = a0\n 33713: a0 = u64 [s1 + 0x18]\n 33716: u64 [s1 + 0x190] = a0\n 33720: a0 = u64 [s1 + 0x10]\n 33723: u64 [s1 + 0x188] = a0\n 33727: a1 = s1 + 0x180\n 33731: a0 = u64 [s1 + 0x8]\n 33734: u64 [s1 + 0x180] = a0\n 33738: a0 = 0\n 33740: jump [t0]\n      : @1366 (gas: 10)\n 33742: a1 = u64 [s1 + 0xb8]\n 33746: a0 = a1 + 0x3f\n 33749: a1 = a0 <u a1\n 33752: a2 = t2 + a1\n 33755: a0 = a0 & 0xffffffffffffffe0\n 33758: ra = u64 [s1 + 0x30]\n 33761: ra = ra + a0\n 33764: u64 [s1 + 0xb8] = ra\n 33768: a0 = ra <u a0\n 33771: jump [t0]\n      : @1367 (gas: 16)\n 33773: a4 = u64 [a3]\n 33775: u64 [sp + 0x18] = a4\n 33778: a4 = u64 [a3 + 0x8]\n 33781: u64 [sp + 0x20] = a4\n 33784: a4 = u64 [a3 + 0x10]\n 33787: u64 [sp + 0x28] = a4\n 33790: a3 = u64 [a3 + 0x18]\n 33793: u64 [sp + 0x30] = a3\n 33796: s1 = u64 [a2]\n 33798: a3 = u64 [a2 + 0x8]\n 33801: u64 [sp] = a3\n 33803: a3 = u64 [a2 + 0x10]\n 33806: u64 [sp + 0x8] = a3\n 33809: a2 = u64 [a2 + 0x18]\n 33812: u64 [sp + 0x10] = a2\n 33815: jump [t0]\n      : @1368 (gas: 8)\n 33817: a2 = a4 >u 0\n 33819: a1 = a1 ^ 0x1\n 33822: a1 = a2 if a4 != 0\n 33825: a2 = t2 >u 0\n 33827: a3 = a5 >u 0\n 33829: a3 = a2 if a5 == 0\n 33832: a3 = a1 if a0 == 0\n 33835: jump [t0]\n      : @1369 (gas: 12)\n 33837: a0 = u64 [s1 + 0x40]\n 33840: a3 = s1 + 0x100\n 33844: u64 [a3 + 0x18] = a0\n 33847: a0 = u64 [s1 + 0x48]\n 33850: u64 [a3 + 0x10] = a0\n 33853: a0 = u64 [s1 + 0x50]\n 33856: u64 [a3 + 0x8] = a0\n 33859: a0 = 0x20\n 33862: a1 = s1 + 0x100\n 33866: a2 = u64 [s1 + 0x58]\n 33869: u64 [a3] = a2\n 33871: jump [t0]\n      : @1370 (gas: 10)\n 33873: a0 = u64 [sp + 0x10]\n 33876: a1 = u64 [sp + 0x18]\n 33879: a2 = 0x100000000\n 33889: a2 = a2 ^ a0\n 33892: a2 = a2 | a1\n 33895: a3 = a0 >> 0x20\n 33898: a3 = a3 <u 0x1\n 33901: a3 = 0 if a1 != 0\n 33903: a3 = 0 if a2 == 0\n 33905: jump [t0]\n      : @1371 (gas: 8)\n 33907: a1 = a2 & ~a1\n 33910: a2 = u64 [s1 + 0x128]\n 33914: a2 = a2 & ~a5\n 33917: a3 = u64 [s1 + 0x130]\n 33921: a3 = a3 & ~a4\n 33924: a4 = s1 + 0x7ff\n 33928: a4 = a4 + 0xb9\n 33932: jump [t0]\n      : @1372 (gas: 10)\n 33934: a0 = u64 [s1 + 0x28]\n 33937: a1 = u64 [s1 + 0x18]\n 33940: a0 = a0 | a1\n 33943: a1 = 0xffffffe0\n 33953: a3 = u64 [s1 + 0x30]\n 33956: a1 = a3 <u a1\n 33959: a2 = u64 [s1 + 0x20]\n 33962: a1 = 0 if a2 != 0\n 33964: a1 = 0 if a0 != 0\n 33966: jump [t0]\n      : @1373 (gas: 10)\n 33968: a0 = u64 [a3 + 0x18]\n 33971: a1 = u64 [a3 + 0x10]\n 33974: a2 = u64 [a3 + 0x8]\n 33977: a3 = u64 [a3]\n 33979: a0 = reverse a0\n 33981: a1 = reverse a1\n 33983: a2 = reverse a2\n 33985: a3 = reverse a3\n 33987: a4 = s1 + 0x300\n 33991: jump [t0]\n      : @1374 (gas: 8)\n 33993: a0 = u64 [a4 + 0x58]\n 33996: a1 = u64 [a4 + 0x60]\n 33999: a2 = u64 [a4 + 0x50]\n 34002: a3 = u64 [a4 + 0x48]\n 34005: a1 = a1 | a2\n 34008: a0 = a0 | a3\n 34011: a0 = a0 | a1\n 34014: jump [t0]\n      : @1375 (gas: 8)\n 34016: a4 = a2 + a0\n 34019: a4 = a4 + a3\n 34022: a3 = a4 ^ a2\n 34025: u64 [s1 + 0x110] = a4\n 34029: a2 = a4 <u a2\n 34032: a2 = a0 if a3 == 0\n 34035: a4 = u64 [s1 + 0x108]\n 34039: jump [t0]\n      : @1376 (gas: 4)\n 34041: a0 = 0x1838\n 34045: a3 = s1 + a0\n 34048: a4 = a3 + 0x100\n 34052: jump [t0]\n      : @1377 (gas: 7)\n 34054: u64 [s1 + 632] = 0\n 34058: u64 [s1 + 624] = 0\n 34062: u64 [s1 + 616] = 0\n 34066: a0 = 0x20\n 34069: a1 = s1 + 0x260\n 34073: u64 [s1 + 608] = 0\n 34077: jump [t0]\n      : @1378 (gas: 11)\n 34079: a4 = a4 + a1\n 34082: a1 = a4 <u a1\n 34085: a1 = a1 + a5\n 34088: a1 = a1 | a2\n 34091: a2 = a0 | a4\n 34094: a2 = a2 | a1\n 34097: a1 = a1 | a4\n 34100: a2 = a2 >> 0x20\n 34103: a1 = a1 << 0x20\n 34106: a1 = a1 | a2\n 34109: jump [t0]\n      : @1379 (gas: 10)\n 34111: u64 [s1 + 0xf8] = a0\n 34115: u64 [s1 + 0x100] = a1\n 34119: a0 = u64 [s1 + 0xf0]\n 34123: a0 = a0 | a1\n 34126: u64 [s1 + 0xf0] = a0\n 34130: a0 = u64 [s1 + 0x138]\n 34134: a2 = a0 + 0xffffffffffffff80\n 34137: a0 = 0xffffffffffffffff\n 34140: a1 = 0xffffffffffffffff\n 34143: jump [t0]\n      : @1380 (gas: 9)\n 34145: u64 [s1 + 0x18] = a1\n 34148: u64 [s1 + 0x230] = a1\n 34152: u64 [s1 + 0x10] = a2\n 34155: u64 [s1 + 0x228] = a2\n 34159: a1 = s1 + 0x220\n 34163: u64 [s1 + 0x8] = a0\n 34166: u64 [s1 + 0x220] = a0\n 34170: a0 = 0\n 34172: jump [t0]\n      : @1381 (gas: 10)\n 34174: sp = sp + 0xfffffffffffffd80\n 34178: a3 = sp + 0x200\n 34182: u64 [a3 + 0x78] = ra\n 34185: u64 [a3 + 0x70] = s0\n 34188: u64 [a3 + 0x68] = s1\n 34191: s0 = sp + 0x280\n 34195: sp = sp & 0xffffffffffffffe0\n 34198: s1 = sp\n 34200: a3 = u64 [a2 + 0x10]\n 34203: jump [t0]\n      : @1382 (gas: 12)\n 34205: a2 = u64 [sp]\n 34207: a3 = u64 [sp + 0x8]\n 34210: u64 [s1] = a2\n 34212: u64 [s1 + 0x8] = a3\n 34215: u64 [s1 + 0x10] = a0\n 34218: u64 [s1 + 0x18] = a1\n 34221: sp = s0 + 0xffffffffffffffc0\n 34224: ra = u64 [sp + 0x38]\n 34227: s0 = u64 [sp + 0x30]\n 34230: s1 = u64 [sp + 0x28]\n 34233: sp = sp + 0x40\n 34236: jump [t0]\n      : @1383 (gas: 6)\n 34238: a0 = u64 [a3 + 0x18]\n 34241: a1 = u64 [a3 + 0x10]\n 34244: a2 = u64 [a3 + 0x8]\n 34247: a3 = u64 [a3]\n 34249: a0 = reverse a0\n 34251: jump [t0]\n      : @1384 (gas: 8)\n 34253: a0 = a0 | a2\n 34256: a2 = a3 | a1\n 34259: a2 = a2 | a0\n 34262: a2 = a2 >> 0x20\n 34265: a0 = a0 | a1\n 34268: a0 = a0 << 0x20\n 34271: a0 = a0 | a2\n 34274: jump [t0]\n      : @1385 (gas: 5)\n 34276: sp = a0\n 34278: i32 a2 = a0 + 0\n 34280: a1 = 0x40\n 34283: a0 = u64 [s1 + 0xb8]\n 34287: jump [t0]\n      : @1386 (gas: 12)\n 34289: a0 = u64 [a5 + 0xa0]\n 34293: a1 = u64 [a5 + 0x98]\n 34297: a2 = u64 [a5 + 0x90]\n 34301: a4 = u64 [a5 + 0x88]\n 34305: a0 = a0 | a2\n 34308: a2 = a4 | a1\n 34311: a2 = a2 | a0\n 34314: a2 = a2 >> 0x20\n 34317: a0 = a0 | a1\n 34320: a0 = a0 << 0x20\n 34323: a0 = a0 | a2\n 34326: jump [t0]\n      : @1387 (gas: 13)\n 34328: a0 = u64 [s1 + 0xb0]\n 34332: a1 = u64 [s1 + 0xa0]\n 34336: a0 = a0 | a1\n 34339: a1 = u64 [s1 + 0xb8]\n 34343: a4 = a1\n 34345: a2 = u64 [s1 + 0xa8]\n 34349: a1 = a1 | a2\n 34352: a1 = a1 | a0\n 34355: a1 = a1 >> 0x20\n 34358: a0 = a0 | a2\n 34361: a0 = a0 << 0x20\n 34364: a0 = a0 | a1\n 34367: jump [t0]\n      : @1388 (gas: 7)\n 34369: a0 = a0 << 0x3b\n 34372: a1 = a0 >> 0x38\n 34375: u64 [s1 + 0x138] = a1\n 34379: a2 = 0x80 - a1\n 34383: a0 = 0xffffffffffffffff\n 34386: a1 = 0xffffffffffffffff\n 34389: jump [t0]\n      : @1389 (gas: 9)\n 34391: a0 = sp + 0xffffffffffffffe0\n 34394: a4 = a0 & 0xffffffffffffffe0\n 34397: sp = a4\n 34399: a0 = 0\n 34401: u64 [s1 + 184] = 0\n 34405: t2 = 0\n 34407: t1 = 0\n 34409: u64 [s1 + 176] = 0\n 34413: jump [t0]\n      : @1390 (gas: 8)\n 34415: a0 = sp + 0xffffffffffffffe0\n 34418: a0 = a0 & 0xffffffffffffffe0\n 34421: u64 [s1 + 0x58] = a0\n 34424: sp = a0\n 34426: i32 a2 = a0 + 0\n 34428: a1 = 0x40\n 34431: a0 = u64 [s1 + 0x70]\n 34434: jump [t0]\n      : @1391 (gas: 8)\n 34436: a0 = sp + 0xffffffffffffffe0\n 34439: a0 = a0 & 0xffffffffffffffe0\n 34442: u64 [s1 + 0x30] = a0\n 34445: sp = a0\n 34447: i32 a2 = a0 + 0\n 34449: a1 = 0x40\n 34452: a0 = u64 [s1 + 0x40]\n 34455: jump [t0]\n      : @1392 (gas: 8)\n 34457: a0 = u64 [a4 + 0xd8]\n 34461: a1 = u64 [a4 + 0xe0]\n 34465: a2 = u64 [a4 + 0xd0]\n 34469: a3 = u64 [a4 + 0xc8]\n 34473: a1 = a1 | a2\n 34476: a0 = a0 | a3\n 34479: a0 = a0 | a1\n 34482: jump [t0]\n      : @1393 (gas: 8)\n 34484: a0 = a0 + a4\n 34487: a3 = a3 + a1\n 34490: a5 = a3 <u a1\n 34493: a0 = a0 + a5\n 34496: ra = u64 [s1 + 0x100]\n 34500: ra = ra + a3\n 34503: a3 = ra <u a3\n 34506: jump [t0]\n      : @1394 (gas: 6)\n 34508: a1 = a3 << 0x3\n 34511: u64 [s1 + 0x138] = a1\n 34515: i32 a2 = 0x80 - a1\n 34519: a0 = 0xffffffffffffffff\n 34522: a1 = 0xffffffffffffffff\n 34525: jump [t0]\n      : @1395 (gas: 6)\n 34527: i32 a0 = a0 + 0\n 34529: i32 a2 = a2 + 0\n 34531: u64 [s1 + 0x68] = a1\n 34534: a1 = 0x40\n 34537: u64 [s1 + 0x60] = a0\n 34540: jump [t0]\n      : @1396 (gas: 7)\n 34542: a3 = a3 | a5\n 34545: a3 = a1 if a2 == 0\n 34548: a1 = 0xffffffffffffffff\n 34551: a0 = a1 if a4 == 0\n 34554: a3 = a1 if a4 == 0\n 34557: a5 = 0 if a2 == 0\n 34559: jump [t0]\n      : @1397 (gas: 9)\n 34561: sp = sp + 0xffffffffffffffc0\n 34564: u64 [sp + 0x38] = ra\n 34567: u64 [sp + 0x30] = s0\n 34570: u64 [sp + 0x28] = s1\n 34573: s0 = sp + 0x40\n 34576: sp = sp & 0xffffffffffffffe0\n 34579: s1 = a0\n 34581: i32 a0 = sp + 0\n 34583: jump [t0]\n      : @1398 (gas: 4)\n 34585: a0 = 0x1038\n 34589: a3 = s1 + a0\n 34592: a4 = a3 + 0x500\n 34596: jump [t0]\n      : @1399 (gas: 2)\n 34598: a3 = a2 & 0x40\n 34601: jump @1403 if a3 != 0\n      : @1400 (gas: 1)\n 34604: jump @1402 if a2 == 0\n      : @1401 (gas: 6)\n 34607: i32 a3 = 0x40 - a2\n 34610: a3 = a1 << a3\n 34613: a1 = a1 >> a2\n 34616: a0 = a0 >> a2\n 34619: a0 = a0 | a3\n 34622: ret\n      : @1402 (gas: 1)\n 34624: ret\n      : @1403 (gas: 4)\n 34626: a0 = a2 + 0xffffffffffffffc0\n 34629: a0 = a1 >> a0\n 34632: a1 = 0\n 34634: ret\n      : @1404 (gas: 2)\n 34636: a3 = a2 & 0x40\n 34639: jump @1408 if a3 != 0\n      : @1405 (gas: 1)\n 34642: jump @1407 if a2 == 0\n      : @1406 (gas: 6)\n 34645: i32 a3 = 0x40 - a2\n 34648: a3 = a0 >> a3\n 34651: a0 = a0 << a2\n 34654: a1 = a1 << a2\n 34657: a1 = a1 | a3\n 34660: ret\n      : @1407 (gas: 1)\n 34662: ret\n      : @1408 (gas: 4)\n 34664: a1 = a2 + 0xffffffffffffffc0\n 34667: a1 = a0 << a1\n 34670: a0 = 0\n 34672: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unpause()": "3f4ba83a"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 2:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 10:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 12:\"contracts/MyToken.sol\"\nobject \"MyToken_1679\" {\n    code {\n        {\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MyToken_1679\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value := mload(memoryDataOffset)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr := allocate_memory(64)\n            mstore(memPtr, 7)\n            mstore(add(memPtr, 32), \"MyToken\")\n            let memPtr_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr_1 := allocate_memory(64)\n            mstore(memPtr_1, 3)\n            mstore(add(memPtr_1, 32), \"MTK\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _1 := sload(3)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(3, add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen\n                {\n                    value_1 := mload(add(memPtr, srcOffset))\n                }\n                sstore(3, or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _3 := sload(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_2, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 12:580:622  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole_6928(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 12:632:667  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n            pop(fun_grantRole_6929(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 12:677:712  \"_grantRole(MINTER_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 3:7509:7530  \"account == address(0)\"\n            let _5 := iszero(/** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            if /** @src 3:7509:7530  \"account == address(0)\" */ _5\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            {\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n            }\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            if /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            {\n                /// @src 8:1974:1989  \"EnforcedPause()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _6 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let sum := add(_6, value)\n            if gt(_6, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n            /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n            _5 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value))\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            let _7 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n            mstore(_7, value)\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            log3(_7, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _8 := mload(64)\n            let _9 := datasize(\"MyToken_1679_deployed\")\n            codecopy(_8, dataoffset(\"MyToken_1679_deployed\"), _9)\n            return(_8, _9)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6928(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, 0)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6929(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 12:\"contracts/MyToken.sol\"\n    object \"MyToken_1679_deployed\" {\n        code {\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 9:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 9:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(/** @src 3:1837:1842  \"_name\" */ 0x03)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 3:1837:1842  \"_name\" */ 0x03)\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, memPtr), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 3:9892:9913  \"spender == address(0)\" */ value0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_1)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_4, value_1)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 3:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _5)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_8411()\n                        let value_2 := calldataload(68)\n                        /// @src 3:4931:4936  \"value\"\n                        fun_spendAllowance(value0_1, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:4931:4936  \"value\" */ value_2)\n                        /// @src 3:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_2)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getRoleAdmin(calldataload(4))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let value1_1 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_3, value1_1))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 3:2761:2763  \"18\" */ 0x12)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_8411()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _6 := sload(/** @src 8:1796:1803  \"_paused\" */ 0x05)\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        if /** @src 8:2140:2149  \"!paused()\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, 0xff))\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        {\n                            /// @src 8:2172:2187  \"ExpectedPause()\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 8:2172:2187  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 8:1796:1803  \"_paused\" */ 0x05, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, not(255)))\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_7, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2674:2696  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value_4 := calldataload(36)\n                        mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_2)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(36, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 68)\n                        }\n                        let _8 := and(/** @src 3:7509:7530  \"account == address(0)\" */ value0_2, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:7509:7530  \"account == address(0)\"\n                        let _9 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _8)\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 3:7509:7530  \"account == address(0)\" */ _9\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _10 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let sum := add(_10, value_4)\n                        if gt(_10, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n                        /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                        _9 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot_4), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_4))\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        let _11 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_11, value_4)\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_11, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ _8)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 5:692:697  \"value\"\n                        fun_burn(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let converted := and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, iszero(iszero(converted)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _12)\n                        return(memPos_6, 32)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        /// @src 5:1135:1140  \"value\"\n                        fun_spendAllowance(value0_3, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 5:1135:1140  \"value\" */ value_5)\n                        /// @src 5:1166:1171  \"value\"\n                        fun_burn(value0_3, value_5)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        sstore(/** @src 8:2398:2412  \"_paused = true\" */ 0x05, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 8:2398:2412  \"_paused = true\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 8:2408:2412  \"true\" */ 0x01))\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        let _13 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_13, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        log1(_13, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2427:2447  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address_8411()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let converted_1 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(converted_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let ret_2 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, 32), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_2 := add(add(memPtr_1, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_2, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 0)\n                        return(memPos_8, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 3:3440:3445  \"value\"\n                        fun_transfer(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:3440:3445  \"value\" */ value0_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(36))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let value1_4 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_6))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_6, value1_4))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_5 := abi_decode_address_8411()\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_5, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let _14 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_12, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8411() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x06)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 1029 @src 3:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:10522:10547  \"allowance(owner, spender)\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                let _2 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_1)\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if /** @src 3:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 3:10580:10597  \"type(uint256).max\" */ not(0))\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                {\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    if /** @src 3:10617:10641  \"currentAllowance < value\" */ lt(_2, var_value)\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    {\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                        mstore(36, _2)\n                        mstore(68, var_value)\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                    }\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    {\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9892:9913  \"spender == address(0)\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    {\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(/** @src 3:10809:10833  \"currentAllowance - value\" */ _2, var_value))\n                }\n            }\n            /// @ast-id 760 @src 3:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:5457:5475  \"from == address(0)\" */ var_from, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 3:5457:5475  \"from == address(0)\" */ _2\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                let _3 := and(/** @src 3:5552:5568  \"to == address(0)\" */ var_to, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 3:5552:5568  \"to == address(0)\" */ _4\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _5 := sload(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_6, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_8414()\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 903 @src 3:7965:8171  \"function _burn(address account, uint256 value) internal {...\"\n            function fun_burn(var_account, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:8035:8056  \"account == address(0)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:8035:8056  \"account == address(0)\"\n                let _2 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                if /** @src 3:8035:8056  \"account == address(0)\" */ _2\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                {\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:8079:8109  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:8054:8055  \"0\" */ 0x00)\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:8054:8055  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _3 := sload(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_3, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _3)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _3, var_value))\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(sload(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _4 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_4, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 3:8054:8055  \"0\" */ 0x00)\n            }\n            /// @ast-id 1272 @src 8:1878:2006  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                if /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                {\n                    /// @src 8:1974:1989  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202f9962f5152274a321f194e4a01bcf2d1b223afcd07305fc92b2049b6587cac364736f6c634300081c0033\"\n    }\n}\n",
          "hash": "d3aaaa8ab726243a3541d757f7174142482568b29de8bfd5a13fe6745b6fc161",
          "factoryDependencies": {}
        }
      },
      "contracts/UniswapV2Pair.sol": {
        "IERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2Pair.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0x573293b4e11013732fa54faf9016c69c9ad621f93260c3855a5d3e00f2947fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e9e67335a6a5e33ee648b003ebe4f38acb86594e4f37fb21dee289363b88761\",\"dweb:/ipfs/QmXR65bo739x789AzCLgGf2DBeRP2RLR1nPLKVRFRxADrV\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        },
        "UniswapV2Pair": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token1",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "_reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "_reserve1",
                  "type": "uint112"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2Pair.sol\":\"UniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0x573293b4e11013732fa54faf9016c69c9ad621f93260c3855a5d3e00f2947fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e9e67335a6a5e33ee648b003ebe4f38acb86594e4f37fb21dee289363b88761\",\"dweb:/ipfs/QmXR65bo739x789AzCLgGf2DBeRP2RLR1nPLKVRFRxADrV\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 160/65744 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6210\n// Code size = 21678 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x200a8]\n     5: jump @41 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x300d0\n    14: i32 a0 = a0 + 0\n    16: ecalli 13 // 'set_immutable_data'\n    18: jump @41\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @12\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @12\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 43)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 7 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: t0 = 6, jump @676\n      : @7 [@dyn 3] (gas: 1)\n   694: ret\n      : @8 (gas: 40)\n   696: sp = sp + 0xffffffffffffffa0\n   699: u64 [sp + 0x58] = ra\n   702: u64 [sp + 0x50] = s0\n   705: s0 = sp + 0x60\n   708: sp = sp & 0xffffffffffffffe0\n   711: t0 = u64 [a0]\n   713: a3 = u64 [a0 + 0x8]\n   716: a4 = u64 [a0 + 0x10]\n   719: a0 = u64 [a0 + 0x18]\n   722: t1 = u64 [a1]\n   724: a2 = u64 [a1 + 0x8]\n   727: a5 = u64 [a1 + 0x10]\n   730: a1 = u64 [a1 + 0x18]\n   733: t2 = reverse a0\n   735: a4 = reverse a4\n   737: a3 = reverse a3\n   739: a0 = reverse t0\n   741: t0 = reverse a1\n   743: a5 = reverse a5\n   745: a2 = reverse a2\n   747: a1 = reverse t1\n   749: u64 [sp + 0x18] = a0\n   752: u64 [sp + 0x10] = a3\n   755: u64 [sp + 0x8] = a4\n   758: u64 [sp] = t2\n   760: u64 [sp + 0x38] = a1\n   763: u64 [sp + 0x30] = a2\n   766: u64 [sp + 0x28] = a5\n   769: u64 [sp + 0x20] = t0\n   772: i32 a1 = sp + 0\n   774: i32 a3 = sp + 0x20\n   777: a2 = 0xffffffffffffffff\n   780: a4 = 0x20\n   783: a0 = 0\n   785: ecalli 14 // 'set_storage'\n   787: sp = s0 + 0xffffffffffffffa0\n   790: ra = u64 [sp + 0x58]\n   793: s0 = u64 [sp + 0x50]\n   796: sp = sp + 0x60\n   799: ret\n      : @9 [@dyn 4] (gas: 35)\n   801: a1 = u64 [sp]\n   803: a1 = reverse a1\n   805: a2 = u64 [sp + 0x8]\n   808: a2 = reverse a2\n   810: a3 = u64 [sp + 0x10]\n   813: a3 = reverse a3\n   815: a4 = u64 [sp + 0x18]\n   818: a4 = reverse a4\n   820: u64 [sp + 0x58] = a4\n   823: u64 [sp + 0x50] = a3\n   826: u64 [sp + 0x48] = a2\n   829: u64 [sp + 0x40] = a1\n   832: a1 = u64 [sp + 0x20]\n   835: a1 = reverse a1\n   837: a2 = u64 [sp + 0x28]\n   840: a2 = reverse a2\n   842: a3 = u64 [sp + 0x30]\n   845: a3 = reverse a3\n   847: a4 = u64 [sp + 0x38]\n   850: a4 = reverse a4\n   852: u64 [sp + 0x78] = a4\n   855: u64 [sp + 0x70] = a3\n   858: u64 [sp + 0x68] = a2\n   861: u64 [sp + 0x60] = a1\n   864: i32 a2 = a0 + 0\n   866: i32 a3 = s1 + 0\n   868: i32 a0 = sp + 0x40\n   871: a1 = 0x2\n   874: ecalli 6 // 'deposit_event'\n   876: sp = s0 + 0xffffffffffffff60\n   880: ra = u64 [sp + 0x98]\n   884: s0 = u64 [sp + 0x90]\n   888: s1 = u64 [sp + 0x88]\n   892: sp = sp + 0xa0\n   896: ret\n      : @10 [@dyn 5] (gas: 2)\n   898: u64 [sp + 0x38] = a1\n   901: ra = 12, jump @12\n      : @11 [@dyn 6] (gas: 46)\n   906: a1 = reverse s1\n   908: u64 [sp + 0x78] = a1\n   911: a1 = u64 [sp]\n   913: a1 = reverse a1\n   915: u64 [sp + 0x70] = a1\n   918: a1 = u64 [sp + 0x8]\n   921: a1 = reverse a1\n   923: u64 [sp + 0x68] = a1\n   926: a1 = u64 [sp + 0x10]\n   929: a1 = reverse a1\n   931: u64 [sp + 0x60] = a1\n   934: a1 = u64 [sp + 0x18]\n   937: a1 = reverse a1\n   939: u64 [sp + 0x98] = a1\n   943: a1 = u64 [sp + 0x20]\n   946: a1 = reverse a1\n   948: u64 [sp + 0x90] = a1\n   952: a1 = u64 [sp + 0x28]\n   955: a1 = reverse a1\n   957: u64 [sp + 0x88] = a1\n   961: a1 = u64 [sp + 0x30]\n   964: a1 = reverse a1\n   966: u64 [sp + 0x80] = a1\n   970: a1 = u64 [sp + 0x40]\n   973: a1 = reverse a1\n   975: u64 [sp + 0xb8] = a1\n   979: a1 = u64 [sp + 0x48]\n   982: a1 = reverse a1\n   984: u64 [sp + 0xb0] = a1\n   988: a1 = u64 [sp + 0x50]\n   991: a1 = reverse a1\n   993: u64 [sp + 0xa8] = a1\n   997: a1 = u64 [sp + 0x58]\n  1000: a1 = reverse a1\n  1002: u64 [sp + 0xa0] = a1\n  1006: i32 a2 = a0 + 0\n  1008: a3 = i32 [sp + 0x38]\n  1011: i32 a0 = sp + 0x60\n  1014: a1 = 0x3\n  1017: ecalli 6 // 'deposit_event'\n  1019: sp = s0 + 0xffffffffffffff20\n  1023: ra = u64 [sp + 0xd8]\n  1027: s0 = u64 [sp + 0xd0]\n  1031: s1 = u64 [sp + 0xc8]\n  1035: sp = sp + 0xe0\n  1039: ret\n      : @12 (gas: 2)\n  1041: i32 a2 = a0 >> 0x10\n  1044: jump @17 if a2 != 0\n      : @13 (gas: 4)\n  1047: a1 = a1 + a0\n  1050: i32 a1 = a1 + 0x1f\n  1053: a1 = a1 & 0xffffffffffffffe0\n  1056: jump @17 if a1 >u 65536\n      : @14 (gas: 3)\n  1062: a2 = 0x200a4\n  1067: a3 = i32 [0x200a4]\n  1072: jump @16 if a3 >=u a1\n      : @15 (gas: 2)\n  1075: u32 [0x200a4] = a1\n  1080: fallthrough\n      : @16 (gas: 4)\n  1081: a1 = 0x200b0\n  1086: i32 a0 = a0 + 0\n  1088: a0 = a0 + a1\n  1091: ret\n      : @17 (gas: 1)\n  1093: trap\n      : @18 (gas: 6)\n  1094: sp = sp + 0xfffffffffffffff0\n  1097: u64 [sp + 0x8] = ra\n  1100: u64 [sp] = s0\n  1102: s0 = a0 & 0x1\n  1105: ecalli 4 // 'call_data_size'\n  1107: fallthrough\n      : @19 (gas: 2)\n  1108: u32 [0x200a0] = a0\n  1113: jump @21 if s0 == 0\n      : @20 (gas: 1)\n  1116: ra = 14, jump @22\n      : @21 [@dyn 7] (gas: 1)\n  1120: ra = 16, jump @44\n      : @22 [@dyn 8] (gas: 14)\n  1125: sp = sp + 0xfffffffffffffdc0\n  1129: a0 = sp + 0x200\n  1133: u64 [a0 + 0x38] = ra\n  1136: u64 [a0 + 0x30] = s0\n  1139: u64 [a0 + 0x28] = s1\n  1142: s0 = sp + 0x240\n  1146: sp = sp & 0xffffffffffffffe0\n  1149: u64 [sp + 344] = 0\n  1153: u64 [sp + 336] = 0\n  1157: u64 [sp + 328] = 0\n  1161: u64 [sp + 320] = 0\n  1165: i32 a0 = sp + 0x140\n  1169: ecalli 15 // 'value_transferred'\n  1171: fallthrough\n      : @23 (gas: 8)\n  1172: a0 = u64 [sp + 0x150]\n  1176: a1 = u64 [sp + 0x158]\n  1180: a2 = u64 [sp + 0x148]\n  1184: a3 = u64 [sp + 0x140]\n  1188: a1 = a1 | a2\n  1191: a0 = a0 | a3\n  1194: a0 = a0 | a1\n  1197: jump @37 if a0 != 0\n      : @24 (gas: 15)\n  1201: s1 = i32 [0x200a0]\n  1206: a0 = s1 << 0x20\n  1209: a0 = a0 >> 0x20\n  1212: a0 = a0 + 0x1f\n  1215: a0 = a0 & 0xffffffffffffffe0\n  1218: a1 = a0 + 0x80\n  1222: a0 = a1 <u a0\n  1225: u64 [sp + 312] = 0\n  1229: u64 [sp + 0x120] = a1\n  1233: u64 [sp + 0x128] = a0\n  1237: a0 = 0 if a0 != 0\n  1239: u64 [sp + 0x130] = a0\n  1243: a0 = 0x40\n  1246: a1 = sp + 0x120\n  1250: ra = 18, jump @4\n      : @25 [@dyn 9] (gas: 3)\n  1255: a0 = 0x80\n  1259: a1 = s1\n  1261: ra = 20, jump @12\n      : @26 [@dyn 10] (gas: 5)\n  1266: i32 a0 = a0 + 0\n  1268: a1 = s1\n  1270: a2 = 0\n  1272: ecalli 2 // 'call_data_copy'\n  1274: fallthrough\n      : @27 (gas: 1)\n  1275: jump @38 if s1 <u 64\n      : @28 (gas: 7)\n  1280: u64 [sp + 248] = 0\n  1284: u64 [sp + 240] = 0\n  1288: u64 [sp + 224] = 0x80\n  1294: a0 = sp + 0x100\n  1298: a1 = sp + 0xe0\n  1302: u64 [sp + 232] = 0\n  1306: ra = 22, jump @546\n      : @29 [@dyn 11] (gas: 12)\n  1311: a0 = u64 [sp + 0x100]\n  1315: u64 [sp + 0x20] = a0\n  1318: a0 = u64 [sp + 0x108]\n  1322: u64 [sp + 0x18] = a0\n  1325: s1 = u32 [sp + 0x110]\n  1329: u64 [sp + 184] = 0\n  1333: u64 [sp + 176] = 0\n  1337: u64 [sp + 160] = 0xa0\n  1343: a0 = sp + 0xc0\n  1347: a1 = sp + 0xa0\n  1351: u64 [sp + 168] = 0\n  1355: ra = 24, jump @546\n      : @30 [@dyn 12] (gas: 13)\n  1360: a0 = u64 [sp + 0xc0]\n  1364: u64 [sp + 0x38] = a0\n  1367: a0 = u64 [sp + 0xc8]\n  1371: u64 [sp + 0x30] = a0\n  1374: a0 = u32 [sp + 0xd0]\n  1378: u64 [sp + 0x28] = a0\n  1381: u64 [sp + 376] = 0\n  1385: u64 [sp + 368] = 0\n  1389: u64 [sp + 360] = 0\n  1393: u64 [sp + 352] = 0\n  1397: a0 = sp + 0x80\n  1401: a1 = sp + 0x160\n  1405: ra = 26, jump @6\n      : @31 [@dyn 13] (gas: 17)\n  1410: a0 = u32 [sp + 0x94]\n  1414: a0 = a0 << 0x20\n  1417: a1 = u64 [sp + 0x98]\n  1421: a0 = a0 | s1\n  1424: u64 [sp + 408] = 0\n  1428: u64 [sp + 400] = 0\n  1432: u64 [sp + 392] = 0\n  1436: u64 [sp + 384] = 0\n  1440: a2 = u64 [sp + 0x18]\n  1443: u64 [sp + 0x1a8] = a2\n  1447: a2 = u64 [sp + 0x20]\n  1450: u64 [sp + 0x1a0] = a2\n  1454: u64 [sp + 0x1b8] = a1\n  1458: u64 [sp + 0x1b0] = a0\n  1462: a0 = sp + 0x180\n  1466: a1 = sp + 0x1a0\n  1470: ra = 28, jump @8\n      : @32 [@dyn 14] (gas: 8)\n  1475: u64 [sp + 472] = 0\n  1479: u64 [sp + 464] = 0\n  1483: u64 [sp + 456] = 0\n  1487: s1 = 0x1\n  1490: u64 [sp + 0x1c0] = s1\n  1494: a0 = sp + 0x60\n  1497: a1 = sp + 0x1c0\n  1501: ra = 30, jump @6\n      : @33 [@dyn 15] (gas: 19)\n  1506: a0 = u32 [sp + 0x74]\n  1509: a0 = a0 << 0x20\n  1512: a1 = u64 [sp + 0x78]\n  1515: a2 = u64 [sp + 0x28]\n  1518: a0 = a0 | a2\n  1521: u64 [sp + 504] = 0\n  1525: u64 [sp + 496] = 0\n  1529: u64 [sp + 488] = 0\n  1533: u64 [sp + 0x1e0] = s1\n  1537: a2 = u64 [sp + 0x30]\n  1540: a3 = sp + 0x200\n  1544: u64 [a3 + 0x8] = a2\n  1547: a2 = u64 [sp + 0x38]\n  1550: u64 [a3] = a2\n  1552: u64 [a3 + 0x18] = a1\n  1555: u64 [a3 + 0x10] = a0\n  1558: a0 = sp + 0x1e0\n  1562: a1 = sp + 0x200\n  1566: ra = 32, jump @8\n      : @34 [@dyn 16] (gas: 3)\n  1571: a0 = sp + 0x40\n  1574: a1 = 0x40\n  1577: ra = 34, jump @2\n      : @35 [@dyn 17] (gas: 12)\n  1582: a0 = u64 [sp + 0x58]\n  1585: a1 = u64 [sp + 0x50]\n  1588: a2 = u64 [sp + 0x48]\n  1591: s1 = u64 [sp + 0x40]\n  1594: a0 = a0 | a2\n  1597: a2 = s1 | a1\n  1600: a2 = a2 | a0\n  1603: a2 = a2 >> 0x20\n  1606: a0 = a0 | a1\n  1609: a0 = a0 << 0x20\n  1612: a0 = a0 | a2\n  1615: jump @39 if a0 == 0\n      : @36 (gas: 1)\n  1618: trap\n      : @37 (gas: 4)\n  1619: a1 = 0x200b0\n  1624: i32 a1 = a1 + 0\n  1626: a0 = 0x1\n  1629: jump @43\n      : @38 (gas: 4)\n  1631: a1 = 0x200b0\n  1636: i32 a1 = a1 + 0\n  1638: a0 = 0x1\n  1641: jump @43\n      : @39 (gas: 3)\n  1643: a0 = s1\n  1645: a1 = 0\n  1647: ra = 36, jump @12\n      : @40 [@dyn 18] (gas: 5)\n  1652: i32 a0 = a0 + 0\n  1654: a1 = 0\n  1656: a2 = 0\n  1658: ecalli 2 // 'call_data_copy'\n  1660: jump @0\n      : @41 (gas: 3)\n  1663: a0 = s1\n  1665: a1 = 0\n  1667: ra = 38, jump @12\n      : @42 [@dyn 19] (gas: 6)\n  1672: i32 a1 = a0 + 0\n  1674: a0 = 0\n  1676: a2 = 0\n  1678: ra = 0x28\n  1681: ecalli 12 // 'seal_return'\n  1683: jump @44\n      : @43 (gas: 4)\n  1685: a2 = 0\n  1687: ra = 0x28\n  1690: ecalli 12 // 'seal_return'\n  1692: fallthrough\n      : @44 [@dyn 20] (gas: 16)\n  1693: sp = sp + 0xfffffffffffffe10\n  1697: u64 [sp + 0x1e8] = ra\n  1701: u64 [sp + 0x1e0] = s0\n  1705: u64 [sp + 0x1d8] = s1\n  1709: s0 = sp + 0x1f0\n  1713: sp = sp + 0xffffffffffffe010\n  1717: sp = sp & 0xffffffffffffffe0\n  1720: s1 = sp\n  1722: a2 = s1 + 0x18d8\n  1726: u64 [a2 + 448] = 0\n  1730: u64 [a2 + 440] = 0\n  1734: u64 [a2 + 424] = 0x80\n  1740: a0 = 0x40\n  1743: a1 = s1 + 0x1a80\n  1747: u64 [a2 + 432] = 0\n  1751: ra = 42, jump @4\n      : @45 [@dyn 21] (gas: 4)\n  1756: a0 = 0x200a0\n  1761: u64 [s1 + 0x138] = a0\n  1765: a0 = i32 [0x200a0]\n  1770: jump @47 if a0 >=u 4\n      : @46 (gas: 1)\n  1774: jump @499\n      : @47 (gas: 6)\n  1777: a0 = s1 + 0x2000\n  1781: i32 a0 = a0 + 0xfffffffffffffaa0\n  1785: a1 = 0\n  1787: ra = 0x2c\n  1790: ecalli 3 // 'call_data_load'\n  1792: fallthrough\n      : @48 [@dyn 22] (gas: 3)\n  1793: a2 = s1 + 0x18d8\n  1797: a0 = i32 [a2 + 0x1e4]\n  1801: jump @50 if a0 != 3524403367\n      : @49 (gas: 1)\n  1808: jump @192\n      : @50 (gas: 1)\n  1811: jump @85 if a0 == 234755713\n      : @51 (gas: 1)\n  1819: jump @53 if a0 != 404098525\n      : @52 (gas: 1)\n  1826: jump @164\n      : @53 (gas: 1)\n  1829: jump @95 if a0 == 1784838210\n      : @54 (gas: 1)\n  1837: jump @56 if a0 == 1838834698\n      : @55 (gas: 1)\n  1844: jump @174\n      : @56 (gas: 8)\n  1847: u64 [a2 + 1344] = 0\n  1851: u64 [a2 + 1336] = 0\n  1855: u64 [a2 + 1328] = 0\n  1859: u64 [a2 + 1320] = 0\n  1863: a0 = s1 + 0x2000\n  1867: i32 a0 = a0 + 0xfffffffffffffe00\n  1871: ecalli 15 // 'value_transferred'\n  1873: fallthrough\n      : @57 (gas: 10)\n  1874: a3 = s1 + 0x18d8\n  1878: a4 = a3 + 0x500\n  1882: a0 = u64 [a4 + 0x38]\n  1885: a1 = u64 [a4 + 0x40]\n  1888: a2 = u64 [a4 + 0x30]\n  1891: a3 = u64 [a4 + 0x28]\n  1894: a1 = a1 | a2\n  1897: a0 = a0 | a3\n  1900: a0 = a0 | a1\n  1903: jump @59 if a0 == 0\n      : @58 (gas: 1)\n  1906: jump @486\n      : @59 (gas: 3)\n  1909: a0 = u64 [s1 + 0x138]\n  1913: a0 = i32 [a0]\n  1915: jump @61 if a0 >u 99\n      : @60 (gas: 1)\n  1919: jump @487\n      : @61 (gas: 34)\n  1922: a0 = s1 + 0x2000\n  1926: i32 a0 = a0 + 0xfffffffffffffe20\n  1930: a1 = 0x4\n  1933: ecalli 3 // 'call_data_load'\n  1935: a1 = s1 + 0x18d8\n  1939: a2 = a1 + 0x500\n  1943: a0 = u64 [a2 + 0x60]\n  1946: u64 [s1 + 0x138] = a0\n  1950: a0 = u64 [a2 + 0x58]\n  1953: u64 [s1 + 0x130] = a0\n  1957: a0 = u64 [a2 + 0x50]\n  1960: u64 [s1 + 0x128] = a0\n  1964: a0 = u64 [a2 + 0x48]\n  1967: u64 [s1 + 0x120] = a0\n  1971: a0 = s1 + 0x2000\n  1975: i32 a0 = a0 + 0xfffffffffffffe40\n  1979: a1 = 0x24\n  1982: ecalli 3 // 'call_data_load'\n  1984: a1 = s1 + 0x18d8\n  1988: a2 = a1 + 0x500\n  1992: a0 = u64 [a2 + 0x80]\n  1996: a1 = s1 + 0x100\n  2000: u64 [a1 + 0x18] = a0\n  2003: a0 = u64 [a2 + 0x78]\n  2006: u64 [a1 + 0x10] = a0\n  2009: a0 = u64 [a2 + 0x70]\n  2012: u64 [a1 + 0x8] = a0\n  2015: a0 = u64 [a2 + 0x68]\n  2018: u64 [a1] = a0\n  2020: a0 = s1 + 0x2000\n  2024: i32 a0 = a0 + 0xfffffffffffffe60\n  2028: a1 = 0x44\n  2031: ecalli 3 // 'call_data_load'\n  2033: fallthrough\n      : @62 (gas: 13)\n  2034: a0 = s1 + 0x18d8\n  2038: a1 = u64 [a0 + 0x598]\n  2042: a2 = u64 [a0 + 0x5a0]\n  2046: a0 = 0x100000000\n  2056: a0 = a0 ^ a1\n  2059: a0 = a0 | a2\n  2062: u64 [s1 + 0xf8] = a1\n  2066: a1 = a1 >> 0x20\n  2069: a1 = a1 <u 0x1\n  2072: u64 [s1 + 0xd0] = a2\n  2076: a1 = 0 if a2 != 0\n  2078: a1 = 0 if a0 == 0\n  2080: jump @64 if a1 != 0\n      : @63 (gas: 1)\n  2083: jump @488\n      : @64 (gas: 17)\n  2086: t2 = u64 [s1 + 0x128]\n  2090: t0 = u64 [s1 + 0x108]\n  2094: a0 = t2 | t0\n  2097: ra = u64 [s1 + 0x120]\n  2101: a1 = u64 [s1 + 0x100]\n  2105: a3 = ra | a1\n  2108: t1 = u64 [s1 + 0x130]\n  2112: a1 = s1 + 0x100\n  2116: a2 = u64 [a1 + 0x10]\n  2119: a2 = t1 | a2\n  2122: a5 = a3 | a2\n  2125: a3 = u64 [a1 + 0x38]\n  2128: a4 = u64 [a1 + 0x18]\n  2131: a2 = a3 | a4\n  2134: a0 = a0 | a2\n  2137: a0 = a0 | a5\n  2140: jump @66 if a0 != 0\n      : @65 (gas: 1)\n  2143: jump @202\n      : @66 (gas: 15)\n  2146: a0 = 0xffffffff\n  2156: u64 [s1 + 0xd8] = a0\n  2160: t0 = s1 + 0x18d8\n  2164: a0 = u64 [t0 + 0x590]\n  2168: u64 [s1 + 0xe8] = a0\n  2172: a0 = u64 [t0 + 0x588]\n  2176: u64 [s1 + 0xf0] = a0\n  2180: a0 = u64 [s1 + 0xf8]\n  2184: a0 = a0 << 0x20\n  2187: a0 = a0 >> 0x20\n  2190: u64 [s1 + 0xe0] = a0\n  2194: a0 = 0xffffffffffff\n  2204: u64 [s1 + 0xc8] = a0\n  2208: a0 = s1 + 0x1880\n  2212: ra = 46, jump @560\n      : @67 [@dyn 23] (gas: 42)\n  2217: a3 = s1 + 0x10b8\n  2221: a1 = a3 + 0x700\n  2225: a0 = u64 [a1 + 0xd0]\n  2229: a2 = u64 [a1 + 0xc8]\n  2233: a4 = u64 [a1 + 0xe8]\n  2237: t1 = u64 [a3 + 0x7f0]\n  2241: t0 = a3\n  2243: a5 = u64 [s1 + 0xc8]\n  2247: a3 = a0 & a5\n  2250: u64 [s1 + 0xa8] = a2\n  2254: a0 = u64 [s1 + 0x120]\n  2258: a0 = a0 <u a2\n  2261: a2 = u64 [s1 + 0x128]\n  2265: a1 = a2 ^ a3\n  2268: u64 [s1 + 0xa0] = a3\n  2272: a3 = a2 <u a3\n  2275: a3 = a0 if a1 == 0\n  2278: a2 = t1 & a5\n  2281: u64 [s1 + 0x98] = a4\n  2285: a5 = s1 + 0x100\n  2289: a0 = u64 [a5]\n  2291: a0 = a0 <u a4\n  2294: a4 = u64 [a5 + 0x8]\n  2297: a1 = a4 ^ a2\n  2300: u64 [s1 + 0x90] = a2\n  2304: a2 = a4 <u a2\n  2307: a2 = a0 if a1 == 0\n  2310: a0 = u64 [a5 + 0x38]\n  2313: a1 = u64 [a5 + 0x30]\n  2316: a0 = a0 | a1\n  2319: a3 = 0 if a0 != 0\n  2321: a0 = u64 [a5 + 0x18]\n  2324: a1 = u64 [a5 + 0x10]\n  2327: a0 = a0 | a1\n  2330: a2 = 0 if a0 != 0\n  2332: a2 = a2 & a3\n  2335: u64 [t0 + 1984] = 0\n  2339: u64 [t0 + 1976] = 0\n  2343: u64 [t0 + 0x7a8] = a2\n  2347: a0 = s1 + 0x1860\n  2351: u64 [t0 + 1968] = 0\n  2355: ra = 48, jump @621\n      : @68 [@dyn 24] (gas: 8)\n  2360: a0 = s1 + 0x18d8\n  2364: u64 [a0 + 1472] = 0\n  2368: u64 [a0 + 1464] = 0\n  2372: u64 [a0 + 1456] = 0\n  2376: u64 [a0 + 1448] = 0\n  2380: a0 = s1 + 0x1840\n  2384: a1 = s1 + 0x1e80\n  2388: ra = 50, jump @6\n      : @69 [@dyn 25] (gas: 21)\n  2393: t0 = u64 [s1 + 0xe0]\n  2397: a3 = u64 [s1 + 0xe8]\n  2401: a2 = u64 [s1 + 0xf0]\n  2405: a4 = s1 + 0x10b8\n  2409: a0 = u64 [a4 + 0x790]\n  2413: a1 = u64 [a4 + 0x788]\n  2417: a5 = u64 [a4 + 0x798]\n  2421: u64 [s1 + 0xb8] = a0\n  2425: a4 = 0xffffffffffffffff\n  2428: a0 = a0 & a4\n  2431: u64 [s1 + 0xc0] = a1\n  2435: a1 = a1 & a4\n  2438: a1 = a1 ^ a2\n  2441: a0 = a0 ^ a3\n  2444: a0 = a0 | a1\n  2447: u64 [s1 + 0xb0] = a5\n  2451: a1 = u64 [s1 + 0xd8]\n  2455: a1 = a1 & a5\n  2458: a1 = t0 ^ a1\n  2461: a0 = a0 | a1\n  2464: jump @73 if a0 == 0\n      : @70 (gas: 8)\n  2467: a1 = s1 + 0x18d8\n  2471: u64 [a1 + 1504] = 0\n  2475: u64 [a1 + 1496] = 0\n  2479: u64 [a1 + 1488] = 0\n  2483: u64 [a1 + 1480] = 0x1\n  2488: a0 = s1 + 0x1820\n  2492: a1 = s1 + 0x1ea0\n  2496: ra = 52, jump @6\n      : @71 [@dyn 26] (gas: 18)\n  2501: a2 = s1 + 0x10b8\n  2505: a3 = a2 + 0x700\n  2509: a0 = u64 [a3 + 0x70]\n  2512: a1 = u64 [a3 + 0x68]\n  2515: a2 = u64 [a3 + 0x78]\n  2518: a0 = a0 & 0xffffffffffffffff\n  2521: a1 = a1 & 0xffffffffffffffff\n  2524: a3 = u64 [s1 + 0xd8]\n  2528: a2 = a2 & a3\n  2531: a3 = u64 [s1 + 0xe0]\n  2535: a2 = a2 ^ a3\n  2538: a3 = u64 [s1 + 0xf0]\n  2542: a1 = a1 ^ a3\n  2545: a3 = u64 [s1 + 0xe8]\n  2549: a0 = a0 ^ a3\n  2552: a0 = a0 | a1\n  2555: a0 = a0 | a2\n  2558: jump @73 if a0 == 0\n      : @72 (gas: 1)\n  2561: jump @227\n      : @73 (gas: 4)\n  2564: a0 = s1 + 0x7ff\n  2568: a0 = a0 + 0x3c1\n  2572: a1 = 0x40\n  2575: ra = 54, jump @2\n      : @74 [@dyn 27] (gas: 15)\n  2580: a2 = s1 + 0x7ff\n  2584: a2 = a2 + 0xb9\n  2588: t0 = u64 [a2 + 0x320]\n  2592: a1 = a2 + 0x300\n  2596: a5 = u64 [a1 + 0x18]\n  2599: a4 = u64 [a1 + 0x10]\n  2602: a0 = u64 [a1 + 0x8]\n  2605: a3 = a4 | t0\n  2608: a1 = a0 | a5\n  2611: a1 = a1 | a3\n  2614: a1 = a1 >> 0x20\n  2617: a3 = a3 | a5\n  2620: a3 = a3 << 0x20\n  2623: a1 = a1 | a3\n  2626: jump @76 if a1 == 0\n      : @75 (gas: 1)\n  2629: jump @201\n      : @76 (gas: 12)\n  2632: u64 [a2 + 760] = 0\n  2636: u64 [a2 + 752] = 0\n  2640: u64 [a2 + 744] = 0\n  2644: a3 = 0x8c379a000000000\n  2654: a1 = s1 + 0x7ff\n  2658: a1 = a1 + 0x3a1\n  2662: u64 [a2 + 0x300] = a3\n  2666: u64 [s1 + 0x138] = a0\n  2670: u64 [s1 + 0x130] = a4\n  2674: u64 [s1 + 0x120] = t0\n  2678: u64 [s1 + 0x128] = a5\n  2682: ra = 56, jump @4\n      : @77 [@dyn 28] (gas: 1)\n  2687: t0 = 58, jump @664\n      : @78 [@dyn 29] (gas: 1)\n  2692: jump @80 if a0 != 0\n      : @79 (gas: 1)\n  2695: jump @201\n      : @80 (gas: 12)\n  2698: i32 a0 = a1 + 0x4\n  2701: a2 = s1 + 0x7ff\n  2705: a2 = a2 + 0xb9\n  2709: u64 [a2 + 736] = 0\n  2713: u64 [a2 + 728] = 0\n  2717: u64 [a2 + 712] = 0x20\n  2722: a1 = s1 + 0x7ff\n  2726: a1 = a1 + 0x381\n  2730: u64 [a2 + 720] = 0\n  2734: u64 [s1 + 0x128] = a3\n  2738: u64 [s1 + 0x120] = a4\n  2742: ra = 60, jump @4\n      : @81 [@dyn 30] (gas: 10)\n  2747: a4 = s1 + 0x100\n  2751: a3 = u64 [a4 + 0x28]\n  2754: a2 = u64 [a4 + 0x30]\n  2757: a1 = u64 [a4 + 0x38]\n  2760: a0 = u64 [a4 + 0x20]\n  2763: a0 = a0 + 0xffffffffffffffdc\n  2766: a0 = a1 <u a0\n  2769: a0 = 0 if a2 != 0\n  2771: a0 = 0 if a3 != 0\n  2773: jump @201 if a0 == 0\n      : @82 (gas: 10)\n  2777: i32 a0 = a1 + 0x24\n  2780: a3 = s1 + 0x7ff\n  2784: a3 = a3 + 0xb9\n  2788: u64 [a3 + 704] = 0\n  2792: u64 [a3 + 696] = 0\n  2796: u64 [a3 + 680] = 0xa\n  2801: a1 = s1 + 0x7ff\n  2805: a1 = a1 + 0x361\n  2809: u64 [a3 + 688] = 0\n  2813: ra = 62, jump @4\n      : @83 [@dyn 31] (gas: 9)\n  2818: a3 = s1 + 0x100\n  2822: a2 = u64 [a3 + 0x38]\n  2825: a0 = 0xffffffbc\n  2835: a0 = a2 <u a0\n  2838: a1 = u64 [a3 + 0x30]\n  2841: a0 = 0 if a1 != 0\n  2843: a1 = u64 [a3 + 0x28]\n  2846: a0 = 0 if a1 != 0\n  2848: jump @201 if a0 == 0\n      : @84 (gas: 13)\n  2852: i32 a0 = a2 + 0x44\n  2855: a1 = u64 [0x20060]\n  2860: a3 = s1 + 0x7ff\n  2864: a3 = a3 + 0xb9\n  2868: u64 [a3 + 656] = 0\n  2872: u64 [a3 + 0x2a0] = a1\n  2876: a1 = 0x544f000000000000\n  2886: u64 [a3 + 0x298] = a1\n  2890: a1 = s1 + 0x7ff\n  2894: a1 = a1 + 0x341\n  2898: u64 [a3 + 648] = 0\n  2902: ra = 0xb8\n  2906: jump @4\n      : @85 (gas: 10)\n  2909: u64 [a2 + 544] = 0\n  2913: u64 [a2 + 536] = 0\n  2917: u64 [a2 + 528] = 0\n  2921: u64 [a2 + 520] = 0\n  2925: a0 = s1 + 0x2000\n  2929: i32 a0 = a0 + 0xfffffffffffffae0\n  2933: ra = 0x40\n  2936: ecalli 15 // 'value_transferred'\n  2938: t0 = 0x42\n  2941: jump @678\n      : @86 [@dyn 32] (gas: 1)\n  2944: t0 = 66, jump @678\n      : @87 [@dyn 33] (gas: 8)\n  2949: a0 = u64 [a4 + 0x18]\n  2952: a1 = u64 [a4 + 0x20]\n  2955: a2 = u64 [a4 + 0x10]\n  2958: a3 = u64 [a4 + 0x8]\n  2961: a1 = a1 | a2\n  2964: a0 = a0 | a3\n  2967: a0 = a0 | a1\n  2970: jump @89 if a0 == 0\n      : @88 (gas: 1)\n  2973: jump @489\n      : @89 (gas: 3)\n  2976: a0 = u64 [s1 + 0x138]\n  2980: a0 = i32 [a0]\n  2982: jump @91 if a0 >u 3\n      : @90 (gas: 1)\n  2986: jump @490\n      : @91 (gas: 8)\n  2989: a0 = s1 + 0x18d8\n  2993: u64 [a0 + 576] = 0\n  2997: u64 [a0 + 568] = 0\n  3001: u64 [a0 + 560] = 0\n  3005: u64 [a0 + 552] = 0\n  3009: a0 = s1 + 0x200\n  3013: a1 = s1 + 0x1b00\n  3017: ra = 68, jump @6\n      : @92 [@dyn 34] (gas: 10)\n  3022: a1 = s1 + 0x200\n  3026: a0 = u64 [a1 + 0x10]\n  3029: u64 [s1 + 0x128] = a0\n  3033: a0 = u64 [a1 + 0x8]\n  3036: u64 [s1 + 0x138] = a0\n  3040: a0 = u64 [a1]\n  3042: u64 [s1 + 0x130] = a0\n  3046: a0 = s1 + 0x1e0\n  3050: a1 = 0x40\n  3053: ra = 70, jump @2\n      : @93 [@dyn 35] (gas: 13)\n  3058: a4 = s1 + 0x100\n  3062: a3 = u64 [a4 + 0xf8]\n  3066: a1 = u64 [a4 + 0xf0]\n  3070: a2 = u64 [a4 + 0xe8]\n  3074: a0 = u64 [a4 + 0xe0]\n  3078: a3 = a3 | a2\n  3081: a2 = a0 | a1\n  3084: a2 = a2 | a3\n  3087: a2 = a2 >> 0x20\n  3090: a1 = a1 | a3\n  3093: a1 = a1 << 0x20\n  3096: a1 = a1 | a2\n  3099: jump @201 if a1 != 0\n      : @94 (gas: 14)\n  3103: a3 = s1 + 0x100\n  3107: a1 = u64 [a3 + 0x28]\n  3110: a1 = a1 << 0x20\n  3113: a2 = a1 >> 0x20\n  3116: u64 [s1 + 472] = 0\n  3120: a1 = u64 [a3 + 0x30]\n  3123: u64 [a3 + 0xc0] = a1\n  3127: a1 = u64 [a3 + 0x38]\n  3130: u64 [a3 + 0xc8] = a1\n  3134: a1 = s1 + 0x1c0\n  3138: u64 [a3 + 0xd0] = a2\n  3142: u64 [s1 + 0x138] = a0\n  3146: ra = 0x1d6\n  3150: jump @4\n      : @95 (gas: 10)\n  3153: u64 [a2 + 672] = 0\n  3157: u64 [a2 + 664] = 0\n  3161: u64 [a2 + 656] = 0\n  3165: u64 [a2 + 648] = 0\n  3169: a0 = s1 + 0x2000\n  3173: i32 a0 = a0 + 0xfffffffffffffb60\n  3177: ra = 0x48\n  3180: ecalli 15 // 'value_transferred'\n  3182: t0 = 0x4a\n  3185: jump @678\n      : @96 [@dyn 36] (gas: 1)\n  3188: t0 = 74, jump @678\n      : @97 [@dyn 37] (gas: 8)\n  3193: a0 = u64 [a4 + 0x98]\n  3197: a1 = u64 [a4 + 0xa0]\n  3201: a2 = u64 [a4 + 0x90]\n  3205: a3 = u64 [a4 + 0x88]\n  3209: a1 = a1 | a2\n  3212: a0 = a0 | a3\n  3215: a0 = a0 | a1\n  3218: jump @99 if a0 == 0\n      : @98 (gas: 1)\n  3221: jump @491\n      : @99 (gas: 3)\n  3224: a0 = u64 [s1 + 0x138]\n  3228: a0 = i32 [a0]\n  3230: jump @101 if a0 >u 35\n      : @100 (gas: 1)\n  3234: jump @492\n      : @101 (gas: 3)\n  3237: a0 = s1 + 0x7ff\n  3241: a0 = a0 + 0x321\n  3245: ra = 76, jump @554\n      : @102 [@dyn 38] (gas: 12)\n  3250: a1 = s1 + 0x7ff\n  3254: a1 = a1 + 0xb9\n  3258: a2 = a1 + 0x200\n  3262: a0 = u64 [a2 + 0x78]\n  3265: u64 [s1 + 0xd8] = a0\n  3269: a0 = u64 [a2 + 0x70]\n  3272: u64 [s1 + 0xe0] = a0\n  3276: a0 = u64 [a2 + 0x68]\n  3279: u64 [s1 + 0xe8] = a0\n  3283: a0 = s1 + 0x7ff\n  3287: a0 = a0 + 0x2e1\n  3291: ra = 78, jump @560\n      : @103 [@dyn 39] (gas: 20)\n  3296: a1 = s1 + 0x7ff\n  3300: a1 = a1 + 0xb9\n  3304: a2 = a1 + 0x200\n  3308: a0 = u64 [a2 + 0x30]\n  3311: u64 [s1 + 0xc8] = a0\n  3315: a0 = u64 [a2 + 0x28]\n  3318: u64 [s1 + 0xf8] = a0\n  3322: a0 = u64 [a2 + 0x50]\n  3325: u64 [s1 + 0xd0] = a0\n  3329: a0 = u64 [a2 + 0x48]\n  3332: u64 [s1 + 0x100] = a0\n  3336: a0 = s1 + 0x18d8\n  3340: u64 [a0 + 704] = 0\n  3344: u64 [a0 + 696] = 0\n  3348: u64 [a0 + 688] = 0\n  3352: u64 [a0 + 680] = 0\n  3356: a0 = s1 + 0x7ff\n  3360: a0 = a0 + 0x2c1\n  3364: a1 = s1 + 0x1b80\n  3368: ra = 80, jump @6\n      : @104 [@dyn 40] (gas: 14)\n  3373: a1 = s1 + 0x7ff\n  3377: a1 = a1 + 0xb9\n  3381: a2 = a1 + 0x200\n  3385: a0 = u64 [a2 + 0x18]\n  3388: a1 = s1 + 0x100\n  3392: u64 [a1 + 0x28] = a0\n  3395: a0 = u64 [a2 + 0x10]\n  3398: u64 [a1 + 0x20] = a0\n  3401: a0 = u64 [a2 + 0x8]\n  3404: u64 [a1 + 0x30] = a0\n  3407: a0 = s1 + 0x7ff\n  3411: a0 = a0 + 0x2a1\n  3415: a1 = 0x40\n  3418: ra = 82, jump @2\n      : @105 [@dyn 41] (gas: 15)\n  3423: a2 = s1 + 0x7ff\n  3427: a2 = a2 + 0xb9\n  3431: t0 = u64 [a2 + 0x200]\n  3435: a1 = a2 + 0x100\n  3439: a5 = u64 [a1 + 0xf8]\n  3443: a4 = u64 [a1 + 0xf0]\n  3447: a0 = u64 [a1 + 0xe8]\n  3451: a3 = a4 | t0\n  3454: a1 = a0 | a5\n  3457: a1 = a1 | a3\n  3460: a1 = a1 >> 0x20\n  3463: a3 = a3 | a5\n  3466: a3 = a3 << 0x20\n  3469: a1 = a1 | a3\n  3472: jump @201 if a1 != 0\n      : @106 (gas: 12)\n  3476: u64 [a2 + 472] = 0\n  3480: u64 [a2 + 464] = 0\n  3484: u64 [a2 + 456] = 0\n  3488: a3 = 0x70a0823100000000\n  3498: a1 = s1 + 0x7ff\n  3502: a1 = a1 + 0x281\n  3506: u64 [a2 + 0x1e0] = a3\n  3510: u64 [s1 + 0x138] = a0\n  3514: u64 [s1 + 0x118] = t0\n  3518: u64 [s1 + 0x110] = a5\n  3522: u64 [s1 + 0x108] = a4\n  3526: ra = 84, jump @4\n      : @107 [@dyn 42] (gas: 7)\n  3531: a0 = 0x300b0\n  3536: u64 [s1 + 0xf0] = a0\n  3540: i32 a0 = a0 + 0\n  3542: u64 [s1 + 0xc0] = a0\n  3546: ra = 0x56\n  3549: ecalli 0 // 'address'\n  3550: fallthrough\n      : @108 [@dyn 43] (gas: 4)\n  3551: a3 = s1 + 0x100\n  3555: a4 = u64 [a3 + 0x38]\n  3558: a0 = u64 [a3 + 0x18]\n  3561: t0 = 88, jump @672\n      : @109 [@dyn 44] (gas: 1)\n  3566: jump @201 if a1 == 0\n      : @110 (gas: 5)\n  3570: a2 = u64 [s1 + 0xf0]\n  3574: a1 = u64 [a2 + 0x8]\n  3577: a0 = 0x2400000000\n  3587: u64 [s1 + 0xb8] = a0\n  3591: t0 = 90, jump @662\n      : @111 [@dyn 45] (gas: 10)\n  3596: a5 = s1 + 0x7ff\n  3600: a5 = a5 + 0xb9\n  3604: u64 [a5 + 448] = 0\n  3608: a4 = a5 + 0x100\n  3612: u64 [a4 + 0xb8] = a2\n  3616: u64 [a4 + 0xb0] = a1\n  3620: a1 = s1 + 0x7ff\n  3624: a1 = a1 + 0x261\n  3628: u64 [a4 + 0xa8] = a3\n  3632: ra = 92, jump @4\n      : @112 [@dyn 46] (gas: 3)\n  3637: ra = 0x5e\n  3640: ecalli 9 // 'ref_time_left'\n  3642: fallthrough\n      : @113 [@dyn 47] (gas: 9)\n  3643: a0 = u64 [s1 + 0x120]\n  3647: a0 = reverse a0\n  3649: a1 = a0 << 0x20\n  3652: a2 = u64 [s1 + 0x128]\n  3656: a2 = reverse a2\n  3658: a2 = a2 >> 0x20\n  3661: a1 = a1 | a2\n  3664: a2 = u64 [s1 + 0x130]\n  3668: t0 = 96, jump @666\n      : @114 [@dyn 48] (gas: 7)\n  3673: u64 [a0 + 736] = 0\n  3677: u64 [a0 + 728] = 0\n  3681: u64 [a0 + 720] = 0\n  3685: u64 [a0 + 712] = 0\n  3689: a1 = 0x24\n  3692: a0 = u64 [s1 + 0x138]\n  3696: ra = 98, jump @12\n      : @115 [@dyn 49] (gas: 4)\n  3701: u64 [s1 + 0x130] = a0\n  3705: a1 = 0x20\n  3708: a0 = u64 [s1 + 0x138]\n  3712: ra = 100, jump @12\n      : @116 [@dyn 50] (gas: 33)\n  3717: a1 = s1 + 0x18d8\n  3721: u32 [a1 + 744] = 0x20\n  3726: u64 [a1 + 800] = 0\n  3730: u64 [a1 + 792] = 0\n  3734: u64 [a1 + 784] = 0\n  3738: u64 [a1 + 776] = 0\n  3742: a1 = u64 [s1 + 0xf0]\n  3746: a1 = a1 << 0x20\n  3749: a1 = a1 >> 0x20\n  3752: a2 = 0x1800000000\n  3762: t0 = a1 | a2\n  3765: a1 = s1 + 0x1ba0\n  3769: a1 = a1 << 0x20\n  3772: a1 = a1 >> 0x20\n  3775: a2 = s1 + 0x1be0\n  3779: a2 = a2 << 0x20\n  3782: a3 = a2 | a1\n  3785: a1 = u64 [s1 + 0x130]\n  3789: a1 = a1 << 0x20\n  3792: a1 = a1 >> 0x20\n  3795: a4 = u64 [s1 + 0xb8]\n  3799: a4 = a4 | a1\n  3802: a0 = a0 << 0x20\n  3805: a0 = a0 >> 0x20\n  3808: a1 = s1 + 0x1bc0\n  3812: a1 = a1 << 0x20\n  3815: a5 = a1 | a0\n  3818: a1 = 0xffffffffffffffff\n  3821: a2 = 0xffffffffffffffff\n  3824: u64 [s1 + 0x130] = t0\n  3828: a0 = t0\n  3830: ecalli 1 // 'call'\n  3832: fallthrough\n      : @117 (gas: 1)\n  3833: jump @214 if a0 != 0\n      : @118 (gas: 2)\n  3837: ecalli 11 // 'return_data_size'\n  3839: fallthrough\n      : @119 (gas: 2)\n  3840: a5 = 0x20\n  3843: jump @121 if a0 >=u a5\n      : @120 (gas: 3)\n  3846: ecalli 11 // 'return_data_size'\n  3848: a5 = a0\n  3850: fallthrough\n      : @121 (gas: 22)\n  3851: a2 = s1 + 0x7ff\n  3855: a2 = a2 + 0xb9\n  3859: a3 = u64 [s1 + 0x138]\n  3863: t0 = u64 [s1 + 0x118]\n  3867: a0 = u64 [s1 + 0x110]\n  3871: a1 = u64 [s1 + 0x108]\n  3875: u64 [s1 + 288] = 0\n  3879: u64 [s1 + 0x128] = a5\n  3883: a4 = a2 + 0x100\n  3887: u64 [a4 + 0x48] = a5\n  3890: u64 [a4 + 0x68] = a3\n  3893: u64 [a2 + 336] = 0\n  3897: u64 [a4 + 0x70] = a1\n  3900: u64 [a2 + 344] = 0\n  3904: u64 [a4 + 0x78] = a0\n  3907: u64 [a2 + 352] = 0\n  3911: a0 = s1 + 0x7ff\n  3915: a0 = a0 + 0x221\n  3919: a1 = s1 + 0x7ff\n  3923: a1 = a1 + 0x201\n  3927: u64 [a2 + 0x180] = t0\n  3931: ra = 102, jump @563\n      : @122 [@dyn 51] (gas: 4)\n  3936: a3 = u64 [s1 + 0x120]\n  3940: a0 = a3 >u 0\n  3942: a1 = u64 [s1 + 0x128]\n  3946: t0 = 104, jump @658\n      : @123 [@dyn 52] (gas: 1)\n  3951: jump @125 if a2 != 0\n      : @124 (gas: 1)\n  3954: jump @511\n      : @125 (gas: 4)\n  3957: a0 = s1 + 0x7ff\n  3961: a0 = a0 + 0x1e1\n  3965: a1 = u64 [s1 + 0x138]\n  3969: ra = 106, jump @2\n      : @126 [@dyn 53] (gas: 20)\n  3974: a1 = s1 + 0x7ff\n  3978: a1 = a1 + 0xb9\n  3982: a2 = a1 + 0x100\n  3986: a0 = u64 [a2 + 0x40]\n  3989: u64 [s1 + 0x98] = a0\n  3993: a0 = u64 [a2 + 0x38]\n  3996: u64 [s1 + 0xa0] = a0\n  4000: a0 = u64 [a2 + 0x30]\n  4003: u64 [s1 + 0xb0] = a0\n  4007: a0 = u64 [a2 + 0x28]\n  4010: u64 [s1 + 0xa8] = a0\n  4014: a0 = s1 + 0x18d8\n  4018: u64 [a0 + 864] = 0\n  4022: u64 [a0 + 856] = 0\n  4026: u64 [a0 + 848] = 0\n  4030: u64 [a0 + 840] = 0x1\n  4035: a0 = s1 + 0x7ff\n  4039: a0 = a0 + 0x1c1\n  4043: a1 = s1 + 0x1c20\n  4047: ra = 108, jump @6\n      : @127 [@dyn 54] (gas: 14)\n  4052: a1 = s1 + 0x7ff\n  4056: a1 = a1 + 0xb9\n  4060: a2 = a1 + 0x100\n  4064: a0 = u64 [a2 + 0x18]\n  4067: a1 = s1 + 0x100\n  4071: u64 [a1 + 0x20] = a0\n  4074: a0 = u64 [a2 + 0x10]\n  4077: u64 [a1 + 0x18] = a0\n  4080: a0 = u64 [a2 + 0x8]\n  4083: u64 [a1 + 0x28] = a0\n  4086: a0 = s1 + 0x7ff\n  4090: a0 = a0 + 0x1a1\n  4094: a1 = 0x40\n  4097: ra = 110, jump @2\n      : @128 [@dyn 55] (gas: 15)\n  4102: t0 = s1 + 0x7ff\n  4106: t0 = t0 + 0xb9\n  4110: a3 = u64 [t0 + 0x100]\n  4114: a1 = t0\n  4116: a4 = u64 [a1 + 0xf8]\n  4120: a5 = u64 [a1 + 0xf0]\n  4124: a0 = u64 [a1 + 0xe8]\n  4128: a2 = a5 | a3\n  4131: a1 = a0 | a4\n  4134: a1 = a1 | a2\n  4137: a1 = a1 >> 0x20\n  4140: a2 = a2 | a4\n  4143: a2 = a2 << 0x20\n  4146: a1 = a1 | a2\n  4149: jump @201 if a1 != 0\n      : @129 (gas: 12)\n  4153: u64 [t0 + 216] = 0\n  4157: u64 [t0 + 208] = 0\n  4161: u64 [t0 + 200] = 0\n  4165: u64 [s1 + 0x90] = a3\n  4169: a3 = 0x70a0823100000000\n  4179: a1 = s1 + 0x7ff\n  4183: a1 = a1 + 0x181\n  4187: u64 [t0 + 0xe0] = a3\n  4191: u64 [s1 + 0x138] = a0\n  4195: u64 [s1 + 0x110] = a4\n  4199: u64 [s1 + 0x108] = a5\n  4203: ra = 112, jump @4\n      : @130 [@dyn 56] (gas: 4)\n  4208: a0 = u64 [s1 + 0xc0]\n  4212: ra = 0x72\n  4215: ecalli 0 // 'address'\n  4216: fallthrough\n      : @131 [@dyn 57] (gas: 4)\n  4217: a3 = s1 + 0x100\n  4221: a4 = u64 [a3 + 0x38]\n  4224: a0 = u64 [s1 + 0x90]\n  4228: t0 = 116, jump @672\n      : @132 [@dyn 58] (gas: 1)\n  4233: jump @201 if a1 == 0\n      : @133 (gas: 2)\n  4237: a2 = u64 [s1 + 0xf0]\n  4241: t0 = 118, jump @663\n      : @134 [@dyn 59] (gas: 9)\n  4246: a5 = s1 + 0x7ff\n  4250: a5 = a5 + 0xb9\n  4254: u64 [a5 + 192] = 0\n  4258: u64 [a5 + 0xb8] = a1\n  4262: u64 [a5 + 0xb0] = a2\n  4266: a1 = s1 + 0x7ff\n  4270: a1 = a1 + 0x161\n  4274: u64 [a5 + 0xa8] = a3\n  4278: ra = 120, jump @4\n      : @135 [@dyn 60] (gas: 3)\n  4283: ra = 0x7a\n  4286: ecalli 9 // 'ref_time_left'\n  4288: fallthrough\n      : @136 [@dyn 61] (gas: 9)\n  4289: a0 = u64 [s1 + 0x118]\n  4293: a0 = reverse a0\n  4295: a1 = a0 << 0x20\n  4298: a2 = u64 [s1 + 0x120]\n  4302: a2 = reverse a2\n  4304: a2 = a2 >> 0x20\n  4307: a1 = a1 | a2\n  4310: a2 = u64 [s1 + 0x128]\n  4314: t0 = 124, jump @666\n      : @137 [@dyn 62] (gas: 7)\n  4319: u64 [a0 + 896] = 0\n  4323: u64 [a0 + 888] = 0\n  4327: u64 [a0 + 880] = 0\n  4331: u64 [a0 + 872] = 0\n  4335: a1 = 0x24\n  4338: a0 = u64 [s1 + 0x138]\n  4342: ra = 126, jump @12\n      : @138 [@dyn 63] (gas: 4)\n  4347: u64 [s1 + 0x128] = a0\n  4351: a1 = 0x20\n  4354: a0 = u64 [s1 + 0x138]\n  4358: ra = 128, jump @12\n      : @139 [@dyn 64] (gas: 27)\n  4364: a1 = s1 + 0x18d8\n  4368: u32 [a1 + 904] = 0x20\n  4373: u64 [a1 + 960] = 0\n  4377: u64 [a1 + 952] = 0\n  4381: u64 [a1 + 944] = 0\n  4385: u64 [a1 + 936] = 0\n  4389: a1 = s1 + 0x1c40\n  4393: a1 = a1 << 0x20\n  4396: a1 = a1 >> 0x20\n  4399: a2 = s1 + 0x1c80\n  4403: a2 = a2 << 0x20\n  4406: a3 = a2 | a1\n  4409: a1 = u64 [s1 + 0x128]\n  4413: a1 = a1 << 0x20\n  4416: a1 = a1 >> 0x20\n  4419: a4 = u64 [s1 + 0xb8]\n  4423: a4 = a4 | a1\n  4426: a0 = a0 << 0x20\n  4429: a0 = a0 >> 0x20\n  4432: a1 = s1 + 0x1c60\n  4436: a1 = a1 << 0x20\n  4439: a5 = a1 | a0\n  4442: a1 = 0xffffffffffffffff\n  4445: a2 = 0xffffffffffffffff\n  4448: a0 = u64 [s1 + 0x130]\n  4452: ecalli 1 // 'call'\n  4454: fallthrough\n      : @140 (gas: 1)\n  4455: jump @142 if a0 == 0\n      : @141 (gas: 1)\n  4458: jump @328\n      : @142 (gas: 2)\n  4461: ecalli 11 // 'return_data_size'\n  4463: fallthrough\n      : @143 (gas: 2)\n  4464: a4 = 0x20\n  4467: jump @145 if a0 >=u a4\n      : @144 (gas: 3)\n  4470: ecalli 11 // 'return_data_size'\n  4472: a4 = a0\n  4474: fallthrough\n      : @145 (gas: 21)\n  4475: a2 = s1 + 0x7ff\n  4479: a2 = a2 + 0xb9\n  4483: a3 = u64 [s1 + 0x138]\n  4487: a0 = u64 [s1 + 0x110]\n  4491: a1 = u64 [s1 + 0x108]\n  4495: u64 [s1 + 296] = 0\n  4499: u64 [s1 + 0x130] = a4\n  4503: u64 [a2 + 0x48] = a4\n  4506: u64 [a2 + 0x68] = a3\n  4509: u64 [a2 + 80] = 0\n  4512: u64 [a2 + 0x70] = a1\n  4515: u64 [a2 + 88] = 0\n  4518: u64 [a2 + 0x78] = a0\n  4521: u64 [a2 + 96] = 0\n  4524: a0 = s1 + 0x7ff\n  4528: a0 = a0 + 0x121\n  4532: a1 = s1 + 0x7ff\n  4536: a1 = a1 + 0x101\n  4540: a4 = u64 [s1 + 0x90]\n  4544: u64 [a2 + 0x80] = a4\n  4548: ra = 130, jump @563\n      : @146 [@dyn 65] (gas: 4)\n  4554: a3 = u64 [s1 + 0x128]\n  4558: a0 = a3 >u 0\n  4560: a1 = u64 [s1 + 0x130]\n  4564: t0 = 132, jump @658\n      : @147 [@dyn 66] (gas: 1)\n  4570: jump @149 if a2 != 0\n      : @148 (gas: 1)\n  4573: jump @519\n      : @149 (gas: 6)\n  4576: a0 = 0xffffffffffff\n  4586: u64 [s1 + 0xb8] = a0\n  4590: a0 = s1 + 0x7ff\n  4594: a0 = a0 + 0xe1\n  4598: a1 = u64 [s1 + 0x138]\n  4602: ra = 134, jump @2\n      : @150 [@dyn 67] (gas: 40)\n  4608: a2 = s1 + 0x7ff\n  4612: a2 = a2 + 0xb9\n  4616: a0 = u64 [a2 + 0x40]\n  4619: u64 [s1 + 0x130] = a0\n  4623: a0 = u64 [a2 + 0x38]\n  4626: u64 [s1 + 0x138] = a0\n  4630: a0 = u64 [a2 + 0x30]\n  4633: u64 [s1 + 0x90] = a0\n  4637: a0 = u64 [a2 + 0x28]\n  4640: u64 [s1 + 0x88] = a0\n  4644: a0 = u64 [s1 + 0xc8]\n  4648: a1 = u64 [s1 + 0xb8]\n  4652: a0 = a0 & a1\n  4655: a1 = s1 + 0x1000\n  4659: u64 [a1 + 4294965400] = 0\n  4663: a1 = s1 + 0x1000\n  4667: u64 [a1 + 4294965392] = 0\n  4671: u64 [s1 + 0x128] = a0\n  4675: a1 = s1 + 0x1000\n  4679: u64 [a1 + 0xfffffffffffff888] = a0\n  4683: a0 = u64 [s1 + 0xf8]\n  4687: a1 = s1 + 0x1000\n  4691: u64 [a1 + 0xfffffffffffff880] = a0\n  4695: a0 = u64 [s1 + 0x98]\n  4699: u64 [a2] = a0\n  4701: a0 = u64 [s1 + 0xa0]\n  4705: u64 [a2 + 0xfffffffffffffff8] = a0\n  4708: a0 = u64 [s1 + 0xb0]\n  4712: a1 = s1 + 0x1000\n  4716: u64 [a1 + 0xfffffffffffff8a8] = a0\n  4720: a0 = s1 + 0x7ff\n  4724: a0 = a0 + 0xc1\n  4728: a1 = s1 + 0x7ff\n  4732: a1 = a1 + 0xa1\n  4736: a2 = s1 + 0x7ff\n  4740: a2 = a2 + 0x81\n  4744: a3 = u64 [s1 + 0xa8]\n  4748: a4 = s1 + 0x1000\n  4752: u64 [a4 + 0xfffffffffffff8a0] = a3\n  4756: ra = 136, jump @573\n      : @151 [@dyn 68] (gas: 43)\n  4762: a1 = s1 + 0x7ff\n  4766: a1 = a1 + 0xb9\n  4770: a0 = u64 [a1 + 0x20]\n  4773: u64 [s1 + 0xc8] = a0\n  4777: a0 = u64 [a1 + 0x18]\n  4780: u64 [s1 + 0xa0] = a0\n  4784: a0 = u64 [a1 + 0x10]\n  4787: u64 [s1 + 0x98] = a0\n  4791: a0 = u64 [a1 + 0x8]\n  4794: u64 [s1 + 0x80] = a0\n  4798: a0 = u64 [s1 + 0xd0]\n  4802: a1 = u64 [s1 + 0xb8]\n  4806: a0 = a0 & a1\n  4809: a1 = s1 + 0x1000\n  4813: u64 [a1 + 4294965304] = 0\n  4817: a1 = s1 + 0x1000\n  4821: u64 [a1 + 4294965296] = 0\n  4825: a2 = s1 + 0x100\n  4829: u64 [a2 + 0x18] = a0\n  4832: a1 = s1 + 0x1000\n  4836: u64 [a1 + 0xfffffffffffff828] = a0\n  4840: a0 = u64 [a2]\n  4842: a1 = s1 + 0x1000\n  4846: u64 [a1 + 0xfffffffffffff820] = a0\n  4850: a0 = u64 [a2 + 0x30]\n  4853: a1 = s1 + 0x1000\n  4857: u64 [a1 + 0xfffffffffffff858] = a0\n  4861: a0 = u64 [a2 + 0x38]\n  4864: a1 = s1 + 0x1000\n  4868: u64 [a1 + 0xfffffffffffff850] = a0\n  4872: a0 = u64 [s1 + 0x90]\n  4876: a1 = s1 + 0x1000\n  4880: u64 [a1 + 0xfffffffffffff848] = a0\n  4884: a0 = s1 + 0x7ff\n  4888: a0 = a0 + 0x61\n  4891: a1 = s1 + 0x7ff\n  4895: a1 = a1 + 0x41\n  4898: a2 = s1 + 0x7ff\n  4902: a2 = a2 + 0x21\n  4905: a3 = u64 [s1 + 0x88]\n  4909: a4 = s1 + 0x1000\n  4913: u64 [a4 + 0xfffffffffffff840] = a3\n  4917: ra = 138, jump @573\n      : @152 [@dyn 69] (gas: 21)\n  4923: a0 = s1 + 0x1000\n  4927: a0 = u64 [a0 + 0xfffffffffffff878]\n  4931: u64 [s1 + 0xd0] = a0\n  4935: a0 = s1 + 0x1000\n  4939: a0 = u64 [a0 + 0xfffffffffffff870]\n  4943: u64 [s1 + 0x78] = a0\n  4946: a0 = s1 + 0x1000\n  4950: a0 = u64 [a0 + 0xfffffffffffff868]\n  4954: u64 [s1 + 0x70] = a0\n  4957: a0 = s1 + 0x1000\n  4961: a0 = u64 [a0 + 0xfffffffffffff860]\n  4965: u64 [s1 + 0x68] = a0\n  4968: a1 = s1 + 0x18d8\n  4972: u64 [a1 + 1024] = 0\n  4976: u64 [a1 + 1016] = 0\n  4980: u64 [a1 + 1008] = 0\n  4984: u64 [a1 + 1000] = 0x3\n  4989: a0 = s1 + 0x7ff\n  4993: a0 = a0 + 0x1\n  4996: a1 = s1 + 0x1cc0\n  5000: ra = 140, jump @6\n      : @153 [@dyn 70] (gas: 12)\n  5006: a0 = s1 + 0x1000\n  5010: a5 = u64 [a0 + 0xfffffffffffff818]\n  5014: a0 = s1 + 0x1000\n  5018: a4 = u64 [a0 + 0xfffffffffffff810]\n  5022: a0 = s1 + 0x1000\n  5026: a3 = u64 [a0 + 0xfffffffffffff808]\n  5030: a0 = s1 + 0x1000\n  5034: a2 = u64 [a0 + 0xfffffffffffff800]\n  5038: a0 = a3 | a5\n  5041: a1 = a2 | a4\n  5044: a0 = a0 | a1\n  5047: jump @155 if a0 == 0\n      : @154 (gas: 1)\n  5050: jump @338\n      : @155 (gas: 20)\n  5053: a0 = u64 [s1 + 0x68]\n  5056: u64 [s1 + 0x620] = a0\n  5060: a0 = u64 [s1 + 0x80]\n  5064: u64 [s1 + 0x640] = a0\n  5068: a0 = u64 [s1 + 0x70]\n  5071: u64 [s1 + 0x628] = a0\n  5075: a0 = u64 [s1 + 0x98]\n  5079: u64 [s1 + 0x648] = a0\n  5083: a0 = u64 [s1 + 0x78]\n  5086: u64 [s1 + 0x630] = a0\n  5090: a0 = u64 [s1 + 0xa0]\n  5094: u64 [s1 + 0x650] = a0\n  5098: a0 = u64 [s1 + 0xd0]\n  5102: u64 [s1 + 0x638] = a0\n  5106: a0 = s1 + 0x660\n  5110: a1 = s1 + 0x640\n  5114: a2 = s1 + 0x620\n  5118: a3 = u64 [s1 + 0xc8]\n  5122: u64 [s1 + 0x658] = a3\n  5126: ra = 142, jump @580\n      : @156 [@dyn 71] (gas: 9)\n  5132: a4 = u64 [s1 + 0x678]\n  5136: t1 = u64 [s1 + 0x670]\n  5140: t0 = u64 [s1 + 0x660]\n  5144: a5 = u64 [s1 + 0x668]\n  5148: a0 = t1 | a4\n  5151: a1 = t0 <u 0x4\n  5154: a1 = 0 if a5 != 0\n  5156: a1 = 0 if a0 != 0\n  5158: jump @158 if a1 == 0\n      : @157 (gas: 1)\n  5161: jump @520\n      : @158 (gas: 28)\n  5164: a0 = t1 >> 0x1\n  5167: a1 = a4 << 0x3f\n  5170: a0 = a0 | a1\n  5173: a1 = a5 >> 0x1\n  5176: a2 = t1 << 0x3f\n  5179: a1 = a1 | a2\n  5182: a2 = t0 >> 0x1\n  5185: a3 = a5 << 0x3f\n  5188: a2 = a2 | a3\n  5191: t2 = a4 >> 0x1\n  5194: a3 = a2 + 0x1\n  5197: a2 = a3 <u 0x1\n  5200: a1 = a1 + a2\n  5203: a2 = s1 + 0x100\n  5207: u64 [a2 + 0x30] = a3\n  5210: u64 [a2 + 0x28] = a1\n  5213: a1 = a1 | a3\n  5216: a1 = a1 <u 0x1\n  5219: a1 = a1 + a0\n  5222: u64 [a2 + 0x38] = a1\n  5225: a0 = a1 <u a0\n  5228: a0 = a0 + t2\n  5231: u64 [s1 + 0x100] = t0\n  5235: u64 [s1 + 0xf8] = a5\n  5239: u64 [s1 + 0x108] = t1\n  5243: u64 [a2 + 0x10] = a4\n  5246: a2 = a4\n  5248: fallthrough\n      : @159 (gas: 20)\n  5249: a1 = u64 [s1 + 0x130]\n  5253: ra = t0\n  5255: a4 = a1 <u t0\n  5258: a3 = u64 [s1 + 0x128]\n  5262: a1 = a3 ^ a5\n  5265: t2 = a5\n  5267: a3 = a3 <u a5\n  5270: a3 = a4 if a1 == 0\n  5273: a1 = u64 [s1 + 0x138]\n  5277: a4 = a1 <u t1\n  5280: a5 = a0 ^ a2\n  5283: t0 = t1\n  5285: t1 = a0\n  5287: u64 [s1 + 0x118] = a2\n  5291: a0 = a0 <u a2\n  5294: a0 = a4 if a5 == 0\n  5297: a4 = a1 ^ t0\n  5300: a4 = a4 | a5\n  5303: a0 = a3 if a4 == 0\n  5306: jump @161 if a0 != 0\n      : @160 (gas: 1)\n  5309: jump @343\n      : @161 (gas: 20)\n  5312: a0 = u64 [s1 + 0x130]\n  5316: u64 [s1 + 0x320] = a0\n  5320: a0 = u64 [s1 + 0x100]\n  5324: u64 [s1 + 0x340] = a0\n  5328: a0 = u64 [s1 + 0x128]\n  5332: u64 [s1 + 0x328] = a0\n  5336: a0 = u64 [s1 + 0xf8]\n  5340: u64 [s1 + 0x348] = a0\n  5344: a0 = u64 [s1 + 0x138]\n  5348: u64 [s1 + 0x330] = a0\n  5352: a0 = u64 [s1 + 0x108]\n  5356: u64 [s1 + 0x350] = a0\n  5360: u64 [s1 + 0x120] = t1\n  5364: u64 [s1 + 0x338] = t1\n  5368: a0 = s1 + 0x360\n  5372: a1 = s1 + 0x340\n  5376: a2 = s1 + 0x320\n  5380: a3 = u64 [s1 + 0x110]\n  5384: u64 [s1 + 0x358] = a3\n  5388: ra = 144, jump @588\n      : @162 [@dyn 72] (gas: 21)\n  5394: a3 = u64 [s1 + 0x360]\n  5398: a0 = u64 [s1 + 0x368]\n  5402: a1 = u64 [s1 + 0x370]\n  5406: a2 = u64 [s1 + 0x378]\n  5410: a4 = u64 [s1 + 0x120]\n  5414: a5 = s1 + 0x200\n  5418: u64 [a5 + 0xd8] = a4\n  5422: a4 = u64 [s1 + 0x138]\n  5426: u64 [a5 + 0xd0] = a4\n  5430: a4 = u64 [s1 + 0x128]\n  5434: u64 [a5 + 0xc8] = a4\n  5438: a4 = u64 [s1 + 0x130]\n  5442: u64 [a5 + 0xc0] = a4\n  5446: u64 [a5 + 0xf8] = a2\n  5450: u64 [a5 + 0xf0] = a1\n  5454: u64 [a5 + 0xe8] = a0\n  5458: a0 = s1 + 0x300\n  5462: a1 = s1 + 0x2e0\n  5466: a2 = s1 + 0x2c0\n  5470: u64 [a5 + 0xe0] = a3\n  5474: ra = 146, jump @613\n      : @163 [@dyn 73] (gas: 23)\n  5480: a4 = s1 + 0x300\n  5484: a0 = u64 [a4 + 0x18]\n  5487: a1 = u64 [a4 + 0x10]\n  5490: a2 = u64 [a4]\n  5492: a3 = u64 [a4 + 0x8]\n  5495: a4 = a0 << 0x3f\n  5498: a5 = a1 >> 0x1\n  5501: a4 = a4 | a5\n  5504: a1 = a1 << 0x3f\n  5507: a5 = a3 >> 0x1\n  5510: a1 = a1 | a5\n  5513: a3 = a3 << 0x3f\n  5516: a2 = a2 >> 0x1\n  5519: a3 = a3 | a2\n  5522: a0 = a0 >> 0x1\n  5525: t0 = u64 [s1 + 0x130]\n  5529: a5 = u64 [s1 + 0x128]\n  5533: t1 = u64 [s1 + 0x138]\n  5537: a2 = u64 [s1 + 0x120]\n  5541: u64 [s1 + 0x130] = a3\n  5545: u64 [s1 + 0x128] = a1\n  5549: u64 [s1 + 0x138] = a4\n  5553: jump @159\n      : @164 (gas: 10)\n  5556: u64 [a2 + 608] = 0\n  5560: u64 [a2 + 600] = 0\n  5564: u64 [a2 + 592] = 0\n  5568: u64 [a2 + 584] = 0\n  5572: a0 = s1 + 0x2000\n  5576: i32 a0 = a0 + 0xfffffffffffffb20\n  5580: ra = 0x94\n  5584: ecalli 15 // 'value_transferred'\n  5586: t0 = 0x96\n  5590: jump @678\n      : @165 [@dyn 74] (gas: 1)\n  5593: t0 = 150, jump @678\n      : @166 [@dyn 75] (gas: 8)\n  5599: a0 = u64 [a4 + 0x58]\n  5602: a1 = u64 [a4 + 0x60]\n  5605: a2 = u64 [a4 + 0x50]\n  5608: a3 = u64 [a4 + 0x48]\n  5611: a1 = a1 | a2\n  5614: a0 = a0 | a3\n  5617: a0 = a0 | a1\n  5620: jump @168 if a0 == 0\n      : @167 (gas: 1)\n  5623: jump @493\n      : @168 (gas: 3)\n  5626: a0 = u64 [s1 + 0x138]\n  5630: a1 = i32 [a0]\n  5632: jump @170 if a1 >u 3\n      : @169 (gas: 1)\n  5636: jump @494\n      : @170 (gas: 8)\n  5639: a1 = s1 + 0x18d8\n  5643: u64 [a1 + 640] = 0\n  5647: u64 [a1 + 632] = 0\n  5651: u64 [a1 + 624] = 0\n  5655: u64 [a1 + 616] = 0x3\n  5660: a0 = s1 + 0x260\n  5664: a1 = s1 + 0x1b40\n  5668: ra = 152, jump @6\n      : @171 [@dyn 76] (gas: 12)\n  5674: a0 = u64 [s1 + 0x278]\n  5678: a1 = s1 + 0x100\n  5682: u64 [a1 + 0x38] = a0\n  5685: a0 = u64 [s1 + 0x270]\n  5689: u64 [a1 + 0x30] = a0\n  5692: a0 = u64 [s1 + 0x268]\n  5696: u64 [a1 + 0x28] = a0\n  5699: a0 = u64 [s1 + 0x260]\n  5703: u64 [a1 + 0x20] = a0\n  5706: a0 = s1 + 0x240\n  5710: a1 = 0x40\n  5713: ra = 154, jump @2\n      : @172 [@dyn 77] (gas: 13)\n  5719: a4 = s1 + 0x200\n  5723: a0 = u64 [a4 + 0x58]\n  5726: a1 = u64 [a4 + 0x50]\n  5729: a2 = u64 [a4 + 0x48]\n  5732: a3 = u64 [a4 + 0x40]\n  5735: a0 = a0 | a2\n  5738: a2 = a3 | a1\n  5741: a2 = a2 | a0\n  5744: a2 = a2 >> 0x20\n  5747: a0 = a0 | a1\n  5750: a0 = a0 << 0x20\n  5753: a0 = a0 | a2\n  5756: jump @201 if a0 != 0\n      : @173 (gas: 15)\n  5760: a2 = s1 + 0x100\n  5764: a0 = u64 [a2 + 0x20]\n  5767: a4 = s1 + 0x200\n  5771: u64 [a4 + 0x20] = a0\n  5774: a0 = u64 [a2 + 0x28]\n  5777: u64 [a4 + 0x28] = a0\n  5780: a0 = u64 [a2 + 0x30]\n  5783: u64 [a4 + 0x30] = a0\n  5786: a1 = s1 + 0x220\n  5790: a0 = u64 [a2 + 0x38]\n  5793: u64 [a4 + 0x38] = a0\n  5796: a0 = a3\n  5798: u64 [s1 + 0x138] = a3\n  5802: ra = 0x1d6\n  5806: jump @4\n      : @174 (gas: 1)\n  5809: jump @176 if a0 == 1889567281\n      : @175 (gas: 1)\n  5816: jump @495\n      : @176 (gas: 9)\n  5819: a0 = s1 + 0x20f8\n  5823: u64 [a0 + 96] = 0\n  5826: u64 [a0 + 88] = 0\n  5829: u64 [a0 + 80] = 0\n  5832: u64 [a0 + 72] = 0\n  5835: a0 = s1 + 0x2000\n  5839: i32 a0 = a0 + 0x140\n  5843: ecalli 15 // 'value_transferred'\n  5845: fallthrough\n      : @177 (gas: 9)\n  5846: a3 = s1 + 0x20f8\n  5850: a0 = u64 [a3 + 0x58]\n  5853: a1 = u64 [a3 + 0x60]\n  5856: a2 = u64 [a3 + 0x50]\n  5859: a3 = u64 [a3 + 0x48]\n  5862: a1 = a1 | a2\n  5865: a0 = a0 | a3\n  5868: a0 = a0 | a1\n  5871: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  5874: jump @502\n      : @179 (gas: 3)\n  5877: a0 = u64 [s1 + 0x138]\n  5881: a0 = i32 [a0]\n  5883: jump @181 if a0 >u 35\n      : @180 (gas: 1)\n  5887: jump @503\n      : @181 (gas: 2)\n  5890: a0 = s1 + 0x1a00\n  5894: ra = 156, jump @554\n      : @182 [@dyn 78] (gas: 12)\n  5900: a3 = s1 + 0x18d8\n  5904: a4 = a3 + 0x100\n  5908: a0 = u64 [a4 + 0x28]\n  5911: a1 = u64 [a4 + 0x30]\n  5914: a2 = u32 [a3 + 0x138]\n  5918: u64 [a3 + 288] = 0\n  5922: u64 [a4 + 0x18] = a2\n  5925: u64 [a4 + 0x10] = a1\n  5928: a1 = s1 + 0x19e0\n  5932: u64 [a4 + 0x8] = a0\n  5935: a0 = 0\n  5937: ra = 158, jump @4\n      : @183 [@dyn 79] (gas: 9)\n  5943: a1 = s1 + 0x18d8\n  5947: u64 [a1 + 256] = 0\n  5951: u64 [a1 + 248] = 0\n  5955: u64 [a1 + 232] = 0x4\n  5960: a2 = a1\n  5962: a0 = 0x20\n  5965: a1 = s1 + 0x19c0\n  5969: u64 [a2 + 240] = 0\n  5973: ra = 160, jump @4\n      : @184 [@dyn 80] (gas: 2)\n  5979: a1 = i32 [0x200a4]\n  5984: jump @186 if a1 >u 63\n      : @185 (gas: 2)\n  5988: u32 [0x200a4] = 0x40\n  5994: fallthrough\n      : @186 (gas: 13)\n  5995: a0 = sp + 0xffffffffffffffe0\n  5998: a2 = a0 & 0xffffffffffffffe0\n  6001: u64 [s1 + 0x138] = a2\n  6005: sp = a2\n  6007: a0 = 0x200b0\n  6012: i32 a0 = a0 + 0\n  6014: i32 a2 = a2 + 0\n  6016: a1 = 0x40\n  6019: ra = 0xa2\n  6023: ecalli 8 // 'hash_keccak_256'\n  6025: a3 = u64 [s1 + 0x138]\n  6029: t0 = 0xa4\n  6033: jump @670\n      : @187 [@dyn 81] (gas: 2)\n  6036: a3 = u64 [s1 + 0x138]\n  6040: t0 = 164, jump @670\n      : @188 [@dyn 82] (gas: 9)\n  6046: i32 a4 = a4 + 0xf8\n  6050: a4 = a4 + s1\n  6053: u64 [a4 + 0x80] = a3\n  6057: u64 [a4 + 0x78] = a2\n  6060: u64 [a4 + 0x70] = a1\n  6063: u64 [a4 + 0x68] = a0\n  6066: a0 = s1 + 0x19a0\n  6070: a1 = s1 + 0x2160\n  6074: ra = 166, jump @6\n      : @189 [@dyn 83] (gas: 13)\n  6080: a1 = s1 + 0x18d8\n  6084: a0 = u64 [a1 + 0xe0]\n  6088: a2 = s1 + 0x100\n  6092: u64 [a2 + 0x38] = a0\n  6095: a0 = u64 [a1 + 0xd8]\n  6099: u64 [a2 + 0x30] = a0\n  6102: a0 = u64 [a1 + 0xd0]\n  6106: u64 [a2 + 0x28] = a0\n  6109: a0 = u64 [a1 + 0xc8]\n  6113: u64 [a2 + 0x20] = a0\n  6116: a0 = s1 + 0x1980\n  6120: a1 = 0x40\n  6123: ra = 168, jump @2\n      : @190 [@dyn 84] (gas: 13)\n  6129: a3 = s1 + 0x18d8\n  6133: a0 = u64 [a3 + 0xc0]\n  6137: a1 = u64 [a3 + 0xb8]\n  6141: a2 = u64 [a3 + 0xb0]\n  6145: a4 = u64 [a3 + 0xa8]\n  6149: a0 = a0 | a2\n  6152: a2 = a4 | a1\n  6155: a2 = a2 | a0\n  6158: a2 = a2 >> 0x20\n  6161: a0 = a0 | a1\n  6164: a0 = a0 << 0x20\n  6167: a0 = a0 | a2\n  6170: jump @201 if a0 != 0\n      : @191 (gas: 14)\n  6174: a2 = s1 + 0x100\n  6178: a0 = u64 [a2 + 0x20]\n  6181: u64 [a3 + 0x88] = a0\n  6185: a0 = u64 [a2 + 0x28]\n  6188: u64 [a3 + 0x90] = a0\n  6192: a0 = u64 [a2 + 0x30]\n  6195: u64 [a3 + 0x98] = a0\n  6199: a1 = s1 + 0x1960\n  6203: a0 = u64 [a2 + 0x38]\n  6206: u64 [a3 + 0xa0] = a0\n  6210: a0 = a4\n  6212: u64 [a2 + 0x38] = a4\n  6215: ra = 0x1d6\n  6219: jump @4\n      : @192 (gas: 9)\n  6222: a0 = s1 + 0x20f8\n  6226: u64 [a0 + 160] = 0\n  6230: u64 [a0 + 152] = 0\n  6234: u64 [a0 + 144] = 0\n  6238: u64 [a0 + 136] = 0\n  6242: a0 = s1 + 0x2000\n  6246: i32 a0 = a0 + 0x180\n  6250: ecalli 15 // 'value_transferred'\n  6252: fallthrough\n      : @193 (gas: 9)\n  6253: a3 = s1 + 0x20f8\n  6257: a0 = u64 [a3 + 0x98]\n  6261: a1 = u64 [a3 + 0xa0]\n  6265: a2 = u64 [a3 + 0x90]\n  6269: a3 = u64 [a3 + 0x88]\n  6273: a1 = a1 | a2\n  6276: a0 = a0 | a3\n  6279: a0 = a0 | a1\n  6282: jump @195 if a0 == 0\n      : @194 (gas: 1)\n  6285: jump @504\n      : @195 (gas: 3)\n  6288: a0 = u64 [s1 + 0x138]\n  6292: a0 = i32 [a0]\n  6294: jump @197 if a0 >u 3\n      : @196 (gas: 1)\n  6298: jump @505\n      : @197 (gas: 8)\n  6301: a1 = s1 + 0x20f8\n  6305: u64 [a1 + 192] = 0\n  6309: u64 [a1 + 184] = 0\n  6313: u64 [a1 + 176] = 0\n  6317: u64 [a1 + 168] = 0x1\n  6322: a0 = s1 + 0x1a60\n  6326: a1 = s1 + 0x21a0\n  6330: ra = 170, jump @6\n      : @198 [@dyn 85] (gas: 12)\n  6336: a1 = s1 + 0x18d8\n  6340: a2 = a1 + 0x100\n  6344: a0 = u64 [a2 + 0x98]\n  6348: a1 = s1 + 0x100\n  6352: u64 [a1 + 0x28] = a0\n  6355: a0 = u64 [a2 + 0x90]\n  6359: u64 [a1 + 0x38] = a0\n  6362: a0 = u64 [a2 + 0x88]\n  6366: u64 [a1 + 0x30] = a0\n  6369: a0 = s1 + 0x1a40\n  6373: a1 = 0x40\n  6376: ra = 172, jump @2\n      : @199 [@dyn 86] (gas: 14)\n  6382: a3 = s1 + 0x18d8\n  6386: a5 = a3 + 0x100\n  6390: a4 = u64 [a5 + 0x80]\n  6394: a1 = u64 [a5 + 0x78]\n  6397: a2 = u64 [a5 + 0x70]\n  6400: a0 = u64 [a5 + 0x68]\n  6403: a4 = a4 | a2\n  6406: a2 = a0 | a1\n  6409: a2 = a2 | a4\n  6412: a2 = a2 >> 0x20\n  6415: a1 = a1 | a4\n  6418: a1 = a1 << 0x20\n  6421: a1 = a1 | a2\n  6424: jump @201 if a1 != 0\n      : @200 (gas: 1)\n  6427: jump @506\n      : @201 (gas: 1)\n  6430: trap\n      : @202 (gas: 3)\n  6431: a0 = s1 + 0x1940\n  6435: a1 = 0x40\n  6438: ra = 174, jump @2\n      : @203 [@dyn 87] (gas: 13)\n  6444: a2 = s1 + 0x18d8\n  6448: t0 = u64 [a2 + 0x80]\n  6452: a5 = u64 [a2 + 0x78]\n  6455: a4 = u64 [a2 + 0x70]\n  6458: a0 = u64 [a2 + 0x68]\n  6461: a3 = a4 | t0\n  6464: a1 = a0 | a5\n  6467: a1 = a1 | a3\n  6470: a1 = a1 >> 0x20\n  6473: a3 = a3 | a5\n  6476: a3 = a3 << 0x20\n  6479: a1 = a1 | a3\n  6482: jump @201 if a1 != 0\n      : @204 (gas: 11)\n  6485: u64 [a2 + 88] = 0\n  6488: u64 [a2 + 80] = 0\n  6491: u64 [a2 + 72] = 0\n  6494: a3 = 0x8c379a000000000\n  6504: a1 = s1 + 0x1920\n  6508: u64 [a2 + 0x60] = a3\n  6511: u64 [s1 + 0x138] = a0\n  6515: u64 [s1 + 0x130] = a4\n  6519: u64 [s1 + 0x120] = t0\n  6523: u64 [s1 + 0x128] = a5\n  6527: ra = 176, jump @4\n      : @205 [@dyn 88] (gas: 1)\n  6533: t0 = 178, jump @664\n      : @206 [@dyn 89] (gas: 1)\n  6539: jump @201 if a0 == 0\n      : @207 (gas: 11)\n  6542: i32 a0 = a1 + 0x4\n  6545: a2 = s1 + 0x18d8\n  6549: a5 = 0\n  6551: u64 [a2 + 64] = 0\n  6554: u64 [a2 + 56] = 0\n  6557: u64 [a2 + 40] = 0x20\n  6561: a1 = s1 + 0x1900\n  6565: u64 [a2 + 48] = 0\n  6568: u64 [s1 + 0x128] = a3\n  6572: u64 [s1 + 0x120] = a4\n  6576: ra = 180, jump @4\n      : @208 [@dyn 90] (gas: 10)\n  6582: a2 = s1 + 0x100\n  6586: a4 = u64 [a2 + 0x28]\n  6589: a3 = u64 [a2 + 0x30]\n  6592: a1 = u64 [a2 + 0x38]\n  6595: a0 = u64 [a2 + 0x20]\n  6598: a0 = a0 + 0xffffffffffffffdc\n  6601: a0 = a1 <u a0\n  6604: a0 = 0 if a3 != 0\n  6606: a0 = 0 if a4 != 0\n  6608: jump @201 if a0 == 0\n      : @209 (gas: 8)\n  6612: i32 a0 = a1 + 0x24\n  6615: a2 = s1 + 0x18d8\n  6619: u64 [a2 + 32] = 0\n  6622: u64 [a2 + 24] = 0\n  6625: u64 [a2 + 8] = 0x1a\n  6629: a1 = s1 + 0x18e0\n  6633: u64 [a2 + 16] = 0\n  6636: ra = 182, jump @4\n      : @210 [@dyn 91] (gas: 9)\n  6642: a2 = s1 + 0x100\n  6646: a3 = u64 [a2 + 0x38]\n  6649: a0 = 0xffffffbc\n  6659: a0 = a3 <u a0\n  6662: a1 = u64 [a2 + 0x30]\n  6665: a0 = 0 if a1 != 0\n  6667: a1 = u64 [a2 + 0x28]\n  6670: a0 = 0 if a1 != 0\n  6672: jump @201 if a0 == 0\n      : @211 (gas: 13)\n  6676: i32 a0 = a3 + 0x44\n  6679: a1 = u64 [0x20000]\n  6684: a2 = u64 [0x20008]\n  6689: a3 = u64 [0x20010]\n  6694: a4 = s1 + 0x18d8\n  6698: u64 [a4] = a1\n  6700: a5 = a4 + 0xffffffffffffff00\n  6704: u64 [a5 + 0xf8] = a2\n  6708: u64 [a5 + 0xf0] = a3\n  6712: a2 = 0x4e54000000000000\n  6722: a1 = s1 + 0x18c0\n  6726: u64 [a5 + 0xe8] = a2\n  6730: ra = 184, jump @4\n      : @212 [@dyn 92] (gas: 3)\n  6736: a1 = 0x64\n  6739: a0 = u64 [s1 + 0x138]\n  6743: ra = 186, jump @12\n      : @213 [@dyn 93] (gas: 5)\n  6749: i32 a1 = a0 + 0\n  6751: a0 = 0x1\n  6754: a2 = 0x64\n  6757: ecalli 12 // 'seal_return'\n  6759: fallthrough\n      : @214 (gas: 4)\n  6760: a0 = s1 + 0x7ff\n  6764: a0 = a0 + 0x241\n  6768: a1 = 0x40\n  6771: ra = 188, jump @2\n      : @215 [@dyn 94] (gas: 15)\n  6777: a0 = s1 + 0x7ff\n  6781: a0 = a0 + 0xb9\n  6785: a2 = a0 + 0x100\n  6789: a1 = u64 [a2 + 0xa0]\n  6793: u64 [s1 + 0x130] = a1\n  6797: a1 = u64 [a2 + 0x98]\n  6801: u64 [s1 + 0x128] = a1\n  6805: a1 = u64 [a2 + 0x90]\n  6809: u64 [s1 + 0x120] = a1\n  6813: a0 = u64 [a2 + 0x88]\n  6817: u64 [s1 + 0x138] = a0\n  6821: ra = 0xbe\n  6825: ecalli 11 // 'return_data_size'\n  6827: t0 = 0xc0\n  6831: jump @661\n      : @216 [@dyn 95] (gas: 1)\n  6834: t0 = 192, jump @661\n      : @217 [@dyn 96] (gas: 1)\n  6840: jump @201 if a1 != 0\n      : @218 (gas: 3)\n  6844: a2 = a0\n  6846: a0 = a0 >> 0x20\n  6849: jump @201 if a0 != 0\n      : @219 (gas: 1)\n  6853: t0 = 194, jump @668\n      : @220 [@dyn 97] (gas: 1)\n  6859: ra = 196, jump @12\n      : @221 [@dyn 98] (gas: 11)\n  6865: a1 = s1 + 0x18d8\n  6869: a2 = u64 [s1 + 0x128]\n  6873: u32 [a1 + 0x328] = a2\n  6877: i32 a0 = a0 + 0\n  6879: a1 = s1 + 0x2000\n  6883: i32 a1 = a1 + 0xfffffffffffffc00\n  6887: a2 = 0\n  6889: ecalli 10 // 'return_data_copy'\n  6891: a0 = s1 + 0x18d8\n  6895: a0 = i32 [a0 + 0x328]\n  6899: fallthrough\n      : @222 (gas: 2)\n  6900: a1 = u64 [s1 + 0x130]\n  6904: jump @201 if a0 <u a1\n      : @223 (gas: 2)\n  6908: ecalli 11 // 'return_data_size'\n  6910: fallthrough\n      : @224 (gas: 3)\n  6911: a1 = a0\n  6913: a0 = a0 >> 0x20\n  6916: jump @201 if a0 != 0\n      : @225 (gas: 3)\n  6920: a0 = u64 [s1 + 0x138]\n  6924: u64 [s1 + 0x130] = a1\n  6928: ra = 198, jump @12\n      : @226 [@dyn 99] (gas: 7)\n  6934: i32 a1 = a0 + 0\n  6936: a2 = i32 [s1 + 0x130]\n  6940: a0 = 0x1\n  6943: ecalli 12 // 'seal_return'\n  6945: a0 = s1 + 0x180\n  6949: ra = 0x1da\n  6953: jump @560\n      : @227 (gas: 9)\n  6956: a3 = s1 + 0x100\n  6960: a0 = u64 [a3 + 0x30]\n  6963: a1 = u64 [a3 + 0x20]\n  6966: a0 = a0 | a1\n  6969: a1 = u64 [a3 + 0x38]\n  6972: a2 = u64 [a3 + 0x28]\n  6975: a1 = a1 | a2\n  6978: a0 = a0 | a1\n  6981: jump @242 if a0 == 0\n      : @228 (gas: 3)\n  6985: a0 = s1 + 0x1800\n  6989: a1 = 0x40\n  6992: ra = 200, jump @2\n      : @229 [@dyn 100] (gas: 23)\n  6998: t2 = s1 + 0x10b8\n  7002: t0 = u64 [t2 + 0x748]\n  7006: a3 = u64 [t2 + 0x760]\n  7010: t1 = u64 [t2 + 0x750]\n  7014: a4 = u64 [t2 + 0x758]\n  7018: a5 = t0 + 0x20\n  7021: a0 = a5 <u t0\n  7024: a1 = t1 + a0\n  7027: a2 = a1 <u t1\n  7030: a2 = a0 if a0 == 0\n  7033: a2 = a2 + a4\n  7036: u64 [s1 + 0x80] = a4\n  7040: a0 = a2 <u a4\n  7043: u64 [s1 + 0x88] = a3\n  7047: a0 = a0 + a3\n  7050: a3 = a5 | a2\n  7053: a0 = a0 | a1\n  7056: a3 = a3 | a0\n  7059: a3 = a3 >> 0x20\n  7062: a0 = a0 | a2\n  7065: a0 = a0 << 0x20\n  7068: a0 = a0 | a3\n  7071: jump @201 if a0 != 0\n      : @230 (gas: 11)\n  7075: u64 [t2 + 1848] = 0\n  7079: u64 [t2 + 1840] = 0\n  7083: u64 [t2 + 1832] = 0\n  7087: a0 = 0xa9059cbb00000000\n  7097: a1 = s1 + 0x17e0\n  7101: u64 [t2 + 0x740] = a0\n  7105: u64 [s1 + 0x70] = a5\n  7108: a0 = a5\n  7110: u64 [s1 + 0xd8] = t0\n  7114: u64 [s1 + 0x78] = t1\n  7117: ra = 202, jump @4\n      : @231 [@dyn 101] (gas: 40)\n  7123: a0 = u64 [s1 + 0xd8]\n  7127: a0 = a0 + 0x24\n  7130: a1 = u64 [s1 + 0xd8]\n  7134: a1 = a0 <u a1\n  7137: a2 = u64 [s1 + 0x78]\n  7140: a2 = a2 + a1\n  7143: a3 = u64 [s1 + 0x78]\n  7146: a3 = a2 <u a3\n  7149: a3 = a1 if a1 == 0\n  7152: a1 = u64 [s1 + 0x80]\n  7156: a3 = a3 + a1\n  7159: a1 = a3 <u a1\n  7162: a4 = u64 [s1 + 0x88]\n  7166: a1 = a1 + a4\n  7169: a4 = u64 [s1 + 0x138]\n  7173: a5 = s1 + 0x10b8\n  7177: u64 [a5 + 0x6c0] = a4\n  7181: a4 = u64 [s1 + 0x130]\n  7185: u64 [a5 + 0x6b8] = a4\n  7189: a4 = u64 [s1 + 0x128]\n  7193: u64 [a5 + 0x6b0] = a4\n  7197: a4 = u64 [s1 + 0x120]\n  7201: u64 [a5 + 0x6a8] = a4\n  7205: a4 = u64 [s1 + 0xd0]\n  7209: u64 [a5 + 0x6e0] = a4\n  7213: a4 = u64 [s1 + 0xf8]\n  7217: u64 [a5 + 0x6d8] = a4\n  7221: a4 = u64 [s1 + 0xe8]\n  7225: u64 [a5 + 0x6d0] = a4\n  7229: u64 [a5 + 0x6f0] = a2\n  7233: u64 [a5 + 0x6e8] = a0\n  7237: u64 [a5 + 0x6f8] = a3\n  7241: u64 [a5 + 0x700] = a1\n  7245: a0 = s1 + 0x17c0\n  7249: a1 = s1 + 0x17a0\n  7253: a2 = s1 + 0x1780\n  7257: a3 = s1 + 0x1760\n  7261: a4 = u64 [s1 + 0xf0]\n  7265: u64 [a5 + 0x6c8] = a4\n  7269: ra = 204, jump @635\n      : @232 [@dyn 102] (gas: 12)\n  7275: a5 = u64 [s1 + 0x78]\n  7278: a4 = u64 [s1 + 0xd8]\n  7282: a2 = u64 [s1 + 0x80]\n  7286: a0 = a4 | a2\n  7289: a1 = u64 [s1 + 0x88]\n  7293: a1 = a1 | a5\n  7296: a0 = a0 | a1\n  7299: a0 = a0 >> 0x20\n  7302: a1 = a1 | a2\n  7305: a1 = a1 << 0x20\n  7308: a0 = a0 | a1\n  7311: jump @201 if a0 != 0\n      : @233 (gas: 51)\n  7315: a0 = s1 + 0x10b8\n  7319: t2 = u64 [a0 + 0x708]\n  7323: a2 = a0 + 0x700\n  7327: a3 = u64 [a2 + 0x10]\n  7330: a1 = u64 [a2 + 0x20]\n  7333: u64 [s1 + 0x68] = a1\n  7336: a1 = u64 [a2 + 0x18]\n  7339: ra = t2 <u a4\n  7342: a0 = a3 ^ a5\n  7345: a2 = a3 <u a5\n  7348: a2 = ra if a0 == 0\n  7351: a0 = u64 [s1 + 0x80]\n  7355: t1 = a1 - a0\n  7358: t0 = t1 <u a2\n  7361: a4 = a1 <u a0\n  7364: a0 = u64 [s1 + 0x88]\n  7368: a1 = u64 [s1 + 0x68]\n  7371: a0 = a1 - a0\n  7374: a0 = a0 - a4\n  7377: t0 = a0 - t0\n  7380: u64 [s1 + 0x58] = t0\n  7383: t1 = t1 - a2\n  7386: a0 = a3 - a5\n  7389: a3 = a0 - ra\n  7392: u64 [s1 + 0x60] = a3\n  7395: a0 = u64 [s1 + 0xd8]\n  7399: a1 = t2 - a0\n  7402: u64 [s1 + 0x68] = a1\n  7405: a5 = a1 + 0xffffffffffffffe0\n  7408: a1 = a5 <u a1\n  7411: a2 = a3 + a1\n  7414: a2 = a2 + 0xffffffffffffffff\n  7417: t2 = a2 ^ a3\n  7420: a4 = a2 <u a3\n  7423: a4 = a1 if t2 == 0\n  7426: a3 = t1\n  7428: u64 [s1 + 0x50] = t1\n  7431: a1 = t1 <u 0x1\n  7434: t1 = t0 - a1\n  7437: a1 = a3 + 0xffffffffffffffff\n  7440: a4 = a4 + a1\n  7443: a3 = a4 <u a1\n  7446: t0 = t1 + a3\n  7449: a3 = s1 + 0x10b8\n  7453: a1 = a3 + 0x600\n  7457: u64 [a1 + 0x88] = a5\n  7461: u64 [a1 + 0x90] = a2\n  7465: u64 [a1 + 0x98] = a4\n  7469: a1 = s1 + 0x1740\n  7473: u64 [a3 + 0x6a0] = t0\n  7477: ra = 206, jump @4\n      : @234 [@dyn 103] (gas: 22)\n  7483: a0 = s1 + 0x10b8\n  7487: a1 = u64 [s1 + 0x58]\n  7490: a2 = a0 + 0x600\n  7494: u64 [a2 + 0x60] = a1\n  7497: a1 = u64 [s1 + 0x50]\n  7500: u64 [a2 + 0x58] = a1\n  7503: a1 = u64 [s1 + 0x60]\n  7506: u64 [a2 + 0x50] = a1\n  7509: a1 = u64 [s1 + 0x68]\n  7512: u64 [a2 + 0x48] = a1\n  7515: a1 = u64 [s1 + 0x88]\n  7519: u64 [a2 + 0x80] = a1\n  7523: a1 = u64 [s1 + 0x80]\n  7527: u64 [a2 + 0x78] = a1\n  7530: a1 = u64 [s1 + 0x78]\n  7533: u64 [a2 + 0x70] = a1\n  7536: a3 = a0\n  7538: a0 = s1 + 0x1720\n  7542: a1 = s1 + 0x1700\n  7546: a2 = u64 [s1 + 0xd8]\n  7550: u64 [a3 + 0x668] = a2\n  7554: ra = 208, jump @563\n      : @235 [@dyn 104] (gas: 3)\n  7560: a0 = s1 + 0x16e0\n  7564: a1 = u64 [s1 + 0xd8]\n  7568: ra = 210, jump @2\n      : @236 [@dyn 105] (gas: 12)\n  7574: a1 = s1 + 0x10b8\n  7578: a2 = a1 + 0x600\n  7582: a0 = u64 [a2 + 0x40]\n  7585: u64 [s1 + 0x88] = a0\n  7589: a0 = u64 [a2 + 0x38]\n  7592: u64 [s1 + 0x80] = a0\n  7596: a0 = u64 [a2 + 0x30]\n  7599: u64 [s1 + 0x78] = a0\n  7602: a0 = u64 [a2 + 0x28]\n  7605: u64 [s1 + 0xd8] = a0\n  7609: ecalli 9 // 'ref_time_left'\n  7611: fallthrough\n      : @237 (gas: 36)\n  7612: t0 = a0\n  7614: a0 = u64 [s1 + 0xb8]\n  7618: a0 = reverse a0\n  7620: a1 = a0 << 0x20\n  7623: a2 = u64 [s1 + 0xb0]\n  7627: a2 = reverse a2\n  7629: a2 = a2 >> 0x20\n  7632: a1 = a1 | a2\n  7635: a2 = u64 [s1 + 0xc0]\n  7639: a2 = reverse a2\n  7641: a3 = a2 << 0x20\n  7644: a4 = 0x300b0\n  7649: a0 = a0 >> 0x20\n  7652: a0 = a0 | a3\n  7655: a2 = a2 >> 0x20\n  7658: u64 [0x300b8] = a0\n  7663: u64 [0x300b0] = a1\n  7668: u32 [0x300c0] = a2\n  7673: a2 = s1 + 0x18d8\n  7677: u64 [a2 + 1536] = 0\n  7681: u64 [a2 + 1528] = 0\n  7685: u64 [a2 + 1520] = 0\n  7689: a0 = u64 [s1 + 0x88]\n  7693: a5 = u64 [s1 + 0x78]\n  7696: a5 = a5 | a0\n  7699: a1 = u64 [s1 + 0xd8]\n  7703: a3 = a1\n  7705: a0 = u64 [s1 + 0x80]\n  7709: a1 = a1 | a0\n  7712: a1 = a1 | a5\n  7715: a1 = a1 >> 0x20\n  7718: a0 = a0 | a5\n  7721: a0 = a0 << 0x20\n  7724: a0 = a0 | a1\n  7727: u64 [a2 + 1512] = 0\n  7731: jump @201 if a0 != 0\n      : @238 (gas: 7)\n  7735: a1 = a3\n  7737: i32 a0 = a3 + 0\n  7739: u64 [s1 + 0xb8] = a0\n  7743: a0 = u64 [s1 + 0x70]\n  7746: u64 [s1 + 0xb0] = t0\n  7750: u64 [s1 + 0xc0] = a4\n  7754: ra = 212, jump @12\n      : @239 [@dyn 106] (gas: 42)\n  7760: a1 = a0\n  7762: a3 = s1 + 0x18d8\n  7766: u32 [a3 + 1544] = 0\n  7770: a0 = u64 [s1 + 0xb8]\n  7774: a0 = a0 >u 0\n  7776: a4 = u64 [s1 + 0xb0]\n  7780: a2 = a4 >u 0x8fc\n  7784: a0 = a0 | a2\n  7787: a2 = -a0\n  7789: a4 = a3 + 0x600\n  7793: u64 [a4 + 0x40] = a2\n  7796: u64 [a4 + 0x38] = a2\n  7799: u64 [a4 + 0x30] = a2\n  7802: u64 [a4 + 0x28] = a2\n  7805: a2 = u64 [s1 + 0xc0]\n  7809: a2 = a2 << 0x20\n  7812: a2 = a2 >> 0x20\n  7815: a0 = a0 << 0x23\n  7818: a0 = a0 | a2\n  7821: a2 = s1 + 0x1ec0\n  7825: a2 = a2 << 0x20\n  7828: a2 = a2 >> 0x20\n  7831: a3 = s1 + 0x1f00\n  7835: a3 = a3 << 0x20\n  7838: a3 = a3 | a2\n  7841: a1 = a1 << 0x20\n  7844: a2 = 0x200b0\n  7849: a1 = a1 >> 0x20\n  7852: a4 = u64 [s1 + 0xd8]\n  7856: a4 = a4 << 0x20\n  7859: a4 = a4 | a1\n  7862: a2 = a2 << 0x20\n  7865: a2 = a2 >> 0x20\n  7868: a1 = s1 + 0x1ee0\n  7872: a1 = a1 << 0x20\n  7875: a5 = a1 | a2\n  7878: a1 = 0xffffffffffffffff\n  7881: a2 = 0xffffffffffffffff\n  7884: ecalli 1 // 'call'\n  7886: u64 [s1 + 0xd8] = a0\n  7890: a0 = s1 + 0x16c0\n  7894: ra = 214, jump @641\n      : @240 [@dyn 107] (gas: 2)\n  7900: a0 = u64 [s1 + 0xd8]\n  7904: jump @242 if a0 == 0\n      : @241 (gas: 1)\n  7907: jump @391\n      : @242 (gas: 9)\n  7910: a3 = s1 + 0x100\n  7914: a0 = u64 [a3 + 0x10]\n  7917: a1 = u64 [a3]\n  7919: a0 = a0 | a1\n  7922: a1 = u64 [a3 + 0x18]\n  7925: a2 = u64 [a3 + 0x8]\n  7928: a1 = a1 | a2\n  7931: a0 = a0 | a1\n  7934: jump @296 if a0 != 0\n      : @243 (gas: 8)\n  7938: a0 = s1 + 0x18d8\n  7942: u64 [a0 + 1760] = 0\n  7946: u64 [a0 + 1752] = 0\n  7950: u64 [a0 + 1744] = 0\n  7954: u64 [a0 + 1736] = 0\n  7958: a0 = s1 + 0x13e0\n  7962: a1 = s1 + 0x1fa0\n  7966: ra = 216, jump @6\n      : @244 [@dyn 108] (gas: 3)\n  7972: t0 = 0xda\n  7976: a1 = s1 + 0x10b8\n  7980: fallthrough\n      : @245 [@dyn 109] (gas: 10)\n  7981: a2 = a1 + 0x300\n  7985: a0 = u64 [a2 + 0x38]\n  7988: u64 [s1 + 0xc0] = a0\n  7992: a0 = u64 [a2 + 0x30]\n  7995: u64 [s1 + 0xb8] = a0\n  7999: a0 = u64 [a2 + 0x28]\n  8002: u64 [s1 + 0xd0] = a0\n  8006: a0 = s1 + 0x13c0\n  8010: a1 = 0x40\n  8013: ra = 220, jump @2\n      : @246 [@dyn 110] (gas: 14)\n  8019: a2 = s1 + 0x10b8\n  8023: t0 = u64 [a2 + 0x320]\n  8027: a1 = a2 + 0x300\n  8031: a5 = u64 [a1 + 0x18]\n  8034: a4 = u64 [a1 + 0x10]\n  8037: a0 = u64 [a1 + 0x8]\n  8040: a3 = a4 | t0\n  8043: a1 = a0 | a5\n  8046: a1 = a1 | a3\n  8049: a1 = a1 >> 0x20\n  8052: a3 = a3 | a5\n  8055: a3 = a3 << 0x20\n  8058: a1 = a1 | a3\n  8061: jump @201 if a1 != 0\n      : @247 (gas: 11)\n  8065: u64 [a2 + 760] = 0\n  8069: u64 [a2 + 752] = 0\n  8073: u64 [a2 + 744] = 0\n  8077: a3 = 0x70a0823100000000\n  8087: a1 = s1 + 0x13a0\n  8091: u64 [a2 + 0x300] = a3\n  8095: u64 [s1 + 0xf8] = a0\n  8099: u64 [s1 + 0xb0] = t0\n  8103: u64 [s1 + 0x88] = a5\n  8107: u64 [s1 + 0x80] = a4\n  8111: ra = 222, jump @4\n      : @248 [@dyn 111] (gas: 7)\n  8117: a0 = 0x300b0\n  8122: u64 [s1 + 0xd8] = a0\n  8126: i32 a0 = a0 + 0\n  8128: u64 [s1 + 0x78] = a0\n  8131: ra = 0xe0\n  8135: ecalli 0 // 'address'\n  8136: fallthrough\n      : @249 [@dyn 112] (gas: 10)\n  8137: a4 = u64 [s1 + 0xf8]\n  8141: a0 = u64 [s1 + 0xb0]\n  8145: a1 = u64 [s1 + 0x88]\n  8149: a0 = a0 | a1\n  8152: a1 = 0xfffffffc\n  8162: a1 = a4 <u a1\n  8165: a2 = u64 [s1 + 0x80]\n  8169: a1 = 0 if a2 != 0\n  8171: a1 = 0 if a0 != 0\n  8173: jump @201 if a1 == 0\n      : @250 (gas: 5)\n  8177: a2 = u64 [s1 + 0xd8]\n  8181: a1 = u64 [a2 + 0x8]\n  8184: a0 = 0x2400000000\n  8194: u64 [s1 + 0x70] = a0\n  8197: t0 = 226, jump @662\n      : @251 [@dyn 113] (gas: 8)\n  8203: a5 = s1 + 0x10b8\n  8207: u64 [a5 + 736] = 0\n  8211: a4 = a5 + 0x200\n  8215: u64 [a4 + 0xd8] = a2\n  8219: u64 [a4 + 0xd0] = a1\n  8223: a1 = s1 + 0x1380\n  8227: u64 [a4 + 0xc8] = a3\n  8231: ra = 228, jump @4\n      : @252 [@dyn 114] (gas: 3)\n  8237: ra = 0xe6\n  8241: ecalli 9 // 'ref_time_left'\n  8243: fallthrough\n      : @253 [@dyn 115] (gas: 9)\n  8244: a0 = u64 [s1 + 0xb8]\n  8248: a0 = reverse a0\n  8250: a1 = a0 << 0x20\n  8253: a2 = u64 [s1 + 0xc0]\n  8257: a2 = reverse a2\n  8259: a2 = a2 >> 0x20\n  8262: a1 = a1 | a2\n  8265: a2 = u64 [s1 + 0xd0]\n  8269: t0 = 232, jump @665\n      : @254 [@dyn 116] (gas: 7)\n  8275: u64 [a0 + 1792] = 0\n  8279: u64 [a0 + 1784] = 0\n  8283: u64 [a0 + 1776] = 0\n  8287: u64 [a0 + 1768] = 0\n  8291: a1 = 0x24\n  8294: a0 = u64 [s1 + 0xf8]\n  8298: ra = 234, jump @12\n      : @255 [@dyn 117] (gas: 4)\n  8304: u64 [s1 + 0xd0] = a0\n  8308: a1 = 0x20\n  8311: a0 = u64 [s1 + 0xf8]\n  8315: ra = 236, jump @12\n      : @256 [@dyn 118] (gas: 33)\n  8321: a1 = s1 + 0x18d8\n  8325: u32 [a1 + 1800] = 0x20\n  8330: u64 [a1 + 1856] = 0\n  8334: u64 [a1 + 1848] = 0\n  8338: u64 [a1 + 1840] = 0\n  8342: u64 [a1 + 1832] = 0\n  8346: a1 = u64 [s1 + 0xd8]\n  8350: a1 = a1 << 0x20\n  8353: a1 = a1 >> 0x20\n  8356: a2 = 0x1800000000\n  8366: t0 = a1 | a2\n  8369: a1 = s1 + 0x1fc0\n  8373: a1 = a1 << 0x20\n  8376: a1 = a1 >> 0x20\n  8379: a2 = s1 + 0x2000\n  8383: a2 = a2 << 0x20\n  8386: a3 = a2 | a1\n  8389: a1 = u64 [s1 + 0xd0]\n  8393: a1 = a1 << 0x20\n  8396: a1 = a1 >> 0x20\n  8399: a4 = u64 [s1 + 0x70]\n  8402: a4 = a4 | a1\n  8405: a0 = a0 << 0x20\n  8408: a0 = a0 >> 0x20\n  8411: a1 = s1 + 0x1fe0\n  8415: a1 = a1 << 0x20\n  8418: a5 = a1 | a0\n  8421: a1 = 0xffffffffffffffff\n  8424: a2 = 0xffffffffffffffff\n  8427: u64 [s1 + 0xd0] = t0\n  8431: a0 = t0\n  8433: ecalli 1 // 'call'\n  8435: fallthrough\n      : @257 (gas: 1)\n  8436: jump @259 if a0 == 0\n      : @258 (gas: 1)\n  8439: jump @380\n      : @259 (gas: 2)\n  8442: ecalli 11 // 'return_data_size'\n  8444: fallthrough\n      : @260 (gas: 2)\n  8445: a5 = 0x20\n  8448: jump @262 if a0 >=u a5\n      : @261 (gas: 3)\n  8451: ecalli 11 // 'return_data_size'\n  8453: a5 = a0\n  8455: fallthrough\n      : @262 (gas: 19)\n  8456: a2 = s1 + 0x10b8\n  8460: a3 = u64 [s1 + 0xf8]\n  8464: t0 = u64 [s1 + 0xb0]\n  8468: a0 = u64 [s1 + 0x88]\n  8472: a1 = u64 [s1 + 0x80]\n  8476: u64 [s1 + 184] = 0\n  8480: u64 [s1 + 0xc0] = a5\n  8484: a4 = a2 + 0x200\n  8488: u64 [a4 + 0x68] = a5\n  8491: u64 [a4 + 0x88] = a3\n  8495: u64 [a2 + 624] = 0\n  8499: u64 [a4 + 0x90] = a1\n  8503: u64 [a2 + 632] = 0\n  8507: u64 [a4 + 0x98] = a0\n  8511: u64 [a2 + 640] = 0\n  8515: a0 = s1 + 0x1340\n  8519: a1 = s1 + 0x1320\n  8523: u64 [a2 + 0x2a0] = t0\n  8527: ra = 238, jump @563\n      : @263 [@dyn 119] (gas: 4)\n  8533: a3 = u64 [s1 + 0xb8]\n  8537: a0 = a3 >u 0\n  8539: a1 = u64 [s1 + 0xc0]\n  8543: t0 = 240, jump @658\n      : @264 [@dyn 120] (gas: 1)\n  8549: jump @266 if a2 != 0\n      : @265 (gas: 1)\n  8552: jump @526\n      : @266 (gas: 3)\n  8555: a0 = s1 + 0x1300\n  8559: a1 = u64 [s1 + 0xf8]\n  8563: ra = 242, jump @2\n      : @267 [@dyn 121] (gas: 18)\n  8569: a1 = s1 + 0x10b8\n  8573: a2 = a1 + 0x200\n  8577: a0 = u64 [a2 + 0x60]\n  8580: u64 [s1 + 0xb0] = a0\n  8584: a0 = u64 [a2 + 0x58]\n  8587: u64 [s1 + 0x88] = a0\n  8591: a0 = u64 [a2 + 0x50]\n  8594: u64 [s1 + 0xb8] = a0\n  8598: a0 = u64 [a2 + 0x48]\n  8601: u64 [s1 + 0xc0] = a0\n  8605: a0 = s1 + 0x18d8\n  8609: u64 [a0 + 1920] = 0\n  8613: u64 [a0 + 1912] = 0\n  8617: u64 [a0 + 1904] = 0\n  8621: u64 [a0 + 1896] = 0x1\n  8626: a0 = s1 + 0x12e0\n  8630: a1 = s1 + 0x2040\n  8634: ra = 244, jump @6\n      : @268 [@dyn 122] (gas: 11)\n  8640: a1 = s1 + 0x10b8\n  8644: a2 = a1 + 0x200\n  8648: a0 = u64 [a2 + 0x38]\n  8651: u64 [s1 + 0x68] = a0\n  8654: a0 = u64 [a2 + 0x30]\n  8657: u64 [s1 + 0x60] = a0\n  8660: a0 = u64 [a2 + 0x28]\n  8663: u64 [s1 + 0x80] = a0\n  8667: a0 = s1 + 0x12c0\n  8671: a1 = 0x40\n  8674: ra = 246, jump @2\n      : @269 [@dyn 123] (gas: 14)\n  8680: t0 = s1 + 0x10b8\n  8684: a1 = t0 + 0x200\n  8688: a3 = u64 [a1 + 0x20]\n  8691: a4 = u64 [a1 + 0x18]\n  8694: a5 = u64 [a1 + 0x10]\n  8697: a0 = u64 [a1 + 0x8]\n  8700: a2 = a5 | a3\n  8703: a1 = a0 | a4\n  8706: a1 = a1 | a2\n  8709: a1 = a1 >> 0x20\n  8712: a2 = a2 | a4\n  8715: a2 = a2 << 0x20\n  8718: a1 = a1 | a2\n  8721: jump @201 if a1 != 0\n      : @270 (gas: 11)\n  8725: u64 [t0 + 504] = 0\n  8729: u64 [t0 + 496] = 0\n  8733: u64 [t0 + 488] = 0\n  8737: u64 [s1 + 0x58] = a3\n  8740: a3 = 0x70a0823100000000\n  8750: a1 = s1 + 0x12a0\n  8754: u64 [t0 + 0x200] = a3\n  8758: u64 [s1 + 0xf8] = a0\n  8762: u64 [s1 + 0x50] = a4\n  8765: u64 [s1 + 0x48] = a5\n  8768: ra = 248, jump @4\n      : @271 [@dyn 124] (gas: 4)\n  8774: a0 = u64 [s1 + 0x78]\n  8777: ra = 0xfa\n  8781: ecalli 0 // 'address'\n  8782: fallthrough\n      : @272 [@dyn 125] (gas: 10)\n  8783: a4 = u64 [s1 + 0xf8]\n  8787: a0 = u64 [s1 + 0x58]\n  8790: a1 = u64 [s1 + 0x50]\n  8793: a0 = a0 | a1\n  8796: a1 = 0xfffffffc\n  8806: a1 = a4 <u a1\n  8809: a2 = u64 [s1 + 0x48]\n  8812: a1 = 0 if a2 != 0\n  8814: a1 = 0 if a0 != 0\n  8816: jump @201 if a1 == 0\n      : @273 (gas: 2)\n  8820: a2 = u64 [s1 + 0xd8]\n  8824: t0 = 252, jump @663\n      : @274 [@dyn 126] (gas: 8)\n  8830: a5 = s1 + 0x10b8\n  8834: u64 [a5 + 480] = 0\n  8838: a4 = a5 + 0x100\n  8842: u64 [a4 + 0xd8] = a1\n  8846: u64 [a4 + 0xd0] = a2\n  8850: a1 = s1 + 0x1280\n  8854: u64 [a4 + 0xc8] = a3\n  8858: ra = 254, jump @4\n      : @275 [@dyn 127] (gas: 3)\n  8864: ra = 0x100\n  8868: ecalli 9 // 'ref_time_left'\n  8870: fallthrough\n      : @276 [@dyn 128] (gas: 9)\n  8871: a0 = u64 [s1 + 0x60]\n  8874: a0 = reverse a0\n  8876: a1 = a0 << 0x20\n  8879: a2 = u64 [s1 + 0x68]\n  8882: a2 = reverse a2\n  8884: a2 = a2 >> 0x20\n  8887: a1 = a1 | a2\n  8890: a2 = u64 [s1 + 0x80]\n  8894: t0 = 258, jump @665\n      : @277 [@dyn 129] (gas: 7)\n  8900: u64 [a0 + 1952] = 0\n  8904: u64 [a0 + 1944] = 0\n  8908: u64 [a0 + 1936] = 0\n  8912: u64 [a0 + 1928] = 0\n  8916: a1 = 0x24\n  8919: a0 = u64 [s1 + 0xf8]\n  8923: ra = 260, jump @12\n      : @278 [@dyn 130] (gas: 4)\n  8929: u64 [s1 + 0x80] = a0\n  8933: a1 = 0x20\n  8936: a0 = u64 [s1 + 0xf8]\n  8940: ra = 262, jump @12\n      : @279 [@dyn 131] (gas: 27)\n  8946: a1 = s1 + 0x18d8\n  8950: u32 [a1 + 1960] = 0x20\n  8955: u64 [a1 + 2016] = 0\n  8959: u64 [a1 + 2008] = 0\n  8963: u64 [a1 + 2000] = 0\n  8967: u64 [a1 + 1992] = 0\n  8971: a1 = s1 + 0x2060\n  8975: a1 = a1 << 0x20\n  8978: a1 = a1 >> 0x20\n  8981: a2 = s1 + 0x20a0\n  8985: a2 = a2 << 0x20\n  8988: a3 = a2 | a1\n  8991: a1 = u64 [s1 + 0x80]\n  8995: a1 = a1 << 0x20\n  8998: a1 = a1 >> 0x20\n  9001: a4 = u64 [s1 + 0x70]\n  9004: a4 = a4 | a1\n  9007: a0 = a0 << 0x20\n  9010: a0 = a0 >> 0x20\n  9013: a1 = s1 + 0x2080\n  9017: a1 = a1 << 0x20\n  9020: a5 = a1 | a0\n  9023: a1 = 0xffffffffffffffff\n  9026: a2 = 0xffffffffffffffff\n  9029: a0 = u64 [s1 + 0xd0]\n  9033: ecalli 1 // 'call'\n  9035: fallthrough\n      : @280 (gas: 1)\n  9036: jump @282 if a0 == 0\n      : @281 (gas: 1)\n  9039: jump @406\n      : @282 (gas: 2)\n  9042: ecalli 11 // 'return_data_size'\n  9044: fallthrough\n      : @283 (gas: 2)\n  9045: a1 = 0x20\n  9048: jump @285 if a0 >=u a1\n      : @284 (gas: 3)\n  9051: ecalli 11 // 'return_data_size'\n  9053: a1 = a0\n  9055: fallthrough\n      : @285 (gas: 19)\n  9056: u64 [s1 + 128] = 0\n  9060: u64 [s1 + 0xd0] = a1\n  9064: a3 = s1 + 0x10b8\n  9068: a4 = a3 + 0x100\n  9072: u64 [a4 + 0x68] = a1\n  9075: a0 = u64 [s1 + 0xf8]\n  9079: u64 [a4 + 0x88] = a0\n  9083: u64 [a3 + 368] = 0\n  9087: a0 = u64 [s1 + 0x48]\n  9090: u64 [a4 + 0x90] = a0\n  9094: u64 [a3 + 376] = 0\n  9098: a0 = u64 [s1 + 0x50]\n  9101: u64 [a4 + 0x98] = a0\n  9105: u64 [a3 + 384] = 0\n  9109: a0 = s1 + 0x1240\n  9113: a1 = s1 + 0x1220\n  9117: a2 = u64 [s1 + 0x58]\n  9120: u64 [a4 + 0xa0] = a2\n  9124: ra = 264, jump @563\n      : @286 [@dyn 132] (gas: 4)\n  9130: a3 = u64 [s1 + 0x80]\n  9134: a0 = a3 >u 0\n  9136: a1 = u64 [s1 + 0xd0]\n  9140: t0 = 266, jump @658\n      : @287 [@dyn 133] (gas: 1)\n  9146: jump @289 if a2 != 0\n      : @288 (gas: 1)\n  9149: jump @527\n      : @289 (gas: 3)\n  9152: a0 = s1 + 0x1200\n  9156: a1 = u64 [s1 + 0xf8]\n  9160: ra = 268, jump @2\n      : @290 [@dyn 134] (gas: 30)\n  9166: a1 = s1 + 0x10b8\n  9170: a2 = a1 + 0x100\n  9174: a0 = u64 [a2 + 0x60]\n  9177: u64 [s1 + 0x80] = a0\n  9181: a0 = u64 [a2 + 0x58]\n  9184: u64 [s1 + 0x70] = a0\n  9187: a0 = u64 [a2 + 0x50]\n  9190: u64 [s1 + 0xd0] = a0\n  9194: a0 = u64 [a2 + 0x48]\n  9197: u64 [s1 + 0xf8] = a0\n  9201: a3 = s1 + 0x100\n  9205: a0 = u64 [a3 + 0x38]\n  9208: u64 [a2] = a0\n  9210: a0 = u64 [a3 + 0x30]\n  9213: u64 [a1 + 0xf8] = a0\n  9217: a0 = u64 [a3 + 0x28]\n  9220: u64 [a1 + 0xf0] = a0\n  9224: a0 = u64 [a3 + 0x20]\n  9227: u64 [a1 + 0xe8] = a0\n  9231: u64 [a1 + 288] = 0\n  9235: u64 [a1 + 280] = 0\n  9239: a0 = u64 [s1 + 0xa0]\n  9243: u64 [a2 + 0x10] = a0\n  9246: a4 = a1\n  9248: a0 = s1 + 0x11e0\n  9252: a1 = s1 + 0x11c0\n  9256: a2 = s1 + 0x11a0\n  9260: a3 = u64 [s1 + 0xa8]\n  9264: u64 [a4 + 0x108] = a3\n  9268: ra = 270, jump @573\n      : @291 [@dyn 135] (gas: 22)\n  9274: a3 = s1 + 0x10b8\n  9278: a4 = a3 + 0x100\n  9282: a0 = u64 [a4 + 0x30]\n  9285: a1 = u64 [a4 + 0x28]\n  9288: a2 = u64 [a4 + 0x38]\n  9291: a3 = u64 [a4 + 0x40]\n  9294: a5 = u64 [s1 + 0xb8]\n  9298: a4 = a5 ^ a0\n  9301: a0 = a0 <u a5\n  9304: a5 = u64 [s1 + 0xc0]\n  9308: a1 = a1 <u a5\n  9311: a1 = a0 if a4 != 0\n  9314: a4 = u64 [s1 + 0xb0]\n  9318: a0 = a4 ^ a3\n  9321: a3 = a3 <u a4\n  9324: a5 = u64 [s1 + 0x88]\n  9328: a4 = a2 <u a5\n  9331: a4 = a3 if a0 != 0\n  9334: a2 = a2 ^ a5\n  9337: a0 = a0 | a2\n  9340: a1 = a4 if a0 != 0\n  9343: jump @293 if a1 != 0\n      : @292 (gas: 1)\n  9346: jump @416\n      : @293 (gas: 21)\n  9349: a5 = s1 + 0x100\n  9353: a0 = u64 [a5 + 0x20]\n  9356: a1 = s1 + 0x10b8\n  9360: u64 [a1 + 0x88] = a0\n  9364: u64 [a1 + 192] = 0\n  9368: u64 [a1 + 184] = 0\n  9372: a0 = u64 [s1 + 0xa8]\n  9376: u64 [a1 + 0xa8] = a0\n  9380: a0 = u64 [a5 + 0x28]\n  9383: u64 [a1 + 0x90] = a0\n  9387: a0 = u64 [s1 + 0xa0]\n  9391: u64 [a1 + 0xb0] = a0\n  9395: a0 = u64 [a5 + 0x30]\n  9398: u64 [a1 + 0x98] = a0\n  9402: a4 = a1\n  9404: a0 = s1 + 0x1180\n  9408: a1 = s1 + 0x1160\n  9412: a2 = s1 + 0x1140\n  9416: a3 = u64 [a5 + 0x38]\n  9419: u64 [a4 + 0xa0] = a3\n  9423: ra = 272, jump @573\n      : @294 [@dyn 136] (gas: 21)\n  9429: a4 = s1 + 0x10b8\n  9433: a0 = u64 [a4 + 0xc8]\n  9437: a1 = u64 [a4 + 0xd0]\n  9441: a2 = u64 [a4 + 0xd8]\n  9445: a3 = u64 [a4 + 0xe0]\n  9449: u64 [a4 + 0x40] = a3\n  9452: u64 [a4 + 0x38] = a2\n  9455: u64 [a4 + 0x30] = a1\n  9458: u64 [a4 + 0x28] = a0\n  9461: a0 = u64 [s1 + 0xb0]\n  9465: u64 [a4 + 0x60] = a0\n  9468: a0 = u64 [s1 + 0x88]\n  9472: u64 [a4 + 0x58] = a0\n  9475: a0 = u64 [s1 + 0xb8]\n  9479: u64 [a4 + 0x50] = a0\n  9482: a0 = s1 + 0x1120\n  9486: a1 = s1 + 0x1100\n  9490: a2 = s1 + 0x10e0\n  9494: a3 = u64 [s1 + 0xc0]\n  9498: u64 [a4 + 0x48] = a3\n  9501: ra = 274, jump @573\n      : @295 [@dyn 137] (gas: 10)\n  9507: a1 = s1 + 0x10b8\n  9511: a0 = u64 [a1 + 0x80]\n  9515: u64 [s1 + 0x68] = a0\n  9518: a0 = u64 [a1 + 0x78]\n  9521: u64 [s1 + 0x60] = a0\n  9524: a0 = u64 [a1 + 0x70]\n  9527: u64 [s1 + 0x58] = a0\n  9530: a0 = u64 [a1 + 0x68]\n  9533: u64 [s1 + 0x50] = a0\n  9536: jump @417\n      : @296 (gas: 8)\n  9539: a1 = s1 + 0x18d8\n  9543: u64 [a1 + 1632] = 0\n  9547: u64 [a1 + 1624] = 0\n  9551: u64 [a1 + 1616] = 0\n  9555: u64 [a1 + 1608] = 0x1\n  9560: a0 = s1 + 0x1600\n  9564: a1 = s1 + 0x1f20\n  9568: ra = 276, jump @6\n      : @297 [@dyn 138] (gas: 3)\n  9574: t0 = 0x116\n  9578: a1 = s1 + 0x10b8\n  9582: fallthrough\n      : @298 [@dyn 139] (gas: 10)\n  9583: a2 = a1 + 0x500\n  9587: a0 = u64 [a2 + 0x58]\n  9590: u64 [s1 + 0x80] = a0\n  9594: a0 = u64 [a2 + 0x50]\n  9597: u64 [s1 + 0x78] = a0\n  9600: a0 = u64 [a2 + 0x48]\n  9603: u64 [s1 + 0x88] = a0\n  9607: a0 = s1 + 0x15e0\n  9611: a1 = 0x40\n  9614: ra = 280, jump @2\n      : @299 [@dyn 140] (gas: 26)\n  9620: t0 = s1 + 0x10b8\n  9624: a1 = t0 + 0x500\n  9628: a0 = u64 [a1 + 0x28]\n  9631: a3 = u64 [a1 + 0x40]\n  9634: a2 = u64 [a1 + 0x30]\n  9637: a4 = u64 [a1 + 0x38]\n  9640: a5 = a0 + 0x20\n  9643: u64 [s1 + 0xd8] = a0\n  9647: a0 = a5 <u a0\n  9650: a1 = a2 + a0\n  9653: u64 [s1 + 0xc0] = a2\n  9657: a2 = a1 <u a2\n  9660: a2 = a0 if a0 == 0\n  9663: a2 = a2 + a4\n  9666: u64 [s1 + 0xb0] = a4\n  9670: a0 = a2 <u a4\n  9673: u64 [s1 + 0xb8] = a3\n  9677: a0 = a0 + a3\n  9680: a3 = a5 | a2\n  9683: a0 = a0 | a1\n  9686: a3 = a3 | a0\n  9689: a3 = a3 >> 0x20\n  9692: a0 = a0 | a2\n  9695: a0 = a0 << 0x20\n  9698: a0 = a0 | a3\n  9701: jump @201 if a0 != 0\n      : @300 (gas: 9)\n  9705: u64 [t0 + 1304] = 0\n  9709: u64 [t0 + 1296] = 0\n  9713: u64 [t0 + 1288] = 0\n  9717: a0 = 0xa9059cbb00000000\n  9727: a1 = s1 + 0x15c0\n  9731: u64 [t0 + 0x520] = a0\n  9735: u64 [s1 + 0x70] = a5\n  9738: a0 = a5\n  9740: ra = 282, jump @4\n      : @301 [@dyn 141] (gas: 38)\n  9746: a1 = u64 [s1 + 0xd8]\n  9750: a0 = a1 + 0x24\n  9753: a1 = a0 <u a1\n  9756: a3 = u64 [s1 + 0xc0]\n  9760: a2 = a3 + a1\n  9763: a3 = a2 <u a3\n  9766: a3 = a1 if a1 == 0\n  9769: a1 = u64 [s1 + 0xb0]\n  9773: a3 = a3 + a1\n  9776: a1 = a3 <u a1\n  9779: a4 = u64 [s1 + 0xb8]\n  9783: a1 = a1 + a4\n  9786: a4 = u64 [s1 + 0xd0]\n  9790: a5 = s1 + 0x10b8\n  9794: u64 [a5 + 0x4c0] = a4\n  9798: a4 = u64 [s1 + 0xf8]\n  9802: u64 [a5 + 0x4b8] = a4\n  9806: a4 = u64 [s1 + 0x118]\n  9810: u64 [a5 + 0x4a0] = a4\n  9814: a4 = u64 [s1 + 0x110]\n  9818: u64 [a5 + 0x498] = a4\n  9822: a4 = u64 [s1 + 0x108]\n  9826: u64 [a5 + 0x490] = a4\n  9830: a4 = u64 [s1 + 0x100]\n  9834: u64 [a5 + 0x488] = a4\n  9838: a4 = u64 [s1 + 0xe8]\n  9842: u64 [a5 + 0x4b0] = a4\n  9846: u64 [a5 + 0x4d0] = a2\n  9850: u64 [a5 + 0x4c8] = a0\n  9854: u64 [a5 + 0x4d8] = a3\n  9858: u64 [a5 + 0x4e0] = a1\n  9862: a0 = s1 + 0x15a0\n  9866: a1 = s1 + 0x1580\n  9870: a2 = s1 + 0x1560\n  9874: a3 = s1 + 0x1540\n  9878: a4 = u64 [s1 + 0xf0]\n  9882: u64 [a5 + 0x4a8] = a4\n  9886: ra = 284, jump @635\n      : @302 [@dyn 142] (gas: 12)\n  9892: a0 = u64 [s1 + 0xd8]\n  9896: a2 = u64 [s1 + 0xb0]\n  9900: a0 = a0 | a2\n  9903: a1 = u64 [s1 + 0xc0]\n  9907: a3 = u64 [s1 + 0xb8]\n  9911: a1 = a1 | a3\n  9914: a0 = a0 | a1\n  9917: a0 = a0 >> 0x20\n  9920: a1 = a1 | a2\n  9923: a1 = a1 << 0x20\n  9926: a0 = a0 | a1\n  9929: jump @201 if a0 != 0\n      : @303 (gas: 53)\n  9933: a0 = s1 + 0x10b8\n  9937: a2 = a0 + 0x400\n  9941: a1 = u64 [a2 + 0xe8]\n  9945: u64 [s1 + 0xd0] = a1\n  9949: a5 = u64 [a2 + 0xf0]\n  9953: t2 = u64 [a0 + 0x500]\n  9957: a4 = u64 [a2 + 0xf8]\n  9961: a0 = u64 [s1 + 0xd8]\n  9965: t1 = a1 <u a0\n  9968: ra = a0\n  9970: t0 = u64 [s1 + 0xc0]\n  9974: a1 = a5 ^ t0\n  9977: a2 = a5 <u t0\n  9980: a2 = t1 if a1 == 0\n  9983: a0 = u64 [s1 + 0xb0]\n  9987: a3 = a4 - a0\n  9990: a1 = a3 <u a2\n  9993: a4 = a4 <u a0\n  9996: a0 = u64 [s1 + 0xb8]\n 10000: a0 = t2 - a0\n 10003: a0 = a0 - a4\n 10006: t2 = a0 - a1\n 10009: u64 [s1 + 0x60] = t2\n 10012: a3 = a3 - a2\n 10015: u64 [s1 + 0xf8] = a3\n 10019: a0 = a5 - t0\n 10022: a4 = a0 - t1\n 10025: u64 [s1 + 0x68] = a4\n 10028: a0 = u64 [s1 + 0xd0]\n 10032: a1 = a0 - ra\n 10035: u64 [s1 + 0xd0] = a1\n 10039: a0 = a1 + 0xffffffffffffffe0\n 10042: a1 = a0 <u a1\n 10045: a2 = a4 + a1\n 10048: a2 = a2 + 0xffffffffffffffff\n 10051: a3 = a2 ^ a4\n 10054: a4 = a2 <u a4\n 10057: a4 = a1 if a3 == 0\n 10060: a3 = u64 [s1 + 0xf8]\n 10064: a1 = a3 <u 0x1\n 10067: a1 = t2 - a1\n 10070: a3 = a3 + 0xffffffffffffffff\n 10073: a4 = a4 + a3\n 10076: a3 = a4 <u a3\n 10079: a3 = a3 + a1\n 10082: a5 = s1 + 0x10b8\n 10086: u64 [a5 + 0x468] = a0\n 10090: u64 [a5 + 0x470] = a2\n 10094: u64 [a5 + 0x478] = a4\n 10098: a1 = s1 + 0x1520\n 10102: u64 [a5 + 0x480] = a3\n 10106: a0 = ra\n 10108: ra = 286, jump @4\n      : @304 [@dyn 143] (gas: 22)\n 10114: a0 = s1 + 0x10b8\n 10118: a1 = u64 [s1 + 0x60]\n 10121: a2 = a0 + 0x400\n 10125: u64 [a2 + 0x40] = a1\n 10128: a1 = u64 [s1 + 0xf8]\n 10132: u64 [a2 + 0x38] = a1\n 10135: a1 = u64 [s1 + 0x68]\n 10138: u64 [a2 + 0x30] = a1\n 10141: a1 = u64 [s1 + 0xd0]\n 10145: u64 [a2 + 0x28] = a1\n 10148: a1 = u64 [s1 + 0xb8]\n 10152: u64 [a2 + 0x60] = a1\n 10155: a1 = u64 [s1 + 0xb0]\n 10159: u64 [a2 + 0x58] = a1\n 10162: a1 = u64 [s1 + 0xc0]\n 10166: u64 [a2 + 0x50] = a1\n 10169: a3 = a0\n 10171: a0 = s1 + 0x1500\n 10175: a1 = s1 + 0x14e0\n 10179: a2 = u64 [s1 + 0xd8]\n 10183: u64 [a3 + 0x448] = a2\n 10187: ra = 288, jump @563\n      : @305 [@dyn 144] (gas: 3)\n 10193: a0 = s1 + 0x14c0\n 10197: a1 = u64 [s1 + 0xd8]\n 10201: ra = 290, jump @2\n      : @306 [@dyn 145] (gas: 12)\n 10207: a1 = s1 + 0x10b8\n 10211: a2 = a1 + 0x400\n 10215: a0 = u64 [a2 + 0x20]\n 10218: u64 [s1 + 0xd8] = a0\n 10222: a0 = u64 [a2 + 0x18]\n 10225: u64 [s1 + 0xd0] = a0\n 10229: a0 = u64 [a2 + 0x10]\n 10232: u64 [s1 + 0xc0] = a0\n 10236: a0 = u64 [a2 + 0x8]\n 10239: u64 [s1 + 0xf8] = a0\n 10243: ecalli 9 // 'ref_time_left'\n 10245: fallthrough\n      : @307 (gas: 36)\n 10246: t0 = a0\n 10248: a0 = u64 [s1 + 0x78]\n 10251: a0 = reverse a0\n 10253: a1 = a0 << 0x20\n 10256: a2 = u64 [s1 + 0x80]\n 10260: a2 = reverse a2\n 10262: a2 = a2 >> 0x20\n 10265: a1 = a1 | a2\n 10268: a2 = u64 [s1 + 0x88]\n 10272: a2 = reverse a2\n 10274: a3 = a2 << 0x20\n 10277: a4 = 0x300b0\n 10282: a0 = a0 >> 0x20\n 10285: a0 = a0 | a3\n 10288: a2 = a2 >> 0x20\n 10291: u64 [0x300b8] = a0\n 10296: u64 [0x300b0] = a1\n 10301: u32 [0x300c0] = a2\n 10306: a2 = s1 + 0x18d8\n 10310: u64 [a2 + 1664] = 0\n 10314: u64 [a2 + 1656] = 0\n 10318: u64 [a2 + 1648] = 0\n 10322: a0 = u64 [s1 + 0xd8]\n 10326: a5 = u64 [s1 + 0xc0]\n 10330: a5 = a5 | a0\n 10333: a1 = u64 [s1 + 0xf8]\n 10337: a3 = a1\n 10339: a0 = u64 [s1 + 0xd0]\n 10343: a1 = a1 | a0\n 10346: a1 = a1 | a5\n 10349: a1 = a1 >> 0x20\n 10352: a0 = a0 | a5\n 10355: a0 = a0 << 0x20\n 10358: a0 = a0 | a1\n 10361: u64 [a2 + 1640] = 0\n 10365: jump @309 if a0 == 0\n      : @308 (gas: 1)\n 10368: jump @201\n      : @309 (gas: 7)\n 10371: a1 = a3\n 10373: i32 a0 = a3 + 0\n 10375: u64 [s1 + 0xd0] = a0\n 10379: a0 = u64 [s1 + 0x70]\n 10382: u64 [s1 + 0xc0] = t0\n 10386: u64 [s1 + 0xd8] = a4\n 10390: ra = 292, jump @12\n      : @310 [@dyn 146] (gas: 42)\n 10396: a1 = a0\n 10398: a3 = s1 + 0x18d8\n 10402: u32 [a3 + 1672] = 0\n 10406: a0 = u64 [s1 + 0xd0]\n 10410: a0 = a0 >u 0\n 10412: a4 = u64 [s1 + 0xc0]\n 10416: a2 = a4 >u 0x8fc\n 10420: a0 = a0 | a2\n 10423: a2 = -a0\n 10425: a4 = a3 + 0x600\n 10429: u64 [a4 + 0xc0] = a2\n 10433: u64 [a4 + 0xb8] = a2\n 10437: u64 [a4 + 0xb0] = a2\n 10441: u64 [a4 + 0xa8] = a2\n 10445: a2 = u64 [s1 + 0xd8]\n 10449: a2 = a2 << 0x20\n 10452: a2 = a2 >> 0x20\n 10455: a0 = a0 << 0x23\n 10458: a0 = a0 | a2\n 10461: a2 = s1 + 0x1f40\n 10465: a2 = a2 << 0x20\n 10468: a2 = a2 >> 0x20\n 10471: a3 = s1 + 0x1f80\n 10475: a3 = a3 << 0x20\n 10478: a3 = a3 | a2\n 10481: a1 = a1 << 0x20\n 10484: a2 = 0x200b0\n 10489: a1 = a1 >> 0x20\n 10492: a4 = u64 [s1 + 0xf8]\n 10496: a4 = a4 << 0x20\n 10499: a4 = a4 | a1\n 10502: a2 = a2 << 0x20\n 10505: a2 = a2 >> 0x20\n 10508: a1 = s1 + 0x1f60\n 10512: a1 = a1 << 0x20\n 10515: a5 = a1 | a2\n 10518: a1 = 0xffffffffffffffff\n 10521: a2 = 0xffffffffffffffff\n 10524: ecalli 1 // 'call'\n 10526: u64 [s1 + 0xf8] = a0\n 10530: a0 = s1 + 0x14a0\n 10534: ra = 294, jump @641\n      : @311 [@dyn 147] (gas: 2)\n 10540: a0 = u64 [s1 + 0xf8]\n 10544: jump @243 if a0 == 0\n      : @312 (gas: 3)\n 10548: a0 = s1 + 0x1480\n 10552: a1 = 0x40\n 10555: ra = 296, jump @2\n      : @313 [@dyn 148] (gas: 16)\n 10561: a2 = s1 + 0x10b8\n 10565: a5 = a2 + 0x300\n 10569: a3 = u64 [a5 + 0xe0]\n 10573: a4 = u64 [a5 + 0xd8]\n 10577: a0 = u64 [a5 + 0xd0]\n 10581: a1 = u64 [a5 + 0xc8]\n 10585: u64 [s1 + 0x130] = a0\n 10589: a0 = a0 | a3\n 10592: u64 [s1 + 0x138] = a1\n 10596: a1 = a1 | a4\n 10599: a1 = a1 | a0\n 10602: a1 = a1 >> 0x20\n 10605: a0 = a0 | a4\n 10608: a0 = a0 << 0x20\n 10611: a0 = a0 | a1\n 10614: jump @315 if a0 == 0\n      : @314 (gas: 1)\n 10617: jump @201\n      : @315 (gas: 10)\n 10620: u64 [a2 + 952] = 0\n 10624: u64 [a2 + 944] = 0\n 10628: u64 [a2 + 936] = 0\n 10632: a0 = 0x8c379a000000000\n 10642: a1 = s1 + 0x1460\n 10646: u64 [a2 + 0x3c0] = a0\n 10650: a0 = u64 [s1 + 0x138]\n 10654: u64 [s1 + 0x128] = a3\n 10658: u64 [s1 + 0x120] = a4\n 10662: ra = 298, jump @4\n      : @316 [@dyn 149] (gas: 1)\n 10668: t0 = 300, jump @660\n      : @317 [@dyn 150] (gas: 1)\n 10674: jump @319 if a0 != 0\n      : @318 (gas: 1)\n 10677: jump @201\n      : @319 (gas: 9)\n 10680: a0 = u64 [s1 + 0x138]\n 10684: i32 a0 = a0 + 0x4\n 10687: a2 = s1 + 0x10b8\n 10691: u64 [a2 + 928] = 0\n 10695: u64 [a2 + 920] = 0\n 10699: u64 [a2 + 904] = 0x20\n 10704: a1 = s1 + 0x1440\n 10708: u64 [a2 + 912] = 0\n 10712: ra = 302, jump @4\n      : @320 [@dyn 151] (gas: 4)\n 10718: a2 = s1 + 0x100\n 10722: a0 = u64 [a2 + 0x20]\n 10725: a0 = a0 + 0xffffffffffffffdc\n 10728: t0 = 304, jump @659\n      : @321 [@dyn 152] (gas: 1)\n 10734: jump @323 if a0 != 0\n      : @322 (gas: 1)\n 10737: jump @201\n      : @323 (gas: 9)\n 10740: a0 = u64 [s1 + 0x138]\n 10744: i32 a0 = a0 + 0x24\n 10747: a2 = s1 + 0x10b8\n 10751: u64 [a2 + 896] = 0\n 10755: u64 [a2 + 888] = 0\n 10759: u64 [a2 + 872] = 0x16\n 10764: a1 = s1 + 0x1420\n 10768: u64 [a2 + 880] = 0\n 10772: ra = 306, jump @4\n      : @324 [@dyn 153] (gas: 3)\n 10778: a0 = 0xffffffbc\n 10788: a2 = s1 + 0x100\n 10792: t0 = 308, jump @659\n      : @325 [@dyn 154] (gas: 1)\n 10798: jump @327 if a0 != 0\n      : @326 (gas: 1)\n 10801: jump @201\n      : @327 (gas: 14)\n 10804: a0 = u64 [s1 + 0x138]\n 10808: i32 a0 = a0 + 0x44\n 10811: a1 = u64 [0x20018]\n 10816: a2 = u64 [0x20020]\n 10821: a3 = u64 [0x20028]\n 10826: a4 = s1 + 0x10b8\n 10830: a5 = a4 + 0x300\n 10834: u64 [a5 + 0x60] = a1\n 10837: u64 [a5 + 0x58] = a2\n 10840: u64 [a5 + 0x50] = a3\n 10843: a1 = s1 + 0x1400\n 10847: u64 [a4 + 840] = 0\n 10851: ra = 0xb8\n 10855: jump @4\n      : @328 (gas: 4)\n 10858: a0 = s1 + 0x7ff\n 10862: a0 = a0 + 0x141\n 10866: a1 = 0x40\n 10869: ra = 310, jump @2\n      : @329 [@dyn 155] (gas: 14)\n 10875: a0 = s1 + 0x7ff\n 10879: a0 = a0 + 0xb9\n 10883: a1 = u64 [a0 + 0xa0]\n 10887: u64 [s1 + 0x130] = a1\n 10891: a1 = u64 [a0 + 0x98]\n 10895: u64 [s1 + 0x128] = a1\n 10899: a1 = u64 [a0 + 0x90]\n 10903: u64 [s1 + 0x120] = a1\n 10907: a0 = u64 [a0 + 0x88]\n 10911: u64 [s1 + 0x138] = a0\n 10915: ra = 0x138\n 10919: ecalli 11 // 'return_data_size'\n 10921: t0 = 0x13a\n 10925: jump @661\n      : @330 [@dyn 156] (gas: 1)\n 10928: t0 = 314, jump @661\n      : @331 [@dyn 157] (gas: 1)\n 10934: jump @333 if a1 == 0\n      : @332 (gas: 1)\n 10937: jump @201\n      : @333 (gas: 3)\n 10940: a2 = a0\n 10942: a0 = a0 >> 0x20\n 10945: jump @335 if a0 == 0\n      : @334 (gas: 1)\n 10948: jump @201\n      : @335 (gas: 1)\n 10951: t0 = 316, jump @668\n      : @336 [@dyn 158] (gas: 1)\n 10957: ra = 318, jump @12\n      : @337 [@dyn 159] (gas: 11)\n 10963: a1 = s1 + 0x18d8\n 10967: a2 = u64 [s1 + 0x128]\n 10971: u32 [a1 + 0x3c8] = a2\n 10975: i32 a0 = a0 + 0\n 10977: a1 = s1 + 0x2000\n 10981: i32 a1 = a1 + 0xfffffffffffffca0\n 10985: a2 = 0\n 10987: ecalli 10 // 'return_data_copy'\n 10989: a0 = s1 + 0x18d8\n 10993: a0 = i32 [a0 + 0x3c8]\n 10997: jump @222\n      : @338 (gas: 20)\n 11000: u64 [s1 + 0x7a0] = a2\n 11004: a0 = u64 [s1 + 0x80]\n 11008: u64 [s1 + 0x7c0] = a0\n 11012: u64 [s1 + 0x7a8] = a3\n 11016: a0 = u64 [s1 + 0x98]\n 11020: u64 [s1 + 0x7c8] = a0\n 11024: u64 [s1 + 0x7b0] = a4\n 11028: a0 = u64 [s1 + 0xa0]\n 11032: u64 [s1 + 0x7d0] = a0\n 11036: u64 [s1 + 0x7b8] = a5\n 11040: a0 = s1 + 0x7e0\n 11044: a1 = s1 + 0x7c0\n 11048: u64 [s1 + 0x110] = a2\n 11052: a2 = s1 + 0x7a0\n 11056: u64 [s1 + 0x108] = a3\n 11060: a3 = u64 [s1 + 0xc8]\n 11064: u64 [s1 + 0x7d8] = a3\n 11068: u64 [s1 + 0x60] = a4\n 11071: u64 [s1 + 0x58] = a5\n 11074: ra = 320, jump @580\n      : @339 [@dyn 160] (gas: 18)\n 11080: a3 = u64 [s1 + 0x7e0]\n 11084: a0 = u64 [s1 + 0x7e8]\n 11088: a1 = u64 [s1 + 0x7f0]\n 11092: a2 = u64 [s1 + 0x7f8]\n 11096: u64 [s1 + 1880] = 0\n 11100: u64 [s1 + 1872] = 0\n 11104: a4 = u64 [s1 + 0x128]\n 11108: u64 [s1 + 0x748] = a4\n 11112: a4 = u64 [s1 + 0xf8]\n 11116: u64 [s1 + 0x740] = a4\n 11120: u64 [s1 + 0x778] = a2\n 11124: u64 [s1 + 0x770] = a1\n 11128: u64 [s1 + 0x768] = a0\n 11132: a0 = s1 + 0x780\n 11136: a1 = s1 + 0x760\n 11140: a2 = s1 + 0x740\n 11144: u64 [s1 + 0x760] = a3\n 11148: ra = 322, jump @588\n      : @340 [@dyn 161] (gas: 28)\n 11154: a0 = u64 [s1 + 0x780]\n 11158: u64 [s1 + 0x130] = a0\n 11162: a0 = u64 [s1 + 0x788]\n 11166: u64 [s1 + 0x138] = a0\n 11170: a0 = u64 [s1 + 0x790]\n 11174: u64 [s1 + 0x128] = a0\n 11178: a0 = u64 [s1 + 0x798]\n 11182: u64 [s1 + 0x120] = a0\n 11186: a0 = u64 [s1 + 0x58]\n 11189: u64 [s1 + 0x6f8] = a0\n 11193: a0 = u64 [s1 + 0x60]\n 11196: u64 [s1 + 0x6f0] = a0\n 11200: a0 = u64 [s1 + 0x108]\n 11204: u64 [s1 + 0x6e8] = a0\n 11208: a0 = u64 [s1 + 0x110]\n 11212: u64 [s1 + 0x6e0] = a0\n 11216: a0 = u64 [s1 + 0xd0]\n 11220: u64 [s1 + 0x718] = a0\n 11224: a0 = u64 [s1 + 0x78]\n 11227: u64 [s1 + 0x710] = a0\n 11231: a0 = u64 [s1 + 0x70]\n 11234: u64 [s1 + 0x708] = a0\n 11238: a0 = s1 + 0x720\n 11242: a1 = s1 + 0x700\n 11246: a2 = s1 + 0x6e0\n 11250: a3 = u64 [s1 + 0x68]\n 11253: u64 [s1 + 0x700] = a3\n 11257: ra = 324, jump @580\n      : @341 [@dyn 162] (gas: 19)\n 11263: a4 = s1 + 0x700\n 11267: a3 = u64 [a4 + 0x20]\n 11270: a0 = u64 [a4 + 0x28]\n 11273: a1 = u64 [a4 + 0x30]\n 11276: a2 = u64 [a4 + 0x38]\n 11279: u64 [s1 + 1688] = 0\n 11283: u64 [s1 + 1680] = 0\n 11287: a4 = u64 [s1 + 0x118]\n 11291: u64 [s1 + 0x688] = a4\n 11295: a4 = u64 [s1 + 0x100]\n 11299: u64 [s1 + 0x680] = a4\n 11303: u64 [s1 + 0x6b8] = a2\n 11307: u64 [s1 + 0x6b0] = a1\n 11311: u64 [s1 + 0x6a8] = a0\n 11315: a0 = s1 + 0x6c0\n 11319: a1 = s1 + 0x6a0\n 11323: a2 = s1 + 0x680\n 11327: u64 [s1 + 0x6a0] = a3\n 11331: ra = 326, jump @588\n      : @342 [@dyn 163] (gas: 32)\n 11337: a1 = s1 + 0x600\n 11341: a2 = u64 [a1 + 0xd8]\n 11345: ra = u64 [s1 + 0x6c8]\n 11349: a0 = u64 [a1 + 0xc0]\n 11353: u64 [s1 + 0x118] = a0\n 11357: a3 = u64 [a1 + 0xd0]\n 11361: a4 = u64 [s1 + 0x120]\n 11365: t2 = a4 ^ a2\n 11368: a1 = u64 [s1 + 0x138]\n 11372: a5 = a1 ^ ra\n 11375: u64 [s1 + 0x110] = a5\n 11379: t1 = a1 <u ra\n 11382: t0 = u64 [s1 + 0x130]\n 11386: a5 = t0 <u a0\n 11389: a0 = u64 [s1 + 0x110]\n 11393: a5 = t1 if a0 != 0\n 11396: a1 = a4 <u a2\n 11399: t1 = u64 [s1 + 0x128]\n 11403: a0 = t1 <u a3\n 11406: a0 = a1 if t2 != 0\n 11409: a1 = a4\n 11411: a4 = t1 ^ a3\n 11414: a4 = a4 | t2\n 11417: a5 = a0 if a4 != 0\n 11420: a0 = t0\n 11422: a1 = a2 if a5 == 0\n 11425: t1 = a3 if a5 == 0\n 11428: a2 = u64 [s1 + 0x138]\n 11432: a2 = ra if a5 == 0\n 11435: a3 = u64 [s1 + 0x118]\n 11439: a0 = a3 if a5 == 0\n 11442: jump @353\n      : @343 (gas: 7)\n 11445: a2 = t0\n 11447: a4 = ra <u 0x3e8\n 11451: a4 = 0 if t2 != 0\n 11453: a5 = u64 [s1 + 0x118]\n 11457: a5 = a5 | a2\n 11460: a4 = 0 if a5 != 0\n 11462: jump @345 if a4 == 0\n      : @344 (gas: 1)\n 11465: jump @520\n      : @345 (gas: 27)\n 11468: a1 = a2\n 11470: a0 = ra + 0xfffffffffffffc18\n 11474: a5 = s1 + 0x100\n 11478: u64 [a5 + 0x30] = a0\n 11481: a0 = a0 <u ra\n 11484: a3 = t2 + a0\n 11487: a4 = a3 + 0xffffffffffffffff\n 11490: a3 = a4 ^ t2\n 11493: u64 [a5 + 0x38] = a4\n 11496: a2 = a4 <u t2\n 11499: a2 = a0 if a3 == 0\n 11502: a0 = a1 + 0xffffffffffffffff\n 11505: a2 = a2 + a0\n 11508: u64 [a5 + 0x28] = a2\n 11511: a0 = a2 <u a0\n 11514: u64 [a5 + 0x20] = a0\n 11517: a0 = a1 <u 0x1\n 11520: a1 = u64 [a5 + 0x18]\n 11523: a1 = a1 - a0\n 11526: u64 [a5 + 0x18] = a1\n 11529: u64 [s1 + 1560] = 0\n 11533: u64 [s1 + 1552] = 0\n 11537: u64 [s1 + 1544] = 0\n 11541: a1 = s1 + 0x600\n 11545: u64 [s1 + 1536] = 0\n 11549: a0 = 0\n 11551: ra = 328, jump @4\n      : @346 [@dyn 164] (gas: 7)\n 11557: u64 [s1 + 1528] = 0\n 11561: u64 [s1 + 1520] = 0\n 11565: u64 [s1 + 1504] = 0x4\n 11570: a0 = 0x20\n 11573: a1 = s1 + 0x5e0\n 11577: u64 [s1 + 1512] = 0\n 11581: ra = 330, jump @4\n      : @347 [@dyn 165] (gas: 2)\n 11587: a1 = i32 [0x200a4]\n 11592: jump @349 if a1 >u 63\n      : @348 (gas: 2)\n 11596: u32 [0x200a4] = 0x40\n 11602: fallthrough\n      : @349 (gas: 17)\n 11603: a0 = u64 [s1 + 0x120]\n 11607: a1 = u64 [s1 + 0x118]\n 11611: a0 = a0 + a1\n 11614: u64 [s1 + 0x120] = a0\n 11618: a0 = sp + 0xffffffffffffffe0\n 11621: a2 = a0 & 0xffffffffffffffe0\n 11624: u64 [s1 + 0x118] = a2\n 11628: sp = a2\n 11630: a0 = 0x200b0\n 11635: i32 a0 = a0 + 0\n 11637: i32 a2 = a2 + 0\n 11639: a1 = 0x40\n 11642: ra = 0x14c\n 11646: ecalli 8 // 'hash_keccak_256'\n 11648: a3 = u64 [s1 + 0x118]\n 11652: t0 = 0x14e\n 11656: jump @670\n      : @350 [@dyn 166] (gas: 2)\n 11659: a3 = u64 [s1 + 0x118]\n 11663: t0 = 334, jump @670\n      : @351 [@dyn 167] (gas: 14)\n 11669: i32 a4 = a4 + 0xfffffffffffff8d8\n 11673: a4 = a4 + s1\n 11676: a5 = a4 + 0x400\n 11680: u64 [a5 + 0x20] = a3\n 11683: u64 [a5 + 0x18] = a2\n 11686: u64 [a5 + 0x10] = a1\n 11689: u64 [a5 + 0x8] = a0\n 11692: u64 [a4 + 1088] = 0\n 11696: u64 [a4 + 1080] = 0\n 11700: u64 [a4 + 1072] = 0\n 11704: u64 [a5 + 40] = 0x3e8\n 11709: a0 = s1 + 0x1ce0\n 11713: a1 = s1 + 0x1d00\n 11717: ra = 336, jump @8\n      : @352 [@dyn 168] (gas: 6)\n 11723: a3 = s1 + 0x100\n 11727: a1 = u64 [a3 + 0x20]\n 11730: a0 = u64 [a3 + 0x30]\n 11733: a2 = u64 [a3 + 0x38]\n 11736: t1 = u64 [s1 + 0x128]\n 11740: fallthrough\n      : @353 (gas: 14)\n 11741: u64 [s1 + 0x130] = a0\n 11745: u64 [s1 + 0x128] = t1\n 11749: a0 = a0 | t1\n 11752: u64 [s1 + 0x138] = a2\n 11756: u64 [s1 + 0x120] = a1\n 11760: a1 = a1 | a2\n 11763: a0 = a0 | a1\n 11766: a0 = a0 >u 0\n 11768: u64 [s1 + 1496] = 0\n 11772: u64 [s1 + 1488] = 0\n 11776: u64 [s1 + 0x5c0] = a0\n 11780: a0 = s1 + 0x5c0\n 11784: u64 [s1 + 1480] = 0\n 11788: ra = 338, jump @621\n      : @354 [@dyn 169] (gas: 12)\n 11794: a0 = u64 [s1 + 0xd8]\n 11798: a0 = a0 << 0x20\n 11801: a0 = a0 >> 0x20\n 11804: u64 [s1 + 1464] = 0\n 11808: u64 [s1 + 0x5b0] = a0\n 11812: a0 = u64 [s1 + 0xe0]\n 11816: u64 [s1 + 0x5a8] = a0\n 11820: a1 = s1 + 0x5a0\n 11824: a0 = u64 [s1 + 0xe8]\n 11828: u64 [s1 + 0x5a0] = a0\n 11832: a0 = 0\n 11834: ra = 340, jump @4\n      : @355 [@dyn 170] (gas: 7)\n 11840: u64 [s1 + 1432] = 0\n 11844: u64 [s1 + 1424] = 0\n 11848: u64 [s1 + 1408] = 0x4\n 11853: a0 = 0x20\n 11856: a1 = s1 + 0x580\n 11860: u64 [s1 + 1416] = 0\n 11864: ra = 342, jump @4\n      : @356 [@dyn 171] (gas: 6)\n 11870: a0 = sp + 0xffffffffffffffe0\n 11873: a0 = a0 & 0xffffffffffffffe0\n 11876: u64 [s1 + 0x118] = a0\n 11880: sp = a0\n 11882: a1 = i32 [0x200a4]\n 11887: jump @358 if a1 >u 63\n      : @357 (gas: 2)\n 11891: u32 [0x200a4] = 0x40\n 11897: fallthrough\n      : @358 (gas: 25)\n 11898: a0 = sp + 0xffffffffffffffe0\n 11901: a2 = a0 & 0xffffffffffffffe0\n 11904: u64 [s1 + 0x110] = a2\n 11908: sp = a2\n 11910: a0 = 0x200b0\n 11915: i32 a0 = a0 + 0\n 11917: i32 a2 = a2 + 0\n 11919: a1 = 0x40\n 11922: ecalli 8 // 'hash_keccak_256'\n 11924: a3 = u64 [s1 + 0x110]\n 11928: a0 = u64 [a3 + 0x18]\n 11931: a1 = u64 [a3 + 0x10]\n 11934: a2 = u64 [a3 + 0x8]\n 11937: a3 = u64 [a3]\n 11939: a0 = reverse a0\n 11941: a4 = reverse a1\n 11943: a2 = reverse a2\n 11945: a3 = reverse a3\n 11947: a1 = u64 [s1 + 0x118]\n 11951: u64 [a1 + 0x18] = a3\n 11954: u64 [a1 + 0x10] = a2\n 11957: u64 [a1 + 0x8] = a4\n 11960: u64 [a1] = a0\n 11962: a0 = s1 + 0x560\n 11966: ra = 344, jump @6\n      : @359 [@dyn 172] (gas: 20)\n 11972: a3 = u64 [s1 + 0x560]\n 11976: a0 = u64 [s1 + 0x568]\n 11980: a1 = u64 [s1 + 0x570]\n 11984: a2 = u64 [s1 + 0x578]\n 11988: a4 = u64 [s1 + 0x120]\n 11992: u64 [s1 + 0x518] = a4\n 11996: a4 = u64 [s1 + 0x128]\n 12000: u64 [s1 + 0x510] = a4\n 12004: a4 = u64 [s1 + 0x138]\n 12008: u64 [s1 + 0x508] = a4\n 12012: a4 = u64 [s1 + 0x130]\n 12016: u64 [s1 + 0x500] = a4\n 12020: u64 [s1 + 0x538] = a2\n 12024: u64 [s1 + 0x530] = a1\n 12028: u64 [s1 + 0x528] = a0\n 12032: a0 = s1 + 0x540\n 12036: a1 = s1 + 0x520\n 12040: a2 = s1 + 0x500\n 12044: u64 [s1 + 0x520] = a3\n 12048: ra = 346, jump @613\n      : @360 [@dyn 173] (gas: 14)\n 12054: a4 = s1 + 0x500\n 12058: a0 = u64 [a4 + 0x58]\n 12061: a1 = u64 [a4 + 0x50]\n 12064: a2 = u64 [a4 + 0x48]\n 12067: a3 = u64 [a4 + 0x40]\n 12070: a4 = s1 + 0x18d8\n 12074: a5 = a4 + 0x400\n 12078: u64 [a5 + 0x60] = a0\n 12081: u64 [a5 + 0x58] = a1\n 12084: u64 [a5 + 0x50] = a2\n 12087: u64 [a5 + 0x48] = a3\n 12090: a1 = s1 + 0x1d20\n 12094: a0 = u64 [s1 + 0x118]\n 12098: ra = 348, jump @8\n      : @361 [@dyn 174] (gas: 8)\n 12104: a0 = s1 + 0x18d8\n 12108: u64 [a0 + 1152] = 0\n 12112: u64 [a0 + 1144] = 0\n 12116: u64 [a0 + 1136] = 0\n 12120: u64 [a0 + 1128] = 0x3\n 12125: a0 = s1 + 0x4e0\n 12129: a1 = s1 + 0x1d40\n 12133: ra = 350, jump @6\n      : @362 [@dyn 175] (gas: 21)\n 12139: a3 = u64 [s1 + 0x4e0]\n 12143: a0 = u64 [s1 + 0x4e8]\n 12147: a1 = u64 [s1 + 0x4f0]\n 12151: a2 = u64 [s1 + 0x4f8]\n 12155: a5 = s1 + 0x100\n 12159: a4 = u64 [a5 + 0x20]\n 12162: u64 [s1 + 0x498] = a4\n 12166: a4 = u64 [a5 + 0x28]\n 12169: u64 [s1 + 0x490] = a4\n 12173: a4 = u64 [a5 + 0x38]\n 12176: u64 [s1 + 0x488] = a4\n 12180: a4 = u64 [a5 + 0x30]\n 12183: u64 [s1 + 0x480] = a4\n 12187: u64 [s1 + 0x4b8] = a2\n 12191: u64 [s1 + 0x4b0] = a1\n 12195: u64 [s1 + 0x4a8] = a0\n 12199: a0 = s1 + 0x4c0\n 12203: a1 = s1 + 0x4a0\n 12207: a2 = s1 + 0x480\n 12211: u64 [s1 + 0x4a0] = a3\n 12215: ra = 352, jump @613\n      : @363 [@dyn 176] (gas: 17)\n 12221: a0 = u64 [s1 + 0x4c0]\n 12225: a1 = u64 [s1 + 0x4c8]\n 12229: a2 = u64 [s1 + 0x4d0]\n 12233: a3 = u64 [s1 + 0x4d8]\n 12237: a4 = s1 + 0x18d8\n 12241: u64 [a4 + 1184] = 0\n 12245: u64 [a4 + 1176] = 0\n 12249: u64 [a4 + 1168] = 0\n 12253: u64 [a4 + 1160] = 0x3\n 12258: a5 = a4 + 0x400\n 12262: u64 [a5 + 0xc0] = a3\n 12266: u64 [a5 + 0xb8] = a2\n 12270: u64 [a5 + 0xb0] = a1\n 12274: u64 [a5 + 0xa8] = a0\n 12278: a0 = s1 + 0x1d60\n 12282: a1 = s1 + 0x1d80\n 12286: ra = 354, jump @8\n      : @364 [@dyn 177] (gas: 8)\n 12292: a0 = s1 + 0x18d8\n 12296: u64 [a0 + 1248] = 0\n 12300: u64 [a0 + 1240] = 0\n 12304: u64 [a0 + 1232] = 0\n 12308: u64 [a0 + 1224] = 0x2\n 12313: a0 = s1 + 0x460\n 12317: a1 = s1 + 0x1da0\n 12321: ra = 356, jump @6\n      : @365 [@dyn 178] (gas: 30)\n 12327: a0 = u64 [s1 + 0x88]\n 12331: a2 = a0 >> 0x10\n 12334: a5 = u64 [s1 + 0x90]\n 12338: a1 = a5 << 0x30\n 12341: t0 = a2 | a1\n 12344: a1 = u64 [s1 + 0xa8]\n 12348: a1 = a1 & 0xffffffffffffffff\n 12351: a2 = u32 [s1 + 0x47c]\n 12355: a3 = u64 [s1 + 0xb0]\n 12359: a4 = u64 [s1 + 0xb8]\n 12363: a3 = a3 & a4\n 12366: a4 = a0 << 0x30\n 12369: a3 = a3 | a4\n 12372: a2 = a2 << 0x20\n 12375: a4 = a5 << 0x10\n 12378: a4 = a4 >> 0x20\n 12381: a2 = a2 | a4\n 12384: a0 = s1 + 0x18d8\n 12388: u64 [a0 + 1256] = 0x2\n 12393: u64 [a0 + 0x518] = t0\n 12397: a4 = a0 + 0x500\n 12401: u64 [a4 + 0x10] = a3\n 12404: u64 [a4 + 0x8] = a1\n 12407: u64 [a4 + 0x20] = a2\n 12410: u64 [a0 + 1280] = 0\n 12414: u64 [a0 + 1272] = 0\n 12418: u64 [a0 + 1264] = 0\n 12422: a0 = s1 + 0x1dc0\n 12426: a1 = s1 + 0x1de0\n 12430: ra = 358, jump @8\n      : @366 [@dyn 179] (gas: 3)\n 12436: a0 = s1 + 0x440\n 12440: a1 = 0x40\n 12443: ra = 360, jump @2\n      : @367 [@dyn 180] (gas: 13)\n 12449: a0 = s1 + 0x400\n 12453: a4 = u64 [a0 + 0x58]\n 12456: a5 = u64 [a0 + 0x50]\n 12459: a3 = u64 [a0 + 0x48]\n 12462: a2 = u64 [a0 + 0x40]\n 12465: a0 = a3 | a4\n 12468: a1 = a2 | a5\n 12471: a1 = a1 | a0\n 12474: a1 = a1 >> 0x20\n 12477: a0 = a0 | a5\n 12480: a0 = a0 << 0x20\n 12483: a0 = a0 | a1\n 12486: jump @369 if a0 == 0\n      : @368 (gas: 1)\n 12489: jump @201\n      : @369 (gas: 15)\n 12492: a0 = u64 [s1 + 0x80]\n 12496: u64 [s1 + 0x420] = a0\n 12500: a0 = u64 [s1 + 0x98]\n 12504: u64 [s1 + 0x428] = a0\n 12508: a0 = u64 [s1 + 0xa0]\n 12512: u64 [s1 + 0x430] = a0\n 12516: a1 = s1 + 0x420\n 12520: a0 = u64 [s1 + 0xc8]\n 12524: u64 [s1 + 0x438] = a0\n 12528: a0 = a2\n 12530: u64 [s1 + 0x118] = a2\n 12534: u64 [s1 + 0x110] = a3\n 12538: u64 [s1 + 0x108] = a4\n 12542: u64 [s1 + 0x100] = a5\n 12546: ra = 362, jump @4\n      : @370 [@dyn 181] (gas: 11)\n 12552: a4 = s1 + 0x100\n 12556: a2 = u64 [a4 + 0x18]\n 12559: a0 = u64 [a4 + 0x8]\n 12562: a1 = u64 [a4]\n 12564: a0 = a0 | a1\n 12567: a1 = 0xffffffe0\n 12577: a1 = a2 <u a1\n 12580: a3 = u64 [a4 + 0x10]\n 12583: a1 = 0 if a3 != 0\n 12585: a1 = 0 if a0 != 0\n 12587: jump @372 if a1 != 0\n      : @371 (gas: 1)\n 12590: jump @201\n      : @372 (gas: 12)\n 12593: i32 a0 = a2 + 0x20\n 12596: a1 = u64 [s1 + 0x68]\n 12599: a3 = s1 + 0x400\n 12603: u64 [a3] = a1\n 12605: a1 = u64 [s1 + 0x70]\n 12608: u64 [a3 + 0x8] = a1\n 12611: a1 = u64 [s1 + 0x78]\n 12614: u64 [a3 + 0x10] = a1\n 12617: a1 = s1 + 0x400\n 12621: a2 = u64 [s1 + 0xd0]\n 12625: u64 [a3 + 0x18] = a2\n 12628: ra = 364, jump @4\n      : @373 [@dyn 182] (gas: 6)\n 12634: a0 = u64 [s1 + 0xc0]\n 12638: ra = 0x16e\n 12642: ecalli 5 // 'caller'\n 12644: a2 = u64 [s1 + 0xf0]\n 12648: t0 = 0x170\n 12652: jump @677\n      : @374 [@dyn 183] (gas: 2)\n 12655: a2 = u64 [s1 + 0xf0]\n 12659: t0 = 368, jump @677\n      : @375 [@dyn 184] (gas: 48)\n 12665: t0 = a1 | a0\n 12668: a3 = a3 >> 0x20\n 12671: a2 = reverse a2\n 12673: a1 = a2 << 0x20\n 12676: a1 = a1 | a3\n 12679: a2 = a2 >> 0x20\n 12682: u64 [s1 + 984] = 0\n 12686: a3 = u64 [0x20068]\n 12691: a4 = u64 [0x20070]\n 12696: a5 = u64 [0x20078]\n 12701: a0 = u64 [0x20080]\n 12706: u64 [s1 + 0x3f8] = a3\n 12710: u64 [s1 + 0x3f0] = a4\n 12714: u64 [s1 + 0x3e8] = a5\n 12718: u64 [s1 + 0x3e0] = a0\n 12722: u64 [s1 + 0x3d0] = a2\n 12726: u64 [s1 + 0x3c8] = a1\n 12730: a1 = 0x40\n 12733: a2 = s1 + 0x3e0\n 12737: a3 = s1 + 0x3c0\n 12741: u64 [s1 + 0x3c0] = t0\n 12745: a0 = u64 [s1 + 0x118]\n 12749: ra = 0x172\n 12753: sp = sp + 0xffffffffffffff60\n 12757: u64 [sp + 0x98] = ra\n 12761: u64 [sp + 0x90] = s0\n 12765: u64 [sp + 0x88] = s1\n 12769: s0 = sp + 0xa0\n 12773: sp = sp & 0xffffffffffffffe0\n 12776: a4 = u64 [a3]\n 12778: u64 [sp + 0x38] = a4\n 12781: a4 = u64 [a3 + 0x8]\n 12784: u64 [sp + 0x30] = a4\n 12787: a4 = u64 [a3 + 0x10]\n 12790: u64 [sp + 0x28] = a4\n 12793: a3 = u64 [a3 + 0x18]\n 12796: u64 [sp + 0x20] = a3\n 12799: a3 = u64 [a2]\n 12801: u64 [sp + 0x18] = a3\n 12804: a3 = u64 [a2 + 0x8]\n 12807: u64 [sp + 0x10] = a3\n 12810: a3 = u64 [a2 + 0x10]\n 12813: u64 [sp + 0x8] = a3\n 12816: a2 = u64 [a2 + 0x18]\n 12819: u64 [sp] = a2\n 12821: s1 = a1\n 12823: ra = 0x8\n 12826: jump @12\n      : @376 [@dyn 185] (gas: 3)\n 12829: a0 = s1 + 0x3a0\n 12833: a1 = 0x40\n 12836: ra = 372, jump @2\n      : @377 [@dyn 186] (gas: 13)\n 12842: a4 = s1 + 0x300\n 12846: a0 = u64 [a4 + 0xb8]\n 12850: a1 = u64 [a4 + 0xb0]\n 12854: a2 = u64 [a4 + 0xa8]\n 12858: a3 = u64 [a4 + 0xa0]\n 12862: a0 = a0 | a2\n 12865: a2 = a3 | a1\n 12868: a2 = a2 | a0\n 12871: a2 = a2 >> 0x20\n 12874: a0 = a0 | a1\n 12877: a0 = a0 << 0x20\n 12880: a0 = a0 | a2\n 12883: jump @379 if a0 == 0\n      : @378 (gas: 1)\n 12886: jump @201\n      : @379 (gas: 15)\n 12889: a2 = s1 + 0x100\n 12893: a0 = u64 [a2 + 0x30]\n 12896: a4 = s1 + 0x300\n 12900: u64 [a4 + 0x80] = a0\n 12904: a0 = u64 [a2 + 0x38]\n 12907: u64 [a4 + 0x88] = a0\n 12911: a0 = u64 [a2 + 0x28]\n 12914: u64 [a4 + 0x90] = a0\n 12918: a1 = s1 + 0x380\n 12922: a0 = u64 [a2 + 0x20]\n 12925: u64 [a4 + 0x98] = a0\n 12929: a0 = a3\n 12931: u64 [s1 + 0x138] = a3\n 12935: ra = 0x1d6\n 12939: jump @4\n      : @380 (gas: 3)\n 12942: a0 = s1 + 0x1360\n 12946: a1 = 0x40\n 12949: ra = 374, jump @2\n      : @381 [@dyn 187] (gas: 3)\n 12955: a0 = s1 + 0x10b8\n 12959: a2 = a0 + 0x200\n 12963: t0 = 376, jump @674\n      : @382 [@dyn 188] (gas: 4)\n 12969: ra = 0x17a\n 12973: ecalli 11 // 'return_data_size'\n 12975: t0 = 0x17c\n 12979: jump @661\n      : @383 [@dyn 189] (gas: 1)\n 12982: t0 = 380, jump @661\n      : @384 [@dyn 190] (gas: 1)\n 12988: jump @386 if a1 == 0\n      : @385 (gas: 1)\n 12991: jump @201\n      : @386 (gas: 3)\n 12994: a2 = a0\n 12996: a0 = a0 >> 0x20\n 12999: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 13002: jump @201\n      : @388 (gas: 1)\n 13005: t0 = 382, jump @668\n      : @389 [@dyn 191] (gas: 1)\n 13011: ra = 384, jump @12\n      : @390 [@dyn 192] (gas: 11)\n 13017: a1 = s1 + 0x18d8\n 13021: a2 = u64 [s1 + 0x128]\n 13025: u32 [a1 + 0x748] = a2\n 13029: i32 a0 = a0 + 0\n 13031: a1 = s1 + 0x2000\n 13035: i32 a1 = a1 + 0x20\n 13038: a2 = 0\n 13040: ecalli 10 // 'return_data_copy'\n 13042: a0 = s1 + 0x18d8\n 13046: a0 = i32 [a0 + 0x748]\n 13050: jump @222\n      : @391 (gas: 3)\n 13053: a0 = s1 + 0x16a0\n 13057: a1 = 0x40\n 13060: ra = 386, jump @2\n      : @392 [@dyn 193] (gas: 15)\n 13066: a2 = s1 + 0x10b8\n 13070: a4 = u64 [a2 + 0x600]\n 13074: a0 = a2 + 0x500\n 13078: a5 = u64 [a0 + 0xf8]\n 13082: a3 = u64 [a0 + 0xf0]\n 13086: a1 = u64 [a0 + 0xe8]\n 13090: a0 = a3 | a4\n 13093: u64 [s1 + 0x138] = a1\n 13097: a1 = a1 | a5\n 13100: a1 = a1 | a0\n 13103: a1 = a1 >> 0x20\n 13106: a0 = a0 | a5\n 13109: a0 = a0 << 0x20\n 13112: a0 = a0 | a1\n 13115: jump @394 if a0 == 0\n      : @393 (gas: 1)\n 13118: jump @201\n      : @394 (gas: 11)\n 13121: u64 [a2 + 1496] = 0\n 13125: u64 [a2 + 1488] = 0\n 13129: u64 [a2 + 1480] = 0\n 13133: a0 = 0x8c379a000000000\n 13143: a1 = s1 + 0x1680\n 13147: u64 [a2 + 0x5e0] = a0\n 13151: a0 = u64 [s1 + 0x138]\n 13155: u64 [s1 + 0x130] = a3\n 13159: u64 [s1 + 0x128] = a4\n 13163: u64 [s1 + 0x120] = a5\n 13167: ra = 388, jump @4\n      : @395 [@dyn 194] (gas: 12)\n 13173: a5 = s1 + 0x100\n 13177: a2 = u64 [a5 + 0x30]\n 13180: a0 = u64 [a5 + 0x28]\n 13183: a1 = u64 [a5 + 0x20]\n 13186: a1 = a1 | a0\n 13189: a3 = 0x100000000\n 13199: a0 = 0xfffffffc\n 13209: a4 = u64 [a5 + 0x38]\n 13212: a0 = a4 <u a0\n 13215: a0 = 0 if a2 != 0\n 13217: a0 = 0 if a1 != 0\n 13219: jump @397 if a0 != 0\n      : @396 (gas: 1)\n 13222: jump @201\n      : @397 (gas: 11)\n 13225: a0 = u64 [s1 + 0x138]\n 13229: i32 a0 = a0 + 0x4\n 13232: u64 [s1 + 0x120] = a3\n 13236: a3 = s1 + 0x10b8\n 13240: u64 [a3 + 1472] = 0\n 13244: u64 [a3 + 1464] = 0\n 13248: u64 [s1 + 0x128] = a1\n 13252: u64 [a3 + 1448] = 0x20\n 13257: a1 = s1 + 0x1660\n 13261: u64 [a3 + 1456] = 0\n 13265: ra = 390, jump @4\n      : @398 [@dyn 195] (gas: 4)\n 13271: a2 = s1 + 0x100\n 13275: a0 = u64 [a2 + 0x20]\n 13278: a0 = a0 + 0xffffffffffffffdc\n 13281: t0 = 392, jump @659\n      : @399 [@dyn 196] (gas: 1)\n 13287: jump @401 if a0 != 0\n      : @400 (gas: 1)\n 13290: jump @201\n      : @401 (gas: 9)\n 13293: a0 = u64 [s1 + 0x138]\n 13297: i32 a0 = a0 + 0x24\n 13300: a2 = s1 + 0x10b8\n 13304: u64 [a2 + 1440] = 0\n 13308: u64 [a2 + 1432] = 0\n 13312: u64 [a2 + 1416] = 0x16\n 13317: a1 = s1 + 0x1640\n 13321: u64 [a2 + 1424] = 0\n 13325: ra = 394, jump @4\n      : @402 [@dyn 197] (gas: 3)\n 13331: a0 = 0xffffffbc\n 13341: a2 = s1 + 0x100\n 13345: t0 = 396, jump @659\n      : @403 [@dyn 198] (gas: 1)\n 13351: jump @405 if a0 != 0\n      : @404 (gas: 1)\n 13354: jump @201\n      : @405 (gas: 14)\n 13357: a0 = u64 [s1 + 0x138]\n 13361: i32 a0 = a0 + 0x44\n 13364: a1 = u64 [0x20018]\n 13369: a2 = u64 [0x20020]\n 13374: a3 = s1 + 0x10b8\n 13378: a4 = a3 + 0x500\n 13382: u64 [a4 + 0x80] = a1\n 13386: u64 [a4 + 0x78] = a2\n 13389: a1 = 0x544f4b454e300000\n 13399: u64 [a4 + 0x70] = a1\n 13402: a1 = s1 + 0x1620\n 13406: u64 [a3 + 1384] = 0\n 13410: ra = 0xb8\n 13414: jump @4\n      : @406 (gas: 3)\n 13417: a0 = s1 + 0x1260\n 13421: a1 = 0x40\n 13424: ra = 398, jump @2\n      : @407 [@dyn 199] (gas: 3)\n 13430: a0 = s1 + 0x10b8\n 13434: a2 = a0 + 0x100\n 13438: t0 = 400, jump @674\n      : @408 [@dyn 200] (gas: 4)\n 13444: ra = 0x192\n 13448: ecalli 11 // 'return_data_size'\n 13450: t0 = 0x194\n 13454: jump @661\n      : @409 [@dyn 201] (gas: 1)\n 13457: t0 = 404, jump @661\n      : @410 [@dyn 202] (gas: 1)\n 13463: jump @412 if a1 == 0\n      : @411 (gas: 1)\n 13466: jump @201\n      : @412 (gas: 3)\n 13469: a1 = a0\n 13471: a0 = a0 >> 0x20\n 13474: jump @414 if a0 == 0\n      : @413 (gas: 1)\n 13477: jump @201\n      : @414 (gas: 5)\n 13480: u64 [s1 + 0x128] = a1\n 13484: i32 a0 = a1 + 0\n 13486: u64 [s1 + 0x130] = a0\n 13490: a0 = u64 [s1 + 0x138]\n 13494: ra = 406, jump @12\n      : @415 [@dyn 203] (gas: 11)\n 13500: a1 = s1 + 0x18d8\n 13504: a2 = u64 [s1 + 0x128]\n 13508: u32 [a1 + 0x7e8] = a2\n 13512: i32 a0 = a0 + 0\n 13514: a1 = s1 + 0x2000\n 13518: i32 a1 = a1 + 0xc0\n 13522: a2 = 0\n 13524: ecalli 10 // 'return_data_copy'\n 13526: a0 = s1 + 0x18d8\n 13530: a0 = i32 [a0 + 0x7e8]\n 13534: jump @222\n      : @416 (gas: 6)\n 13537: u64 [s1 + 80] = 0\n 13540: u64 [s1 + 88] = 0\n 13543: u64 [s1 + 96] = 0\n 13546: u64 [s1 + 104] = 0\n 13549: a1 = s1 + 0x10b8\n 13553: fallthrough\n      : @417 (gas: 21)\n 13554: a3 = s1 + 0x7ff\n 13558: a3 = a3 + 0xb9\n 13562: a5 = s1 + 0x100\n 13566: a0 = u64 [a5]\n 13568: u64 [a3 + 0x7c8] = a0\n 13572: u64 [a1 + 0] = 0\n 13574: u64 [a1 + 4294967288] = 0\n 13577: a0 = u64 [s1 + 0x98]\n 13581: u64 [a1 + 0xffffffffffffffe8] = a0\n 13584: a0 = u64 [a5 + 0x8]\n 13587: u64 [a3 + 0x7d0] = a0\n 13591: a0 = u64 [s1 + 0x90]\n 13595: u64 [a1 + 0xfffffffffffffff0] = a0\n 13598: a0 = u64 [a5 + 0x10]\n 13601: u64 [a3 + 0x7d8] = a0\n 13605: a0 = s1 + 0x10c0\n 13609: a1 = s1 + 0x10a0\n 13613: a2 = s1 + 0x1080\n 13617: a4 = u64 [a5 + 0x18]\n 13620: u64 [a3 + 0x7e0] = a4\n 13624: ra = 408, jump @573\n      : @418 [@dyn 204] (gas: 21)\n 13630: a2 = s1 + 0x10b8\n 13634: a0 = u64 [a2 + 0x20]\n 13637: a1 = u64 [a2 + 0x8]\n 13640: t1 = u64 [a2 + 0x18]\n 13643: a3 = u64 [a2 + 0x10]\n 13646: a5 = u64 [s1 + 0x80]\n 13650: a4 = a5 ^ a0\n 13653: a0 = a0 <u a5\n 13656: a2 = u64 [s1 + 0x70]\n 13659: a5 = t1 <u a2\n 13662: a5 = a0 if a4 != 0\n 13665: a0 = u64 [s1 + 0xd0]\n 13669: t0 = a0 ^ a3\n 13672: a3 = a3 <u a0\n 13675: a0 = u64 [s1 + 0xf8]\n 13679: a1 = a1 <u a0\n 13682: a1 = a3 if t0 != 0\n 13685: a0 = a2 ^ t1\n 13688: a0 = a0 | a4\n 13691: a1 = a5 if a0 != 0\n 13694: jump @422 if a1 == 0\n      : @419 (gas: 23)\n 13698: a1 = s1 + 0x7ff\n 13702: a1 = a1 + 0xb9\n 13706: a5 = s1 + 0x100\n 13710: a0 = u64 [a5]\n 13712: a2 = a1 + 0x700\n 13716: u64 [a2 + 0x68] = a0\n 13719: u64 [a1 + 1952] = 0\n 13723: u64 [a1 + 1944] = 0\n 13727: a0 = u64 [s1 + 0x98]\n 13731: u64 [a2 + 0x88] = a0\n 13735: a0 = u64 [a5 + 0x8]\n 13738: u64 [a2 + 0x70] = a0\n 13741: a0 = u64 [s1 + 0x90]\n 13745: u64 [a2 + 0x90] = a0\n 13749: a0 = u64 [a5 + 0x10]\n 13752: u64 [a2 + 0x78] = a0\n 13755: a4 = a1\n 13757: a0 = s1 + 0x1060\n 13761: a1 = s1 + 0x1040\n 13765: a2 = s1 + 0x1020\n 13769: a3 = u64 [a5 + 0x18]\n 13772: u64 [a4 + 0x780] = a3\n 13776: ra = 410, jump @573\n      : @420 [@dyn 205] (gas: 25)\n 13782: a4 = s1 + 0x7ff\n 13786: a4 = a4 + 0xb9\n 13790: a5 = a4 + 0x700\n 13794: a0 = u64 [a5 + 0xa8]\n 13798: a1 = u64 [a5 + 0xb0]\n 13802: a2 = u64 [a5 + 0xb8]\n 13806: a3 = u64 [a5 + 0xc0]\n 13810: u64 [a5 + 0x20] = a3\n 13813: u64 [a5 + 0x18] = a2\n 13816: u64 [a5 + 0x10] = a1\n 13819: u64 [a5 + 0x8] = a0\n 13822: a0 = u64 [s1 + 0x80]\n 13826: u64 [a5 + 0x40] = a0\n 13829: a0 = u64 [s1 + 0x70]\n 13832: u64 [a5 + 0x38] = a0\n 13835: a0 = u64 [s1 + 0xd0]\n 13839: u64 [a5 + 0x30] = a0\n 13842: a0 = s1 + 0x1000\n 13846: a1 = s1 + 0x7ff\n 13850: a1 = a1 + 0x7e1\n 13854: a2 = s1 + 0x7ff\n 13858: a2 = a2 + 0x7c1\n 13862: a3 = u64 [s1 + 0xf8]\n 13866: u64 [a5 + 0x28] = a3\n 13869: ra = 412, jump @573\n      : @421 [@dyn 206] (gas: 8)\n 13875: a0 = s1 + 0x7ff\n 13879: a0 = a0 + 0xb9\n 13883: a5 = a0 + 0x700\n 13887: a3 = u64 [a5 + 0x60]\n 13890: a4 = u64 [a5 + 0x58]\n 13893: a1 = u64 [a5 + 0x50]\n 13896: a2 = u64 [a5 + 0x48]\n 13899: jump @423\n      : @422 (gas: 4)\n 13901: a2 = 0\n 13903: a4 = 0\n 13905: a3 = 0\n 13907: fallthrough\n      : @423 (gas: 16)\n 13908: a0 = u64 [s1 + 0x58]\n 13911: u64 [s1 + 0x38] = a1\n 13914: a0 = a0 | a1\n 13917: a1 = u64 [s1 + 0x50]\n 13920: u64 [s1 + 0x30] = a2\n 13923: a1 = a1 | a2\n 13926: a2 = u64 [s1 + 0x60]\n 13929: u64 [s1 + 0x40] = a4\n 13932: a2 = a2 | a4\n 13935: a1 = a1 | a2\n 13938: a2 = u64 [s1 + 0x68]\n 13941: u64 [s1 + 0x48] = a3\n 13944: a2 = a2 | a3\n 13947: a0 = a0 | a2\n 13950: a0 = a0 | a1\n 13953: jump @450 if a0 == 0\n      : @424 (gas: 25)\n 13957: a2 = 0x3e8\n 13961: ra = u64 [s1 + 0xc0]\n 13965: t1 = ra mulhu a2\n 13968: a5 = u64 [s1 + 0xb8]\n 13972: a0 = a5 * a2\n 13975: t1 = t1 + a0\n 13978: u64 [s1 + 0x28] = t1\n 13981: a0 = t1 <u a0\n 13984: a1 = a5 mulhu a2\n 13987: a0 = a0 + a1\n 13990: a4 = u64 [s1 + 0x88]\n 13994: t2 = a4 * a2\n 13997: t2 = t2 + a0\n 14000: u64 [s1 + 0x20] = t2\n 14003: a3 = t2 <u a0\n 14006: t0 = a4 mulhu a2\n 14009: a0 = u64 [s1 + 0xb0]\n 14013: a1 = a0 * a2\n 14016: a1 = a1 + t0\n 14019: a4 = ra | a4\n 14022: a5 = a5 | a0\n 14025: a4 = a4 | a5\n 14028: a0 = a1 + a3\n 14031: u64 [s1 + 0x88] = a0\n 14035: jump @426 if a4 == 0\n      : @425 (gas: 9)\n 14038: a0 = u64 [s1 + 0x88]\n 14042: a3 = 0 if a0 != 0\n 14044: a0 = a1 <u t0\n 14047: a1 = u64 [s1 + 0xb0]\n 14051: a1 = a1 mulhu a2\n 14054: a1 = a1 >u 0\n 14056: a0 = a0 | a1\n 14059: a0 = a0 | a3\n 14062: jump @528 if a0 != 0\n      : @426 (gas: 21)\n 14066: ra = u64 [s1 + 0xf8]\n 14070: t0 = ra mulhu a2\n 14073: a4 = u64 [s1 + 0xd0]\n 14077: a0 = a4 * 0x3e8\n 14081: t0 = t0 + a0\n 14084: a0 = t0 <u a0\n 14087: a1 = a4 mulhu a2\n 14090: a0 = a0 + a1\n 14093: a1 = u64 [s1 + 0x70]\n 14096: a5 = a1 * 0x3e8\n 14100: t1 = a0 + a5\n 14103: a3 = t1 <u a0\n 14106: t2 = a1 mulhu a2\n 14109: a5 = u64 [s1 + 0x80]\n 14113: a0 = a5 * 0x3e8\n 14117: a0 = a0 + t2\n 14120: a1 = ra | a1\n 14123: a5 = a5 | a4\n 14126: a4 = a1 | a5\n 14129: ra = a0 + a3\n 14132: jump @428 if a4 == 0\n      : @427 (gas: 8)\n 14135: a3 = 0 if ra != 0\n 14137: a0 = a0 <u t2\n 14140: a1 = u64 [s1 + 0x80]\n 14144: a1 = a1 mulhu a2\n 14147: a1 = a1 >u 0\n 14149: a0 = a0 | a1\n 14152: a0 = a0 | a3\n 14155: jump @534 if a0 != 0\n      : @428 (gas: 26)\n 14159: a0 = u64 [s1 + 0xc0]\n 14163: a0 = a0 * 0x3e8\n 14167: a1 = u64 [s1 + 0xf8]\n 14171: a1 = a1 * 0x3e8\n 14175: a2 = s1 + 0x7ff\n 14179: a2 = a2 + 0xb9\n 14183: a3 = a2 + 0x500\n 14187: u64 [a3 + 0x88] = a1\n 14191: u64 [a3 + 0xa8] = a0\n 14195: u64 [a2 + 0x590] = t0\n 14199: a0 = u64 [s1 + 0x28]\n 14202: u64 [a3 + 0xb0] = a0\n 14206: u64 [a2 + 0x598] = t1\n 14210: a0 = u64 [s1 + 0x20]\n 14213: u64 [a3 + 0xb8] = a0\n 14217: u64 [a2 + 0x5a0] = ra\n 14221: a4 = a2\n 14223: a0 = s1 + 0x7ff\n 14227: a0 = a0 + 0x681\n 14231: a1 = s1 + 0x7ff\n 14235: a1 = a1 + 0x661\n 14239: a2 = s1 + 0x7ff\n 14243: a2 = a2 + 0x641\n 14247: a3 = u64 [s1 + 0x88]\n 14251: u64 [a4 + 0x5c0] = a3\n 14255: ra = 414, jump @580\n      : @429 [@dyn 207] (gas: 31)\n 14261: a1 = s1 + 0x7ff\n 14265: a1 = a1 + 0xb9\n 14269: a2 = a1 + 0x500\n 14273: a0 = u64 [a2 + 0xe0]\n 14277: u64 [s1 + 0x88] = a0\n 14281: a0 = u64 [a2 + 0xd8]\n 14285: u64 [s1 + 0xb0] = a0\n 14289: a0 = u64 [a2 + 0xd0]\n 14293: u64 [s1 + 0x80] = a0\n 14297: a0 = u64 [a2 + 0xc8]\n 14301: u64 [s1 + 0x70] = a0\n 14304: u64 [a1 + 1344] = 0\n 14308: u64 [a1 + 1336] = 0\n 14312: a0 = u64 [s1 + 0x90]\n 14316: u64 [a2 + 0x30] = a0\n 14319: a0 = u64 [s1 + 0x98]\n 14323: u64 [a2 + 0x28] = a0\n 14326: u64 [a1 + 1376] = 0\n 14330: u64 [a1 + 1368] = 0\n 14334: a0 = u64 [s1 + 0xa0]\n 14338: u64 [a2 + 0x50] = a0\n 14341: a4 = a1\n 14343: a0 = s1 + 0x7ff\n 14347: a0 = a0 + 0x621\n 14351: a1 = s1 + 0x7ff\n 14355: a1 = a1 + 0x601\n 14359: a2 = s1 + 0x7ff\n 14363: a2 = a2 + 0x5e1\n 14367: a3 = u64 [s1 + 0xa8]\n 14371: u64 [a4 + 0x548] = a3\n 14375: ra = 416, jump @580\n      : @430 [@dyn 208] (gas: 24)\n 14381: a0 = s1 + 0x7ff\n 14385: a0 = a0 + 0xb9\n 14389: t0 = u64 [a0 + 0x580]\n 14393: a4 = u64 [a0 + 0x578]\n 14397: ra = u64 [a0 + 0x568]\n 14401: a1 = u64 [a0 + 0x570]\n 14405: a3 = 0xf4240\n 14410: a2 = ra mulhu a3\n 14413: a0 = a1 * a3\n 14416: a2 = a2 + a0\n 14419: a0 = a2 <u a0\n 14422: a5 = a1 mulhu a3\n 14425: a0 = a0 + a5\n 14428: t2 = a4 * a3\n 14431: t2 = t2 + a0\n 14434: a5 = t2 <u a0\n 14437: a0 = t0 * a3\n 14440: t1 = a4 mulhu a3\n 14443: a0 = a0 + t1\n 14446: a1 = a1 | t0\n 14449: a4 = ra | a4\n 14452: a1 = a1 | a4\n 14455: a4 = a0 + a5\n 14458: jump @432 if a1 == 0\n      : @431 (gas: 7)\n 14461: a5 = 0 if a4 != 0\n 14463: a0 = a0 <u t1\n 14466: a1 = t0 mulhu a3\n 14469: a1 = a1 >u 0\n 14471: a0 = a0 | a1\n 14474: a0 = a0 | a5\n 14477: jump @540 if a0 != 0\n      : @432 (gas: 17)\n 14481: a0 = ra * 0xf4240\n 14486: a1 = u64 [s1 + 0x70]\n 14489: a0 = a1 <u a0\n 14492: a3 = u64 [s1 + 0x80]\n 14496: a1 = a3 ^ a2\n 14499: a2 = a3 <u a2\n 14502: a2 = a0 if a1 == 0\n 14505: a5 = u64 [s1 + 0xb0]\n 14509: a0 = a5 <u t2\n 14512: a3 = u64 [s1 + 0x88]\n 14516: a1 = a3 ^ a4\n 14519: a3 = a3 <u a4\n 14522: a3 = a0 if a1 == 0\n 14525: a0 = a5 ^ t2\n 14528: a0 = a0 | a1\n 14531: a3 = a2 if a0 == 0\n 14534: jump @467 if a3 == 0\n      : @433 (gas: 4)\n 14538: a0 = s1 + 0x7ff\n 14542: a0 = a0 + 0x461\n 14546: a1 = 0x40\n 14549: ra = 418, jump @2\n      : @434 [@dyn 209] (gas: 8)\n 14555: a0 = s1 + 0x7ff\n 14559: a0 = a0 + 0xb9\n 14563: a5 = a0 + 0x300\n 14567: a3 = u64 [a5 + 0xc0]\n 14571: a4 = u64 [a5 + 0xb8]\n 14575: a2 = u64 [a5 + 0xb0]\n 14579: a1 = u64 [a5 + 0xa8]\n 14583: t0 = 420, jump @669\n      : @435 [@dyn 210] (gas: 1)\n 14589: jump @437 if a0 == 0\n      : @436 (gas: 1)\n 14592: jump @201\n      : @437 (gas: 11)\n 14595: a2 = s1 + 0x7ff\n 14599: a2 = a2 + 0xb9\n 14603: u64 [a2 + 920] = 0\n 14607: u64 [a2 + 912] = 0\n 14611: u64 [a2 + 904] = 0\n 14615: a0 = 0x8c379a000000000\n 14625: a1 = s1 + 0x7ff\n 14629: a1 = a1 + 0x441\n 14633: u64 [a2 + 0x3a0] = a0\n 14637: a0 = u64 [s1 + 0x138]\n 14641: ra = 422, jump @4\n      : @438 [@dyn 211] (gas: 1)\n 14647: t0 = 424, jump @660\n      : @439 [@dyn 212] (gas: 1)\n 14653: jump @441 if a0 != 0\n      : @440 (gas: 1)\n 14656: jump @201\n      : @441 (gas: 11)\n 14659: a0 = u64 [s1 + 0x138]\n 14663: i32 a0 = a0 + 0x4\n 14666: a2 = s1 + 0x7ff\n 14670: a2 = a2 + 0xb9\n 14674: u64 [a2 + 896] = 0\n 14678: u64 [a2 + 888] = 0\n 14682: u64 [a2 + 872] = 0x20\n 14687: a1 = s1 + 0x7ff\n 14691: a1 = a1 + 0x421\n 14695: u64 [a2 + 880] = 0\n 14699: ra = 426, jump @4\n      : @442 [@dyn 213] (gas: 4)\n 14705: a2 = s1 + 0x100\n 14709: a0 = u64 [a2 + 0x20]\n 14712: a0 = a0 + 0xffffffffffffffdc\n 14715: t0 = 428, jump @659\n      : @443 [@dyn 214] (gas: 1)\n 14721: jump @445 if a0 != 0\n      : @444 (gas: 1)\n 14724: jump @201\n      : @445 (gas: 11)\n 14727: a0 = u64 [s1 + 0x138]\n 14731: i32 a0 = a0 + 0x24\n 14734: a2 = s1 + 0x7ff\n 14738: a2 = a2 + 0xb9\n 14742: u64 [a2 + 864] = 0\n 14746: u64 [a2 + 856] = 0\n 14750: u64 [a2 + 848] = 0\n 14754: a1 = s1 + 0x7ff\n 14758: a1 = a1 + 0x401\n 14762: u64 [a2 + 840] = 0x1\n 14767: ra = 430, jump @4\n      : @446 [@dyn 215] (gas: 3)\n 14773: a0 = 0xffffffbc\n 14783: a2 = s1 + 0x100\n 14787: t0 = 432, jump @659\n      : @447 [@dyn 216] (gas: 1)\n 14793: jump @449 if a0 != 0\n      : @448 (gas: 1)\n 14796: jump @201\n      : @449 (gas: 13)\n 14799: a0 = u64 [s1 + 0x138]\n 14803: i32 a0 = a0 + 0x44\n 14806: a2 = s1 + 0x7ff\n 14810: a2 = a2 + 0xb9\n 14814: u64 [a2 + 824] = 0\n 14818: u64 [a2 + 816] = 0\n 14822: a1 = 0x4b00000000000000\n 14832: u64 [a2 + 0x340] = a1\n 14836: a1 = s1 + 0x7ff\n 14840: a1 = a1 + 0x3e1\n 14844: u64 [a2 + 808] = 0\n 14848: ra = 0xb8\n 14852: jump @4\n      : @450 (gas: 4)\n 14855: a0 = s1 + 0x7ff\n 14859: a0 = a0 + 0x7a1\n 14863: a1 = 0x40\n 14866: ra = 434, jump @2\n      : @451 [@dyn 217] (gas: 8)\n 14872: a0 = s1 + 0x7ff\n 14876: a0 = a0 + 0xb9\n 14880: a3 = u64 [a0 + 0x700]\n 14884: a5 = a0 + 0x600\n 14888: a4 = u64 [a5 + 0xf8]\n 14892: a2 = u64 [a5 + 0xf0]\n 14896: a1 = u64 [a5 + 0xe8]\n 14900: t0 = 436, jump @669\n      : @452 [@dyn 218] (gas: 1)\n 14906: jump @454 if a0 == 0\n      : @453 (gas: 1)\n 14909: jump @201\n      : @454 (gas: 11)\n 14912: a2 = s1 + 0x7ff\n 14916: a2 = a2 + 0xb9\n 14920: u64 [a2 + 1752] = 0\n 14924: u64 [a2 + 1744] = 0\n 14928: u64 [a2 + 1736] = 0\n 14932: a0 = 0x8c379a000000000\n 14942: a1 = s1 + 0x7ff\n 14946: a1 = a1 + 0x781\n 14950: u64 [a2 + 0x6e0] = a0\n 14954: a0 = u64 [s1 + 0x138]\n 14958: ra = 438, jump @4\n      : @455 [@dyn 219] (gas: 1)\n 14964: t0 = 440, jump @660\n      : @456 [@dyn 220] (gas: 1)\n 14970: jump @458 if a0 != 0\n      : @457 (gas: 1)\n 14973: jump @201\n      : @458 (gas: 11)\n 14976: a0 = u64 [s1 + 0x138]\n 14980: i32 a0 = a0 + 0x4\n 14983: a2 = s1 + 0x7ff\n 14987: a2 = a2 + 0xb9\n 14991: u64 [a2 + 1728] = 0\n 14995: u64 [a2 + 1720] = 0\n 14999: u64 [a2 + 1704] = 0x20\n 15004: a1 = s1 + 0x7ff\n 15008: a1 = a1 + 0x761\n 15012: u64 [a2 + 1712] = 0\n 15016: ra = 442, jump @4\n      : @459 [@dyn 221] (gas: 4)\n 15022: a2 = s1 + 0x100\n 15026: a0 = u64 [a2 + 0x20]\n 15029: a0 = a0 + 0xffffffffffffffdc\n 15032: t0 = 444, jump @659\n      : @460 [@dyn 222] (gas: 1)\n 15038: jump @462 if a0 != 0\n      : @461 (gas: 1)\n 15041: jump @201\n      : @462 (gas: 11)\n 15044: a0 = u64 [s1 + 0x138]\n 15048: i32 a0 = a0 + 0x24\n 15051: a2 = s1 + 0x7ff\n 15055: a2 = a2 + 0xb9\n 15059: u64 [a2 + 1696] = 0\n 15063: u64 [a2 + 1688] = 0\n 15067: u64 [a2 + 1672] = 0x19\n 15072: a1 = s1 + 0x7ff\n 15076: a1 = a1 + 0x741\n 15080: u64 [a2 + 1680] = 0\n 15084: ra = 446, jump @4\n      : @463 [@dyn 223] (gas: 3)\n 15090: a0 = 0xffffffbc\n 15100: a2 = s1 + 0x100\n 15104: t0 = 448, jump @659\n      : @464 [@dyn 224] (gas: 1)\n 15110: jump @466 if a0 != 0\n      : @465 (gas: 1)\n 15113: jump @201\n      : @466 (gas: 17)\n 15116: a0 = u64 [s1 + 0x138]\n 15120: i32 a0 = a0 + 0x44\n 15123: a1 = u64 [0x20000]\n 15128: a2 = u64 [0x20030]\n 15133: a3 = u64 [0x20038]\n 15138: a4 = s1 + 0x7ff\n 15142: a4 = a4 + 0xb9\n 15146: a5 = a4 + 0x600\n 15150: u64 [a5 + 0x80] = a1\n 15154: u64 [a5 + 0x78] = a2\n 15157: u64 [a5 + 0x70] = a3\n 15160: a2 = 0x5400000000000000\n 15170: a1 = s1 + 0x7ff\n 15174: a1 = a1 + 0x721\n 15178: u64 [a5 + 0x68] = a2\n 15181: ra = 0xb8\n 15185: jump @4\n      : @467 (gas: 9)\n 15188: a0 = s1 + 0x20f8\n 15192: u64 [a0 + 0] = 0\n 15194: u64 [a0 + 4294967288] = 0\n 15197: u64 [a0 + 4294967280] = 0\n 15200: u64 [a0 + 4294967272] = 0x2\n 15204: a0 = s1 + 0x7ff\n 15208: a0 = a0 + 0x581\n 15212: a1 = s1 + 0x20e0\n 15216: ra = 450, jump @6\n      : @468 [@dyn 225] (gas: 31)\n 15222: a0 = u64 [s1 + 0xf8]\n 15226: a2 = a0 >> 0x10\n 15229: a5 = u64 [s1 + 0xd0]\n 15233: a1 = a5 << 0x30\n 15236: t0 = a2 | a1\n 15239: a2 = u64 [s1 + 0xc0]\n 15243: a1 = a2 & 0xffffffffffffffff\n 15246: a2 = s1 + 0x7ff\n 15250: a2 = a2 + 0xb9\n 15254: a2 = u32 [a2 + 0x4e4]\n 15258: a3 = u64 [s1 + 0xc8]\n 15262: a4 = u64 [s1 + 0xb8]\n 15266: a3 = a3 & a4\n 15269: a4 = a0 << 0x30\n 15272: a3 = a3 | a4\n 15275: a2 = a2 << 0x20\n 15278: a4 = a5 << 0x10\n 15281: a4 = a4 >> 0x20\n 15284: a2 = a2 | a4\n 15287: a0 = s1 + 0x20f8\n 15291: u64 [a0 + 8] = 0x2\n 15295: u64 [a0 + 0x38] = t0\n 15298: u64 [a0 + 0x30] = a3\n 15301: u64 [a0 + 0x28] = a1\n 15304: u64 [a0 + 0x40] = a2\n 15307: u64 [a0 + 32] = 0\n 15310: u64 [a0 + 24] = 0\n 15313: u64 [a0 + 16] = 0\n 15316: a0 = s1 + 0x2100\n 15320: a1 = s1 + 0x2120\n 15324: ra = 452, jump @8\n      : @469 [@dyn 226] (gas: 4)\n 15330: a0 = s1 + 0x7ff\n 15334: a0 = a0 + 0x561\n 15338: a1 = 0x40\n 15341: ra = 454, jump @2\n      : @470 [@dyn 227] (gas: 19)\n 15347: a1 = s1 + 0x7ff\n 15351: a1 = a1 + 0xb9\n 15355: a4 = a1 + 0x400\n 15359: a2 = u64 [a4 + 0xc0]\n 15363: a3 = u64 [a4 + 0xb8]\n 15367: a0 = u64 [a4 + 0xb0]\n 15371: a1 = u64 [a4 + 0xa8]\n 15375: u64 [s1 + 0xd0] = a0\n 15379: u64 [s1 + 0xc8] = a2\n 15383: a0 = a0 | a2\n 15386: u64 [s1 + 0xf8] = a1\n 15390: a1 = a1 | a3\n 15393: a1 = a1 | a0\n 15396: a1 = a1 >> 0x20\n 15399: u64 [s1 + 0xc0] = a3\n 15403: a0 = a0 | a3\n 15406: a0 = a0 << 0x20\n 15409: a0 = a0 | a1\n 15412: jump @472 if a0 == 0\n      : @471 (gas: 1)\n 15415: jump @201\n      : @472 (gas: 15)\n 15418: a0 = s1 + 0x7ff\n 15422: a0 = a0 + 0xb9\n 15426: a1 = u64 [s1 + 0x50]\n 15429: a3 = a0 + 0x400\n 15433: u64 [a3 + 0x88] = a1\n 15437: a1 = u64 [s1 + 0x58]\n 15440: u64 [a3 + 0x90] = a1\n 15444: a1 = u64 [s1 + 0x60]\n 15447: u64 [a3 + 0x98] = a1\n 15451: a1 = s1 + 0x7ff\n 15455: a1 = a1 + 0x541\n 15459: a2 = u64 [s1 + 0x68]\n 15462: u64 [a3 + 0xa0] = a2\n 15466: a0 = u64 [s1 + 0xf8]\n 15470: ra = 456, jump @4\n      : @473 [@dyn 228] (gas: 13)\n 15476: a0 = u64 [s1 + 0xc8]\n 15480: a2 = u64 [s1 + 0xc0]\n 15484: a2 = a2 | a0\n 15487: a0 = 0x100000000\n 15497: u64 [s1 + 0xc0] = a0\n 15501: a0 = 0xffffffe0\n 15511: a1 = u64 [s1 + 0xf8]\n 15515: a0 = a1 <u a0\n 15518: a1 = u64 [s1 + 0xd0]\n 15522: a0 = 0 if a1 != 0\n 15524: u64 [s1 + 0xc8] = a2\n 15528: a0 = 0 if a2 != 0\n 15530: jump @475 if a0 != 0\n      : @474 (gas: 1)\n 15533: jump @201\n      : @475 (gas: 16)\n 15536: a0 = u64 [s1 + 0xf8]\n 15540: i32 a0 = a0 + 0x20\n 15543: a2 = s1 + 0x7ff\n 15547: a2 = a2 + 0xb9\n 15551: a1 = u64 [s1 + 0x30]\n 15554: a4 = a2 + 0x400\n 15558: u64 [a4 + 0x68] = a1\n 15561: a1 = u64 [s1 + 0x38]\n 15564: u64 [a4 + 0x70] = a1\n 15567: a1 = u64 [s1 + 0x40]\n 15570: u64 [a4 + 0x78] = a1\n 15573: a1 = s1 + 0x7ff\n 15577: a1 = a1 + 0x521\n 15581: a3 = u64 [s1 + 0x48]\n 15584: u64 [a4 + 0x80] = a3\n 15588: ra = 458, jump @4\n      : @476 [@dyn 229] (gas: 9)\n 15594: a0 = u64 [s1 + 0xc0]\n 15598: a0 = a0 + 0xffffffffffffffc0\n 15601: a1 = u64 [s1 + 0xf8]\n 15605: a0 = a1 <u a0\n 15608: a1 = u64 [s1 + 0xd0]\n 15612: a0 = 0 if a1 != 0\n 15614: a1 = u64 [s1 + 0xc8]\n 15618: a0 = 0 if a1 != 0\n 15620: jump @478 if a0 != 0\n      : @477 (gas: 1)\n 15623: jump @201\n      : @478 (gas: 17)\n 15626: a0 = u64 [s1 + 0xf8]\n 15630: i32 a0 = a0 + 0x40\n 15633: a2 = s1 + 0x7ff\n 15637: a2 = a2 + 0xb9\n 15641: a4 = s1 + 0x100\n 15645: a1 = u64 [a4 + 0x20]\n 15648: a5 = a2 + 0x400\n 15652: u64 [a5 + 0x48] = a1\n 15655: a1 = u64 [a4 + 0x28]\n 15658: u64 [a5 + 0x50] = a1\n 15661: a1 = u64 [a4 + 0x30]\n 15664: u64 [a5 + 0x58] = a1\n 15667: a1 = s1 + 0x7ff\n 15671: a1 = a1 + 0x501\n 15675: a3 = u64 [a4 + 0x38]\n 15678: u64 [a5 + 0x60] = a3\n 15681: ra = 460, jump @4\n      : @479 [@dyn 230] (gas: 8)\n 15687: a0 = 0xffffffa0\n 15697: a1 = u64 [s1 + 0xf8]\n 15701: a0 = a1 <u a0\n 15704: a1 = u64 [s1 + 0xd0]\n 15708: a0 = 0 if a1 != 0\n 15710: a1 = u64 [s1 + 0xc8]\n 15714: a0 = 0 if a1 != 0\n 15716: jump @481 if a0 != 0\n      : @480 (gas: 1)\n 15719: jump @201\n      : @481 (gas: 17)\n 15722: a0 = u64 [s1 + 0xf8]\n 15726: i32 a0 = a0 + 0x60\n 15729: a3 = s1 + 0x7ff\n 15733: a3 = a3 + 0xb9\n 15737: a4 = s1 + 0x100\n 15741: a1 = u64 [a4]\n 15743: a5 = a3 + 0x400\n 15747: u64 [a5 + 0x28] = a1\n 15750: a1 = u64 [a4 + 0x8]\n 15753: u64 [a5 + 0x30] = a1\n 15756: a1 = u64 [a4 + 0x10]\n 15759: u64 [a5 + 0x38] = a1\n 15762: a1 = s1 + 0x7ff\n 15766: a1 = a1 + 0x4e1\n 15770: a2 = u64 [a4 + 0x18]\n 15773: u64 [a5 + 0x40] = a2\n 15776: ra = 462, jump @4\n      : @482 [@dyn 231] (gas: 6)\n 15782: a0 = u64 [s1 + 0x78]\n 15785: ra = 0x1d0\n 15789: ecalli 5 // 'caller'\n 15791: a2 = u64 [s1 + 0xd8]\n 15795: t0 = 0x1d2\n 15799: jump @677\n      : @483 [@dyn 232] (gas: 2)\n 15802: a2 = u64 [s1 + 0xd8]\n 15806: t0 = 466, jump @677\n      : @484 [@dyn 233] (gas: 69)\n 15812: t0 = a1 | a0\n 15815: a3 = a3 >> 0x20\n 15818: a2 = reverse a2\n 15820: a1 = a2 << 0x20\n 15823: a1 = a1 | a3\n 15826: a2 = a2 >> 0x20\n 15829: a3 = u64 [s1 + 0xe0]\n 15833: a0 = s1 + 0x7ff\n 15837: a0 = a0 + 0xb9\n 15841: u64 [a0 + 0x3d8] = a3\n 15845: a3 = u64 [0x20040]\n 15850: u64 [a0 + 992] = 0\n 15854: a4 = u64 [s1 + 0xe8]\n 15858: u64 [a0 + 0x3d0] = a4\n 15862: a4 = u64 [s1 + 0xf0]\n 15866: u64 [a0 + 0x3c8] = a4\n 15870: u64 [a0 + 0x420] = a3\n 15874: a3 = u64 [0x20048]\n 15879: a4 = u64 [0x20050]\n 15884: a5 = u64 [0x20058]\n 15889: u64 [a0 + 1024] = 0\n 15893: u64 [a0 + 0x418] = a3\n 15897: u64 [a0 + 0x410] = a4\n 15901: u64 [a0 + 0x408] = a5\n 15905: u64 [a0 + 0x3f8] = a2\n 15909: u64 [a0 + 0x3f0] = a1\n 15913: a1 = 0x80\n 15917: a2 = s1 + 0x7ff\n 15921: a2 = a2 + 0x4c1\n 15925: a3 = s1 + 0x7ff\n 15929: a3 = a3 + 0x4a1\n 15933: a4 = s1 + 0x7ff\n 15937: a4 = a4 + 0x481\n 15941: u64 [a0 + 0x3e8] = t0\n 15945: a0 = u64 [s1 + 0xf8]\n 15949: ra = 0x1d4\n 15953: sp = sp + 0xffffffffffffff20\n 15957: u64 [sp + 0xd8] = ra\n 15961: u64 [sp + 0xd0] = s0\n 15965: u64 [sp + 0xc8] = s1\n 15969: s0 = sp + 0xe0\n 15973: sp = sp & 0xffffffffffffffe0\n 15976: a5 = u64 [a4]\n 15978: u64 [sp + 0x40] = a5\n 15981: a5 = u64 [a4 + 0x8]\n 15984: u64 [sp + 0x48] = a5\n 15987: a5 = u64 [a4 + 0x10]\n 15990: u64 [sp + 0x50] = a5\n 15993: a4 = u64 [a4 + 0x18]\n 15996: u64 [sp + 0x58] = a4\n 15999: t0 = 0xa\n 16002: a4 = u64 [a3]\n 16004: u64 [sp + 0x18] = a4\n 16007: a4 = u64 [a3 + 0x8]\n 16010: u64 [sp + 0x20] = a4\n 16013: a4 = u64 [a3 + 0x10]\n 16016: u64 [sp + 0x28] = a4\n 16019: a3 = u64 [a3 + 0x18]\n 16022: u64 [sp + 0x30] = a3\n 16025: s1 = u64 [a2]\n 16027: a3 = u64 [a2 + 0x8]\n 16030: u64 [sp] = a3\n 16032: a3 = u64 [a2 + 0x10]\n 16035: u64 [sp + 0x8] = a3\n 16038: a2 = u64 [a2 + 0x18]\n 16041: u64 [sp + 0x10] = a2\n 16044: u64 [sp + 0x38] = a1\n 16047: ra = 0xc\n 16050: jump @12\n      : @485 [@dyn 234] (gas: 7)\n 16053: a1 = 0x200b0\n 16058: i32 a1 = a1 + 0\n 16060: a0 = 0\n 16062: a2 = 0\n 16064: ecalli 12 // 'seal_return'\n 16066: a1 = 0x200b0\n 16071: jump @500\n      : @486 (gas: 4)\n 16074: a1 = 0x200b0\n 16079: i32 a1 = a1 + 0\n 16081: a0 = 0x1\n 16084: jump @501\n      : @487 (gas: 4)\n 16087: a1 = 0x200b0\n 16092: i32 a1 = a1 + 0\n 16094: a0 = 0x1\n 16097: jump @501\n      : @488 (gas: 4)\n 16100: a1 = 0x200b0\n 16105: i32 a1 = a1 + 0\n 16107: a0 = 0x1\n 16110: jump @501\n      : @489 (gas: 4)\n 16113: a1 = 0x200b0\n 16118: i32 a1 = a1 + 0\n 16120: a0 = 0x1\n 16123: jump @501\n      : @490 (gas: 4)\n 16126: a1 = 0x200b0\n 16131: i32 a1 = a1 + 0\n 16133: a0 = 0x1\n 16136: jump @501\n      : @491 (gas: 4)\n 16139: a1 = 0x200b0\n 16144: i32 a1 = a1 + 0\n 16146: a0 = 0x1\n 16149: jump @501\n      : @492 (gas: 4)\n 16152: a1 = 0x200b0\n 16157: i32 a1 = a1 + 0\n 16159: a0 = 0x1\n 16162: jump @501\n      : @493 (gas: 4)\n 16165: a1 = 0x200b0\n 16170: i32 a1 = a1 + 0\n 16172: a0 = 0x1\n 16175: jump @501\n      : @494 (gas: 4)\n 16178: a1 = 0x200b0\n 16183: i32 a1 = a1 + 0\n 16185: a0 = 0x1\n 16188: jump @501\n      : @495 (gas: 2)\n 16190: a2 = s1 + 0x18d8\n 16194: jump @499 if a0 != 151187884\n      : @496 (gas: 8)\n 16201: u64 [a2 + 512] = 0\n 16205: u64 [a2 + 504] = 0\n 16209: u64 [a2 + 496] = 0\n 16213: u64 [a2 + 488] = 0\n 16217: a0 = s1 + 0x2000\n 16221: i32 a0 = a0 + 0xfffffffffffffac0\n 16225: ecalli 15 // 'value_transferred'\n 16227: fallthrough\n      : @497 (gas: 10)\n 16228: a3 = s1 + 0x18d8\n 16232: a4 = a3 + 0x100\n 16236: a0 = u64 [a4 + 0xf8]\n 16240: a1 = u64 [a3 + 0x200]\n 16244: a2 = u64 [a4 + 0xf0]\n 16248: a3 = u64 [a4 + 0xe8]\n 16252: a1 = a1 | a2\n 16255: a0 = a0 | a3\n 16258: a0 = a0 | a1\n 16261: jump @509 if a0 == 0\n      : @498 (gas: 4)\n 16265: a1 = 0x200b0\n 16270: i32 a1 = a1 + 0\n 16272: a0 = 0x1\n 16275: jump @501\n      : @499 (gas: 4)\n 16277: a1 = 0x200b0\n 16282: i32 a1 = a1 + 0\n 16284: a0 = 0x1\n 16287: jump @501\n      : @500 (gas: 6)\n 16289: i32 a1 = a1 + 0\n 16291: a0 = 0x1\n 16294: a2 = 0\n 16296: ecalli 12 // 'seal_return'\n 16298: a1 = 0x200b0\n 16303: jump @500\n      : @501 (gas: 4)\n 16305: a2 = 0\n 16307: ecalli 12 // 'seal_return'\n 16309: a1 = 0x200b0\n 16314: jump @500\n      : @502 (gas: 2)\n 16316: a1 = 0x200b0\n 16321: jump @500\n      : @503 (gas: 2)\n 16323: a1 = 0x200b0\n 16328: jump @500\n      : @504 (gas: 2)\n 16330: a1 = 0x200b0\n 16335: jump @500\n      : @505 (gas: 2)\n 16337: a1 = 0x200b0\n 16342: jump @500\n      : @506 (gas: 14)\n 16344: a4 = s1 + 0x100\n 16348: a1 = u64 [a4 + 0x28]\n 16351: a1 = a1 << 0x20\n 16354: a2 = a1 >> 0x20\n 16357: u64 [a3 + 352] = 0\n 16361: a1 = u64 [a4 + 0x30]\n 16364: a5 = a3 + 0x100\n 16368: u64 [a5 + 0x48] = a1\n 16371: a1 = u64 [a4 + 0x38]\n 16374: u64 [a5 + 0x50] = a1\n 16377: a1 = s1 + 0x1a20\n 16381: u64 [a5 + 0x58] = a2\n 16384: u64 [s1 + 0x138] = a0\n 16388: ra = 470, jump @4\n      : @507 [@dyn 235] (gas: 3)\n 16394: a1 = 0x20\n 16397: a0 = u64 [s1 + 0x138]\n 16401: ra = 472, jump @12\n      : @508 [@dyn 236] (gas: 5)\n 16407: i32 a1 = a0 + 0\n 16409: a2 = 0x20\n 16412: a0 = 0\n 16414: ecalli 12 // 'seal_return'\n 16416: fallthrough\n      : @509 (gas: 3)\n 16417: a0 = u64 [s1 + 0x138]\n 16421: a0 = i32 [a0]\n 16423: jump @513 if a0 >u 3\n      : @510 (gas: 2)\n 16427: a1 = 0x200b0\n 16432: jump @500\n      : @511 (gas: 7)\n 16435: a1 = 0x200b0\n 16440: i32 a1 = a1 + 0\n 16442: a0 = 0x1\n 16445: ecalli 12 // 'seal_return'\n 16447: a0 = s1 + 0x180\n 16451: ra = 0x1da\n 16455: jump @560\n      : @512 (gas: 6)\n 16458: i32 a1 = a1 + 0\n 16460: a0 = 0x1\n 16463: ecalli 12 // 'seal_return'\n 16465: a0 = s1 + 0x180\n 16469: ra = 0x1da\n 16473: jump @560\n      : @513 (gas: 2)\n 16476: a0 = s1 + 0x180\n 16480: ra = 474, jump @560\n      : @514 [@dyn 237] (gas: 16)\n 16486: a0 = u64 [s1 + 0x1a0]\n 16490: u64 [s1 + 0x138] = a0\n 16494: a0 = u64 [s1 + 0x1a8]\n 16498: u64 [s1 + 0x130] = a0\n 16502: a0 = u64 [s1 + 0x188]\n 16506: a1 = u64 [s1 + 0x180]\n 16510: a2 = 0xffffffffffff\n 16520: u64 [s1 + 0x128] = a2\n 16524: a0 = a0 & a2\n 16527: u64 [s1 + 376] = 0\n 16531: u64 [s1 + 0x168] = a0\n 16535: u64 [s1 + 0x160] = a1\n 16539: a0 = 0x80\n 16543: a1 = s1 + 0x160\n 16547: u64 [s1 + 368] = 0\n 16551: ra = 476, jump @4\n      : @515 [@dyn 238] (gas: 12)\n 16557: a2 = s1 + 0x100\n 16561: a0 = u64 [a2 + 0x30]\n 16564: a1 = u64 [a2 + 0x28]\n 16567: a0 = a0 & a1\n 16570: u64 [s1 + 344] = 0\n 16574: u64 [a2 + 0x48] = a0\n 16577: a0 = u64 [a2 + 0x38]\n 16580: u64 [a2 + 0x40] = a0\n 16583: a0 = 0xa0\n 16587: a1 = s1 + 0x140\n 16591: u64 [s1 + 336] = 0\n 16595: ra = 478, jump @4\n      : @516 [@dyn 239] (gas: 2)\n 16601: a1 = i32 [0x200a4]\n 16606: jump @518 if a1 >u 191\n      : @517 (gas: 2)\n 16611: u32 [0x200a4] = 0xc0\n 16618: fallthrough\n      : @518 (gas: 6)\n 16619: a0 = 0x200b0\n 16624: i32 a1 = a0 + 0x80\n 16628: a2 = 0x40\n 16631: a0 = 0\n 16633: ecalli 12 // 'seal_return'\n 16635: jump @509\n      : @519 (gas: 2)\n 16638: a1 = 0x200b0\n 16643: jump @512\n      : @520 (gas: 8)\n 16646: u64 [s1 + 688] = 0\n 16650: u64 [s1 + 680] = 0\n 16654: u64 [s1 + 672] = 0\n 16658: a0 = 0x4e487b7100000000\n 16668: a1 = s1 + 0x2a0\n 16672: u64 [s1 + 0x2b8] = a0\n 16676: a0 = 0\n 16678: ra = 480, jump @4\n      : @521 [@dyn 240] (gas: 7)\n 16684: u64 [s1 + 664] = 0\n 16688: u64 [s1 + 656] = 0\n 16692: u64 [s1 + 640] = 0x11\n 16697: a0 = 0x4\n 16700: a1 = s1 + 0x280\n 16704: u64 [s1 + 648] = 0\n 16708: ra = 482, jump @4\n      : @522 [@dyn 241] (gas: 2)\n 16714: a1 = i32 [0x200a4]\n 16719: jump @524 if a1 >u 63\n      : @523 (gas: 3)\n 16723: u32 [0x200a4] = 0x40\n 16729: a1 = 0x200b0\n 16734: jump @525\n      : @524 (gas: 2)\n 16736: a1 = 0x200b0\n 16741: fallthrough\n      : @525 (gas: 6)\n 16742: i32 a1 = a1 + 0\n 16744: a0 = 0x1\n 16747: a2 = 0x24\n 16750: ecalli 12 // 'seal_return'\n 16752: a1 = 0x200b0\n 16757: jump @512\n      : @526 (gas: 2)\n 16760: a1 = 0x200b0\n 16765: jump @512\n      : @527 (gas: 2)\n 16768: a1 = 0x200b0\n 16773: jump @512\n      : @528 (gas: 6)\n 16776: a0 = s1 + 0x7ff\n 16780: a0 = a0 + 0xb9\n 16784: u64 [a0 + 1624] = 0\n 16788: u64 [a0 + 1616] = 0\n 16792: u64 [a0 + 1608] = 0\n 16796: t0 = 484, jump @671\n      : @529 [@dyn 242] (gas: 4)\n 16802: a1 = a1 + 0x701\n 16806: u64 [a2 + 0x660] = a0\n 16810: a0 = 0\n 16812: ra = 486, jump @4\n      : @530 [@dyn 243] (gas: 11)\n 16818: a1 = s1 + 0x7ff\n 16822: a1 = a1 + 0xb9\n 16826: u64 [a1 + 1600] = 0\n 16830: u64 [a1 + 1592] = 0\n 16834: u64 [a1 + 1576] = 0x11\n 16839: a2 = a1\n 16841: a0 = 0x4\n 16844: a1 = s1 + 0x7ff\n 16848: a1 = a1 + 0x6e1\n 16852: u64 [a2 + 1584] = 0\n 16856: ra = 488, jump @4\n      : @531 [@dyn 244] (gas: 2)\n 16862: a1 = i32 [0x200a4]\n 16867: jump @533 if a1 >u 63\n      : @532 (gas: 3)\n 16871: u32 [0x200a4] = 0x40\n 16877: a1 = 0x200b0\n 16882: jump @525\n      : @533 (gas: 2)\n 16885: a1 = 0x200b0\n 16890: jump @525\n      : @534 (gas: 6)\n 16893: a0 = s1 + 0x7ff\n 16897: a0 = a0 + 0xb9\n 16901: u64 [a0 + 1560] = 0\n 16905: u64 [a0 + 1552] = 0\n 16909: u64 [a0 + 1544] = 0\n 16913: t0 = 490, jump @671\n      : @535 [@dyn 245] (gas: 4)\n 16919: a1 = a1 + 0x6c1\n 16923: u64 [a2 + 0x620] = a0\n 16927: a0 = 0\n 16929: ra = 492, jump @4\n      : @536 [@dyn 246] (gas: 11)\n 16935: a1 = s1 + 0x7ff\n 16939: a1 = a1 + 0xb9\n 16943: u64 [a1 + 1536] = 0\n 16947: u64 [a1 + 1528] = 0\n 16951: u64 [a1 + 1512] = 0x11\n 16956: a2 = a1\n 16958: a0 = 0x4\n 16961: a1 = s1 + 0x7ff\n 16965: a1 = a1 + 0x6a1\n 16969: u64 [a2 + 1520] = 0\n 16973: ra = 494, jump @4\n      : @537 [@dyn 247] (gas: 2)\n 16979: a1 = i32 [0x200a4]\n 16984: jump @539 if a1 >u 63\n      : @538 (gas: 3)\n 16988: u32 [0x200a4] = 0x40\n 16994: a1 = 0x200b0\n 16999: jump @525\n      : @539 (gas: 2)\n 17002: a1 = 0x200b0\n 17007: jump @525\n      : @540 (gas: 6)\n 17010: a0 = s1 + 0x7ff\n 17014: a0 = a0 + 0xb9\n 17018: u64 [a0 + 1304] = 0\n 17022: u64 [a0 + 1296] = 0\n 17026: u64 [a0 + 1288] = 0\n 17030: t0 = 496, jump @671\n      : @541 [@dyn 248] (gas: 4)\n 17036: a1 = a1 + 0x5c1\n 17040: u64 [a2 + 0x520] = a0\n 17044: a0 = 0\n 17046: ra = 498, jump @4\n      : @542 [@dyn 249] (gas: 11)\n 17052: a1 = s1 + 0x7ff\n 17056: a1 = a1 + 0xb9\n 17060: u64 [a1 + 1280] = 0\n 17064: u64 [a1 + 1272] = 0\n 17068: u64 [a1 + 1256] = 0x11\n 17073: a2 = a1\n 17075: a0 = 0x4\n 17078: a1 = s1 + 0x7ff\n 17082: a1 = a1 + 0x5a1\n 17086: u64 [a2 + 1264] = 0\n 17090: ra = 500, jump @4\n      : @543 [@dyn 250] (gas: 2)\n 17096: a1 = i32 [0x200a4]\n 17101: jump @545 if a1 >u 63\n      : @544 (gas: 3)\n 17105: u32 [0x200a4] = 0x40\n 17111: a1 = 0x200b0\n 17116: jump @525\n      : @545 (gas: 2)\n 17119: a1 = 0x200b0\n 17124: jump @525\n      : @546 (gas: 18)\n 17127: sp = sp + 0xffffffffffffffc0\n 17130: u64 [sp + 0x38] = ra\n 17133: u64 [sp + 0x30] = s0\n 17136: u64 [sp + 0x28] = s1\n 17139: s0 = sp + 0x40\n 17142: sp = sp & 0xfffffffffffffff0\n 17145: a2 = u64 [a1 + 0x10]\n 17148: a3 = u64 [a1 + 0x18]\n 17151: a4 = u64 [a1 + 0x8]\n 17154: a1 = u64 [a1]\n 17156: a3 = a3 | a4\n 17159: a4 = a1 | a2\n 17162: a4 = a4 | a3\n 17165: a4 = a4 >> 0x20\n 17168: a2 = a2 | a3\n 17171: a2 = a2 << 0x20\n 17174: a2 = a2 | a4\n 17177: jump @552 if a2 != 0\n      : @547 (gas: 3)\n 17180: s1 = a0\n 17182: a0 = sp\n 17184: ra = 502, jump @2\n      : @548 [@dyn 251] (gas: 1)\n 17190: t0 = 504, jump @667\n      : @549 [@dyn 252] (gas: 1)\n 17196: jump @553 if a3 == 0\n      : @550 (gas: 1)\n 17199: t0 = 506, jump @673\n      : @551 [@dyn 253] (gas: 1)\n 17205: ret\n      : @552 (gas: 1)\n 17207: trap\n      : @553 (gas: 7)\n 17208: a1 = 0x200b0\n 17213: i32 a1 = a1 + 0\n 17215: a0 = 0x1\n 17218: a2 = 0\n 17220: ra = 0x1fc\n 17224: ecalli 12 // 'seal_return'\n 17226: fallthrough\n      : @554 [@dyn 254] (gas: 13)\n 17227: sp = sp + 0xffffffffffffffc0\n 17230: u64 [sp + 0x38] = ra\n 17233: u64 [sp + 0x30] = s0\n 17236: u64 [sp + 0x28] = s1\n 17239: s0 = sp + 0x40\n 17242: sp = sp & 0xffffffffffffffe0\n 17245: s1 = a0\n 17247: i32 a0 = sp + 0\n 17249: a1 = 0x4\n 17252: ra = 0x1fe\n 17256: ecalli 3 // 'call_data_load'\n 17258: t0 = 0x200\n 17262: jump @667\n      : @555 [@dyn 255] (gas: 1)\n 17265: t0 = 512, jump @667\n      : @556 [@dyn 256] (gas: 1)\n 17271: jump @559 if a3 == 0\n      : @557 (gas: 1)\n 17274: t0 = 514, jump @673\n      : @558 [@dyn 257] (gas: 1)\n 17280: ret\n      : @559 (gas: 7)\n 17282: a1 = 0x200b0\n 17287: i32 a1 = a1 + 0\n 17289: a0 = 0x1\n 17292: a2 = 0\n 17294: ra = 0x204\n 17298: ecalli 12 // 'seal_return'\n 17300: fallthrough\n      : @560 [@dyn 258] (gas: 14)\n 17301: sp = sp + 0xffffffffffffffa0\n 17304: u64 [sp + 0x58] = ra\n 17307: u64 [sp + 0x50] = s0\n 17310: u64 [sp + 0x48] = s1\n 17313: s0 = sp + 0x60\n 17316: sp = sp & 0xffffffffffffffe0\n 17319: s1 = a0\n 17321: u64 [sp + 56] = 0\n 17324: u64 [sp + 48] = 0\n 17327: u64 [sp + 40] = 0\n 17330: u64 [sp + 32] = 0x2\n 17334: a0 = sp\n 17336: a1 = sp + 0x20\n 17339: ra = 518, jump @6\n      : @561 [@dyn 259] (gas: 23)\n 17345: t0 = u64 [sp]\n 17347: a1 = u64 [sp + 0x18]\n 17350: a2 = u64 [sp + 0x8]\n 17353: a3 = u64 [sp + 0x10]\n 17356: a4 = 0xffffffffffff\n 17366: a5 = a2 & a4\n 17369: a0 = a3 << 0x10\n 17372: a2 = a2 >> 0x30\n 17375: a0 = a0 | a2\n 17378: a3 = a3 >> 0x30\n 17381: a1 = a1 << 0x10\n 17384: a1 = a1 | a3\n 17387: a1 = a1 & a4\n 17390: a2 = 0\n 17392: u64 [s1 + 48] = 0\n 17395: u64 [s1 + 56] = 0\n 17398: u64 [s1 + 16] = 0\n 17401: u64 [s1 + 24] = 0\n 17404: u64 [s1] = t0\n 17406: u64 [s1 + 0x8] = a5\n 17409: u64 [s1 + 0x20] = a0\n 17412: u64 [s1 + 0x28] = a1\n 17415: t0 = 520, jump @676\n      : @562 [@dyn 260] (gas: 1)\n 17421: ret\n      : @563 (gas: 46)\n 17423: sp = sp + 0xffffffffffffff70\n 17427: u64 [sp + 0x88] = ra\n 17431: u64 [sp + 0x80] = s0\n 17435: u64 [sp + 0x78] = s1\n 17438: s0 = sp + 0x90\n 17442: sp = sp & 0xfffffffffffffff0\n 17445: t0 = a0\n 17447: a2 = u64 [a1]\n 17449: t2 = u64 [a0 + 0x8]\n 17452: a5 = u64 [a1 + 0x8]\n 17455: t1 = u64 [a0]\n 17457: a3 = a2 + 0x1f\n 17460: ra = a3 <u a2\n 17463: a2 = a5 + ra\n 17466: a3 = a3 & 0xffffffffffffffe0\n 17469: u64 [sp + 0x8] = t1\n 17472: t1 = t1 + a3\n 17475: a4 = t1 <u a3\n 17478: a3 = a2 + t2\n 17481: a3 = a3 + a4\n 17484: s1 = a3 ^ a2\n 17487: a0 = a3 <u a2\n 17490: a0 = a4 if s1 == 0\n 17493: a4 = u64 [t0 + 0x18]\n 17496: a5 = a2 <u a5\n 17499: s1 = u64 [a1 + 0x10]\n 17502: t0 = u64 [t0 + 0x10]\n 17505: a1 = u64 [a1 + 0x18]\n 17508: a5 = ra if ra == 0\n 17511: a5 = a5 + s1\n 17514: s1 = a5 <u s1\n 17517: a2 = a5 + t0\n 17520: a0 = a0 + a2\n 17523: a5 = a2 <u a5\n 17526: a2 = a0 <u a2\n 17529: a1 = a1 + a4\n 17532: a1 = a1 + s1\n 17535: a1 = a1 + a5\n 17538: a5 = a1 + a2\n 17541: a1 = a5 >u 0\n 17543: a2 = a0 >u 0\n 17545: a2 = a1 if a5 != 0\n 17548: a1 = a0 | a5\n 17551: s1 = a3 >u 0\n 17553: s1 = a2 if a1 != 0\n 17556: jump @567 if s1 != 0\n      : @564 (gas: 13)\n 17559: a1 = u64 [sp + 0x8]\n 17562: a1 = t1 <u a1\n 17565: a2 = a3 ^ t2\n 17568: s1 = a3 <u t2\n 17571: s1 = a1 if a2 == 0\n 17574: a1 = a0 <u t0\n 17577: a2 = a5 ^ a4\n 17580: a4 = a5 <u a4\n 17583: a4 = a1 if a2 == 0\n 17586: a1 = a0 ^ t0\n 17589: a1 = a1 | a2\n 17592: a4 = s1 if a1 == 0\n 17595: jump @567 if a4 != 0\n      : @565 (gas: 7)\n 17598: u64 [sp + 0x50] = t1\n 17601: u64 [sp + 0x58] = a3\n 17604: u64 [sp + 0x60] = a0\n 17607: a0 = 0x40\n 17610: a1 = sp + 0x50\n 17613: u64 [sp + 0x68] = a5\n 17616: ra = 522, jump @4\n      : @566 [@dyn 261] (gas: 6)\n 17622: sp = s0 + 0xffffffffffffff70\n 17626: ra = u64 [sp + 0x88]\n 17630: s0 = u64 [sp + 0x80]\n 17634: s1 = u64 [sp + 0x78]\n 17637: sp = sp + 0x90\n 17641: ret\n      : @567 (gas: 1)\n 17643: t0 = 524, jump @675\n      : @568 [@dyn 262] (gas: 1)\n 17649: ra = 526, jump @4\n      : @569 [@dyn 263] (gas: 7)\n 17655: u64 [sp + 40] = 0\n 17658: u64 [sp + 32] = 0\n 17661: u64 [sp + 16] = 0x41\n 17665: a0 = 0x4\n 17668: a1 = sp + 0x10\n 17671: u64 [sp + 24] = 0\n 17674: ra = 528, jump @4\n      : @570 [@dyn 264] (gas: 2)\n 17680: a1 = i32 [0x200a4]\n 17685: jump @572 if a1 >u 63\n      : @571 (gas: 2)\n 17689: u32 [0x200a4] = 0x40\n 17695: fallthrough\n      : @572 (gas: 7)\n 17696: a1 = 0x200b0\n 17701: i32 a1 = a1 + 0\n 17703: a0 = 0x1\n 17706: a2 = 0x24\n 17709: ra = 0x212\n 17713: ecalli 12 // 'seal_return'\n 17715: fallthrough\n      : @573 [@dyn 265] (gas: 30)\n 17716: sp = sp + 0xffffffffffffff80\n 17719: u64 [sp + 0x78] = ra\n 17722: u64 [sp + 0x70] = s0\n 17725: u64 [sp + 0x68] = s1\n 17728: s0 = sp + 0x80\n 17732: sp = sp & 0xfffffffffffffff0\n 17735: a4 = u64 [a2]\n 17737: a3 = u64 [a1]\n 17739: s1 = u64 [a2 + 0x8]\n 17742: t1 = u64 [a1 + 0x8]\n 17745: t2 = u64 [a2 + 0x10]\n 17748: a5 = u64 [a1 + 0x10]\n 17751: a2 = u64 [a2 + 0x18]\n 17754: a1 = u64 [a1 + 0x18]\n 17757: t0 = t1 ^ s1\n 17760: u64 [sp + 0x8] = s1\n 17763: s1 = t1 <u s1\n 17766: u64 [sp + 0x18] = a4\n 17769: u64 [sp + 0x10] = a3\n 17772: a3 = a3 <u a4\n 17775: u64 [sp] = a3\n 17777: s1 = a3 if t0 == 0\n 17780: a3 = a1 ^ a2\n 17783: ra = a1 <u a2\n 17786: t0 = a5 <u t2\n 17789: ra = t0 if a3 == 0\n 17792: a4 = a5 ^ t2\n 17795: a3 = a3 | a4\n 17798: ra = s1 if a3 == 0\n 17801: jump @575 if ra != 0\n      : @574 (gas: 23)\n 17804: a3 = a5 - t2\n 17807: a1 = a1 - a2\n 17810: a1 = a1 - t0\n 17813: a2 = a3 <u s1\n 17816: a1 = a1 - a2\n 17819: a3 = a3 - s1\n 17822: a2 = u64 [sp + 0x8]\n 17825: a2 = t1 - a2\n 17828: a4 = u64 [sp]\n 17830: a2 = a2 - a4\n 17833: a4 = u64 [sp + 0x18]\n 17836: a5 = u64 [sp + 0x10]\n 17839: a4 = a5 - a4\n 17842: u64 [a0] = a4\n 17844: u64 [a0 + 0x8] = a2\n 17847: u64 [a0 + 0x10] = a3\n 17850: u64 [a0 + 0x18] = a1\n 17853: sp = s0 + 0xffffffffffffff80\n 17856: ra = u64 [sp + 0x78]\n 17859: s0 = u64 [sp + 0x70]\n 17862: s1 = u64 [sp + 0x68]\n 17865: sp = sp + 0x80\n 17869: ret\n      : @575 (gas: 8)\n 17871: u64 [sp + 80] = 0\n 17874: u64 [sp + 72] = 0\n 17877: u64 [sp + 64] = 0\n 17880: a0 = 0x4e487b7100000000\n 17890: a1 = sp + 0x40\n 17893: u64 [sp + 0x58] = a0\n 17896: a0 = 0\n 17898: ra = 532, jump @4\n      : @576 [@dyn 266] (gas: 7)\n 17904: u64 [sp + 56] = 0\n 17907: u64 [sp + 48] = 0\n 17910: u64 [sp + 32] = 0x11\n 17914: a0 = 0x4\n 17917: a1 = sp + 0x20\n 17920: u64 [sp + 40] = 0\n 17923: ra = 534, jump @4\n      : @577 [@dyn 267] (gas: 2)\n 17929: a1 = i32 [0x200a4]\n 17934: jump @579 if a1 >u 63\n      : @578 (gas: 2)\n 17938: u32 [0x200a4] = 0x40\n 17944: fallthrough\n      : @579 (gas: 7)\n 17945: a1 = 0x200b0\n 17950: i32 a1 = a1 + 0\n 17952: a0 = 0x1\n 17955: a2 = 0x24\n 17958: ra = 0x218\n 17962: ecalli 12 // 'seal_return'\n 17964: fallthrough\n      : @580 [@dyn 268] (gas: 70)\n 17965: sp = sp + 0xffffffffffffff40\n 17969: u64 [sp + 0xb8] = ra\n 17973: u64 [sp + 0xb0] = s0\n 17977: u64 [sp + 0xa8] = s1\n 17981: s0 = sp + 0xc0\n 17985: sp = sp & 0xfffffffffffffff0\n 17988: ra = u64 [a2]\n 17990: t0 = u64 [a1]\n 17992: a3 = u64 [a1 + 0x8]\n 17995: u64 [sp + 0x58] = a0\n 17998: a4 = u64 [a2 + 0x8]\n 18001: a0 = t0 mulhu ra\n 18004: s1 = a3 * ra\n 18007: a0 = a0 + s1\n 18010: s1 = a0 <u s1\n 18013: a5 = a3 mulhu ra\n 18016: a5 = a5 + s1\n 18019: s1 = t0 * a4\n 18022: a0 = a0 + s1\n 18025: u64 [sp + 0x50] = a0\n 18028: a0 = a0 <u s1\n 18031: s1 = t0 mulhu a4\n 18034: a0 = a0 + s1\n 18037: a0 = a0 + a5\n 18040: a5 = a0 <u a5\n 18043: s1 = a3 mulhu a4\n 18046: a5 = a5 + s1\n 18049: s1 = a3 * a4\n 18052: a0 = a0 + s1\n 18055: u64 [sp + 0x48] = a0\n 18058: s1 = a0 <u s1\n 18061: a5 = a5 + s1\n 18064: u64 [sp + 0x40] = a5\n 18067: t1 = u64 [a2 + 0x10]\n 18070: a2 = u64 [a2 + 0x18]\n 18073: t2 = u64 [a1 + 0x18]\n 18076: a0 = u64 [a1 + 0x10]\n 18079: a5 = a3 * t1\n 18082: u64 [sp + 0x20] = a2\n 18085: s1 = a2 * t0\n 18088: a1 = s1 + a5\n 18091: u64 [sp + 0x28] = a4\n 18094: s1 = a4 * a0\n 18097: a2 = t2 * ra\n 18100: a2 = a2 + s1\n 18103: s1 = t1 * t0\n 18106: a5 = a0 * ra\n 18109: s1 = s1 + a5\n 18112: u64 [sp + 0x30] = t1\n 18115: a4 = t1 mulhu t0\n 18118: u64 [sp + 0x10] = a4\n 18121: a4 = a4 + a1\n 18124: t1 = a0 mulhu ra\n 18127: a1 = t1 + a2\n 18130: a2 = s1 <u a5\n 18133: u64 [sp + 0x18] = a1\n 18136: u64 [sp + 0x8] = a4\n 18139: a5 = a1 + a4\n 18142: a2 = a2 + a5\n 18145: u64 [sp + 0x38] = t2\n 18148: a5 = a3 | t2\n 18151: a1 = t0 | a0\n 18154: a1 = a1 | a5\n 18157: a4 = u64 [sp + 0x40]\n 18160: a5 = u64 [sp + 0x48]\n 18163: s1 = s1 + a5\n 18166: t2 = s1 <u a5\n 18169: a2 = a2 + a4\n 18172: a2 = a2 + t2\n 18175: jump @582 if a1 == 0\n      : @581 (gas: 50)\n 18179: a1 = a2 ^ a4\n 18182: u64 [sp + 0x48] = a2\n 18185: a2 = u64 [sp + 0x48]\n 18188: a2 = a2 <u a4\n 18191: t2 = a2 if a1 != 0\n 18194: u64 [sp + 0x40] = s1\n 18197: a1 = u64 [sp + 0x10]\n 18200: a2 = u64 [sp + 0x8]\n 18203: s1 = a2 <u a1\n 18206: a2 = a3 >u 0\n 18208: a1 = u64 [sp + 0x20]\n 18211: a5 = a1 >u 0\n 18213: a2 = a2 & a5\n 18216: a5 = a1 mulhu t0\n 18219: a5 = a5 >u 0\n 18221: a2 = a2 | a5\n 18224: a4 = t1\n 18226: t1 = u64 [sp + 0x30]\n 18229: a3 = a3 mulhu t1\n 18232: a3 = a3 >u 0\n 18234: a2 = a2 | a3\n 18237: a2 = a2 | s1\n 18240: u64 [sp + 0x10] = a2\n 18243: a2 = u64 [sp + 0x18]\n 18246: a2 = a2 <u a4\n 18249: a4 = u64 [sp + 0x28]\n 18252: a3 = a4 >u 0\n 18254: s1 = u64 [sp + 0x38]\n 18257: a5 = s1 >u 0\n 18259: a3 = a3 & a5\n 18262: a5 = s1 mulhu ra\n 18265: a5 = a5 >u 0\n 18267: a3 = a3 | a5\n 18270: a5 = a4 mulhu a0\n 18273: a5 = a5 >u 0\n 18275: a3 = a3 | a5\n 18278: a2 = a2 | a3\n 18281: a3 = t1 | a1\n 18284: a5 = a0 | s1\n 18287: s1 = u64 [sp + 0x40]\n 18290: a3 = a3 >u 0\n 18292: a5 = a5 >u 0\n 18294: a3 = a3 & a5\n 18297: a2 = a2 | a3\n 18300: a1 = u64 [sp + 0x10]\n 18303: a1 = a1 | a2\n 18306: a2 = u64 [sp + 0x48]\n 18309: a0 = a1 | t2\n 18312: a0 = a0 & 0x1\n 18315: jump @583 if a0 != 0\n      : @582 (gas: 13)\n 18318: a0 = t0 * ra\n 18321: a1 = u64 [sp + 0x58]\n 18324: u64 [a1] = a0\n 18326: a0 = u64 [sp + 0x50]\n 18329: u64 [a1 + 0x8] = a0\n 18332: u64 [a1 + 0x10] = s1\n 18335: u64 [a1 + 0x18] = a2\n 18338: sp = s0 + 0xffffffffffffff40\n 18342: ra = u64 [sp + 0xb8]\n 18346: s0 = u64 [sp + 0xb0]\n 18350: s1 = u64 [sp + 0xa8]\n 18354: sp = sp + 0xc0\n 18358: ret\n      : @583 (gas: 8)\n 18360: u64 [sp + 144] = 0\n 18364: u64 [sp + 136] = 0\n 18368: u64 [sp + 128] = 0\n 18372: a0 = 0x4e487b7100000000\n 18382: a1 = sp + 0x80\n 18386: u64 [sp + 0x98] = a0\n 18390: a0 = 0\n 18392: ra = 538, jump @4\n      : @584 [@dyn 269] (gas: 7)\n 18398: u64 [sp + 120] = 0\n 18401: u64 [sp + 112] = 0\n 18404: u64 [sp + 96] = 0x11\n 18408: a0 = 0x4\n 18411: a1 = sp + 0x60\n 18414: u64 [sp + 104] = 0\n 18417: ra = 540, jump @4\n      : @585 [@dyn 270] (gas: 2)\n 18423: a1 = i32 [0x200a4]\n 18428: jump @587 if a1 >u 63\n      : @586 (gas: 2)\n 18432: u32 [0x200a4] = 0x40\n 18438: fallthrough\n      : @587 (gas: 7)\n 18439: a1 = 0x200b0\n 18444: i32 a1 = a1 + 0\n 18446: a0 = 0x1\n 18449: a2 = 0x24\n 18452: ra = 0x21e\n 18456: ecalli 12 // 'seal_return'\n 18458: fallthrough\n      : @588 [@dyn 271] (gas: 16)\n 18459: sp = sp + 0xfffffffffffffef0\n 18463: u64 [sp + 0x108] = ra\n 18467: u64 [sp + 0x100] = s0\n 18471: u64 [sp + 0xf8] = s1\n 18475: s0 = sp + 0x110\n 18479: sp = sp & 0xfffffffffffffff0\n 18482: t1 = u64 [a2 + 0x10]\n 18485: a5 = u64 [a2 + 0x18]\n 18488: s1 = u64 [a2 + 0x8]\n 18491: a2 = u64 [a2]\n 18493: a4 = s1 | a5\n 18496: a3 = a2 | t1\n 18499: a3 = a3 | a4\n 18502: u64 [sp] = a0\n 18504: u64 [sp + 0xa8] = a3\n 18508: jump @608 if a3 == 0\n      : @589 (gas: 73)\n 18512: a0 = u64 [a1 + 0x18]\n 18515: ra = u64 [a1 + 0x10]\n 18518: t0 = u64 [a1 + 0x8]\n 18521: t2 = u64 [a1]\n 18523: u64 [sp + 0x60] = t2\n 18526: a1 = clz t1\n 18528: a1 = a1 + 0x40\n 18531: a4 = clz a5\n 18533: a4 = a1 if a5 == 0\n 18536: u64 [sp + 0x30] = a2\n 18539: a1 = clz a2\n 18541: a2 = a1 + 0x40\n 18544: a1 = clz s1\n 18546: u64 [sp + 0x38] = s1\n 18549: a1 = a2 if s1 == 0\n 18552: a2 = a1 + 0x80\n 18556: u64 [sp + 0x40] = a5\n 18559: u64 [sp + 0x48] = t1\n 18562: a3 = t1 | a5\n 18565: a4 = a2 if a3 == 0\n 18568: a2 = a2 <u a1\n 18571: a2 = 0 if a3 != 0\n 18573: a1 = clz ra\n 18575: a1 = a1 + 0x40\n 18578: a5 = clz a0\n 18580: a5 = a1 if a0 == 0\n 18583: a1 = clz t2\n 18585: a1 = a1 + 0x40\n 18588: a3 = clz t0\n 18590: a3 = a1 if t0 == 0\n 18593: a1 = a3 + 0x80\n 18597: s1 = ra | a0\n 18600: a5 = a1 if s1 == 0\n 18603: a1 = a1 <u a3\n 18606: a1 = 0 if s1 != 0\n 18608: t1 = a2 ^ a1\n 18611: s1 = a2 <u a1\n 18614: a3 = a4 <u a5\n 18617: s1 = a3 if t1 == 0\n 18620: a2 = a2 - a1\n 18623: t2 = s1 <u 0x1\n 18626: t2 = t2 + 0xffffffffffffffff\n 18629: a3 = a2 - a3\n 18632: t1 = -s1\n 18634: a1 = a4 - a5\n 18637: a2 = t1 >u 0\n 18639: a4 = t2 >u 0\n 18641: a4 = a2 if t2 == 0\n 18644: u64 [sp + 0xa0] = a1\n 18648: a2 = a1 <u 0x100\n 18652: a2 = a2 ^ 0x1\n 18655: a5 = a3 >u 0\n 18657: a2 = a5 if a3 != 0\n 18660: a2 = a4 if s1 != 0\n 18663: s1 = u64 [sp + 0x60]\n 18666: a4 = s1 | ra\n 18669: a5 = t0 | a0\n 18672: a4 = a4 | a5\n 18675: a1 = u64 [sp + 0xa8]\n 18679: a5 = a1 <u 0x1\n 18682: a4 = a4 <u 0x1\n 18685: a4 = a4 | a5\n 18688: a2 = a2 | a4\n 18691: u64 [sp + 0x68] = a0\n 18694: a1 = a0\n 18696: a1 = 0 if a2 != 0\n 18698: a4 = ra\n 18700: a4 = 0 if a2 != 0\n 18702: u64 [sp + 0x58] = t0\n 18705: a5 = t0\n 18707: a5 = 0 if a2 != 0\n 18709: s1 = 0 if a2 != 0\n 18711: jump @606 if a2 != 0\n      : @590 (gas: 7)\n 18715: a0 = u64 [sp + 0xa0]\n 18719: a2 = a0 ^ 0xff\n 18723: t0 = a2 | t1\n 18726: a2 = a3 | t2\n 18729: a2 = t0 | a2\n 18732: a0 = u64 [sp]\n 18734: jump @607 if a2 == 0\n      : @591 (gas: 18)\n 18738: a2 = u64 [sp + 0xa0]\n 18742: a1 = a2 + 0x1\n 18745: u64 [sp + 0xa8] = a1\n 18749: u64 [sp + 0x50] = ra\n 18752: a0 = a1 <u 0x1\n 18755: a0 = a0 + a3\n 18758: u64 [sp + 0x80] = a0\n 18762: a0 = a0 | a1\n 18765: a0 = a0 <u 0x1\n 18768: a0 = a0 + t1\n 18771: u64 [sp + 0x70] = a0\n 18774: a0 = a0 <u t1\n 18777: a0 = a0 + t2\n 18780: u64 [sp + 0x78] = a0\n 18783: t0 = 0x220\n 18787: s1 = 0xff - a2\n 18791: a2 = 0x80 - s1\n 18795: fallthrough\n      : @592 [@dyn 272] (gas: 4)\n 18796: u64 [sp + 0x28] = s1\n 18799: a0 = u64 [sp + 0x60]\n 18802: a1 = u64 [sp + 0x58]\n 18805: ra = 546, jump @679\n      : @593 [@dyn 273] (gas: 6)\n 18811: u64 [sp + 0x98] = a0\n 18815: u64 [sp + 0x90] = a1\n 18819: a0 = u64 [sp + 0x50]\n 18822: a1 = u64 [sp + 0x68]\n 18825: a2 = s1\n 18827: ra = 548, jump @684\n      : @594 [@dyn 274] (gas: 10)\n 18833: u64 [sp + 0x88] = a0\n 18837: a0 = u64 [sp + 0x90]\n 18841: a0 = a0 | a1\n 18844: u64 [sp + 0x90] = a0\n 18848: a1 = u64 [sp + 0xa0]\n 18852: a2 = 0x7f - a1\n 18855: a0 = u64 [sp + 0x60]\n 18858: s1 = u64 [sp + 0x58]\n 18861: a1 = s1\n 18863: ra = 550, jump @684\n      : @595 [@dyn 275] (gas: 18)\n 18869: a2 = u64 [sp + 0x28]\n 18872: a3 = a2 <u 0x80\n 18876: u64 [sp + 0xa0] = a3\n 18880: a4 = u64 [sp + 0x90]\n 18884: a1 = a4 if a3 != 0\n 18887: a4 = u64 [sp + 0x68]\n 18890: a1 = a4 if a2 == 0\n 18893: u64 [sp + 0x90] = a1\n 18897: a1 = u64 [sp + 0x98]\n 18901: a4 = u64 [sp + 0x88]\n 18905: a1 = a1 | a4\n 18908: a1 = a0 if a3 == 0\n 18911: a0 = u64 [sp + 0x50]\n 18914: a1 = a0 if a2 == 0\n 18917: u64 [sp + 0x98] = a1\n 18921: a0 = u64 [sp + 0x60]\n 18924: a1 = s1\n 18926: ra = 552, jump @684\n      : @596 [@dyn 276] (gas: 13)\n 18932: a5 = u64 [sp + 0x70]\n 18935: a2 = u64 [sp + 0x78]\n 18938: a3 = u64 [sp + 0x80]\n 18942: a3 = a3 | a2\n 18945: a2 = u64 [sp + 0xa8]\n 18949: a2 = a2 | a5\n 18952: a2 = a2 | a3\n 18955: a3 = u64 [sp + 0xa0]\n 18959: a1 = 0 if a3 == 0\n 18961: u64 [sp + 0x88] = a1\n 18965: a0 = 0 if a3 == 0\n 18967: u64 [sp + 0xa0] = a0\n 18971: jump @604 if a2 == 0\n      : @597 (gas: 5)\n 18975: s1 = u64 [sp + 0xa8]\n 18979: a2 = s1 + 0xffffffffffffff80\n 18982: a0 = u64 [sp + 0x50]\n 18985: a1 = u64 [sp + 0x68]\n 18988: ra = 554, jump @679\n      : @598 [@dyn 277] (gas: 6)\n 18994: u64 [sp + 0x28] = a0\n 18997: u64 [sp + 0x18] = a1\n 19000: a0 = u64 [sp + 0x60]\n 19003: a1 = u64 [sp + 0x58]\n 19006: a2 = s1\n 19008: ra = 556, jump @679\n      : @599 [@dyn 278] (gas: 6)\n 19014: u64 [sp + 0x10] = a0\n 19017: u64 [sp + 0x20] = a1\n 19020: a2 = 0x80 - s1\n 19024: a0 = u64 [sp + 0x50]\n 19027: a1 = u64 [sp + 0x68]\n 19030: ra = 558, jump @684\n      : @600 [@dyn 279] (gas: 20)\n 19036: a2 = u64 [sp + 0x20]\n 19039: a1 = a1 | a2\n 19042: a2 = s1 <u 0x80\n 19046: u64 [sp + 0x20] = a2\n 19049: a3 = u64 [sp + 0x18]\n 19052: a1 = a3 if a2 == 0\n 19055: a3 = u64 [sp + 0x58]\n 19058: a3 = a1 if s1 != 0\n 19061: u64 [sp + 0x58] = a3\n 19064: a1 = u64 [sp + 0x10]\n 19067: a0 = a0 | a1\n 19070: a1 = u64 [sp + 0x28]\n 19073: a0 = a1 if a2 == 0\n 19076: a1 = u64 [sp + 0x60]\n 19079: a1 = a0 if s1 != 0\n 19082: u64 [sp + 0x60] = a1\n 19085: a0 = u64 [sp + 0x50]\n 19088: a1 = u64 [sp + 0x68]\n 19091: a2 = s1\n 19093: ra = 560, jump @679\n      : @601 [@dyn 280] (gas: 24)\n 19099: t0 = u64 [sp + 0x58]\n 19102: t2 = 0\n 19104: a2 = u64 [sp + 0x20]\n 19107: a1 = 0 if a2 == 0\n 19109: a0 = 0 if a2 == 0\n 19111: u64 [sp + 0x68] = a0\n 19114: a3 = u64 [sp + 0x30]\n 19117: a0 = a3 <u 0x1\n 19120: a2 = u64 [sp + 0x38]\n 19123: a0 = a2 - a0\n 19126: u64 [sp + 0x20] = a0\n 19129: a0 = a3 | a2\n 19132: a0 = a0 <u 0x1\n 19135: a2 = u64 [sp + 0x48]\n 19138: a4 = a2 - a0\n 19141: u64 [sp + 0x18] = a4\n 19144: a0 = a2 <u a0\n 19147: a2 = u64 [sp + 0x40]\n 19150: a2 = a2 - a0\n 19153: u64 [sp + 0x10] = a2\n 19156: a3 = a3 + 0xffffffffffffffff\n 19159: u64 [sp + 0x8] = a3\n 19162: ra = u64 [sp + 0x60]\n 19165: fallthrough\n      : @602 (gas: 103)\n 19166: u64 [sp + 40] = 0\n 19169: a4 = ra >> 0x3f\n 19172: a3 = t0 << 0x1\n 19175: s1 = t0\n 19177: t0 = a3 | a4\n 19180: a4 = ra << 0x1\n 19183: ra = u64 [sp + 0x90]\n 19187: a2 = ra >> 0x3f\n 19190: a2 = a2 | a4\n 19193: u64 [sp + 0x60] = a2\n 19196: a0 = u64 [sp + 0x20]\n 19199: t1 = a0 ^ t0\n 19202: a4 = a0 <u t0\n 19205: a0 = u64 [sp + 0x8]\n 19208: a5 = t2\n 19210: t2 = a0 <u a2\n 19213: t2 = a4 if t1 != 0\n 19216: a1 = a1 << 0x1\n 19219: a0 = u64 [sp + 0x68]\n 19222: a2 = a0 >> 0x3f\n 19225: a1 = a1 | a2\n 19228: u64 [sp + 0x58] = a1\n 19231: a2 = s1 >> 0x3f\n 19234: a0 = a0 << 0x1\n 19237: t1 = a0 | a2\n 19240: a0 = ra << 0x1\n 19243: a1 = u64 [sp + 0x98]\n 19247: a2 = a1 >> 0x3f\n 19250: a0 = a0 | a2\n 19253: a2 = a1 << 0x1\n 19256: a1 = u64 [sp + 0x88]\n 19260: a4 = a1 >> 0x3f\n 19263: a2 = a2 | a4\n 19266: a4 = a1 << 0x1\n 19269: s1 = u64 [sp + 0xa0]\n 19273: ra = s1 >> 0x3f\n 19276: a4 = a4 | ra\n 19279: s1 = s1 << 0x1\n 19282: a5 = a5 | s1\n 19285: u64 [sp + 0xa0] = a5\n 19289: a4 = a4 | 0\n 19291: u64 [sp + 0x88] = a4\n 19295: a1 = a2 | 0\n 19297: u64 [sp + 0x98] = a1\n 19301: a0 = a0 | 0\n 19303: u64 [sp + 0x90] = a0\n 19307: a2 = u64 [sp + 0x18]\n 19310: a0 = a2 - t1\n 19313: a0 = a0 <u t2\n 19316: a2 = a2 <u t1\n 19319: a4 = u64 [sp + 0x10]\n 19322: a3 = u64 [sp + 0x58]\n 19325: a4 = a4 - a3\n 19328: a4 = a4 - a2\n 19331: a4 = a4 - a0\n 19334: a4 = a4 >>a 0x3f\n 19337: a0 = u64 [sp + 0x30]\n 19340: a1 = a4 & a0\n 19343: u64 [sp + 0x50] = a1\n 19346: a5 = u64 [sp + 0x38]\n 19349: a5 = a5 & a4\n 19352: a0 = t0 ^ a5\n 19355: s1 = t0 <u a5\n 19358: t2 = u64 [sp + 0x60]\n 19361: ra = t2 <u a1\n 19364: s1 = ra if a0 == 0\n 19367: a2 = u64 [sp + 0x48]\n 19370: a2 = a2 & a4\n 19373: a1 = t1 - a2\n 19376: a0 = a1 - s1\n 19379: u64 [sp + 0x68] = a0\n 19382: a0 = a1 <u s1\n 19385: a2 = t1 <u a2\n 19388: s1 = u64 [sp + 0x40]\n 19391: s1 = s1 & a4\n 19394: a1 = a3 - s1\n 19397: a1 = a1 - a2\n 19400: a1 = a1 - a0\n 19403: a3 = t0 - a5\n 19406: t0 = a3 - ra\n 19409: a0 = u64 [sp + 0x50]\n 19412: ra = t2 - a0\n 19415: a5 = u64 [sp + 0xa8]\n 19419: s1 = u64 [sp + 0x80]\n 19423: a0 = a5 | s1\n 19426: a0 = a0 <u 0x1\n 19429: a3 = u64 [sp + 0x70]\n 19432: a2 = a3 <u a0\n 19435: a0 = a3 - a0\n 19438: a3 = a5 <u 0x1\n 19441: s1 = s1 - a3\n 19444: a3 = u64 [sp + 0x78]\n 19447: a3 = a3 - a2\n 19450: a5 = a5 + 0xffffffffffffffff\n 19453: u64 [sp + 0x80] = s1\n 19457: u64 [sp + 0x78] = a3\n 19460: a2 = s1 | a3\n 19463: u64 [sp + 0xa8] = a5\n 19467: a3 = a5 | a0\n 19470: a2 = a2 | a3\n 19473: t2 = a4 & 0x1\n 19476: u64 [sp + 0x70] = a0\n 19479: jump @602 if a2 != 0\n      : @603 (gas: 1)\n 19483: jump @605\n      : @604 (gas: 3)\n 19485: t2 = 0\n 19487: u64 [sp + 40] = 0\n 19490: fallthrough\n      : @605 (gas: 21)\n 19491: a3 = u64 [sp + 0x98]\n 19495: a0 = a3 >> 0x3f\n 19498: a1 = u64 [sp + 0x90]\n 19502: a1 = a1 << 0x1\n 19505: a0 = a0 | a1\n 19508: a5 = u64 [sp + 0x88]\n 19512: a1 = a5 >> 0x3f\n 19515: a3 = a3 << 0x1\n 19518: a1 = a1 | a3\n 19521: a2 = u64 [sp + 0xa0]\n 19525: a3 = a2 >> 0x3f\n 19528: a5 = a5 << 0x1\n 19531: s1 = a2 << 0x1\n 19534: s1 = t2 | s1\n 19537: a2 = u64 [sp + 0x28]\n 19540: a3 = a3 | a2\n 19543: a5 = a5 | a3\n 19546: a4 = a2 | a1\n 19549: a1 = a2 | a0\n 19552: a0 = u64 [sp]\n 19554: jump @607\n      : @606 (gas: 2)\n 19556: a0 = u64 [sp]\n 19558: fallthrough\n      : @607 (gas: 10)\n 19559: u64 [a0] = s1\n 19561: u64 [a0 + 0x8] = a5\n 19564: u64 [a0 + 0x10] = a4\n 19567: u64 [a0 + 0x18] = a1\n 19570: sp = s0 + 0xfffffffffffffef0\n 19574: ra = u64 [sp + 0x108]\n 19578: s0 = u64 [sp + 0x100]\n 19582: s1 = u64 [sp + 0xf8]\n 19586: sp = sp + 0x110\n 19590: ret\n      : @608 (gas: 8)\n 19592: u64 [sp + 224] = 0\n 19596: u64 [sp + 216] = 0\n 19600: u64 [sp + 208] = 0\n 19604: a0 = 0x4e487b7100000000\n 19614: a1 = sp + 0xd0\n 19618: u64 [sp + 0xe8] = a0\n 19622: a0 = 0\n 19624: ra = 562, jump @4\n      : @609 [@dyn 281] (gas: 7)\n 19630: u64 [sp + 200] = 0\n 19634: u64 [sp + 192] = 0\n 19638: u64 [sp + 176] = 0x12\n 19643: a0 = 0x4\n 19646: a1 = sp + 0xb0\n 19650: u64 [sp + 184] = 0\n 19654: ra = 564, jump @4\n      : @610 [@dyn 282] (gas: 2)\n 19660: a1 = i32 [0x200a4]\n 19665: jump @612 if a1 >u 63\n      : @611 (gas: 2)\n 19669: u32 [0x200a4] = 0x40\n 19675: fallthrough\n      : @612 (gas: 7)\n 19676: a1 = 0x200b0\n 19681: i32 a1 = a1 + 0\n 19683: a0 = 0x1\n 19686: a2 = 0x24\n 19689: ra = 0x236\n 19693: ecalli 12 // 'seal_return'\n 19695: fallthrough\n      : @613 [@dyn 283] (gas: 45)\n 19696: sp = sp + 0xffffffffffffff90\n 19699: u64 [sp + 0x68] = ra\n 19702: u64 [sp + 0x60] = s0\n 19705: u64 [sp + 0x58] = s1\n 19708: s0 = sp + 0x70\n 19711: sp = sp & 0xfffffffffffffff0\n 19714: a3 = u64 [a1 + 0x18]\n 19717: u64 [sp + 0x8] = a3\n 19720: a4 = u64 [a2 + 0x18]\n 19723: t2 = u64 [a1]\n 19725: u64 [sp] = t2\n 19727: a3 = u64 [a1 + 0x8]\n 19730: s1 = u64 [a2 + 0x8]\n 19733: a5 = u64 [a2]\n 19735: t1 = u64 [a1 + 0x10]\n 19738: t0 = u64 [a2 + 0x10]\n 19741: a2 = s1 + a3\n 19744: t2 = t2 + a5\n 19747: a5 = t2 <u a5\n 19750: a2 = a2 + a5\n 19753: ra = a2 ^ s1\n 19756: s1 = a2 <u s1\n 19759: s1 = a5 if ra == 0\n 19762: a1 = t0 + t1\n 19765: a5 = u64 [sp + 0x8]\n 19768: a5 = a5 + a4\n 19771: a4 = a1 <u t0\n 19774: a4 = a4 + a5\n 19777: a5 = a1 + s1\n 19780: a1 = a5 <u a1\n 19783: ra = a4 + a1\n 19786: a4 = a2 ^ a3\n 19789: a3 = a2 <u a3\n 19792: a1 = u64 [sp]\n 19794: s1 = t2 <u a1\n 19797: s1 = a3 if a4 != 0\n 19800: t0 = a5 <u t1\n 19803: a1 = u64 [sp + 0x8]\n 19806: a4 = ra ^ a1\n 19809: a3 = ra <u a1\n 19812: a3 = t0 if a4 == 0\n 19815: a1 = a5 ^ t1\n 19818: a1 = a1 | a4\n 19821: s1 = a3 if a1 != 0\n 19824: jump @615 if s1 != 0\n      : @614 (gas: 10)\n 19827: u64 [a0] = t2\n 19829: u64 [a0 + 0x8] = a2\n 19832: u64 [a0 + 0x10] = a5\n 19835: u64 [a0 + 0x18] = ra\n 19838: sp = s0 + 0xffffffffffffff90\n 19841: ra = u64 [sp + 0x68]\n 19844: s0 = u64 [sp + 0x60]\n 19847: s1 = u64 [sp + 0x58]\n 19850: sp = sp + 0x70\n 19853: ret\n      : @615 (gas: 1)\n 19855: t0 = 568, jump @675\n      : @616 [@dyn 284] (gas: 1)\n 19861: ra = 570, jump @4\n      : @617 [@dyn 285] (gas: 7)\n 19867: u64 [sp + 40] = 0\n 19870: u64 [sp + 32] = 0\n 19873: u64 [sp + 16] = 0x11\n 19877: a0 = 0x4\n 19880: a1 = sp + 0x10\n 19883: u64 [sp + 24] = 0\n 19886: ra = 572, jump @4\n      : @618 [@dyn 286] (gas: 2)\n 19892: a1 = i32 [0x200a4]\n 19897: jump @620 if a1 >u 63\n      : @619 (gas: 2)\n 19901: u32 [0x200a4] = 0x40\n 19907: fallthrough\n      : @620 (gas: 7)\n 19908: a1 = 0x200b0\n 19913: i32 a1 = a1 + 0\n 19915: a0 = 0x1\n 19918: a2 = 0x24\n 19921: ra = 0x23e\n 19925: ecalli 12 // 'seal_return'\n 19927: fallthrough\n      : @621 [@dyn 287] (gas: 14)\n 19928: sp = sp + 0xffffffffffffff20\n 19932: u64 [sp + 0xd8] = ra\n 19936: u64 [sp + 0xd0] = s0\n 19940: u64 [sp + 0xc8] = s1\n 19944: s0 = sp + 0xe0\n 19948: sp = sp & 0xfffffffffffffff0\n 19951: a1 = u64 [a0 + 0x10]\n 19954: a2 = u64 [a0 + 0x18]\n 19957: a3 = u64 [a0 + 0x8]\n 19960: a0 = u64 [a0]\n 19962: a2 = a2 | a3\n 19965: a0 = a0 | a1\n 19968: a0 = a0 | a2\n 19971: jump @623 if a0 == 0\n      : @622 (gas: 6)\n 19974: sp = s0 + 0xffffffffffffff20\n 19978: ra = u64 [sp + 0xd8]\n 19982: s0 = u64 [sp + 0xd0]\n 19986: s1 = u64 [sp + 0xc8]\n 19990: sp = sp + 0xe0\n 19994: ret\n      : @623 (gas: 3)\n 19996: a0 = sp + 0xa0\n 20000: a1 = 0x40\n 20003: ra = 576, jump @2\n      : @624 [@dyn 288] (gas: 15)\n 20009: a2 = u64 [sp + 0xb8]\n 20013: s1 = u64 [sp + 0xb0]\n 20017: a0 = u64 [sp + 0xa8]\n 20021: a1 = u64 [sp + 0xa0]\n 20025: u64 [sp + 0x10] = a0\n 20028: u64 [sp + 0x8] = a2\n 20031: a0 = a0 | a2\n 20034: u64 [sp + 0x18] = a1\n 20037: a1 = a1 | s1\n 20040: a1 = a1 | a0\n 20043: a1 = a1 >> 0x20\n 20046: a0 = a0 | s1\n 20049: a0 = a0 << 0x20\n 20052: a0 = a0 | a1\n 20055: jump @631 if a0 != 0\n      : @625 (gas: 8)\n 20059: u64 [sp + 144] = 0\n 20063: u64 [sp + 136] = 0\n 20067: u64 [sp + 128] = 0\n 20071: a0 = 0x8c379a000000000\n 20081: a1 = sp + 0x80\n 20085: u64 [sp + 0x98] = a0\n 20089: a0 = u64 [sp + 0x18]\n 20092: ra = 578, jump @4\n      : @626 [@dyn 289] (gas: 11)\n 20098: a2 = u64 [sp + 0x8]\n 20101: a2 = a2 | s1\n 20104: s1 = 0x100000000\n 20114: a0 = 0xfffffffc\n 20124: a1 = u64 [sp + 0x18]\n 20127: a0 = a1 <u a0\n 20130: a1 = u64 [sp + 0x10]\n 20133: a0 = 0 if a1 != 0\n 20135: u64 [sp + 0x8] = a2\n 20138: a0 = 0 if a2 != 0\n 20140: jump @631 if a0 == 0\n      : @627 (gas: 8)\n 20143: a0 = u64 [sp + 0x18]\n 20146: i32 a0 = a0 + 0x4\n 20149: u64 [sp + 120] = 0\n 20152: u64 [sp + 112] = 0\n 20155: u64 [sp + 96] = 0x20\n 20159: a1 = sp + 0x60\n 20162: u64 [sp + 104] = 0\n 20165: ra = 580, jump @4\n      : @628 [@dyn 290] (gas: 8)\n 20171: a0 = s1 + 0xffffffffffffffdc\n 20174: a1 = u64 [sp + 0x18]\n 20177: a0 = a1 <u a0\n 20180: a1 = u64 [sp + 0x10]\n 20183: a0 = 0 if a1 != 0\n 20185: a1 = u64 [sp + 0x8]\n 20188: a0 = 0 if a1 != 0\n 20190: jump @631 if a0 == 0\n      : @629 (gas: 8)\n 20193: s1 = u64 [sp + 0x18]\n 20196: i32 a0 = s1 + 0x24\n 20199: u64 [sp + 88] = 0\n 20202: u64 [sp + 80] = 0\n 20205: u64 [sp + 64] = 0x16\n 20209: a1 = sp + 0x40\n 20212: u64 [sp + 72] = 0\n 20215: ra = 582, jump @4\n      : @630 [@dyn 291] (gas: 7)\n 20221: a0 = 0xffffffbc\n 20231: a0 = s1 <u a0\n 20234: a1 = u64 [sp + 0x10]\n 20237: a0 = 0 if a1 != 0\n 20239: a1 = u64 [sp + 0x8]\n 20242: a0 = 0 if a1 != 0\n 20244: jump @632 if a0 != 0\n      : @631 (gas: 1)\n 20247: trap\n      : @632 (gas: 11)\n 20248: s1 = u64 [sp + 0x18]\n 20251: i32 a0 = s1 + 0x44\n 20254: a1 = u64 [0x20088]\n 20259: a2 = u64 [0x20090]\n 20264: a3 = u64 [0x20098]\n 20269: u64 [sp + 0x38] = a1\n 20272: u64 [sp + 0x30] = a2\n 20275: u64 [sp + 0x28] = a3\n 20278: a1 = sp + 0x20\n 20281: u64 [sp + 32] = 0\n 20284: ra = 584, jump @4\n      : @633 [@dyn 292] (gas: 3)\n 20290: a1 = 0x64\n 20293: a0 = s1\n 20295: ra = 586, jump @12\n      : @634 [@dyn 293] (gas: 6)\n 20301: i32 a1 = a0 + 0\n 20303: a0 = 0x1\n 20306: a2 = 0x64\n 20309: ra = 0x24c\n 20313: ecalli 12 // 'seal_return'\n 20315: fallthrough\n      : @635 [@dyn 294] (gas: 22)\n 20316: sp = sp + 0xffffffffffffff50\n 20320: u64 [sp + 0xa8] = ra\n 20324: u64 [sp + 0xa0] = s0\n 20328: u64 [sp + 0x98] = s1\n 20332: s0 = sp + 0xb0\n 20336: sp = sp & 0xfffffffffffffff0\n 20339: a5 = u64 [a1 + 0x10]\n 20342: a4 = u64 [a1 + 0x18]\n 20345: s1 = u64 [a1 + 0x8]\n 20348: t0 = u64 [a1]\n 20350: u64 [sp + 0x40] = a4\n 20353: u64 [sp + 0x38] = s1\n 20356: a1 = s1 | a4\n 20359: a4 = t0 | a5\n 20362: a4 = a4 | a1\n 20365: a4 = a4 >> 0x20\n 20368: u64 [sp + 0x48] = a5\n 20371: a1 = a1 | a5\n 20374: a1 = a1 << 0x20\n 20377: a1 = a1 | a4\n 20380: u64 [sp + 0x30] = a0\n 20383: jump @640 if a1 != 0\n      : @636 (gas: 21)\n 20387: s1 = t0\n 20389: a0 = u64 [a3 + 0x18]\n 20392: u64 [sp + 0x28] = a0\n 20395: a0 = u64 [a3 + 0x10]\n 20398: u64 [sp + 0x20] = a0\n 20401: a0 = u64 [a3 + 0x8]\n 20404: u64 [sp + 0x18] = a0\n 20407: a0 = u64 [a3]\n 20409: u64 [sp + 0x10] = a0\n 20412: a0 = u64 [a2 + 0x10]\n 20415: a1 = u64 [a2 + 0x8]\n 20418: a2 = u64 [a2]\n 20420: a0 = a0 << 0x20\n 20423: a0 = a0 >> 0x20\n 20426: u64 [sp + 136] = 0\n 20430: u64 [sp + 0x70] = a2\n 20433: u64 [sp + 0x78] = a1\n 20436: a1 = sp + 0x70\n 20439: u64 [sp + 0x80] = a0\n 20443: a0 = t0\n 20445: ra = 590, jump @4\n      : @637 [@dyn 295] (gas: 9)\n 20451: a2 = u64 [sp + 0x48]\n 20454: a3 = u64 [sp + 0x40]\n 20457: a0 = a2 | a3\n 20460: a1 = 0xffffffe0\n 20470: a1 = s1 <u a1\n 20473: a4 = u64 [sp + 0x38]\n 20476: a1 = 0 if a4 != 0\n 20478: a1 = 0 if a0 != 0\n 20480: jump @640 if a1 == 0\n      : @638 (gas: 23)\n 20483: a0 = s1 + 0x40\n 20486: u64 [sp + 0x8] = a0\n 20489: a0 = a0 <u s1\n 20492: a1 = a4 + a0\n 20495: u64 [sp] = a1\n 20497: a1 = a1 <u a4\n 20500: a1 = a0 if a0 == 0\n 20503: a1 = a1 + a2\n 20506: u64 [sp + 0x38] = a1\n 20509: a0 = a1 <u a2\n 20512: a0 = a0 + a3\n 20515: u64 [sp + 0x48] = a0\n 20518: i32 a0 = s1 + 0x20\n 20521: a1 = u64 [sp + 0x10]\n 20524: u64 [sp + 0x50] = a1\n 20527: a1 = u64 [sp + 0x18]\n 20530: u64 [sp + 0x58] = a1\n 20533: a1 = u64 [sp + 0x20]\n 20536: u64 [sp + 0x60] = a1\n 20539: a1 = sp + 0x50\n 20542: a2 = u64 [sp + 0x28]\n 20545: u64 [sp + 0x68] = a2\n 20548: ra = 592, jump @4\n      : @639 [@dyn 296] (gas: 15)\n 20554: a0 = u64 [sp + 0x30]\n 20557: a1 = u64 [sp + 0x38]\n 20560: u64 [a0 + 0x10] = a1\n 20563: a1 = u64 [sp]\n 20565: u64 [a0 + 0x8] = a1\n 20568: a1 = u64 [sp + 0x8]\n 20571: u64 [a0] = a1\n 20573: a1 = u64 [sp + 0x48]\n 20576: u64 [a0 + 0x18] = a1\n 20579: sp = s0 + 0xffffffffffffff50\n 20583: ra = u64 [sp + 0xa8]\n 20587: s0 = u64 [sp + 0xa0]\n 20591: s1 = u64 [sp + 0x98]\n 20595: sp = sp + 0xb0\n 20599: ret\n      : @640 (gas: 1)\n 20601: trap\n      : @641 (gas: 9)\n 20602: sp = sp + 0xffffffffffffff20\n 20606: u64 [sp + 0xd8] = ra\n 20610: u64 [sp + 0xd0] = s0\n 20614: u64 [sp + 0xc8] = s1\n 20618: s0 = sp + 0xe0\n 20622: sp = sp & 0xffffffffffffffe0\n 20625: s1 = a0\n 20627: ecalli 11 // 'return_data_size'\n 20629: fallthrough\n      : @642 (gas: 1)\n 20630: jump @654 if a0 == 0\n      : @643 (gas: 6)\n 20634: u64 [sp + 0x18] = s1\n 20637: ecalli 11 // 'return_data_size'\n 20639: s1 = a0\n 20641: a0 = sp + 0xa0\n 20645: a1 = 0x40\n 20648: ra = 594, jump @2\n      : @644 [@dyn 297] (gas: 28)\n 20654: a2 = u64 [sp + 0xb8]\n 20658: a5 = u64 [sp + 0xb0]\n 20662: u64 [sp + 0x38] = a5\n 20665: t0 = u64 [sp + 0xa8]\n 20669: u64 [sp + 0x30] = t0\n 20672: t1 = u64 [sp + 0xa0]\n 20676: u64 [sp + 0x28] = t1\n 20679: a0 = s1 + 0x1f\n 20682: u64 [sp + 0x20] = s1\n 20685: a1 = a0 <u s1\n 20688: s1 = a2\n 20690: a0 = a0 & 0xffffffffffffffe0\n 20693: a2 = a0 + 0x20\n 20696: a0 = a2 <u a0\n 20699: a3 = a1 + a0\n 20702: a4 = a3 <u a1\n 20705: a4 = a0 if a0 == 0\n 20708: u64 [sp + 120] = 0\n 20711: u64 [sp + 0x60] = a2\n 20714: u64 [sp + 0x98] = s1\n 20718: u64 [sp + 0x90] = a5\n 20722: u64 [sp + 0x88] = t0\n 20726: u64 [sp + 0x80] = t1\n 20730: u64 [sp + 0x68] = a3\n 20733: a0 = sp + 0x80\n 20737: a1 = sp + 0x60\n 20740: u64 [sp + 0x70] = a4\n 20743: ra = 596, jump @563\n      : @645 [@dyn 298] (gas: 11)\n 20749: a0 = u64 [sp + 0x28]\n 20752: a2 = u64 [sp + 0x30]\n 20755: a2 = a2 | s1\n 20758: a3 = u64 [sp + 0x38]\n 20761: a1 = a0 | a3\n 20764: a1 = a1 | a2\n 20767: a1 = a1 >> 0x20\n 20770: a2 = a2 | a3\n 20773: a2 = a2 << 0x20\n 20776: a1 = a1 | a2\n 20779: jump @653 if a1 != 0\n      : @646 (gas: 7)\n 20783: u64 [sp + 88] = 0\n 20786: u64 [sp + 80] = 0\n 20789: u64 [sp + 72] = 0\n 20792: a1 = sp + 0x40\n 20795: a2 = u64 [sp + 0x20]\n 20798: u64 [sp + 0x40] = a2\n 20801: ra = 598, jump @4\n      : @647 [@dyn 299] (gas: 2)\n 20807: ecalli 11 // 'return_data_size'\n 20809: fallthrough\n      : @648 (gas: 10)\n 20810: a3 = u64 [sp + 0x28]\n 20813: u64 [sp + 0x20] = s1\n 20816: a1 = u64 [sp + 0x38]\n 20819: a1 = a1 | s1\n 20822: a2 = 0xffffffe0\n 20832: a2 = a3 <u a2\n 20835: a4 = u64 [sp + 0x30]\n 20838: a2 = 0 if a4 != 0\n 20840: a2 = 0 if a1 != 0\n 20842: jump @653 if a2 == 0\n      : @649 (gas: 3)\n 20845: s1 = a0\n 20847: a0 = a0 >> 0x20\n 20850: jump @653 if a0 != 0\n      : @650 (gas: 5)\n 20853: i32 a0 = a3 + 0x20\n 20856: i32 a1 = s1 + 0\n 20858: u64 [sp + 0x10] = a1\n 20861: a1 = s1\n 20863: ra = 600, jump @12\n      : @651 [@dyn 300] (gas: 6)\n 20869: u32 [sp + 0xc0] = s1\n 20873: i32 a0 = a0 + 0\n 20875: i32 a1 = sp + 0xc0\n 20879: a2 = 0\n 20881: ecalli 10 // 'return_data_copy'\n 20883: fallthrough\n      : @652 (gas: 8)\n 20884: a4 = u64 [sp + 0x28]\n 20887: a0 = i32 [sp + 0xc0]\n 20891: s1 = u64 [sp + 0x18]\n 20894: a1 = u64 [sp + 0x20]\n 20897: a2 = u64 [sp + 0x38]\n 20900: a3 = u64 [sp + 0x30]\n 20903: a5 = u64 [sp + 0x10]\n 20906: jump @655 if a0 >=u a5\n      : @653 (gas: 1)\n 20909: trap\n      : @654 (gas: 5)\n 20910: a3 = 0\n 20912: a2 = 0\n 20914: a1 = 0\n 20916: a4 = 0x60\n 20919: fallthrough\n      : @655 (gas: 10)\n 20920: u64 [s1] = a4\n 20922: u64 [s1 + 0x8] = a3\n 20925: u64 [s1 + 0x10] = a2\n 20928: u64 [s1 + 0x18] = a1\n 20931: sp = s0 + 0xffffffffffffff20\n 20935: ra = u64 [sp + 0xd8]\n 20939: s0 = u64 [sp + 0xd0]\n 20943: s1 = u64 [sp + 0xc8]\n 20947: sp = sp + 0xe0\n 20951: ret\n      : @656 [export #0: 'call'] (gas: 2)\n 20953: a0 = 0\n 20955: ra = 602, jump @18\n      : @657 [@dyn 301] [export #1: 'deploy'] (gas: 2)\n 20961: a0 = 0x1\n 20964: ra = 604, jump @18\n      : @658 [@dyn 302] (gas: 9)\n 20970: a1 = a1 <u 0x20\n 20973: a1 = a1 ^ 0x1\n 20976: a1 = a0 if a3 != 0\n 20979: a0 = a3 >u 0\n 20981: a2 = a3 >u 0\n 20983: a2 = a0 if a3 == 0\n 20986: a0 = a3 | a3\n 20989: a2 = a1 if a0 == 0\n 20992: jump [t0]\n      : @659 (gas: 7)\n 20994: a1 = u64 [a2 + 0x38]\n 20997: a0 = a1 <u a0\n 21000: a1 = u64 [a2 + 0x30]\n 21003: a0 = 0 if a1 != 0\n 21005: a1 = u64 [a2 + 0x28]\n 21008: a0 = 0 if a1 != 0\n 21010: jump [t0]\n      : @660 (gas: 14)\n 21012: a3 = s1 + 0x100\n 21016: a0 = u64 [a3 + 0x28]\n 21019: a2 = u64 [a3 + 0x20]\n 21022: a2 = a2 | a0\n 21025: a0 = 0x100000000\n 21035: u64 [a3 + 0x20] = a0\n 21038: a0 = 0xfffffffc\n 21048: a1 = u64 [a3 + 0x38]\n 21051: a0 = a1 <u a0\n 21054: a1 = u64 [a3 + 0x30]\n 21057: a0 = 0 if a1 != 0\n 21059: u64 [a3 + 0x28] = a2\n 21062: a0 = 0 if a2 != 0\n 21064: jump [t0]\n      : @661 (gas: 13)\n 21066: a4 = s1 + 0x100\n 21070: a1 = u64 [a4 + 0x30]\n 21073: a2 = u64 [a4 + 0x20]\n 21076: a1 = a1 | a2\n 21079: a3 = u64 [a4 + 0x28]\n 21082: a2 = u64 [a4 + 0x38]\n 21085: a2 = a2 | a3\n 21088: a2 = a2 | a1\n 21091: a2 = a2 >> 0x20\n 21094: a1 = a1 | a3\n 21097: a1 = a1 << 0x20\n 21100: a1 = a1 | a2\n 21103: jump [t0]\n      : @662 (gas: 14)\n 21105: a0 = i32 [a2 + 0x10]\n 21108: a2 = u64 [a2]\n 21110: a1 = reverse a1\n 21112: a3 = a1 << 0x20\n 21115: a0 = reverse a0\n 21117: a0 = a0 >> 0x20\n 21120: a3 = a3 | a0\n 21123: a1 = a1 >> 0x20\n 21126: a0 = reverse a2\n 21128: a2 = a0 << 0x20\n 21131: a1 = a1 | a2\n 21134: a2 = a0 >> 0x20\n 21137: i32 a0 = a4 + 0x4\n 21140: jump [t0]\n      : @663 (gas: 15)\n 21142: a0 = u64 [a2 + 0x8]\n 21145: a1 = i32 [a2 + 0x10]\n 21148: a2 = u64 [a2]\n 21150: a0 = reverse a0\n 21152: a3 = a0 << 0x20\n 21155: a1 = reverse a1\n 21157: a1 = a1 >> 0x20\n 21160: a3 = a3 | a1\n 21163: a0 = a0 >> 0x20\n 21166: a1 = reverse a2\n 21168: a2 = a1 << 0x20\n 21171: a2 = a2 | a0\n 21174: a1 = a1 >> 0x20\n 21177: i32 a0 = a4 + 0x4\n 21180: jump [t0]\n      : @664 (gas: 12)\n 21182: a5 = s1 + 0x100\n 21186: a1 = u64 [a5 + 0x38]\n 21189: a0 = u64 [a5 + 0x28]\n 21192: a3 = u64 [a5 + 0x20]\n 21195: a3 = a3 | a0\n 21198: a4 = 0x100000000\n 21208: a0 = 0xfffffffc\n 21218: a0 = a1 <u a0\n 21221: a2 = u64 [a5 + 0x30]\n 21224: a0 = 0 if a2 != 0\n 21226: a0 = 0 if a3 != 0\n 21228: jump [t0]\n      : @665 (gas: 11)\n 21230: a2 = reverse a2\n 21232: a3 = a2 << 0x20\n 21235: a0 = a0 >> 0x20\n 21238: a0 = a0 | a3\n 21241: a2 = a2 >> 0x20\n 21244: a3 = u64 [s1 + 0xd8]\n 21248: u64 [a3 + 0x8] = a0\n 21251: u64 [a3] = a1\n 21253: u32 [a3 + 0x10] = a2\n 21256: a0 = s1 + 0x18d8\n 21260: jump [t0]\n      : @666 (gas: 11)\n 21262: a2 = reverse a2\n 21264: a3 = a2 << 0x20\n 21267: a0 = a0 >> 0x20\n 21270: a0 = a0 | a3\n 21273: a2 = a2 >> 0x20\n 21276: a3 = u64 [s1 + 0xf0]\n 21280: u64 [a3 + 0x8] = a0\n 21283: u64 [a3] = a1\n 21285: u32 [a3 + 0x10] = a2\n 21288: a0 = s1 + 0x18d8\n 21292: jump [t0]\n      : @667 (gas: 10)\n 21294: a0 = u64 [sp + 0x10]\n 21297: a1 = u64 [sp + 0x18]\n 21300: a2 = 0x100000000\n 21310: a2 = a2 ^ a0\n 21313: a2 = a2 | a1\n 21316: a3 = a0 >> 0x20\n 21319: a3 = a3 <u 0x1\n 21322: a3 = 0 if a1 != 0\n 21324: a3 = 0 if a2 == 0\n 21326: jump [t0]\n      : @668 (gas: 6)\n 21328: i32 a0 = a2 + 0\n 21330: u64 [s1 + 0x130] = a0\n 21334: a0 = u64 [s1 + 0x138]\n 21338: a1 = a2\n 21340: u64 [s1 + 0x128] = a2\n 21344: jump [t0]\n      : @669 (gas: 13)\n 21346: a5 = s1 + 0x100\n 21350: u64 [a5 + 0x30] = a2\n 21353: u64 [a5 + 0x28] = a3\n 21356: a0 = a2 | a3\n 21359: u64 [a5 + 0x38] = a1\n 21362: a1 = a1 | a4\n 21365: a1 = a1 | a0\n 21368: a1 = a1 >> 0x20\n 21371: u64 [a5 + 0x20] = a4\n 21374: a0 = a0 | a4\n 21377: a0 = a0 << 0x20\n 21380: a0 = a0 | a1\n 21383: jump [t0]\n      : @670 (gas: 10)\n 21385: a0 = u64 [a3 + 0x18]\n 21388: a1 = u64 [a3 + 0x10]\n 21391: a2 = u64 [a3 + 0x8]\n 21394: a3 = u64 [a3]\n 21396: a0 = reverse a0\n 21398: a1 = reverse a1\n 21400: a2 = reverse a2\n 21402: a3 = reverse a3\n 21404: a4 = 0x2000\n 21408: jump [t0]\n      : @671 (gas: 4)\n 21410: a2 = a0\n 21412: a0 = 0x4e487b7100000000\n 21422: a1 = s1 + 0x7ff\n 21426: jump [t0]\n      : @672 (gas: 8)\n 21428: a1 = u64 [a3 + 0x10]\n 21431: a0 = a0 | a1\n 21434: a1 = 0xfffffffc\n 21444: a1 = a4 <u a1\n 21447: a2 = u64 [a3 + 0x8]\n 21450: a1 = 0 if a2 != 0\n 21452: a1 = 0 if a0 != 0\n 21454: jump [t0]\n      : @673 (gas: 12)\n 21456: a2 = u64 [sp]\n 21458: a3 = u64 [sp + 0x8]\n 21461: u64 [s1] = a2\n 21463: u64 [s1 + 0x8] = a3\n 21466: u64 [s1 + 0x10] = a0\n 21469: u64 [s1 + 0x18] = a1\n 21472: sp = s0 + 0xffffffffffffffc0\n 21475: ra = u64 [sp + 0x38]\n 21478: s0 = u64 [sp + 0x30]\n 21481: s1 = u64 [sp + 0x28]\n 21484: sp = sp + 0x40\n 21487: jump [t0]\n      : @674 (gas: 9)\n 21489: a1 = u64 [a2 + 0xc0]\n 21493: u64 [s1 + 0x130] = a1\n 21497: a1 = u64 [a2 + 0xb8]\n 21501: u64 [s1 + 0x128] = a1\n 21505: a1 = u64 [a2 + 0xb0]\n 21509: u64 [s1 + 0x120] = a1\n 21513: a0 = u64 [a2 + 0xa8]\n 21517: u64 [s1 + 0x138] = a0\n 21521: jump [t0]\n      : @675 (gas: 8)\n 21523: u64 [sp + 64] = 0\n 21526: u64 [sp + 56] = 0\n 21529: u64 [sp + 48] = 0\n 21532: a0 = 0x4e487b7100000000\n 21542: a1 = sp + 0x30\n 21545: u64 [sp + 0x48] = a0\n 21548: a0 = 0\n 21550: jump [t0]\n      : @676 (gas: 6)\n 21552: sp = s0 + 0xffffffffffffffa0\n 21555: ra = u64 [sp + 0x58]\n 21558: s0 = u64 [sp + 0x50]\n 21561: s1 = u64 [sp + 0x48]\n 21564: sp = sp + 0x60\n 21567: jump [t0]\n      : @677 (gas: 8)\n 21569: a0 = u64 [a2 + 0x8]\n 21572: a1 = i32 [a2 + 0x10]\n 21575: a2 = u64 [a2]\n 21577: a3 = reverse a0\n 21579: a0 = a3 << 0x20\n 21582: a1 = reverse a1\n 21584: a1 = a1 >> 0x20\n 21587: jump [t0]\n      : @678 (gas: 4)\n 21589: a0 = 0x18d8\n 21593: a3 = s1 + a0\n 21596: a4 = a3 + 0x200\n 21600: jump [t0]\n      : @679 (gas: 2)\n 21602: a3 = a2 & 0x40\n 21605: jump @683 if a3 != 0\n      : @680 (gas: 1)\n 21608: jump @682 if a2 == 0\n      : @681 (gas: 6)\n 21611: i32 a3 = 0x40 - a2\n 21614: a3 = a1 << a3\n 21617: a1 = a1 >> a2\n 21620: a0 = a0 >> a2\n 21623: a0 = a0 | a3\n 21626: ret\n      : @682 (gas: 1)\n 21628: ret\n      : @683 (gas: 4)\n 21630: a0 = a2 + 0xffffffffffffffc0\n 21633: a0 = a1 >> a0\n 21636: a1 = 0\n 21638: ret\n      : @684 (gas: 2)\n 21640: a3 = a2 & 0x40\n 21643: jump @688 if a3 != 0\n      : @685 (gas: 1)\n 21646: jump @687 if a2 == 0\n      : @686 (gas: 6)\n 21649: i32 a3 = 0x40 - a2\n 21652: a3 = a0 >> a3\n 21655: a0 = a0 << a2\n 21658: a1 = a1 << a2\n 21661: a1 = a1 | a3\n 21664: ret\n      : @687 (gas: 1)\n 21666: ret\n      : @688 (gas: 4)\n 21668: a1 = a2 + 0xffffffffffffffc0\n 21671: a1 = a0 << a1\n 21674: a0 = 0\n 21676: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "getReserves()": "0902f1ac",
              "mint(address)": "6a627842",
              "swap(uint256,uint256,address)": "6d9a640a",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd"
            }
          },
          "irOptimized": "/// @use-src 13:\"contracts/UniswapV2Pair.sol\"\nobject \"UniswapV2Pair_2189\" {\n    code {\n        {\n            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"UniswapV2Pair_2189\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ not(sub(shl(160, 1), 1))), and(value0, sub(shl(160, 1), 1))))\n            sstore(/** @src 13:792:808  \"token1 = _token1\" */ 0x01, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ or(and(sload(/** @src 13:792:808  \"token1 = _token1\" */ 0x01), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ not(sub(shl(160, 1), 1))), and(value1, sub(shl(160, 1), 1))))\n            let _2 := mload(64)\n            let _3 := datasize(\"UniswapV2Pair_2189_deployed\")\n            codecopy(_2, dataoffset(\"UniswapV2Pair_2189_deployed\"), _3)\n            return(_2, _3)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 13:\"contracts/UniswapV2Pair.sol\"\n    object \"UniswapV2Pair_2189_deployed\" {\n        code {\n            {\n                /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0902f1ac {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret, ret_1 := fun_getReserves()\n                        mstore(_1, and(ret, 0xffffffffffffffffffffffffffff))\n                        mstore(add(_1, 32), and(ret_1, 0xffffffffffffffffffffffffffff))\n                        return(_1, 64)\n                    }\n                    case 0x0dfe1681 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(/** @src 13:496:522  \"uint256 public totalSupply\" */ 3)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _2)\n                        return(memPos_1, 32)\n                    }\n                    case 0x6a627842 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let var_liquidity := 0\n                        /// @src 13:1018:1035  \"uint256 liquidity\"\n                        var_liquidity := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:1088:1101  \"getReserves()\"\n                        let expr_component, expr_component_1 := fun_getReserves()\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        let _3 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ add(_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 4), /** @src 13:1163:1167  \"this\" */ address())\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        let _4 := staticcall(gas(), cleaned, _3, 36, _3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        if iszero(_4)\n                        {\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                        if _4\n                        {\n                            let _5 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32\n                            /// @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\"\n                            if gt(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32, /** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _5 := returndatasize() }\n                            finalize_allocation(_3, _5)\n                            let value0_1 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                            if slt(sub(/** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ add(_3, _5), _3), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32) { revert(0, 0) }\n                            value0_1 := mload(/** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ _3)\n                            expr := value0_1\n                        }\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let cleaned_1 := and(sload(/** @src 13:1205:1211  \"token1\" */ 0x01), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ sub(shl(160, 1), 1))\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        let _6 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_6, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\" */ add(_6, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 4), /** @src 13:1163:1167  \"this\" */ address())\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        let _7 := staticcall(gas(), cleaned_1, _6, /** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ 36, /** @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\" */ _6, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_7)\n                        {\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_1 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                        if _7\n                        {\n                            let _8 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32\n                            /// @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32, /** @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _8 := returndatasize() }\n                            finalize_allocation(_6, _8)\n                            let value0_2 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                            if slt(sub(/** @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\" */ add(_6, _8), _6), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32) { revert(0, 0) }\n                            value0_2 := mload(/** @src 13:1198:1237  \"IERC20(token1).balanceOf(address(this))\" */ _6)\n                            expr_1 := value0_2\n                        }\n                        /// @src 13:1265:1285  \"balance0 - _reserve0\"\n                        let _9 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:1265:1285  \"balance0 - _reserve0\" */ expr_component, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 13:1265:1285  \"balance0 - _reserve0\"\n                        let expr_2 := checked_sub_uint256(expr, _9)\n                        /// @src 13:1313:1333  \"balance1 - _reserve1\"\n                        let _10 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:1313:1333  \"balance1 - _reserve1\" */ expr_component_1, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 13:1313:1333  \"balance1 - _reserve1\"\n                        let expr_3 := checked_sub_uint256(expr_1, _10)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let _11 := sload(/** @src 13:1348:1359  \"totalSupply\" */ 0x03)\n                        /// @src 13:1344:2069  \"if (totalSupply == 0) {...\"\n                        switch /** @src 13:1348:1364  \"totalSupply == 0\" */ iszero(_11)\n                        case /** @src 13:1344:2069  \"if (totalSupply == 0) {...\" */ 0 {\n                            /// @src 13:1878:1913  \"(amount0 * totalSupply) / _reserve0\"\n                            let expr_4 := checked_div_uint256(/** @src 13:1879:1900  \"amount0 * totalSupply\" */ checked_mul_uint256(expr_2, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ _11), /** @src 13:1878:1913  \"(amount0 * totalSupply) / _reserve0\" */ _9)\n                            /// @src 13:1948:1983  \"(amount1 * totalSupply) / _reserve1\"\n                            let expr_5 := checked_div_uint256(/** @src 13:1949:1970  \"amount1 * totalSupply\" */ checked_mul_uint256(expr_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ _11), /** @src 13:1948:1983  \"(amount1 * totalSupply) / _reserve1\" */ _10)\n                            /// @src 13:2009:2058  \"liquidity0 < liquidity1 ? liquidity0 : liquidity1\"\n                            let expr_6 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                            /// @src 13:2009:2058  \"liquidity0 < liquidity1 ? liquidity0 : liquidity1\"\n                            switch /** @src 13:2009:2032  \"liquidity0 < liquidity1\" */ lt(expr_4, expr_5)\n                            case /** @src 13:2009:2058  \"liquidity0 < liquidity1 ? liquidity0 : liquidity1\" */ 0 { expr_6 := expr_5 }\n                            default { expr_6 := expr_4 }\n                            /// @src 13:1997:2058  \"liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1\"\n                            var_liquidity := expr_6\n                        }\n                        default /// @src 13:1344:2069  \"if (totalSupply == 0) {...\"\n                        {\n                            /// @src 13:1429:1448  \"uint256 z = product\"\n                            let var_z := /** @src 13:1398:1415  \"amount0 * amount1\" */ checked_mul_uint256(expr_2, expr_3)\n                            let expr_7 := /** @src 13:1429:1448  \"uint256 z = product\" */ var_z\n                            /// @src 13:1462:1725  \"if (product > 3) {...\"\n                            switch /** @src 13:1466:1477  \"product > 3\" */ gt(var_z, /** @src 13:1348:1359  \"totalSupply\" */ 0x03)\n                            case /** @src 13:1462:1725  \"if (product > 3) {...\" */ 0 {\n                                /// @src 13:1669:1725  \"if (product != 0) {...\"\n                                if /** @src 13:1673:1685  \"product != 0\" */ iszero(iszero(var_z))\n                                /// @src 13:1669:1725  \"if (product != 0) {...\"\n                                {\n                                    /// @src 13:1705:1710  \"z = 1\"\n                                    var_z := /** @src 13:1205:1211  \"token1\" */ 0x01\n                                }\n                            }\n                            default /// @src 13:1462:1725  \"if (product > 3) {...\"\n                            {\n                                /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                                let r := shr(/** @src 13:1205:1211  \"token1\" */ 0x01, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ expr_7)\n                                let sum := add(r, /** @src 13:1205:1211  \"token1\" */ 0x01)\n                                /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                                if gt(r, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, /** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                                }\n                                /// @src 13:1497:1524  \"uint256 x = product / 2 + 1\"\n                                let var_x := sum\n                                /// @src 13:1542:1649  \"while (x < z) {...\"\n                                for { }\n                                /** @src 13:1549:1554  \"x < z\" */ lt(var_x, var_z)\n                                /// @src 13:1542:1649  \"while (x < z) {...\"\n                                { }\n                                {\n                                    /// @src 13:1578:1583  \"z = x\"\n                                    var_z := var_x\n                                    /// @src 13:1605:1630  \"x = (product / x + x) / 2\"\n                                    var_x := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shr(/** @src 13:1205:1211  \"token1\" */ 0x01, /** @src 13:1610:1625  \"product / x + x\" */ checked_add_uint256(/** @src 13:1610:1621  \"product / x\" */ checked_div_uint256(expr_7, var_x), /** @src 13:1610:1625  \"product / x + x\" */ var_x))\n                                }\n                            }\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let diff := add(var_z, not(999))\n                            if gt(diff, var_z)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, /** @src 13:1130:1169  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                            }\n                            /// @src 13:1738:1771  \"liquidity = z - MINIMUM_LIQUIDITY\"\n                            var_liquidity := diff\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            mstore(0, 0)\n                            mstore(32, 4)\n                            /// @src 13:623:628  \"10**3\"\n                            sstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ keccak256(0, 64), /** @src 13:623:628  \"10**3\" */ 0x03e8)\n                        }\n                        /// @src 13:2078:2126  \"require(liquidity > 0, \\\"INSUFFICIENT_LIQUIDITY\\\")\"\n                        require_helper_stringliteral_e8d3(/** @src 13:2086:2099  \"liquidity > 0\" */ iszero(iszero(var_liquidity)))\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 13:623:628  \"10**3\"\n                        sstore(dataSlot, /** @src 13:2136:2162  \"balanceOf[to] += liquidity\" */ checked_add_uint256(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ sload(/** @src 13:2136:2162  \"balanceOf[to] += liquidity\" */ dataSlot), var_liquidity))\n                        /// @src 13:623:628  \"10**3\"\n                        sstore(/** @src 13:1348:1359  \"totalSupply\" */ 0x03, /** @src 13:2172:2196  \"totalSupply += liquidity\" */ checked_add_uint256(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ sload(/** @src 13:1348:1359  \"totalSupply\" */ 0x03), /** @src 13:2172:2196  \"totalSupply += liquidity\" */ var_liquidity))\n                        /// @src 13:623:628  \"10**3\"\n                        let _12 := sload(/** @src 13:2207:2235  \"reserve0 = uint112(balance0)\" */ 0x02)\n                        /// @src 13:623:628  \"10**3\"\n                        sstore(/** @src 13:2207:2235  \"reserve0 = uint112(balance0)\" */ 0x02, /** @src 13:623:628  \"10**3\" */ or(or(and(_12, shl(224, 0xffffffff)), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:2218:2235  \"uint112(balance0)\" */ expr, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)), /** @src 13:623:628  \"10**3\" */ and(shl(112, /** @src 13:2256:2273  \"uint112(balance1)\" */ expr_1), /** @src 13:623:628  \"10**3\" */ shl(112, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff))))\n                        /// @src 13:2288:2322  \"Mint(msg.sender, amount0, amount1)\"\n                        let _13 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        mstore(_13, expr_2)\n                        mstore(/** @src 13:623:628  \"10**3\" */ add(_13, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32), expr_3)\n                        /// @src 13:2288:2322  \"Mint(msg.sender, amount0, amount1)\"\n                        log2(_13, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 64, /** @src 13:2288:2322  \"Mint(msg.sender, amount0, amount1)\" */ 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f, /** @src 13:2293:2303  \"msg.sender\" */ caller())\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, var_liquidity)\n                        return(memPos_2, 32)\n                    }\n                    case 0x6d9a640a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value_2 := calldataload(36)\n                        let value_3 := 0\n                        value_3 := calldataload(68)\n                        let _14 := and(value_3, sub(shl(160, 1), 1))\n                        if iszero(eq(value_3, _14)) { revert(0, 0) }\n                        /// @src 13:2582:2596  \"amount0Out > 0\"\n                        let _15 := iszero(value_1)\n                        /// @src 13:2582:2614  \"amount0Out > 0 || amount1Out > 0\"\n                        let expr_8 := /** @src 13:2582:2596  \"amount0Out > 0\" */ iszero(_15)\n                        let expr_9 := /** @src 13:2582:2614  \"amount0Out > 0 || amount1Out > 0\" */ expr_8\n                        if _15\n                        {\n                            expr_8 := /** @src 13:2600:2614  \"amount1Out > 0\" */ iszero(iszero(value_2))\n                        }\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        if iszero(expr_8)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            /// @src 13:623:628  \"10**3\"\n                            mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr, 36), 26)\n                            mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr, 68), \"INSUFFICIENT_OUTPUT_AMOUNT\")\n                            revert(memPtr, 100)\n                        }\n                        /// @src 13:2692:2705  \"getReserves()\"\n                        let expr_component_2, expr_component_3 := fun_getReserves()\n                        /// @src 13:2719:2741  \"amount0Out < _reserve0\"\n                        let _16 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:2719:2741  \"amount0Out < _reserve0\" */ expr_component_2, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 13:2719:2767  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                        let expr_10 := /** @src 13:2719:2741  \"amount0Out < _reserve0\" */ lt(value_1, _16)\n                        /// @src 13:2719:2767  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                        if expr_10\n                        {\n                            expr_10 := /** @src 13:2745:2767  \"amount1Out < _reserve1\" */ lt(value_2, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:2745:2767  \"amount1Out < _reserve1\" */ expr_component_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff))\n                        }\n                        /// @src 13:2711:2794  \"require(amount0Out < _reserve0 && amount1Out < _reserve1, \\\"INSUFFICIENT_LIQUIDITY\\\")\"\n                        require_helper_stringliteral_e8d3(expr_10)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let cleaned_2 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 13:2809:2837  \"to != token0 && to != token1\"\n                        let expr_11 := /** @src 13:2809:2821  \"to != token0\" */ iszero(eq(_14, cleaned_2))\n                        /// @src 13:2809:2837  \"to != token0 && to != token1\"\n                        if expr_11\n                        {\n                            expr_11 := /** @src 13:2825:2837  \"to != token1\" */ iszero(eq(_14, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(sload(1), sub(shl(160, 1), 1))))\n                        }\n                        if iszero(expr_11)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            /// @src 13:623:628  \"10**3\"\n                            mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr_1, 36), 10)\n                            mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr_1, 68), \"INVALID_TO\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 13:2858:3042  \"if (amount0Out > 0) {...\"\n                        if expr_9\n                        {\n                            /// @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\"\n                            let expr_mpos := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                            /// @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\"\n                            let _17 := add(expr_mpos, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                            /// @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\"\n                            mstore(_17, /** @src 13:2941:2965  \"IERC20.transfer.selector\" */ shl(224, 0xa9059cbb))\n                            /// @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\"\n                            let _18 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 36), /** @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\" */ value_3, value_1), expr_mpos)\n                            mstore(expr_mpos, add(_18, not(31)))\n                            finalize_allocation(expr_mpos, _18)\n                            /// @src 13:2906:2983  \"token0.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out))\"\n                            let expr_component_4 := call(gas(), cleaned_2, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0, /** @src 13:2906:2983  \"token0.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out))\" */ _17, mload(expr_mpos), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0, 0)\n                            /// @src 13:2906:2983  \"token0.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out))\"\n                            pop(extract_returndata())\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            if iszero(expr_component_4)\n                            {\n                                let memPtr_2 := mload(64)\n                                mstore(memPtr_2, shl(229, 4594637))\n                                mstore(add(memPtr_2, 4), 32)\n                                /// @src 13:623:628  \"10**3\"\n                                mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr_2, 36), 22)\n                                mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr_2, 68), \"TRANSFER_FAILED_TOKEN0\")\n                                revert(memPtr_2, 100)\n                            }\n                        }\n                        /// @src 13:3047:3231  \"if (amount1Out > 0) {...\"\n                        if /** @src 13:3051:3065  \"amount1Out > 0\" */ iszero(iszero(value_2))\n                        /// @src 13:3047:3231  \"if (amount1Out > 0) {...\"\n                        {\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let cleaned_3 := and(sload(1), sub(shl(160, 1), 1))\n                            /// @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\"\n                            let expr_mpos_1 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                            /// @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\"\n                            let _19 := add(expr_mpos_1, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                            /// @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\"\n                            mstore(_19, /** @src 13:2941:2965  \"IERC20.transfer.selector\" */ shl(224, 0xa9059cbb))\n                            /// @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\"\n                            let _20 := sub(abi_encode_address_uint256(add(expr_mpos_1, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 36), /** @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\" */ value_3, value_2), expr_mpos_1)\n                            mstore(expr_mpos_1, add(_20, /** @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\" */ not(31)))\n                            /// @src 13:3107:3171  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out)\"\n                            finalize_allocation(expr_mpos_1, _20)\n                            /// @src 13:3095:3172  \"token1.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out))\"\n                            let expr_component_5 := call(gas(), cleaned_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0, /** @src 13:3095:3172  \"token1.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out))\" */ _19, mload(expr_mpos_1), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0, 0)\n                            /// @src 13:3095:3172  \"token1.call(abi.encodeWithSelector(IERC20.transfer.selector, to, amount1Out))\"\n                            pop(extract_returndata())\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            if iszero(expr_component_5)\n                            {\n                                let memPtr_3 := mload(64)\n                                mstore(memPtr_3, shl(229, 4594637))\n                                mstore(add(memPtr_3, 4), 32)\n                                /// @src 13:623:628  \"10**3\"\n                                mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr_3, 36), 22)\n                                mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr_3, 68), \"TRANSFER_FAILED_TOKEN1\")\n                                revert(memPtr_3, 100)\n                            }\n                        }\n                        let cleaned_4 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        let _21 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_21, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\" */ add(_21, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 4), /** @src 13:3289:3293  \"this\" */ address())\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        let _22 := staticcall(gas(), cleaned_4, _21, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 36, /** @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\" */ _21, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        if iszero(_22)\n                        {\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr_12 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                        if _22\n                        {\n                            let _23 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32\n                            /// @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\"\n                            if gt(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32, /** @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _23 := returndatasize() }\n                            finalize_allocation(_21, _23)\n                            let value0_3 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                            if slt(sub(/** @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\" */ add(_21, _23), _21), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32) { revert(0, 0) }\n                            value0_3 := mload(/** @src 13:3256:3295  \"IERC20(token0).balanceOf(address(this))\" */ _21)\n                            expr_12 := value0_3\n                        }\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let cleaned_5 := and(sload(1), sub(shl(160, 1), 1))\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        let _24 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_24, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\" */ add(_24, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 4), /** @src 13:3289:3293  \"this\" */ address())\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        let _25 := staticcall(gas(), cleaned_5, _24, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 36, /** @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\" */ _24, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32)\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_25)\n                        {\n                            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_13 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                        if _25\n                        {\n                            let _26 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32\n                            /// @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32, /** @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _26 := returndatasize() }\n                            finalize_allocation(_24, _26)\n                            let value0_4 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                            if slt(sub(/** @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\" */ add(_24, _26), _24), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 32) { revert(0, 0) }\n                            value0_4 := mload(/** @src 13:3320:3359  \"IERC20(token1).balanceOf(address(this))\" */ _24)\n                            expr_13 := value0_4\n                        }\n                        /// @src 13:3385:3418  \"balance0 > _reserve0 - amount0Out\"\n                        let expr_14 := gt(expr_12, /** @src 13:3396:3418  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_16, value_1))\n                        /// @src 13:3385:3460  \"balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0\"\n                        let expr_15 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:3385:3460  \"balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0\"\n                        switch expr_14\n                        case 0 {\n                            expr_15 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        }\n                        default /// @src 13:3385:3460  \"balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0\"\n                        {\n                            expr_15 := /** @src 13:3421:3456  \"balance0 - (_reserve0 - amount0Out)\" */ checked_sub_uint256(expr_12, /** @src 13:3433:3455  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_16, value_1))\n                        }\n                        /// @src 13:3497:3519  \"_reserve1 - amount1Out\"\n                        let _27 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:3497:3519  \"_reserve1 - amount1Out\" */ expr_component_3, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 13:3486:3519  \"balance1 > _reserve1 - amount1Out\"\n                        let expr_16 := gt(expr_13, /** @src 13:3497:3519  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_27, value_2))\n                        /// @src 13:3486:3561  \"balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0\"\n                        let expr_17 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        /// @src 13:3486:3561  \"balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0\"\n                        switch expr_16\n                        case 0 {\n                            expr_17 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0\n                        }\n                        default /// @src 13:3486:3561  \"balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0\"\n                        {\n                            expr_17 := /** @src 13:3522:3557  \"balance1 - (_reserve1 - amount1Out)\" */ checked_sub_uint256(expr_13, /** @src 13:3534:3556  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_27, value_2))\n                        }\n                        /// @src 13:3575:3588  \"amount0In > 0\"\n                        let _28 := iszero(expr_15)\n                        /// @src 13:3575:3605  \"amount0In > 0 || amount1In > 0\"\n                        let expr_18 := /** @src 13:3575:3588  \"amount0In > 0\" */ iszero(_28)\n                        /// @src 13:3575:3605  \"amount0In > 0 || amount1In > 0\"\n                        if _28\n                        {\n                            expr_18 := /** @src 13:3592:3605  \"amount1In > 0\" */ iszero(iszero(expr_17))\n                        }\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        if iszero(expr_18)\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            /// @src 13:623:628  \"10**3\"\n                            mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr_4, 36), 25)\n                            mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr_4, 68), \"INSUFFICIENT_INPUT_AMOUNT\")\n                            revert(memPtr_4, 100)\n                        }\n                        let product := mul(expr_12, /** @src 13:3671:3675  \"1000\" */ 0x03e8)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        if iszero(or(iszero(expr_12), eq(/** @src 13:3671:3675  \"1000\" */ 0x03e8, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ div(product, expr_12))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        let product_1 := mul(expr_13, /** @src 13:3671:3675  \"1000\" */ 0x03e8)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        if iszero(or(iszero(expr_13), eq(/** @src 13:3671:3675  \"1000\" */ 0x03e8, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ div(product_1, expr_13))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 13:3659:3696  \"(balance0 * 1000) * (balance1 * 1000)\"\n                        let expr_19 := checked_mul_uint256(product, /** @src 13:3680:3695  \"balance1 * 1000\" */ product_1)\n                        /// @src 13:3700:3739  \"uint256(_reserve0) * uint256(_reserve1)\"\n                        let expr_20 := checked_mul_uint256(_16, _27)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        let product_2 := mul(expr_20, /** @src 13:3743:3750  \"1000**2\" */ 0x0f4240)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        if iszero(or(iszero(expr_20), eq(/** @src 13:3743:3750  \"1000**2\" */ 0x0f4240, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ div(product_2, expr_20))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        if /** @src 13:3659:3751  \"(balance0 * 1000) * (balance1 * 1000) >= uint256(_reserve0) * uint256(_reserve1) * (1000**2)\" */ lt(expr_19, product_2)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            /// @src 13:623:628  \"10**3\"\n                            mstore(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ add(memPtr_5, 36), 1)\n                            mstore(/** @src 13:623:628  \"10**3\" */ add(/** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ memPtr_5, 68), \"K\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 13:623:628  \"10**3\"\n                        let _29 := sload(/** @src 13:3777:3805  \"reserve0 = uint112(balance0)\" */ 0x02)\n                        /// @src 13:623:628  \"10**3\"\n                        sstore(/** @src 13:3777:3805  \"reserve0 = uint112(balance0)\" */ 0x02, /** @src 13:623:628  \"10**3\" */ or(or(and(_29, shl(224, 0xffffffff)), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(/** @src 13:3788:3805  \"uint112(balance0)\" */ expr_12, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff)), /** @src 13:623:628  \"10**3\" */ and(shl(112, /** @src 13:3822:3839  \"uint112(balance1)\" */ expr_13), /** @src 13:623:628  \"10**3\" */ shl(112, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0xffffffffffffffffffffffffffff))))\n                        /// @src 13:3850:3916  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                        let _30 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                        mstore(_30, expr_15)\n                        mstore(add(_30, 32), expr_17)\n                        mstore(add(_30, 64), value_1)\n                        mstore(add(_30, 96), value_2)\n                        /// @src 13:3850:3916  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                        log3(_30, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 128, /** @src 13:3850:3916  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ 0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822, /** @src 13:3855:3865  \"msg.sender\" */ caller(), /** @src 13:3850:3916  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ _14)\n                        /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                        return(0, 0)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _31 := sload(keccak256(0, 64))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _31)\n                        return(memPos_3, 32)\n                    }\n                    case 0xd21220a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_4 := and(sload(/** @src 13:400:421  \"address public token1\" */ 1), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ sub(shl(160, 1), 1))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, value_4)\n                        return(memPos_4, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 1768 @src 13:821:970  \"function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1) {...\"\n            function fun_getReserves() -> var_reserve0, var_reserve1\n            {\n                /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                let _1 := sload(/** @src 13:925:933  \"reserve0\" */ 0x02)\n                /// @src 13:913:933  \"_reserve0 = reserve0\"\n                var_reserve0 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(_1, 0xffffffffffffffffffffffffffff)\n                /// @src 13:943:963  \"_reserve1 = reserve1\"\n                var_reserve1 := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ and(shr(112, _1), 0xffffffffffffffffffffffffffff)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\" */ not(31)))\n                /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @src 13:623:628  \"10**3\"\n            function require_helper_stringliteral_e8d3(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ mload(64)\n                    /// @src 13:623:628  \"10**3\"\n                    mstore(memPtr, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(229, 4594637))\n                    /// @src 13:623:628  \"10**3\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"INSUFFICIENT_LIQUIDITY\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 13:337:3921  \"contract UniswapV2Pair {...\"\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), /** @src 13:2918:2982  \"abi.encodeWithSelector(IERC20.transfer.selector, to, amount0Out)\" */ not(31)), /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 13:337:3921  \"contract UniswapV2Pair {...\" */ returndatasize())\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122050336fcb145e36fba5a5e384d616399adb2c5e1084da555e0e24e6ca30d0a6ec64736f6c634300081c0033\"\n    }\n}\n",
          "hash": "05f401dd21092269f96d3e55763cb19e477098d1892da186e6fcf10aeaa49895",
          "factoryDependencies": {}
        }
      }
    }
  }
}